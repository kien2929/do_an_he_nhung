<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="84:BaseStationC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7f02a48ef660"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7f02a4ad2270"/></to>
    </wire>
    <wire loc="72:/home/hades/tinyos-new/tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7f02a4ad2270"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7f02a4914590"/></to>
    </wire>
    <wire loc="86:BaseStationC.nc">
      <from><interface-ref name="RadioControl" scoped="" ref="0x7f02a48eebe0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f02a45aa7b0"/></to>
    </wire>
    <wire loc="78:/home/hades/tinyos-new/tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f02a45aa7b0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f02a457a2f0"/></to>
    </wire>
    <wire loc="87:BaseStationC.nc">
      <from><interface-ref name="SerialControl" scoped="" ref="0x7f02a48ee020"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f02a37315d0"/></to>
    </wire>
    <wire loc="61:/home/hades/tinyos-new/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f02a37315d0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f02a36c64e0"/></to>
    </wire>
    <wire loc="89:BaseStationC.nc">
      <from><interface-ref name="UartSend" scoped="" ref="0x7f02a48e9020"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f02a372e600"/></to>
    </wire>
    <wire loc="63:/home/hades/tinyos-new/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f02a372e600"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f02a3725b40"/></to>
    </wire>
    <wire loc="90:BaseStationC.nc">
      <from><interface-ref name="UartReceive" scoped="" ref="0x7f02a4898e30"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f02a372d800"/></to>
    </wire>
    <wire loc="64:/home/hades/tinyos-new/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f02a372d800"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f02a36cf9e0"/></to>
    </wire>
    <wire loc="91:BaseStationC.nc">
      <from><interface-ref name="UartPacket" scoped="" ref="0x7f02a488f870"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f02a372de10"/></to>
    </wire>
    <wire loc="65:/home/hades/tinyos-new/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f02a372de10"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f02a36cd720"/></to>
    </wire>
    <wire loc="92:BaseStationC.nc">
      <from><interface-ref name="UartAMPacket" scoped="" ref="0x7f02a487e9b0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f02a372cab0"/></to>
    </wire>
    <wire loc="66:/home/hades/tinyos-new/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f02a372cab0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f02a36ce020"/></to>
    </wire>
    <wire loc="94:BaseStationC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x7f02a48906e0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f02a45a87f0"/></to>
    </wire>
    <wire loc="80:/home/hades/tinyos-new/tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f02a45a87f0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f02a4579320"/></to>
    </wire>
    <wire loc="95:BaseStationC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x7f02a487da50"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f02a45a7b20"/></to>
    </wire>
    <wire loc="81:/home/hades/tinyos-new/tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f02a45a7b20"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f02a4577510"/></to>
    </wire>
    <wire loc="96:BaseStationC.nc">
      <from><interface-ref name="RadioSnoop" scoped="" ref="0x7f02a487b6b0"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x7f02a45a6880"/></to>
    </wire>
    <wire loc="82:/home/hades/tinyos-new/tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x7f02a45a6880"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x7f02a45761d0"/></to>
    </wire>
    <wire loc="97:BaseStationC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x7f02a487bd70"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f02a45a5020"/></to>
    </wire>
    <wire loc="83:/home/hades/tinyos-new/tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f02a45a5020"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f02a4574020"/></to>
    </wire>
    <wire loc="98:BaseStationC.nc">
      <from><interface-ref name="RadioAMPacket" scoped="" ref="0x7f02a487ab40"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f02a45a5c90"/></to>
    </wire>
    <wire loc="84:/home/hades/tinyos-new/tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f02a45a5c90"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f02a4576800"/></to>
    </wire>
    <wire loc="100:BaseStationC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f02a486c0d0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f02a481a020"/></to>
    </wire>
    <wire loc="51:/home/hades/tinyos-new/tos/system/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f02a481a020"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f02a4816a70"/></to>
    </wire>
    <wire loc="103:/home/hades/tinyos-new/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f02a4ad1720"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f02a2a18ca0"/></to>
    </wire>
    <wire loc="59:/home/hades/tinyos-new/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f02a4ad1720"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f02a36c9e60"/></to>
    </wire>
    <wire loc="104:/home/hades/tinyos-new/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f02a4ad1720"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f02a3807dd0"/></to>
    </wire>
    <wire loc="60:/home/hades/tinyos-new/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f02a4ad1720"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f02a3890b70"/></to>
    </wire>
    <wire loc="58:/home/hades/tinyos-new/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f02a4ad1720"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f02a38b1750"/></to>
    </wire>
    <wire loc="52:/home/hades/tinyos-new/tos/system/RandomC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f02a4ad1720"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f02a38ce080"/></to>
    </wire>
    <wire loc="53:/home/hades/tinyos-new/tos/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f02a4ad1720"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f02a3a0e130"/></to>
    </wire>
    <wire loc="66:/home/hades/tinyos-new/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f02a4ad1720"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f02a3b0f620"/></to>
    </wire>
    <wire loc="62:/home/hades/tinyos-new/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f02a4ad1720"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f02a3bfdc60"/></to>
    </wire>
    <wire loc="63:/home/hades/tinyos-new/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f02a4ad1720"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f02a43f67f0"/></to>
    </wire>
    <wire loc="103:/home/hades/tinyos-new/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f02a4ad1720"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f02a2d0da40"/></to>
    </wire>
    <wire loc="74:/home/hades/tinyos-new/tos/system/StateImplC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f02a4ad1720"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f02a40c0020"/></to>
    </wire>
    <wire loc="60:/home/hades/tinyos-new/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f02a4ad1720"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f02a44a75c0"/></to>
    </wire>
    <wire loc="67:/home/hades/tinyos-new/tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x7f02a4914c00"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x7f02a4f663a0"/></to>
    </wire>
    <wire loc="53:/home/hades/tinyos-new/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x7f02a4f663a0"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x7f02a4b11140"/></to>
    </wire>
    <wire loc="68:/home/hades/tinyos-new/tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x7f02a49076c0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f02a4ad5710"/></to>
    </wire>
    <wire loc="48:/home/hades/tinyos-new/tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f02a4ad5710"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f02a4acf920"/></to>
    </wire>
    <wire loc="71:/home/hades/tinyos-new/tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f02a4907dc0"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x7f02a4ad1720"/></to>
    </wire>
    <wire loc="49:/home/hades/tinyos-new/tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="MoteClockInit" scoped="" ref="0x7f02a4acc060"/></from>
      <to><interface-ref name="MoteClockInit" scoped="" ref="0x7f02a4aae020"/></to>
    </wire>
    <wire loc="46:/home/hades/tinyos-new/tos/platforms/telosb/MoteClockC.nc">
      <from><interface-ref name="MoteClockInit" scoped="" ref="0x7f02a4aae020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f02a4aab020"/></to>
    </wire>
    <wire loc="50:/home/hades/tinyos-new/tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x7f02a4acc740"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f02a4acec80"/></to>
    </wire>
    <wire loc="56:/home/hades/tinyos-new/tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="LedsInit" scoped="" ref="0x7f02a4acce20"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f02a47ed2e0"/></to>
    </wire>
    <wire loc="46:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f02a4aab020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f02a4a942a0"/></to>
    </wire>
    <wire loc="47:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="Msp430ClockInit" scoped="" ref="0x7f02a4aa46c0"/></from>
      <to><interface-ref name="Msp430ClockInit" scoped="" ref="0x7f02a4a94950"/></to>
    </wire>
    <wire loc="48:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x7f02a4be94c0"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x7f02a4a93b30"/></to>
    </wire>
    <wire loc="113:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA2" scoped="" ref="0x7f02a4a50a50"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f02a498c6d0"/></to>
    </wire>
    <wire loc="126:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB0" scoped="" ref="0x7f02a4a3e410"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f02a4985b30"/></to>
    </wire>
    <wire loc="108:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA1" scoped="" ref="0x7f02a4a47d10"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f02a4992160"/></to>
    </wire>
    <wire loc="149:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB3" scoped="" ref="0x7f02a4a2a020"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f02a496bcb0"/></to>
    </wire>
    <wire loc="107:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA1" scoped="" ref="0x7f02a4a4c020"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f02a4993480"/></to>
    </wire>
    <wire loc="148:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB3" scoped="" ref="0x7f02a4a31570"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f02a496b020"/></to>
    </wire>
    <wire loc="170:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB6" scoped="" ref="0x7f02a4a27020"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f02a4954cb0"/></to>
    </wire>
    <wire loc="154:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB4" scoped="" ref="0x7f02a4a39a50"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f02a4965220"/></to>
    </wire>
    <wire loc="99:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA0" scoped="" ref="0x7f02a4a570c0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f02a49e39d0"/></to>
    </wire>
    <wire loc="135:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB1" scoped="" ref="0x7f02a4a2c020"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f02a497a2f0"/></to>
    </wire>
    <wire loc="134:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB1" scoped="" ref="0x7f02a4a33890"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f02a497b610"/></to>
    </wire>
    <wire loc="133:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB1" scoped="" ref="0x7f02a4a3d8c0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f02a497c220"/></to>
    </wire>
    <wire loc="115:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA2" scoped="" ref="0x7f02a4a46c70"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f02a498a7a0"/></to>
    </wire>
    <wire loc="156:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB4" scoped="" ref="0x7f02a4a29020"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f02a49632f0"/></to>
    </wire>
    <wire loc="140:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB2" scoped="" ref="0x7f02a4a3b020"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f02a49756d0"/></to>
    </wire>
    <wire loc="114:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA2" scoped="" ref="0x7f02a4a4cda0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f02a498bac0"/></to>
    </wire>
    <wire loc="93:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="TimerA" scoped="" ref="0x7f02a4a587b0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f02a49f1540"/></to>
    </wire>
    <wire loc="155:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB4" scoped="" ref="0x7f02a4a303e0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f02a4964610"/></to>
    </wire>
    <wire loc="106:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA1" scoped="" ref="0x7f02a4a565a0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f02a4994020"/></to>
    </wire>
    <wire loc="161:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB5" scoped="" ref="0x7f02a4a36020"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f02a495e6d0"/></to>
    </wire>
    <wire loc="101:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA0" scoped="" ref="0x7f02a4a41dc0"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f02a499aa90"/></to>
    </wire>
    <wire loc="142:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB2" scoped="" ref="0x7f02a4a2b020"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f02a49737a0"/></to>
    </wire>
    <wire loc="100:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA0" scoped="" ref="0x7f02a4a4d140"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f02a499bde0"/></to>
    </wire>
    <wire loc="141:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB2" scoped="" ref="0x7f02a4a32700"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f02a4974ac0"/></to>
    </wire>
    <wire loc="163:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB5" scoped="" ref="0x7f02a4a28020"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f02a495b7a0"/></to>
    </wire>
    <wire loc="147:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB3" scoped="" ref="0x7f02a4a3a5a0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f02a496db30"/></to>
    </wire>
    <wire loc="120:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="TimerB" scoped="" ref="0x7f02a4a40b70"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f02a49e93e0"/></to>
    </wire>
    <wire loc="162:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB5" scoped="" ref="0x7f02a4a2f1f0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f02a495cac0"/></to>
    </wire>
    <wire loc="128:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB0" scoped="" ref="0x7f02a4a2d020"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f02a4983cb0"/></to>
    </wire>
    <wire loc="169:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB6" scoped="" ref="0x7f02a4a2e020"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f02a4954020"/></to>
    </wire>
    <wire loc="127:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB0" scoped="" ref="0x7f02a4a34a20"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f02a4983020"/></to>
    </wire>
    <wire loc="168:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB6" scoped="" ref="0x7f02a4a355a0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f02a4956b30"/></to>
    </wire>
    <wire loc="94:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Overflow" scoped="" ref="0x7f02a49ef450"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f02a49f0d80"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="95:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX0" scoped="" ref="0x7f02a49efaa0"/></from>
      <to><interface-ref name="VectorTimerA0" scoped="" ref="0x7f02a494faa0"/></to>
    </wire>
    <wire loc="96:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX1" scoped="" ref="0x7f02a49ee120"/></from>
      <to><interface-ref name="VectorTimerA1" scoped="" ref="0x7f02a494b260"/></to>
    </wire>
    <wire loc="102:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f02a4999930"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f02a49f1540"/></to>
    </wire>
    <wire loc="103:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f02a4997020"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f02a49f0d80"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="109:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f02a4991020"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f02a49f1540"/></to>
    </wire>
    <wire loc="110:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f02a49907a0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f02a49f0d80"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="116:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f02a4989610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f02a49f1540"/></to>
    </wire>
    <wire loc="117:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f02a4988c50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f02a49f0d80"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="121:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Overflow" scoped="" ref="0x7f02a49e72f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f02a49e8bf0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="122:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX0" scoped="" ref="0x7f02a49e7940"/></from>
      <to><interface-ref name="VectorTimerB0" scoped="" ref="0x7f02a494b9f0"/></to>
    </wire>
    <wire loc="123:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX1" scoped="" ref="0x7f02a49e6020"/></from>
      <to><interface-ref name="VectorTimerB1" scoped="" ref="0x7f02a494a240"/></to>
    </wire>
    <wire loc="129:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f02a4982b40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f02a49e93e0"/></to>
    </wire>
    <wire loc="130:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f02a49802f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f02a49e8bf0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f02a4979160"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f02a49e93e0"/></to>
    </wire>
    <wire loc="137:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f02a49787a0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f02a49e8bf0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f02a4972610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f02a49e93e0"/></to>
    </wire>
    <wire loc="144:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f02a4971c50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f02a49e8bf0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f02a496ab40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f02a49e93e0"/></to>
    </wire>
    <wire loc="151:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f02a49682f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f02a49e8bf0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f02a4962160"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f02a49e93e0"/></to>
    </wire>
    <wire loc="158:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f02a49617a0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f02a49e8bf0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f02a495a610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f02a49e93e0"/></to>
    </wire>
    <wire loc="165:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f02a4959c50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f02a49e8bf0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f02a4953b40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f02a49e93e0"/></to>
    </wire>
    <wire loc="172:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f02a49512f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f02a49e8bf0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/home/hades/tinyos-new/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x7f02a4fd54f0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f02a4b0f040"/></to>
    </wire>
    <wire loc="55:/home/hades/tinyos-new/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x7f02a4b0b490"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x7f02a4efd3b0"/></to>
    </wire>
    <wire loc="98:BaseStationP.nc">
      <from><interface-ref name="uartSendTask" scoped="" ref="0x7f02a4867410"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f02a4fd54f0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="99:BaseStationP.nc">
      <from><interface-ref name="radioSendTask" scoped="" ref="0x7f02a4865360"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f02a4fd54f0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="53:/home/hades/tinyos-new/tos/system/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f02a47ed2e0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f02a4816470"/></to>
    </wire>
    <wire loc="54:/home/hades/tinyos-new/tos/system/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x7f02a4812060"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x7f02a4817af0"/></to>
    </wire>
    <wire loc="58:/home/hades/tinyos-new/tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x7f02a4817af0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f02a45d6020"/></to>
    </wire>
    <wire loc="55:/home/hades/tinyos-new/tos/system/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x7f02a4811340"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x7f02a47f0cf0"/></to>
    </wire>
    <wire loc="61:/home/hades/tinyos-new/tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x7f02a47f0cf0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f02a45c2b90"/></to>
    </wire>
    <wire loc="56:/home/hades/tinyos-new/tos/system/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x7f02a480c660"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x7f02a47ee020"/></to>
    </wire>
    <wire loc="64:/home/hades/tinyos-new/tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x7f02a47ee020"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f02a45bc710"/></to>
    </wire>
    <wire loc="59:/home/hades/tinyos-new/tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f02a45c52f0"/></from>
      <to><interface-ref name="Port54" scoped="" ref="0x7f02a47969a0"/></to>
    </wire>
    <wire loc="486:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port54" scoped="" ref="0x7f02a47969a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f02a4672d10"/></to>
    </wire>
    <wire loc="62:/home/hades/tinyos-new/tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f02a45c1de0"/></from>
      <to><interface-ref name="Port55" scoped="" ref="0x7f02a47949a0"/></to>
    </wire>
    <wire loc="487:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port55" scoped="" ref="0x7f02a47949a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f02a466d740"/></to>
    </wire>
    <wire loc="65:/home/hades/tinyos-new/tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f02a45bb930"/></from>
      <to><interface-ref name="Port56" scoped="" ref="0x7f02a47929a0"/></to>
    </wire>
    <wire loc="488:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port56" scoped="" ref="0x7f02a47929a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f02a4668100"/></to>
    </wire>
    <wire loc="442:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port14" scoped="" ref="0x7f02a47d7810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f02a470c740"/></to>
    </wire>
    <wire loc="455:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port26" scoped="" ref="0x7f02a47c3810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f02a46db100"/></to>
    </wire>
    <wire loc="531:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SDA" scoped="" ref="0x7f02a4779ca0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f02a46cd100"/></to>
    </wire>
    <wire loc="551:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC6" scoped="" ref="0x7f02a4755cb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f02a4642740"/></to>
    </wire>
    <wire loc="532:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SOMI0" scoped="" ref="0x7f02a4777cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f02a46c9d10"/></to>
    </wire>
    <wire loc="460:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port30" scoped="" ref="0x7f02a47bf810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f02a46d2740"/></to>
    </wire>
    <wire loc="473:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port42" scoped="" ref="0x7f02a47aa9a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f02a46a2460"/></to>
    </wire>
    <wire loc="497:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port64" scoped="" ref="0x7f02a47869a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f02a464b100"/></to>
    </wire>
    <wire loc="535:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UTXD0" scoped="" ref="0x7f02a4771cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f02a46bf100"/></to>
    </wire>
    <wire loc="545:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC0" scoped="" ref="0x7f02a4761cb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f02a465f740"/></to>
    </wire>
    <wire loc="557:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SVSIN" scoped="" ref="0x7f02a474ccc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f02a463d100"/></to>
    </wire>
    <wire loc="445:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port17" scoped="" ref="0x7f02a47d1810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f02a46fd740"/></to>
    </wire>
    <wire loc="536:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="URXD0" scoped="" ref="0x7f02a476fcc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f02a46bad10"/></to>
    </wire>
    <wire loc="450:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port21" scoped="" ref="0x7f02a47cd810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f02a46f4d10"/></to>
    </wire>
    <wire loc="463:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port33" scoped="" ref="0x7f02a47b9810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f02a46c4740"/></to>
    </wire>
    <wire loc="476:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port45" scoped="" ref="0x7f02a47a49a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f02a4693100"/></to>
    </wire>
    <wire loc="489:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port57" scoped="" ref="0x7f02a47909a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f02a4664d10"/></to>
    </wire>
    <wire loc="500:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port67" scoped="" ref="0x7f02a477f9a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f02a463d100"/></to>
    </wire>
    <wire loc="440:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port12" scoped="" ref="0x7f02a47db810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f02a4715100"/></to>
    </wire>
    <wire loc="453:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port24" scoped="" ref="0x7f02a47c7810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f02a46e6d80"/></to>
    </wire>
    <wire loc="466:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port36" scoped="" ref="0x7f02a47b3810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f02a46b5740"/></to>
    </wire>
    <wire loc="530:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SIMO0" scoped="" ref="0x7f02a477bcc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f02a46cd100"/></to>
    </wire>
    <wire loc="548:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC3" scoped="" ref="0x7f02a475bcb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f02a4651740"/></to>
    </wire>
    <wire loc="555:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="DAC1" scoped="" ref="0x7f02a474ecb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f02a463d100"/></to>
    </wire>
    <wire loc="541:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UCLK1" scoped="" ref="0x7f02a4767cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f02a4677100"/></to>
    </wire>
    <wire loc="471:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port40" scoped="" ref="0x7f02a47ae810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f02a46ace60"/></to>
    </wire>
    <wire loc="484:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port52" scoped="" ref="0x7f02a479a9a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f02a467c740"/></to>
    </wire>
    <wire loc="495:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port62" scoped="" ref="0x7f02a478a9a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f02a4656d10"/></to>
    </wire>
    <wire loc="549:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC4" scoped="" ref="0x7f02a4759cb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f02a464b100"/></to>
    </wire>
    <wire loc="538:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="STE1" scoped="" ref="0x7f02a476dcb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f02a4685100"/></to>
    </wire>
    <wire loc="443:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port15" scoped="" ref="0x7f02a47d5810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f02a4707100"/></to>
    </wire>
    <wire loc="456:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port27" scoped="" ref="0x7f02a47c1810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f02a46d7d10"/></to>
    </wire>
    <wire loc="493:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port60" scoped="" ref="0x7f02a478e9a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f02a465f740"/></to>
    </wire>
    <wire loc="461:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port31" scoped="" ref="0x7f02a47bd810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f02a46cd100"/></to>
    </wire>
    <wire loc="474:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port43" scoped="" ref="0x7f02a47a89a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f02a469ee00"/></to>
    </wire>
    <wire loc="498:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port65" scoped="" ref="0x7f02a47849a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f02a4647d10"/></to>
    </wire>
    <wire loc="540:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SOMI1" scoped="" ref="0x7f02a4769cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f02a467c740"/></to>
    </wire>
    <wire loc="438:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port10" scoped="" ref="0x7f02a47de870"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f02a4745d10"/></to>
    </wire>
    <wire loc="451:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port22" scoped="" ref="0x7f02a47cb810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f02a46ef740"/></to>
    </wire>
    <wire loc="464:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port34" scoped="" ref="0x7f02a47b7810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f02a46bf100"/></to>
    </wire>
    <wire loc="477:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port46" scoped="" ref="0x7f02a47a29a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f02a468fd10"/></to>
    </wire>
    <wire loc="542:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UTXD1" scoped="" ref="0x7f02a4765cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f02a46b5740"/></to>
    </wire>
    <wire loc="546:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC1" scoped="" ref="0x7f02a475fcb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f02a465a100"/></to>
    </wire>
    <wire loc="552:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC7" scoped="" ref="0x7f02a4753cb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f02a463d100"/></to>
    </wire>
    <wire loc="482:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port50" scoped="" ref="0x7f02a479e9a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f02a4685100"/></to>
    </wire>
    <wire loc="543:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="URXD1" scoped="" ref="0x7f02a4763cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f02a46b0100"/></to>
    </wire>
    <wire loc="441:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port13" scoped="" ref="0x7f02a47d9810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f02a4711d10"/></to>
    </wire>
    <wire loc="454:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port25" scoped="" ref="0x7f02a47c5810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f02a46e0740"/></to>
    </wire>
    <wire loc="467:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port37" scoped="" ref="0x7f02a47b1810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f02a46b0100"/></to>
    </wire>
    <wire loc="539:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SIMO1" scoped="" ref="0x7f02a476bcc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f02a4681d10"/></to>
    </wire>
    <wire loc="550:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC5" scoped="" ref="0x7f02a4757cb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f02a4647d10"/></to>
    </wire>
    <wire loc="472:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port41" scoped="" ref="0x7f02a47ac9a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f02a46a79f0"/></to>
    </wire>
    <wire loc="485:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port53" scoped="" ref="0x7f02a47989a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f02a4677100"/></to>
    </wire>
    <wire loc="496:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port63" scoped="" ref="0x7f02a47889a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f02a4651740"/></to>
    </wire>
    <wire loc="444:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port16" scoped="" ref="0x7f02a47d3810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f02a4702d10"/></to>
    </wire>
    <wire loc="494:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port61" scoped="" ref="0x7f02a478c9a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f02a465a100"/></to>
    </wire>
    <wire loc="449:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port20" scoped="" ref="0x7f02a47cf810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f02a46f8100"/></to>
    </wire>
    <wire loc="462:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port32" scoped="" ref="0x7f02a47bb810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f02a46c9d10"/></to>
    </wire>
    <wire loc="475:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port44" scoped="" ref="0x7f02a47a69a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f02a4699740"/></to>
    </wire>
    <wire loc="499:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port66" scoped="" ref="0x7f02a47829a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f02a4642740"/></to>
    </wire>
    <wire loc="439:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port11" scoped="" ref="0x7f02a47e7810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f02a471a740"/></to>
    </wire>
    <wire loc="452:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port23" scoped="" ref="0x7f02a47c9810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f02a46ea100"/></to>
    </wire>
    <wire loc="465:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port35" scoped="" ref="0x7f02a47b5810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f02a46bad10"/></to>
    </wire>
    <wire loc="478:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port47" scoped="" ref="0x7f02a47a09a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f02a468a740"/></to>
    </wire>
    <wire loc="534:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SCL" scoped="" ref="0x7f02a4773ca0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f02a46c4740"/></to>
    </wire>
    <wire loc="547:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC2" scoped="" ref="0x7f02a475dcb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f02a4656d10"/></to>
    </wire>
    <wire loc="533:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UCLK0" scoped="" ref="0x7f02a4775cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f02a46c4740"/></to>
    </wire>
    <wire loc="483:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port51" scoped="" ref="0x7f02a479c9a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f02a4681d10"/></to>
    </wire>
    <wire loc="554:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="DAC0" scoped="" ref="0x7f02a4750cb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f02a4642740"/></to>
    </wire>
    <wire loc="558:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SVSOUT" scoped="" ref="0x7f02a474acc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f02a4664d10"/></to>
    </wire>
    <wire loc="529:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="STE0" scoped="" ref="0x7f02a477d9f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f02a46d2740"/></to>
    </wire>
    <wire loc="82:/home/hades/tinyos-new/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f02a457a2f0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f02a4550020"/></to>
    </wire>
    <wire loc="85:/home/hades/tinyos-new/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f02a4579320"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f02a37c9020"/></to>
    </wire>
    <wire loc="88:/home/hades/tinyos-new/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x7f02a45761d0"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x7f02a37c8df0"/></to>
    </wire>
    <wire loc="84:/home/hades/tinyos-new/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f02a4574020"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f02a37c6a80"/></to>
    </wire>
    <wire loc="89:/home/hades/tinyos-new/tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f02a45a1310"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f02a3a8a550"/></to>
    </wire>
    <wire loc="59:/home/hades/tinyos-new/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f02a3a8a550"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f02a3a7ca80"/></to>
    </wire>
    <wire loc="86:/home/hades/tinyos-new/tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7f02a45865b0"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7f02a4569170"/></to>
    </wire>
    <wire loc="91:/home/hades/tinyos-new/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7f02a4569170"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7f02a453c080"/></to>
    </wire>
    <wire loc="87:/home/hades/tinyos-new/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f02a4577510"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f02a37c8210"/></to>
    </wire>
    <wire loc="85:/home/hades/tinyos-new/tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f02a45a2080"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f02a4573020"/></to>
    </wire>
    <wire loc="93:/home/hades/tinyos-new/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f02a4573020"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f02a453d020"/></to>
    </wire>
    <wire loc="89:/home/hades/tinyos-new/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f02a4576800"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f02a37c7470"/></to>
    </wire>
    <wire loc="90:/home/hades/tinyos-new/tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f02a45923f0"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f02a3a86660"/></to>
    </wire>
    <wire loc="60:/home/hades/tinyos-new/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f02a3a86660"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f02a3a78af0"/></to>
    </wire>
    <wire loc="97:/home/hades/tinyos-new/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f02a4550020"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f02a37fbb80"/></to>
    </wire>
    <wire loc="83:/home/hades/tinyos-new/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x7f02a45722c0"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7f02a37c48b0"/></to>
    </wire>
    <wire loc="86:/home/hades/tinyos-new/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x7f02a455e1d0"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x7f02a37c5ce0"/></to>
    </wire>
    <wire loc="92:/home/hades/tinyos-new/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f02a456a0f0"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f02a453e020"/></to>
    </wire>
    <wire loc="84:/home/hades/tinyos-new/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f02a453e020"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f02a3a90670"/></to>
    </wire>
    <wire loc="83:/home/hades/tinyos-new/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7f02a453c080"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7f02a37fb080"/></to>
    </wire>
    <wire loc="85:/home/hades/tinyos-new/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f02a453d020"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x7f02a3a8c6e0"/></to>
    </wire>
    <wire loc="90:/home/hades/tinyos-new/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7f02a4555430"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7f02a453cb70"/></to>
    </wire>
    <wire loc="82:/home/hades/tinyos-new/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7f02a453cb70"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7f02a37e6020"/></to>
    </wire>
    <wire loc="94:/home/hades/tinyos-new/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f02a4566170"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f02a453d9d0"/></to>
    </wire>
    <wire loc="86:/home/hades/tinyos-new/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f02a453d9d0"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f02a3a8ba70"/></to>
    </wire>
    <wire loc="97:/home/hades/tinyos-new/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="RadioResource" scoped="" ref="0x7f02a37bb0f0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f02a454f530"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="98:/home/hades/tinyos-new/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f02a37c2860"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x7f02a4548a70"/></to>
    </wire>
    <wire loc="93:/home/hades/tinyos-new/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="ActiveSend" scoped="" ref="0x7f02a4548a70"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x7f02a3863ca0"/></to>
    </wire>
    <wire loc="99:/home/hades/tinyos-new/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f02a37c1690"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x7f02a4541840"/></to>
    </wire>
    <wire loc="94:/home/hades/tinyos-new/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="ActiveReceive" scoped="" ref="0x7f02a4541840"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x7f02a3862a50"/></to>
    </wire>
    <wire loc="101:/home/hades/tinyos-new/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f02a37bd4d0"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f02a3cb6b30"/></to>
    </wire>
    <wire loc="102:/home/hades/tinyos-new/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f02a37c1ce0"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f02a3a90670"/></to>
    </wire>
    <wire loc="55:/home/hades/tinyos-new/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f02a3a90670"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f02a3a81d20"/></to>
    </wire>
    <wire loc="103:/home/hades/tinyos-new/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f02a37c0b70"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f02a3a8b0c0"/></to>
    </wire>
    <wire loc="57:/home/hades/tinyos-new/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f02a3a8b0c0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f02a3a7d640"/></to>
    </wire>
    <wire loc="104:/home/hades/tinyos-new/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x7f02a37bf610"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x7f02a44b0dc0"/></to>
    </wire>
    <wire loc="55:/home/hades/tinyos-new/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x7f02a44b0dc0"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x7f02a44a6970"/></to>
    </wire>
    <wire loc="106:/home/hades/tinyos-new/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubBackoff" scoped="" ref="0x7f02a37bc1f0"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7f02a4536330"/></to>
    </wire>
    <wire loc="54:/home/hades/tinyos-new/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x7f02a4536330"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7f02a45317e0"/></to>
    </wire>
    <wire loc="109:/home/hades/tinyos-new/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f02a37bbd30"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f02a481a020"/></to>
    </wire>
    <wire loc="63:/home/hades/tinyos-new/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f02a37fbb80"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x7f02a37f7d90"/></to>
    </wire>
    <wire loc="58:/home/hades/tinyos-new/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f02a3a8ba70"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f02a3a7c020"/></to>
    </wire>
    <wire loc="53:/home/hades/tinyos-new/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7f02a37e6020"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7f02a37e4420"/></to>
    </wire>
    <wire loc="97:/home/hades/tinyos-new/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="ActiveSend" scoped="" ref="0x7f02a3863ca0"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x7f02a3859a20"/></to>
    </wire>
    <wire loc="64:/home/hades/tinyos-new/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7f02a37fb080"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7f02a37f32d0"/></to>
    </wire>
    <wire loc="90:/home/hades/tinyos-new/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BareReceive" scoped="" ref="0x7f02a4549690"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f02a38635f0"/></to>
    </wire>
    <wire loc="92:/home/hades/tinyos-new/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f02a38635f0"/></from>
      <to><interface-ref name="BareReceive" scoped="" ref="0x7f02a3859370"/></to>
    </wire>
    <wire loc="56:/home/hades/tinyos-new/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7f02a3a8c6e0"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x7f02a3a7ec50"/></to>
    </wire>
    <wire loc="88:/home/hades/tinyos-new/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f02a454f530"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f02a3866cb0"/></to>
    </wire>
    <wire loc="96:/home/hades/tinyos-new/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f02a3866cb0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f02a385b7b0"/></to>
    </wire>
    <wire loc="89:/home/hades/tinyos-new/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BareSend" scoped="" ref="0x7f02a4540940"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f02a3865960"/></to>
    </wire>
    <wire loc="91:/home/hades/tinyos-new/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f02a3865960"/></from>
      <to><interface-ref name="BareSend" scoped="" ref="0x7f02a385a4d0"/></to>
    </wire>
    <wire loc="91:/home/hades/tinyos-new/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BarePacket" scoped="" ref="0x7f02a4549d50"/></from>
      <to><interface-ref name="BarePacket" scoped="" ref="0x7f02a3861170"/></to>
    </wire>
    <wire loc="93:/home/hades/tinyos-new/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="BarePacket" scoped="" ref="0x7f02a3861170"/></from>
      <to><interface-ref name="BarePacket" scoped="" ref="0x7f02a3856020"/></to>
    </wire>
    <wire loc="98:/home/hades/tinyos-new/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="ActiveReceive" scoped="" ref="0x7f02a3862a50"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x7f02a3858840"/></to>
    </wire>
    <wire loc="98:/home/hades/tinyos-new/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x7f02a37f7d90"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f02a4538390"/></to>
    </wire>
    <wire loc="55:/home/hades/tinyos-new/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f02a4538390"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f02a4535e80"/></to>
    </wire>
    <wire loc="101:/home/hades/tinyos-new/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f02a38606b0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f02a38b7220"/></to>
    </wire>
    <wire loc="55:/home/hades/tinyos-new/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f02a38b7220"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f02a38b5a20"/></to>
    </wire>
    <wire loc="102:/home/hades/tinyos-new/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f02a38b6020"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f02a37e9360"/></to>
    </wire>
    <wire loc="54:/home/hades/tinyos-new/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f02a37e9360"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7f02a37e6d70"/></to>
    </wire>
    <wire loc="103:/home/hades/tinyos-new/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f02a37e6d70"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f02a37ffcf0"/></to>
    </wire>
    <wire loc="61:/home/hades/tinyos-new/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f02a37ffcf0"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7f02a37f8860"/></to>
    </wire>
    <wire loc="104:/home/hades/tinyos-new/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f02a37f8860"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f02a4538e80"/></to>
    </wire>
    <wire loc="56:/home/hades/tinyos-new/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f02a4538e80"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f02a4532990"/></to>
    </wire>
    <wire loc="107:/home/hades/tinyos-new/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f02a3860020"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f02a37fc980"/></to>
    </wire>
    <wire loc="62:/home/hades/tinyos-new/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f02a37fc980"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7f02a37f7690"/></to>
    </wire>
    <wire loc="108:/home/hades/tinyos-new/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f02a37f7690"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f02a3898ab0"/></to>
    </wire>
    <wire loc="56:/home/hades/tinyos-new/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f02a3898ab0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f02a3894e40"/></to>
    </wire>
    <wire loc="109:/home/hades/tinyos-new/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f02a3895950"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f02a4537b40"/></to>
    </wire>
    <wire loc="68:/home/hades/tinyos-new/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f02a4537b40"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f02a3b147c0"/></to>
    </wire>
    <wire loc="63:/home/hades/tinyos-new/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f02a3b147c0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f02a3b0d020"/></to>
    </wire>
    <wire loc="59:/home/hades/tinyos-new/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f02a4530640"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f02a44c1960"/></to>
    </wire>
    <wire loc="54:/home/hades/tinyos-new/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f02a44c1960"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f02a44a7c30"/></to>
    </wire>
    <wire loc="60:/home/hades/tinyos-new/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Power" scoped="" ref="0x7f02a4528b50"/></from>
      <to><interface-ref name="CC2420Power" scoped="" ref="0x7f02a44bbbf0"/></to>
    </wire>
    <wire loc="56:/home/hades/tinyos-new/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CC2420Power" scoped="" ref="0x7f02a44bbbf0"/></from>
      <to><interface-ref name="CC2420Power" scoped="" ref="0x7f02a44a4740"/></to>
    </wire>
    <wire loc="63:/home/hades/tinyos-new/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x7f02a45247a0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f02a3c0b6d0"/></to>
    </wire>
    <wire loc="69:/home/hades/tinyos-new/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x7f02a45247a0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f02a3b175d0"/></to>
    </wire>
    <wire loc="61:/home/hades/tinyos-new/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7f02a3b175d0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f02a3b0fca0"/></to>
    </wire>
    <wire loc="55:/home/hades/tinyos-new/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7f02a3c0b6d0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f02a3bfc320"/></to>
    </wire>
    <wire loc="64:/home/hades/tinyos-new/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Transmit" scoped="" ref="0x7f02a451d4d0"/></from>
      <to><interface-ref name="CC2420Transmit" scoped="" ref="0x7f02a3c08020"/></to>
    </wire>
    <wire loc="56:/home/hades/tinyos-new/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Transmit" scoped="" ref="0x7f02a3c08020"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f02a3bfcbc0"/></to>
    </wire>
    <wire loc="65:/home/hades/tinyos-new/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubBackoff" scoped="" ref="0x7f02a45263e0"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7f02a3c08cb0"/></to>
    </wire>
    <wire loc="57:/home/hades/tinyos-new/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x7f02a3c08cb0"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7f02a3bfa970"/></to>
    </wire>
    <wire loc="72:/home/hades/tinyos-new/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f02a451b7e0"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f02a3a90670"/></to>
    </wire>
    <wire loc="73:/home/hades/tinyos-new/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f02a4513d00"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f02a3a8b0c0"/></to>
    </wire>
    <wire loc="76:/home/hades/tinyos-new/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7f02a451a840"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7f02a38d4a20"/></to>
    </wire>
    <wire loc="56:/home/hades/tinyos-new/tos/system/RandomC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7f02a38d4a20"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7f02a38cda20"/></to>
    </wire>
    <wire loc="79:/home/hades/tinyos-new/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SplitControlState" scoped="" ref="0x7f02a450c3f0"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f02a38d6aa0"/></to>
    </wire>
    <wire loc="74:/home/hades/tinyos-new/tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7f02a38d6aa0"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f02a40c4280"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/home/hades/tinyos-new/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f02a451c080"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f02a481a020"/></to>
    </wire>
    <wire loc="76:/home/hades/tinyos-new/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="sendDone_task" scoped="" ref="0x7f02a4507020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f02a4fd54f0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/home/hades/tinyos-new/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="stopDone_task" scoped="" ref="0x7f02a4509020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f02a4fd54f0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:/home/hades/tinyos-new/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="startDone_task" scoped="" ref="0x7f02a450a020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f02a4fd54f0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="57:/home/hades/tinyos-new/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="ReadRssi" scoped="" ref="0x7f02a44ad0c0"/></from>
      <to><interface-ref name="ReadRssi" scoped="" ref="0x7f02a44a3b40"/></to>
    </wire>
    <wire loc="63:/home/hades/tinyos-new/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="StartupTimer" scoped="" ref="0x7f02a4497d90"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x7f02a43f3220"/></to>
    </wire>
    <wire loc="55:/home/hades/tinyos-new/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <from><interface-ref name="Alarm32khz32" scoped="" ref="0x7f02a43f3220"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x7f02a43edd20"/></to>
    </wire>
    <wire loc="66:/home/hades/tinyos-new/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7f02a4494060"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x7f02a42ee060"/></to>
    </wire>
    <wire loc="72:/home/hades/tinyos-new/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7f02a42ee060"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f02a42e0020"/></to>
    </wire>
    <wire loc="67:/home/hades/tinyos-new/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x7f02a4493380"/></from>
      <to><interface-ref name="RSTN" scoped="" ref="0x7f02a42eb9c0"/></to>
    </wire>
    <wire loc="75:/home/hades/tinyos-new/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x7f02a42eb9c0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f02a42d21d0"/></to>
    </wire>
    <wire loc="68:/home/hades/tinyos-new/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="VREN" scoped="" ref="0x7f02a44926a0"/></from>
      <to><interface-ref name="VREN" scoped="" ref="0x7f02a42e8020"/></to>
    </wire>
    <wire loc="77:/home/hades/tinyos-new/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="VREN" scoped="" ref="0x7f02a42e8020"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f02a42c8b70"/></to>
    </wire>
    <wire loc="71:/home/hades/tinyos-new/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="InterruptCCA" scoped="" ref="0x7f02a44900e0"/></from>
      <to><interface-ref name="InterruptCCA" scoped="" ref="0x7f02a42b2d60"/></to>
    </wire>
    <wire loc="64:/home/hades/tinyos-new/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="InterruptCCA" scoped="" ref="0x7f02a42b2d60"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x7f02a4193020"/></to>
    </wire>
    <wire loc="74:/home/hades/tinyos-new/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7f02a447a1d0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f02a3d41e20"/></to>
    </wire>
    <wire loc="126:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f02a3d41e20"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f02a4146960"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/home/hades/tinyos-new/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7f02a44792e0"/></from>
      <to><interface-ref name="SRXON" scoped="" ref="0x7f02a3d3c7b0"/></to>
    </wire>
    <wire loc="132:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7f02a3d3c7b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f02a413e510"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:/home/hades/tinyos-new/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7f02a44799f0"/></from>
      <to><interface-ref name="SRFOFF" scoped="" ref="0x7f02a3d3bae0"/></to>
    </wire>
    <wire loc="135:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7f02a3d3bae0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f02a413e510"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="77:/home/hades/tinyos-new/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7f02a447ba80"/></from>
      <to><interface-ref name="SXOSCON" scoped="" ref="0x7f02a3d3fad0"/></to>
    </wire>
    <wire loc="130:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7f02a3d3fad0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f02a413e510"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:/home/hades/tinyos-new/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7f02a447b160"/></from>
      <to><interface-ref name="SXOSCOFF" scoped="" ref="0x7f02a3d39160"/></to>
    </wire>
    <wire loc="136:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7f02a3d39160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f02a413e510"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="79:/home/hades/tinyos-new/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7f02a4480b00"/></from>
      <to><interface-ref name="FSCTRL" scoped="" ref="0x7f02a3d31870"/></to>
    </wire>
    <wire loc="154:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7f02a3d31870"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f02a41406f0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:/home/hades/tinyos-new/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7f02a44873d0"/></from>
      <to><interface-ref name="IOCFG0" scoped="" ref="0x7f02a3d2f880"/></to>
    </wire>
    <wire loc="158:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7f02a3d2f880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f02a41406f0"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="81:/home/hades/tinyos-new/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7f02a4487c80"/></from>
      <to><interface-ref name="IOCFG1" scoped="" ref="0x7f02a3d2e0a0"/></to>
    </wire>
    <wire loc="159:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7f02a3d2e0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f02a41406f0"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/home/hades/tinyos-new/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7f02a44825f0"/></from>
      <to><interface-ref name="MDMCTRL0" scoped="" ref="0x7f02a3d36e50"/></to>
    </wire>
    <wire loc="147:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7f02a3d36e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f02a41406f0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:/home/hades/tinyos-new/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f02a447e020"/></from>
      <to><interface-ref name="MDMCTRL1" scoped="" ref="0x7f02a3d34670"/></to>
    </wire>
    <wire loc="148:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f02a3d34670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f02a41406f0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:/home/hades/tinyos-new/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7f02a448b520"/></from>
      <to><interface-ref name="PANID" scoped="" ref="0x7f02a3d21500"/></to>
    </wire>
    <wire loc="184:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7f02a3d21500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f02a41418c0"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:/home/hades/tinyos-new/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7f02a4483a90"/></from>
      <to><interface-ref name="IEEEADR" scoped="" ref="0x7f02a3d22ce0"/></to>
    </wire>
    <wire loc="183:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7f02a3d22ce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f02a41418c0"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:/home/hades/tinyos-new/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7f02a447e8e0"/></from>
      <to><interface-ref name="RXCTRL1" scoped="" ref="0x7f02a3d32e50"/></to>
    </wire>
    <wire loc="153:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7f02a3d32e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f02a41406f0"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:/home/hades/tinyos-new/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7f02a447d1c0"/></from>
      <to><interface-ref name="RSSI" scoped="" ref="0x7f02a3d34e50"/></to>
    </wire>
    <wire loc="149:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7f02a3d34e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f02a41406f0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:/home/hades/tinyos-new/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f02a447da70"/></from>
      <to><interface-ref name="TXCTRL" scoped="" ref="0x7f02a3d33e50"/></to>
    </wire>
    <wire loc="151:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f02a3d33e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f02a41406f0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:/home/hades/tinyos-new/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SyncResource" scoped="" ref="0x7f02a4478d90"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f02a3d0fa80"/></to>
    </wire>
    <wire loc="126:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f02a3d0fa80"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f02a4146960"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="94:/home/hades/tinyos-new/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RssiResource" scoped="" ref="0x7f02a4478020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f02a3ce29e0"/></to>
    </wire>
    <wire loc="126:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f02a3ce29e0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f02a4146960"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="97:/home/hades/tinyos-new/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f02a4488810"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f02a3cb6b30"/></to>
    </wire>
    <wire loc="100:/home/hades/tinyos-new/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f02a449f020"/></from>
      <to><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f02a3cb5d30"/></to>
    </wire>
    <wire loc="23:/home/hades/tinyos-new/tos/chips/ds2411/LocalIeeeEui64C.nc">
      <from><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f02a3cb5d30"/></from>
      <to><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f02a3c9a310"/></to>
    </wire>
    <wire loc="126:/home/hades/tinyos-new/tos/chips/cc2420/control/CC2420ControlP.nc">
      <from><interface-ref name="syncDone" scoped="" ref="0x7f02a446c820"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f02a4fd54f0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:/home/hades/tinyos-new/tos/chips/cc2420/control/CC2420ControlP.nc">
      <from><interface-ref name="sync" scoped="" ref="0x7f02a446d940"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f02a4fd54f0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/home/hades/tinyos-new/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f02a43f67f0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f02a43ed490"/></to>
    </wire>
    <wire loc="51:/home/hades/tinyos-new/tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f02a43ed490"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f02a2eae260"/></to>
    </wire>
    <wire loc="52:/home/hades/tinyos-new/tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <from><interface-ref name="Alarm32khz32" scoped="" ref="0x7f02a43edd20"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f02a2eaeab0"/></to>
    </wire>
    <wire loc="52:/home/hades/tinyos-new/tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f02a2eae260"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f02a2ea63d0"/></to>
    </wire>
    <wire loc="53:/home/hades/tinyos-new/tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f02a2eaeab0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f02a2e8c020"/></to>
    </wire>
    <wire loc="51:/home/hades/tinyos-new/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f02a2ea63d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f02a2e77ca0"/></to>
    </wire>
    <wire loc="55:/home/hades/tinyos-new/tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x7f02a2e85780"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f02a2ea6c20"/></to>
    </wire>
    <wire loc="52:/home/hades/tinyos-new/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f02a2ea6c20"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f02a2e765b0"/></to>
    </wire>
    <wire loc="56:/home/hades/tinyos-new/tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f02a2e883d0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f02a4379020"/></to>
    </wire>
    <wire loc="50:/home/hades/tinyos-new/tos/chips/msp430/timer/Counter32khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f02a4379020"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f02a433d0f0"/></to>
    </wire>
    <wire loc="54:/home/hades/tinyos-new/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f02a2e72710"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7f02a2e7c9d0"/></to>
    </wire>
    <wire loc="49:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f02a2e7c9d0"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7f02a43cf4d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/home/hades/tinyos-new/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f02a2e71da0"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f02a2e7a120"/></to>
    </wire>
    <wire loc="50:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f02a2e7a120"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f02a43cc280"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:/home/hades/tinyos-new/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f02a2e6f0c0"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7f02a2e79440"/></to>
    </wire>
    <wire loc="51:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f02a2e79440"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7f02a43cbba0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="58:/home/hades/tinyos-new/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f02a43cf4d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f02a4a40b70"/></to>
    </wire>
    <wire loc="59:/home/hades/tinyos-new/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f02a43cc280"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB0" scoped="" ref="0x7f02a4a3e410"/></to>
    </wire>
    <wire loc="60:/home/hades/tinyos-new/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f02a43cbba0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB0" scoped="" ref="0x7f02a4a34a20"/></to>
    </wire>
    <wire loc="66:/home/hades/tinyos-new/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f02a43cf4d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f02a4a40b70"/></to>
    </wire>
    <wire loc="67:/home/hades/tinyos-new/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f02a43cc280"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB2" scoped="" ref="0x7f02a4a3b020"/></to>
    </wire>
    <wire loc="68:/home/hades/tinyos-new/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f02a43cbba0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB2" scoped="" ref="0x7f02a4a32700"/></to>
    </wire>
    <wire loc="70:/home/hades/tinyos-new/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f02a43cf4d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f02a4a40b70"/></to>
    </wire>
    <wire loc="71:/home/hades/tinyos-new/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f02a43cc280"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB3" scoped="" ref="0x7f02a4a3a5a0"/></to>
    </wire>
    <wire loc="72:/home/hades/tinyos-new/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f02a43cbba0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB3" scoped="" ref="0x7f02a4a31570"/></to>
    </wire>
    <wire loc="74:/home/hades/tinyos-new/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f02a43cf4d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f02a4a40b70"/></to>
    </wire>
    <wire loc="75:/home/hades/tinyos-new/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f02a43cc280"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB4" scoped="" ref="0x7f02a4a39a50"/></to>
    </wire>
    <wire loc="76:/home/hades/tinyos-new/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f02a43cbba0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB4" scoped="" ref="0x7f02a4a303e0"/></to>
    </wire>
    <wire loc="78:/home/hades/tinyos-new/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f02a43cf4d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f02a4a40b70"/></to>
    </wire>
    <wire loc="79:/home/hades/tinyos-new/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f02a43cc280"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB5" scoped="" ref="0x7f02a4a36020"/></to>
    </wire>
    <wire loc="80:/home/hades/tinyos-new/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f02a43cbba0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB5" scoped="" ref="0x7f02a4a2f1f0"/></to>
    </wire>
    <wire loc="82:/home/hades/tinyos-new/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f02a43cf4d0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f02a4a40b70"/></to>
    </wire>
    <wire loc="83:/home/hades/tinyos-new/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f02a43cc280"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB6" scoped="" ref="0x7f02a4a355a0"/></to>
    </wire>
    <wire loc="84:/home/hades/tinyos-new/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f02a43cbba0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB6" scoped="" ref="0x7f02a4a2e020"/></to>
    </wire>
    <wire loc="52:/home/hades/tinyos-new/tos/chips/msp430/timer/Counter32khz32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x7f02a433a540"/></from>
      <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7f02a4370060"/></to>
    </wire>
    <wire loc="50:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <from><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7f02a4370060"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f02a436b0a0"/></to>
    </wire>
    <wire loc="51:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f02a435c2c0"/></from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f02a4a40b70"/></to>
    </wire>
    <wire loc="73:/home/hades/tinyos-new/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="FIFO" scoped="" ref="0x7f02a42ed380"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f02a42dcb70"/></to>
    </wire>
    <wire loc="74:/home/hades/tinyos-new/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="FIFOP" scoped="" ref="0x7f02a42ec6b0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f02a42d7710"/></to>
    </wire>
    <wire loc="71:/home/hades/tinyos-new/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="CCA" scoped="" ref="0x7f02a43f4e40"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f02a42e6440"/></to>
    </wire>
    <wire loc="76:/home/hades/tinyos-new/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="SFD" scoped="" ref="0x7f02a42eacd0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f02a42ced60"/></to>
    </wire>
    <wire loc="63:/home/hades/tinyos-new/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f02a42e5610"/></from>
      <to><interface-ref name="Port14" scoped="" ref="0x7f02a47d7810"/></to>
    </wire>
    <wire loc="64:/home/hades/tinyos-new/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f02a42df2f0"/></from>
      <to><interface-ref name="Port42" scoped="" ref="0x7f02a47aa9a0"/></to>
    </wire>
    <wire loc="65:/home/hades/tinyos-new/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f02a42dbde0"/></from>
      <to><interface-ref name="Port13" scoped="" ref="0x7f02a47d9810"/></to>
    </wire>
    <wire loc="66:/home/hades/tinyos-new/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f02a42d6930"/></from>
      <to><interface-ref name="Port10" scoped="" ref="0x7f02a47de870"/></to>
    </wire>
    <wire loc="67:/home/hades/tinyos-new/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f02a42d1480"/></from>
      <to><interface-ref name="Port46" scoped="" ref="0x7f02a47a29a0"/></to>
    </wire>
    <wire loc="68:/home/hades/tinyos-new/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f02a42cc020"/></from>
      <to><interface-ref name="Port41" scoped="" ref="0x7f02a47ac9a0"/></to>
    </wire>
    <wire loc="69:/home/hades/tinyos-new/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f02a42c7de0"/></from>
      <to><interface-ref name="Port45" scoped="" ref="0x7f02a47a49a0"/></to>
    </wire>
    <wire loc="63:/home/hades/tinyos-new/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="CaptureSFD" scoped="" ref="0x7f02a42b2150"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f02a42a8a20"/></to>
    </wire>
    <wire loc="65:/home/hades/tinyos-new/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="InterruptFIFOP" scoped="" ref="0x7f02a42b1a20"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x7f02a4184100"/></to>
    </wire>
    <wire loc="53:/home/hades/tinyos-new/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f02a42975d0"/></from>
      <to><interface-ref name="ControlB1" scoped="" ref="0x7f02a4a3d8c0"/></to>
    </wire>
    <wire loc="54:/home/hades/tinyos-new/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Msp430Capture" scoped="" ref="0x7f02a42968f0"/></from>
      <to><interface-ref name="CaptureB1" scoped="" ref="0x7f02a4a2c020"/></to>
    </wire>
    <wire loc="55:/home/hades/tinyos-new/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="GeneralIO" scoped="" ref="0x7f02a42957a0"/></from>
      <to><interface-ref name="Port41" scoped="" ref="0x7f02a47ac9a0"/></to>
    </wire>
    <wire loc="60:/home/hades/tinyos-new/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="HplInterrupt" scoped="" ref="0x7f02a4193b20"/></from>
      <to><interface-ref name="Port14" scoped="" ref="0x7f02a4286a30"/></to>
    </wire>
    <wire loc="70:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port14" scoped="" ref="0x7f02a4286a30"/></from>
      <to><interface-ref name="Port14" scoped="" ref="0x7f02a4271020"/></to>
    </wire>
    <wire loc="61:/home/hades/tinyos-new/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="HplInterrupt" scoped="" ref="0x7f02a4184c00"/></from>
      <to><interface-ref name="Port10" scoped="" ref="0x7f02a4288a20"/></to>
    </wire>
    <wire loc="66:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port10" scoped="" ref="0x7f02a4288a20"/></from>
      <to><interface-ref name="Port10" scoped="" ref="0x7f02a4275200"/></to>
    </wire>
    <wire loc="82:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port26" scoped="" ref="0x7f02a427bbc0"/></from>
      <to><interface-ref name="Port26" scoped="" ref="0x7f02a4267020"/></to>
    </wire>
    <wire loc="73:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port17" scoped="" ref="0x7f02a4283a30"/></from>
      <to><interface-ref name="Port17" scoped="" ref="0x7f02a426e020"/></to>
    </wire>
    <wire loc="77:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port21" scoped="" ref="0x7f02a4281a30"/></from>
      <to><interface-ref name="Port21" scoped="" ref="0x7f02a426c020"/></to>
    </wire>
    <wire loc="68:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port12" scoped="" ref="0x7f02a428ca30"/></from>
      <to><interface-ref name="Port12" scoped="" ref="0x7f02a42730a0"/></to>
    </wire>
    <wire loc="80:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port24" scoped="" ref="0x7f02a427da30"/></from>
      <to><interface-ref name="Port24" scoped="" ref="0x7f02a4269020"/></to>
    </wire>
    <wire loc="71:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port15" scoped="" ref="0x7f02a4285a30"/></from>
      <to><interface-ref name="Port15" scoped="" ref="0x7f02a4270020"/></to>
    </wire>
    <wire loc="83:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port27" scoped="" ref="0x7f02a427abc0"/></from>
      <to><interface-ref name="Port27" scoped="" ref="0x7f02a4266020"/></to>
    </wire>
    <wire loc="78:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port22" scoped="" ref="0x7f02a4280a30"/></from>
      <to><interface-ref name="Port22" scoped="" ref="0x7f02a426b020"/></to>
    </wire>
    <wire loc="69:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port13" scoped="" ref="0x7f02a4287a30"/></from>
      <to><interface-ref name="Port13" scoped="" ref="0x7f02a4272020"/></to>
    </wire>
    <wire loc="81:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port25" scoped="" ref="0x7f02a427cbc0"/></from>
      <to><interface-ref name="Port25" scoped="" ref="0x7f02a4268060"/></to>
    </wire>
    <wire loc="72:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port16" scoped="" ref="0x7f02a4284a30"/></from>
      <to><interface-ref name="Port16" scoped="" ref="0x7f02a426f020"/></to>
    </wire>
    <wire loc="76:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port20" scoped="" ref="0x7f02a4282a30"/></from>
      <to><interface-ref name="Port20" scoped="" ref="0x7f02a426d020"/></to>
    </wire>
    <wire loc="67:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port11" scoped="" ref="0x7f02a428da30"/></from>
      <to><interface-ref name="Port11" scoped="" ref="0x7f02a4274140"/></to>
    </wire>
    <wire loc="79:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port23" scoped="" ref="0x7f02a427ea30"/></from>
      <to><interface-ref name="Port23" scoped="" ref="0x7f02a426a020"/></to>
    </wire>
    <wire loc="131:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7f02a3d3c160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f02a413e510"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f02a3d30880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f02a41406f0"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7f02a3d280a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f02a41406f0"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7f02a3d2f0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f02a41406f0"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7f02a3d1c500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f02a41418c0"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="188:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f02a3d1e500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f02a41418c0"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7f02a3d3b490"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f02a413e510"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7f02a3d24880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f02a41406f0"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f02a3d1f500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f02a41418c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7f02a3d2a880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f02a41406f0"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7f02a3d2b0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f02a41406f0"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f02a3d40a90"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f02a4143680"/></to>
    </wire>
    <wire loc="56:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f02a4143680"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f02a413d930"/></to>
    </wire>
    <wire loc="138:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7f02a3d39e00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f02a413e510"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7f02a3d38490"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f02a413e510"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f02a3d23c80"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f02a41406f0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7f02a3d38be0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f02a413e510"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f02a3d1fce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f02a41418c0"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7f02a3d240a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f02a41406f0"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7f02a3d33670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f02a41406f0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7f02a3d250a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f02a41406f0"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7f02a3d28880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f02a41406f0"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7f02a3d25880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f02a41406f0"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7f02a3d1dce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f02a41418c0"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="189:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f02a3d1ece0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f02a41418c0"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7f02a3d2b880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f02a41406f0"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7f02a3d260a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f02a41406f0"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7f02a3d21ce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f02a41418c0"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7f02a3d2e880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f02a41406f0"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7f02a3d1cce0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f02a4142630"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f02a3d3f480"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f02a413e510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7f02a3d36670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f02a41406f0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7f02a3d32670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f02a41406f0"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7f02a3d290a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f02a41406f0"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7f02a3d29880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f02a41406f0"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f02a3d300a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f02a41406f0"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7f02a3d372f0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f02a413e510"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7f02a3d36020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f02a413e510"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7f02a3d397b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f02a413e510"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f02a3d22500"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f02a41406f0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7f02a3d1d500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f02a41418c0"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7f02a3d2a0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f02a41406f0"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7f02a3d26880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f02a41406f0"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7f02a3d3ce00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f02a413e510"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7f02a3d2c0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f02a41406f0"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7f02a3d37940"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f02a413e510"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7f02a3d2c880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f02a41406f0"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7f02a3d230a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f02a41406f0"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7f02a3d1b9b0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f02a4142630"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Fifo" scoped="" ref="0x7f02a4142630"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f02a4139bb0"/></to>
    </wire>
    <wire loc="53:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Ram" scoped="" ref="0x7f02a41418c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f02a4137020"/></to>
    </wire>
    <wire loc="54:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Reg" scoped="" ref="0x7f02a41406f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f02a4137db0"/></to>
    </wire>
    <wire loc="51:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f02a4146960"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f02a413a810"/></to>
    </wire>
    <wire loc="55:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Strobe" scoped="" ref="0x7f02a413e510"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f02a4135ba0"/></to>
    </wire>
    <wire loc="59:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="WorkingState" scoped="" ref="0x7f02a4131020"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f02a40c9770"/></to>
    </wire>
    <wire loc="74:/home/hades/tinyos-new/tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7f02a40c9770"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f02a40c4280"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="62:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7f02a4134400"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f02a40a7c40"/></to>
    </wire>
    <wire loc="52:/home/hades/tinyos-new/tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f02a40a7c40"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f02a2d95e70"/></to>
    </wire>
    <wire loc="63:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7f02a4132080"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7f02a40a68f0"/></to>
    </wire>
    <wire loc="53:/home/hades/tinyos-new/tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7f02a40a68f0"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7f02a2d922c0"/></to>
    </wire>
    <wire loc="64:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7f02a4129680"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7f02a3d67020"/></to>
    </wire>
    <wire loc="54:/home/hades/tinyos-new/tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7f02a3d67020"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7f02a2d91440"/></to>
    </wire>
    <wire loc="67:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f02a4131df0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f02a481a020"/></to>
    </wire>
    <wire loc="88:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <from><interface-ref name="grant" scoped="" ref="0x7f02a4124120"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f02a4fd54f0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/home/hades/tinyos-new/tos/system/StateImplC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7f02a40c4280"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f02a40c0b70"/></to>
    </wire>
    <wire loc="110:/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7f02a2d91440"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7f02a403e510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="106:/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7f02a2d922c0"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7f02a4042dd0"/></to>
    </wire>
    <wire loc="105:/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f02a2d95e70"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f02a4047a30"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="114:/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f02a2d93af0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f02a2d895d0"/></to>
    </wire>
    <wire loc="64:/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f02a2d895d0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f02a3eca8a0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7f02a4042dd0"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7f02a3fc6440"/></to>
    </wire>
    <wire loc="108:/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x7f02a2d928d0"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x7f02a4041480"/></to>
    </wire>
    <wire loc="92:/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x7f02a4041480"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x7f02a3fc6a50"/></to>
    </wire>
    <wire loc="111:/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7f02a403c600"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7f02a2d91be0"/></to>
    </wire>
    <wire loc="115:/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f02a2d7ba80"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f02a40425e0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="116:/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x7f02a403d370"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f02a2d8a860"/></to>
    </wire>
    <wire loc="63:/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f02a2d8a860"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f02a3ecb5c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="117:/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x7f02a40376a0"/></from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f02a2d82020"/></to>
    </wire>
    <wire loc="67:/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f02a2d82020"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7f02a3ecfa90"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="89:/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f02a40425e0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f02a3fc7c40"/></to>
    </wire>
    <wire loc="93:/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7f02a403e510"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7f02a3fc4700"/></to>
    </wire>
    <wire loc="88:/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f02a4047a30"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f02a3fc8e80"/></to>
    </wire>
    <wire loc="90:/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7f02a3fc3e00"/></from>
      <to><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7f02a403c600"/></to>
    </wire>
    <wire loc="94:/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x7f02a3fc3060"/></from>
      <to><interface-ref name="UsartResource" scoped="" ref="0x7f02a403d370"/></to>
    </wire>
    <wire loc="95:/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x7f02a3fbede0"/></from>
      <to><interface-ref name="UsartInterrupts" scoped="" ref="0x7f02a40376a0"/></to>
    </wire>
    <wire loc="98:/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Usart" scoped="" ref="0x7f02a3fc2490"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f02a3fb6870"/></to>
    </wire>
    <wire loc="85:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f02a3fb6870"/></from>
      <to><interface-ref name="Usart" scoped="" ref="0x7f02a3fa8060"/></to>
    </wire>
    <wire loc="101:/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f02a3fbd5a0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f02a481a020"/></to>
    </wire>
    <wire loc="102:/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <from><interface-ref name="signalDone_task" scoped="" ref="0x7f02a3fbcc50"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f02a4fd54f0"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7f02a3fac980"/></from>
      <to><interface-ref name="I2CInterrupts" scoped="" ref="0x7f02a3fa3750"/></to>
    </wire>
    <wire loc="86:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f02a3faf3b0"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7f02a3fa4dc0"/></to>
    </wire>
    <wire loc="90:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="SIMO" scoped="" ref="0x7f02a3f75700"/></from>
      <to><interface-ref name="SIMO0" scoped="" ref="0x7f02a477bcc0"/></to>
    </wire>
    <wire loc="91:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="SOMI" scoped="" ref="0x7f02a3f73670"/></from>
      <to><interface-ref name="SOMI0" scoped="" ref="0x7f02a4777cc0"/></to>
    </wire>
    <wire loc="92:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="UCLK" scoped="" ref="0x7f02a3f71670"/></from>
      <to><interface-ref name="UCLK0" scoped="" ref="0x7f02a4775cc0"/></to>
    </wire>
    <wire loc="93:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="URXD" scoped="" ref="0x7f02a3f6f670"/></from>
      <to><interface-ref name="URXD0" scoped="" ref="0x7f02a476fcc0"/></to>
    </wire>
    <wire loc="94:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="UTXD" scoped="" ref="0x7f02a3f6d670"/></from>
      <to><interface-ref name="UTXD0" scoped="" ref="0x7f02a4771cc0"/></to>
    </wire>
    <wire loc="14:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="HplI2C" scoped="" ref="0x7f02a3f7a5b0"/></from>
      <to><interface-ref name="HplI2C" scoped="" ref="0x7f02a3e24430"/></to>
    </wire>
    <wire loc="68:/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7f02a2d827c0"/></from>
      <to><interface-ref name="I2CInterrupts" scoped="" ref="0x7f02a3ecc9a0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430I2C" scoped="" ref="0x7f02a2d82dd0"/></from>
      <to><interface-ref name="HplMsp430I2C" scoped="" ref="0x7f02a3e30880"/></to>
    </wire>
    <wire loc="11:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="HplMsp430I2C" scoped="" ref="0x7f02a3e30880"/></from>
      <to><interface-ref name="HplI2C" scoped="" ref="0x7f02a3e24430"/></to>
    </wire>
    <wire loc="71:/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f02a2d875a0"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f02a3fb6870"/></to>
    </wire>
    <wire loc="66:/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f02a2d89d70"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f02a3ec8130"/></to>
    </wire>
    <wire loc="58:/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f02a3ec8130"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f02a3e37060"/></to>
    </wire>
    <wire loc="65:/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f02a3ec7020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f02a2d7ba80"/></to>
    </wire>
    <wire loc="56:/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f02a3eca8a0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f02a3e39bf0"/></to>
    </wire>
    <wire loc="106:/home/hades/tinyos-new/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f02a3e39bf0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f02a2d08020"/></to>
    </wire>
    <wire loc="51:/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="Interrupts" scoped="" ref="0x7f02a3ecfa90"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7f02a3ec55c0"/></to>
    </wire>
    <wire loc="55:/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f02a3ecb5c0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f02a3e3ae60"/></to>
    </wire>
    <wire loc="105:/home/hades/tinyos-new/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f02a3e3ae60"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f02a2d09270"/></to>
    </wire>
    <wire loc="52:/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="I2CInterrupts" scoped="" ref="0x7f02a3ecc9a0"/></from>
      <to><interface-ref name="I2CInterrupts" scoped="" ref="0x7f02a3eb4020"/></to>
    </wire>
    <wire loc="108:/home/hades/tinyos-new/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f02a3e37060"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f02a2d07400"/></to>
    </wire>
    <wire loc="57:/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f02a3e37930"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f02a3ec7020"/></to>
    </wire>
    <wire loc="59:/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f02a3eb34b0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f02a3e37060"/></to>
    </wire>
    <wire loc="62:/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="RawInterrupts" scoped="" ref="0x7f02a3eb4690"/></from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f02a3faf3b0"/></to>
    </wire>
    <wire loc="63:/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="RawI2CInterrupts" scoped="" ref="0x7f02a3eb4e70"/></from>
      <to><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7f02a3fac980"/></to>
    </wire>
    <wire loc="107:/home/hades/tinyos-new/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f02a3e38400"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f02a2d087a0"/></to>
    </wire>
    <wire loc="109:/home/hades/tinyos-new/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f02a2d07cf0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f02a3e37930"/></to>
    </wire>
    <wire loc="111:/home/hades/tinyos-new/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7f02a2d06500"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7f02a2d0c0a0"/></to>
    </wire>
    <wire loc="75:/home/hades/tinyos-new/tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7f02a2d047a0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f02a4fd54f0"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="15:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="HplUsart" scoped="" ref="0x7f02a3e1c250"/></from>
      <to><interface-ref name="Usart" scoped="" ref="0x7f02a3fa8060"/></to>
    </wire>
    <wire loc="18:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="SIMO" scoped="" ref="0x7f02a3e18d40"/></from>
      <to><interface-ref name="SIMO0" scoped="" ref="0x7f02a477bcc0"/></to>
    </wire>
    <wire loc="19:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="UCLK" scoped="" ref="0x7f02a3e16cb0"/></from>
      <to><interface-ref name="UCLK0" scoped="" ref="0x7f02a4775cc0"/></to>
    </wire>
    <wire loc="153:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7f02a3d02c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f02a41406f0"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7f02a3d0cda0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f02a413e510"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7f02a3d05b50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f02a41406f0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f02a3cff670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f02a41406f0"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7f02a3cf8e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f02a41406f0"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7f02a3cffe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f02a41406f0"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7f02a3ceb2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f02a41418c0"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="188:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f02a3cee2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f02a41418c0"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7f02a3d0a120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f02a413e510"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7f02a3cf4670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f02a41406f0"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f02a3cef2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f02a41418c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7f02a3d04c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f02a41406f0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f02a3d03c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f02a41406f0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7f02a3cf9670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f02a41406f0"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7f02a3cfce50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f02a41406f0"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7f02a3cfe670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f02a41406f0"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f02a3d0e760"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f02a4143680"/></to>
    </wire>
    <wire loc="138:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7f02a3d09aa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f02a413e510"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7f02a3d08120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f02a413e510"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f02a3cf2a70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f02a41406f0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7f02a3d08870"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f02a413e510"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f02a3cefad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f02a41418c0"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7f02a3d0adc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f02a413e510"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7f02a3cf5e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f02a41406f0"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7f02a3d03480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f02a41406f0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f02a3d04480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f02a41406f0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7f02a3d0c750"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f02a413e510"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7f02a3cf6e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f02a41406f0"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7f02a3cf7670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f02a41406f0"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7f02a3cf5670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f02a41406f0"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7f02a3cedad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f02a41418c0"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="189:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f02a3ceead0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f02a41418c0"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7f02a3cfb670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f02a41406f0"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7f02a3cf7e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f02a41406f0"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7f02a3cf0ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f02a41418c0"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7f02a3cfd670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f02a41406f0"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7f02a3cebad0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f02a4142630"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f02a3d0c100"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f02a413e510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7f02a3d05370"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f02a41406f0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7f02a3d02480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f02a41406f0"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7f02a3cf9e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f02a41406f0"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7f02a3cfee50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f02a41406f0"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7f02a3cf8670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f02a41406f0"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7f02a3d00670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f02a41406f0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7f02a3d0b450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f02a413e510"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f02a3d00e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f02a41406f0"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7f02a3d06020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f02a413e510"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7f02a3d06cc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f02a413e510"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7f02a3cf02f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f02a41418c0"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7f02a3cf1ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f02a41418c0"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7f02a3d09450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f02a413e510"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f02a3cf12f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f02a41406f0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7f02a3ced2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f02a41418c0"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7f02a3cfbe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f02a41406f0"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7f02a3cf6670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f02a41406f0"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7f02a3d0baa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f02a413e510"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7f02a3d0a770"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f02a413e510"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7f02a3cfde50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f02a41406f0"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7f02a3d06670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f02a413e510"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7f02a3cfc670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f02a41406f0"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7f02a3cf4e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f02a41406f0"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7f02a3cea7a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f02a4142630"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="153:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7f02a3cd5c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f02a41406f0"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7f02a3ce0da0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f02a413e510"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7f02a3cd9b50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f02a41406f0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f02a3cd3670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f02a41406f0"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7f02a3ccce50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f02a41406f0"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7f02a3cd3e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f02a41406f0"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7f02a3cbf2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f02a41418c0"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="188:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f02a3cc12f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f02a41418c0"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7f02a3cdd120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f02a413e510"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7f02a3cc7670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f02a41406f0"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f02a3cc22f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f02a41418c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7f02a3cd7c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f02a41406f0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f02a3cd6c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f02a41406f0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7f02a3ccd670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f02a41406f0"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7f02a3ccfe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f02a41406f0"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7f02a3cd2670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f02a41406f0"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f02a3ce1760"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f02a4143680"/></to>
    </wire>
    <wire loc="138:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7f02a3cdcaa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f02a413e510"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7f02a3cdb120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f02a413e510"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f02a3cc6a70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f02a41406f0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7f02a3cdb870"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f02a413e510"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f02a3cc2ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f02a41418c0"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7f02a3cdddc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f02a413e510"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7f02a3cc8e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f02a41406f0"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7f02a3cd6480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f02a41406f0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f02a3cd7480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f02a41406f0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7f02a3ce0750"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f02a413e510"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7f02a3cc9e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f02a41406f0"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7f02a3ccb670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f02a41406f0"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7f02a3cc8670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f02a41406f0"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7f02a3cc0ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f02a41418c0"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="189:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f02a3cc1ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f02a41418c0"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7f02a3cce670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f02a41406f0"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7f02a3ccbe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f02a41406f0"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7f02a3cc4ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f02a41418c0"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7f02a3cd0670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f02a41406f0"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7f02a3cbfad0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f02a4142630"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f02a3ce0100"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f02a413e510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7f02a3cd9370"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f02a41406f0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7f02a3cd5480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f02a41406f0"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7f02a3ccde50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f02a41406f0"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7f02a3cd2e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f02a41406f0"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7f02a3ccc670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f02a41406f0"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7f02a3cd4670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f02a41406f0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7f02a3cdf450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f02a413e510"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f02a3cd4e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f02a41406f0"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7f02a3cda020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f02a413e510"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7f02a3cdacc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f02a413e510"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7f02a3cc42f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f02a41418c0"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7f02a3cc5ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f02a41418c0"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7f02a3cdc450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f02a413e510"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f02a3cc52f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f02a41406f0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7f02a3cc02f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f02a41418c0"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7f02a3ccee50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f02a41406f0"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7f02a3cc9670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f02a41406f0"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7f02a3cdfaa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f02a413e510"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7f02a3cdd770"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f02a413e510"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7f02a3cd0e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f02a41406f0"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7f02a3cda670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f02a413e510"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7f02a3ccf670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f02a41406f0"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7f02a3cc7e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f02a41406f0"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7f02a3cbe7a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f02a4142630"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="21:/home/hades/tinyos-new/tos/chips/ds2411/LocalIeeeEui64C.nc">
      <from><interface-ref name="ReadId48" scoped="" ref="0x7f02a3c978c0"/></from>
      <to><interface-ref name="ReadId48" scoped="" ref="0x7f02a3c8c020"/></to>
    </wire>
    <wire loc="20:/home/hades/tinyos-new/tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="ReadId48" scoped="" ref="0x7f02a3c8c020"/></from>
      <to><interface-ref name="ReadId48" scoped="" ref="0x7f02a3c87210"/></to>
    </wire>
    <wire loc="16:/home/hades/tinyos-new/tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="OneWire" scoped="" ref="0x7f02a3c83cb0"/></from>
      <to><interface-ref name="OneWire" scoped="" ref="0x7f02a3c72020"/></to>
    </wire>
    <wire loc="21:/home/hades/tinyos-new/tos/lib/onewire/OneWireMasterC.nc">
      <from><interface-ref name="OneWire" scoped="" ref="0x7f02a3c72020"/></from>
      <to><interface-ref name="OneWire" scoped="" ref="0x7f02a3c70490"/></to>
    </wire>
    <wire loc="17:/home/hades/tinyos-new/tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="PowerControl" scoped="" ref="0x7f02a3c865b0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f02a3c24a20"/></to>
    </wire>
    <wire loc="18:/home/hades/tinyos-new/tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="Pin" scoped="" ref="0x7f02a3c728c0"/></from>
      <to><interface-ref name="Gpio" scoped="" ref="0x7f02a3c735a0"/></to>
    </wire>
    <wire loc="11:/home/hades/tinyos-new/tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <from><interface-ref name="Gpio" scoped="" ref="0x7f02a3c735a0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f02a3c229e0"/></to>
    </wire>
    <wire loc="18:/home/hades/tinyos-new/tos/lib/onewire/OneWireMasterC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x7f02a3c68b40"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x7f02a3c47020"/></to>
    </wire>
    <wire loc="49:/home/hades/tinyos-new/tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x7f02a3c47020"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x7f02a3c45d20"/></to>
    </wire>
    <wire loc="19:/home/hades/tinyos-new/tos/lib/onewire/OneWireMasterC.nc">
      <from><interface-ref name="Pin" scoped="" ref="0x7f02a3c70d30"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x7f02a3c728c0"/></to>
    </wire>
    <wire loc="50:/home/hades/tinyos-new/tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f02a3c35260"/></from>
      <to><interface-ref name="Msp430CounterMicro" scoped="" ref="0x7f02a3c31890"/></to>
    </wire>
    <wire loc="54:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430CounterMicroC.nc">
      <from><interface-ref name="Msp430CounterMicro" scoped="" ref="0x7f02a3c31890"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f02a3c2a060"/></to>
    </wire>
    <wire loc="55:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430CounterMicroC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f02a3c28190"/></from>
      <to><interface-ref name="TimerA" scoped="" ref="0x7f02a4a587b0"/></to>
    </wire>
    <wire loc="9:/home/hades/tinyos-new/tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f02a3c20c50"/></from>
      <to><interface-ref name="Port24" scoped="" ref="0x7f02a47c7810"/></to>
    </wire>
    <wire loc="58:/home/hades/tinyos-new/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="EnergyIndicator" scoped="" ref="0x7f02a3c049f0"/></from>
      <to><interface-ref name="EnergyIndicator" scoped="" ref="0x7f02a3bf9900"/></to>
    </wire>
    <wire loc="59:/home/hades/tinyos-new/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="ByteIndicator" scoped="" ref="0x7f02a3c06190"/></from>
      <to><interface-ref name="ByteIndicator" scoped="" ref="0x7f02a3bf80f0"/></to>
    </wire>
    <wire loc="66:/home/hades/tinyos-new/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="BackoffTimer" scoped="" ref="0x7f02a3bf8ae0"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x7f02a43f3220"/></to>
    </wire>
    <wire loc="69:/home/hades/tinyos-new/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CCA" scoped="" ref="0x7f02a3bec500"/></from>
      <to><interface-ref name="CCA" scoped="" ref="0x7f02a43f4e40"/></to>
    </wire>
    <wire loc="70:/home/hades/tinyos-new/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7f02a3be5820"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x7f02a42ee060"/></to>
    </wire>
    <wire loc="71:/home/hades/tinyos-new/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SFD" scoped="" ref="0x7f02a3be4b40"/></from>
      <to><interface-ref name="SFD" scoped="" ref="0x7f02a42eacd0"/></to>
    </wire>
    <wire loc="74:/home/hades/tinyos-new/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CaptureSFD" scoped="" ref="0x7f02a3bed880"/></from>
      <to><interface-ref name="CaptureSFD" scoped="" ref="0x7f02a42b2150"/></to>
    </wire>
    <wire loc="77:/home/hades/tinyos-new/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7f02a3be2020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f02a3b47c30"/></to>
    </wire>
    <wire loc="126:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f02a3b47c30"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f02a4146960"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:/home/hades/tinyos-new/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f02a3be2d10"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f02a3b468f0"/></to>
    </wire>
    <wire loc="125:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f02a3b468f0"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f02a4143680"/></to>
    </wire>
    <wire loc="79:/home/hades/tinyos-new/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f02a3bdf6d0"/></from>
      <to><interface-ref name="SNOP" scoped="" ref="0x7f02a3b452f0"/></to>
    </wire>
    <wire loc="129:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f02a3b452f0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f02a413e510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:/home/hades/tinyos-new/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7f02a3bdfde0"/></from>
      <to><interface-ref name="STXON" scoped="" ref="0x7f02a3b44cc0"/></to>
    </wire>
    <wire loc="133:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7f02a3b44cc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f02a413e510"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="81:/home/hades/tinyos-new/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7f02a3bde530"/></from>
      <to><interface-ref name="STXONCCA" scoped="" ref="0x7f02a3b42370"/></to>
    </wire>
    <wire loc="134:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7f02a3b42370"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f02a413e510"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/home/hades/tinyos-new/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7f02a3bdec60"/></from>
      <to><interface-ref name="SFLUSHTX" scoped="" ref="0x7f02a3b41d00"/></to>
    </wire>
    <wire loc="138:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7f02a3b41d00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f02a413e510"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:/home/hades/tinyos-new/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f02a3be0e00"/></from>
      <to><interface-ref name="TXCTRL" scoped="" ref="0x7f02a3b3bc60"/></to>
    </wire>
    <wire loc="151:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f02a3b3bc60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f02a41406f0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:/home/hades/tinyos-new/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7f02a3be1780"/></from>
      <to><interface-ref name="TXFIFO" scoped="" ref="0x7f02a3b237a0"/></to>
    </wire>
    <wire loc="196:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7f02a3b237a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f02a4142630"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:/home/hades/tinyos-new/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f02a3be0550"/></from>
      <to><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f02a3b272f0"/></to>
    </wire>
    <wire loc="186:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f02a3b272f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f02a41418c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:/home/hades/tinyos-new/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f02a3bdd3e0"/></from>
      <to><interface-ref name="MDMCTRL1" scoped="" ref="0x7f02a3b3c480"/></to>
    </wire>
    <wire loc="148:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f02a3b3c480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f02a41406f0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:/home/hades/tinyos-new/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f02a3bdc5e0"/></from>
      <to><interface-ref name="SECCTRL0" scoped="" ref="0x7f02a3b39e50"/></to>
    </wire>
    <wire loc="155:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f02a3b39e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f02a41406f0"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:/home/hades/tinyos-new/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f02a3bdb020"/></from>
      <to><interface-ref name="SECCTRL1" scoped="" ref="0x7f02a3b38670"/></to>
    </wire>
    <wire loc="156:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f02a3b38670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f02a41406f0"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="89:/home/hades/tinyos-new/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7f02a3bdde80"/></from>
      <to><interface-ref name="STXENC" scoped="" ref="0x7f02a3b3f7b0"/></to>
    </wire>
    <wire loc="142:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7f02a3b3f7b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f02a413e510"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="90:/home/hades/tinyos-new/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7f02a3bda9c0"/></from>
      <to><interface-ref name="TXNONCE" scoped="" ref="0x7f02a3b25ad0"/></to>
    </wire>
    <wire loc="191:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7f02a3b25ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f02a41418c0"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:/home/hades/tinyos-new/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f02a3bdb890"/></from>
      <to><interface-ref name="KEY0" scoped="" ref="0x7f02a3b262f0"/></to>
    </wire>
    <wire loc="188:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f02a3b262f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f02a41418c0"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="92:/home/hades/tinyos-new/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f02a3bda130"/></from>
      <to><interface-ref name="KEY1" scoped="" ref="0x7f02a3b26ad0"/></to>
    </wire>
    <wire loc="189:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f02a3b26ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f02a41418c0"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="95:/home/hades/tinyos-new/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Receive" scoped="" ref="0x7f02a3bd4d40"/></from>
      <to><interface-ref name="CC2420Receive" scoped="" ref="0x7f02a3b17e00"/></to>
    </wire>
    <wire loc="62:/home/hades/tinyos-new/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Receive" scoped="" ref="0x7f02a3b17e00"/></from>
      <to><interface-ref name="CC2420Receive" scoped="" ref="0x7f02a3b0e550"/></to>
    </wire>
    <wire loc="98:/home/hades/tinyos-new/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f02a3bf5d00"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f02a3a90670"/></to>
    </wire>
    <wire loc="99:/home/hades/tinyos-new/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f02a3bf3bb0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f02a3a8b0c0"/></to>
    </wire>
    <wire loc="100:/home/hades/tinyos-new/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x7f02a3bf2950"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f02a3a8a550"/></to>
    </wire>
    <wire loc="101:/home/hades/tinyos-new/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f02a3be7be0"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f02a3a82480"/></to>
    </wire>
    <wire loc="61:/home/hades/tinyos-new/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f02a3a82480"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f02a3a748b0"/></to>
    </wire>
    <wire loc="104:/home/hades/tinyos-new/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f02a3bd86c0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f02a481a020"/></to>
    </wire>
    <wire loc="153:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7f02a3b3ac60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f02a41406f0"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7f02a3b44020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f02a413e510"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7f02a3b3ec70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f02a41406f0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7f02a3b31e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f02a41406f0"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7f02a3b38e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f02a41406f0"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7f02a3b242f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f02a41418c0"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7f02a3b2c670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f02a41406f0"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7f02a3b3cc60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f02a41406f0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7f02a3b32670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f02a41406f0"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7f02a3b34e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f02a41406f0"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7f02a3b37670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f02a41406f0"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7f02a3b40370"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f02a413e510"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f02a3b2ba70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f02a41406f0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7f02a3b40ac0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f02a413e510"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f02a3b27ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f02a41418c0"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7f02a3b41060"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f02a413e510"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7f02a3b2de50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f02a41406f0"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7f02a3b3b480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f02a41406f0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7f02a3b45940"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f02a413e510"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7f02a3b2ee50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f02a41406f0"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7f02a3b30670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f02a41406f0"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7f02a3b2d670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f02a41406f0"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7f02a3b33670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f02a41406f0"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7f02a3b30e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f02a41406f0"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7f02a3b29ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f02a41418c0"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7f02a3b35670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f02a41406f0"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7f02a3b24ad0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f02a4142630"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7f02a3b3e490"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f02a41406f0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7f02a3b3a480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f02a41406f0"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7f02a3b32e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f02a41406f0"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7f02a3b37e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f02a41406f0"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7f02a3b31670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f02a41406f0"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7f02a3b39670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f02a41406f0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7f02a3b44670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f02a413e510"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7f02a3b3f160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f02a413e510"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7f02a3b3fe00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f02a413e510"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7f02a3b292f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f02a41418c0"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7f02a3b2aad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f02a41418c0"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7f02a3b416b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f02a413e510"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f02a3b2a2f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f02a41406f0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7f02a3b252f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f02a41418c0"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7f02a3b33e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f02a41406f0"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7f02a3b2e670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f02a41406f0"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7f02a3b429c0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f02a413e510"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7f02a3b35e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f02a41406f0"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7f02a3b34670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f02a41406f0"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7f02a3b2ce50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f02a41406f0"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:/home/hades/tinyos-new/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="PacketIndicator" scoped="" ref="0x7f02a3b12020"/></from>
      <to><interface-ref name="PacketIndicator" scoped="" ref="0x7f02a3b0d7c0"/></to>
    </wire>
    <wire loc="59:/home/hades/tinyos-new/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f02a3af8150"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f02a481a020"/></to>
    </wire>
    <wire loc="68:/home/hades/tinyos-new/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7f02a3b0c020"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x7f02a42ee060"/></to>
    </wire>
    <wire loc="69:/home/hades/tinyos-new/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="FIFO" scoped="" ref="0x7f02a3b0b380"/></from>
      <to><interface-ref name="FIFO" scoped="" ref="0x7f02a42ed380"/></to>
    </wire>
    <wire loc="70:/home/hades/tinyos-new/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="FIFOP" scoped="" ref="0x7f02a3b0a6b0"/></from>
      <to><interface-ref name="FIFOP" scoped="" ref="0x7f02a42ec6b0"/></to>
    </wire>
    <wire loc="71:/home/hades/tinyos-new/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="InterruptFIFOP" scoped="" ref="0x7f02a3b09a50"/></from>
      <to><interface-ref name="InterruptFIFOP" scoped="" ref="0x7f02a42b1a20"/></to>
    </wire>
    <wire loc="72:/home/hades/tinyos-new/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7f02a3b086e0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f02a3924d00"/></to>
    </wire>
    <wire loc="126:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f02a3924d00"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f02a4146960"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:/home/hades/tinyos-new/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7f02a3b07530"/></from>
      <to><interface-ref name="RXFIFO" scoped="" ref="0x7f02a3901ad0"/></to>
    </wire>
    <wire loc="195:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7f02a3901ad0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f02a4142630"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:/home/hades/tinyos-new/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7f02a3b06ad0"/></from>
      <to><interface-ref name="SFLUSHRX" scoped="" ref="0x7f02a391e6b0"/></to>
    </wire>
    <wire loc="137:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7f02a391e6b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f02a413e510"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/home/hades/tinyos-new/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7f02a3b063a0"/></from>
      <to><interface-ref name="SACK" scoped="" ref="0x7f02a391d370"/></to>
    </wire>
    <wire loc="139:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7f02a391d370"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f02a413e510"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:/home/hades/tinyos-new/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f02a3b05330"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f02a3a90670"/></to>
    </wire>
    <wire loc="77:/home/hades/tinyos-new/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f02a3b041e0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f02a3a8b0c0"/></to>
    </wire>
    <wire loc="78:/home/hades/tinyos-new/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x7f02a3b02d70"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f02a3a8a550"/></to>
    </wire>
    <wire loc="79:/home/hades/tinyos-new/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x7f02a3b04b90"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x7f02a44b0dc0"/></to>
    </wire>
    <wire loc="81:/home/hades/tinyos-new/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f02a3afd3e0"/></from>
      <to><interface-ref name="SECCTRL0" scoped="" ref="0x7f02a3916e50"/></to>
    </wire>
    <wire loc="155:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f02a3916e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f02a41406f0"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/home/hades/tinyos-new/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f02a3afdcb0"/></from>
      <to><interface-ref name="SECCTRL1" scoped="" ref="0x7f02a3914670"/></to>
    </wire>
    <wire loc="156:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f02a3914670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f02a41406f0"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:/home/hades/tinyos-new/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7f02a3afeb10"/></from>
      <to><interface-ref name="SRXDEC" scoped="" ref="0x7f02a391c160"/></to>
    </wire>
    <wire loc="141:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7f02a391c160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f02a413e510"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:/home/hades/tinyos-new/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7f02a3afa6d0"/></from>
      <to><interface-ref name="RXNONCE" scoped="" ref="0x7f02a39012f0"/></to>
    </wire>
    <wire loc="192:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7f02a39012f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f02a41418c0"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:/home/hades/tinyos-new/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f02a3afc590"/></from>
      <to><interface-ref name="KEY0" scoped="" ref="0x7f02a39032f0"/></to>
    </wire>
    <wire loc="188:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f02a39032f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f02a41418c0"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:/home/hades/tinyos-new/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f02a3afce00"/></from>
      <to><interface-ref name="KEY1" scoped="" ref="0x7f02a3903ad0"/></to>
    </wire>
    <wire loc="189:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f02a3903ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f02a41418c0"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:/home/hades/tinyos-new/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f02a3af9020"/></from>
      <to><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f02a3904ad0"/></to>
    </wire>
    <wire loc="187:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f02a3904ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f02a41418c0"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:/home/hades/tinyos-new/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f02a3af98b0"/></from>
      <to><interface-ref name="SNOP" scoped="" ref="0x7f02a3922300"/></to>
    </wire>
    <wire loc="129:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f02a3922300"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f02a413e510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:/home/hades/tinyos-new/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <from><interface-ref name="receiveDone_task" scoped="" ref="0x7f02a3aed9d0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f02a4fd54f0"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:/home/hades/tinyos-new/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f02a3a157c0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f02a4379020"/></to>
    </wire>
    <wire loc="65:/home/hades/tinyos-new/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LocalTime32khz" scoped="" ref="0x7f02a3a6e820"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7f02a3a1d4e0"/></to>
    </wire>
    <wire loc="69:/home/hades/tinyos-new/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LocalTimeMilli" scoped="" ref="0x7f02a3a70b80"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7f02a39ffb80"/></to>
    </wire>
    <wire loc="59:/home/hades/tinyos-new/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x7f02a39ffb80"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7f02a39462b0"/></to>
    </wire>
    <wire loc="58:/home/hades/tinyos-new/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x7f02a3a0d7d0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f02a3955150"/></to>
    </wire>
    <wire loc="57:/home/hades/tinyos-new/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f02a3a0e130"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f02a39d02a0"/></to>
    </wire>
    <wire loc="52:/home/hades/tinyos-new/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f02a39d02a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f02a2c029d0"/></to>
    </wire>
    <wire loc="61:/home/hades/tinyos-new/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x7f02a394f640"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f02a39a4830"/></to>
    </wire>
    <wire loc="62:/home/hades/tinyos-new/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f02a399fcd0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f02a39d0af0"/></to>
    </wire>
    <wire loc="53:/home/hades/tinyos-new/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f02a39d0af0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f02a2bfb5f0"/></to>
    </wire>
    <wire loc="63:/home/hades/tinyos-new/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f02a3945690"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f02a39ec080"/></to>
    </wire>
    <wire loc="50:/home/hades/tinyos-new/tos/chips/msp430/timer/CounterMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f02a39ec080"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f02a39e7cd0"/></to>
    </wire>
    <wire loc="51:/home/hades/tinyos-new/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f02a2c029d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f02a2bc2360"/></to>
    </wire>
    <wire loc="55:/home/hades/tinyos-new/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x7f02a2bf5d20"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f02a2c01260"/></to>
    </wire>
    <wire loc="52:/home/hades/tinyos-new/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f02a2c01260"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f02a2bc2bf0"/></to>
    </wire>
    <wire loc="56:/home/hades/tinyos-new/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f02a2bf79b0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f02a39ec080"/></to>
    </wire>
    <wire loc="54:/home/hades/tinyos-new/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f02a2bbfdd0"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7f02a2bea020"/></to>
    </wire>
    <wire loc="49:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f02a2bea020"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7f02a43cf4d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/home/hades/tinyos-new/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f02a2bbc440"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f02a2be9760"/></to>
    </wire>
    <wire loc="50:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f02a2be9760"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f02a43cc280"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:/home/hades/tinyos-new/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f02a2bbb760"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7f02a2be8a80"/></to>
    </wire>
    <wire loc="51:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f02a2be8a80"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7f02a43cbba0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:/home/hades/tinyos-new/tos/chips/msp430/timer/CounterMilli32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x7f02a39e30f0"/></from>
      <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7f02a4370060"/></to>
    </wire>
    <wire loc="74:/home/hades/tinyos-new/tos/lib/timer/AlarmToTimerC.nc">
      <from><interface-ref name="fired" scoped="" ref="0x7f02a399a020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f02a4fd54f0"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:/home/hades/tinyos-new/tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x7f02a394aa00"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f02a4fd54f0"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:/home/hades/tinyos-new/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f02a393c8c0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f02a39332c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/home/hades/tinyos-new/tos/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x7f02a39332c0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f02a3a0d7d0"/></to>
    </wire>
    <wire loc="153:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7f02a3917c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f02a41406f0"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7f02a3920020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f02a413e510"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7f02a391ac70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f02a41406f0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7f02a390de50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f02a41406f0"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7f02a3914e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f02a41406f0"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7f02a391f370"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f02a413e510"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7f02a3909670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f02a41406f0"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f02a39042f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f02a41418c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7f02a3919c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f02a41406f0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f02a3918c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f02a41406f0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7f02a390f670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f02a41406f0"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7f02a3911e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f02a41406f0"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7f02a3913670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f02a41406f0"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f02a3923970"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f02a4143680"/></to>
    </wire>
    <wire loc="138:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7f02a391ed00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f02a413e510"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f02a3908a70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f02a41406f0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7f02a391dac0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f02a413e510"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7f02a391e060"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f02a413e510"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7f02a390ae50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f02a41406f0"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7f02a3918480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f02a41406f0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f02a3919480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f02a41406f0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7f02a3922950"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f02a413e510"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7f02a390be50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f02a41406f0"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7f02a390c670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f02a41406f0"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7f02a390a670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f02a41406f0"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7f02a3902ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f02a41418c0"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7f02a3910670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f02a41406f0"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7f02a390ce50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f02a41406f0"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7f02a3905ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f02a41418c0"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7f02a3912670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f02a41406f0"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7f02a391a490"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f02a41406f0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7f02a3917480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f02a41406f0"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7f02a390fe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f02a41406f0"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7f02a3913e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f02a41406f0"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7f02a390d670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f02a41406f0"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7f02a3916670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f02a41406f0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7f02a3920670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f02a413e510"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7f02a391ce00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f02a413e510"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7f02a39052f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f02a41418c0"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7f02a3906ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f02a41418c0"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f02a39062f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f02a41406f0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7f02a39022f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f02a41418c0"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7f02a3910e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f02a41406f0"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7f02a390b670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f02a41406f0"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7f02a3920cc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f02a413e510"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7f02a391f9c0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f02a413e510"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7f02a3912e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f02a41406f0"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7f02a391c7b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f02a413e510"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7f02a3911670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f02a41406f0"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7f02a3909e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f02a41406f0"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7f02a38ff7a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f02a4142630"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/home/hades/tinyos-new/tos/system/RandomC.nc">
      <from><interface-ref name="SeedInit" scoped="" ref="0x7f02a38d2920"/></from>
      <to><interface-ref name="SeedInit" scoped="" ref="0x7f02a38ce940"/></to>
    </wire>
    <wire loc="54:/home/hades/tinyos-new/tos/system/RandomC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f02a38d89a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f02a38ce080"/></to>
    </wire>
    <wire loc="56:/home/hades/tinyos-new/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f02a38b1e60"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7f02a38b6020"/></to>
    </wire>
    <wire loc="60:/home/hades/tinyos-new/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7f02a38b0ae0"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f02a38b3690"/></to>
    </wire>
    <wire loc="74:/home/hades/tinyos-new/tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7f02a38b3690"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f02a40c4280"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/home/hades/tinyos-new/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7f02a38af8f0"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7f02a38d4a20"/></to>
    </wire>
    <wire loc="62:/home/hades/tinyos-new/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f02a38ac170"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f02a3a8b0c0"/></to>
    </wire>
    <wire loc="57:/home/hades/tinyos-new/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="DuplicateReceive" scoped="" ref="0x7f02a3895200"/></from>
      <to><interface-ref name="DuplicateReceive" scoped="" ref="0x7f02a3890570"/></to>
    </wire>
    <wire loc="58:/home/hades/tinyos-new/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f02a388f3f0"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7f02a3895950"/></to>
    </wire>
    <wire loc="62:/home/hades/tinyos-new/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f02a388fa70"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f02a3a8b0c0"/></to>
    </wire>
    <wire loc="94:/home/hades/tinyos-new/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f02a3856d70"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7f02a38606b0"/></to>
    </wire>
    <wire loc="95:/home/hades/tinyos-new/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f02a3855b10"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7f02a3860020"/></to>
    </wire>
    <wire loc="100:/home/hades/tinyos-new/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f02a38542f0"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f02a3a90670"/></to>
    </wire>
    <wire loc="101:/home/hades/tinyos-new/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f02a3853170"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f02a3a8b0c0"/></to>
    </wire>
    <wire loc="102:/home/hades/tinyos-new/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7f02a3853b70"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7f02a3806410"/></to>
    </wire>
    <wire loc="184:/home/hades/tinyos-new/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <from><interface-ref name="grantTask" scoped="" ref="0x7f02a3827db0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f02a4fd54f0"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:/home/hades/tinyos-new/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="SendState" scoped="" ref="0x7f02a37f9800"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f02a37f5580"/></to>
    </wire>
    <wire loc="74:/home/hades/tinyos-new/tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7f02a37f5580"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f02a40c4280"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:/home/hades/tinyos-new/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f02a37e11c0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f02a453d020"/></to>
    </wire>
    <wire loc="67:/home/hades/tinyos-new/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f02a36c64e0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f02a36bce10"/></to>
    </wire>
    <wire loc="67:/home/hades/tinyos-new/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f02a37291a0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f02a36cc400"/></to>
    </wire>
    <wire loc="69:/home/hades/tinyos-new/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f02a36c9e60"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f02a36bc7c0"/></to>
    </wire>
    <wire loc="60:/home/hades/tinyos-new/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f02a36c2940"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f02a3729b20"/></to>
    </wire>
    <wire loc="69:/home/hades/tinyos-new/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f02a36ccd90"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f02a36c4020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="70:/home/hades/tinyos-new/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f02a36cba50"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f02a36c54c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="72:/home/hades/tinyos-new/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SerialPacketInfo" scoped="" ref="0x7f02a36c2020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Info" scoped="" ref="0x7f02a33ac8d0"/></to>
    </wire>
    <wire loc="64:/home/hades/tinyos-new/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f02a36c4020"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f02a358a830"/></to>
    </wire>
    <wire loc="65:/home/hades/tinyos-new/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f02a36c54c0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f02a358a110"/></to>
    </wire>
    <wire loc="66:/home/hades/tinyos-new/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="PacketInfo" scoped="" ref="0x7f02a3589760"/></from>
      <to><interface-ref name="SerialPacketInfo" scoped="" ref="0x7f02a36c2020"/></to>
    </wire>
    <wire loc="70:/home/hades/tinyos-new/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f02a36b7750"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f02a36c2940"/></to>
    </wire>
    <wire loc="71:/home/hades/tinyos-new/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f02a3587590"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f02a36c2940"/></to>
    </wire>
    <wire loc="72:/home/hades/tinyos-new/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f02a357dcc0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f02a36c2940"/></to>
    </wire>
    <wire loc="74:/home/hades/tinyos-new/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="ReceiveBytePacket" scoped="" ref="0x7f02a35880e0"/></from>
      <to><interface-ref name="ReceiveBytePacket" scoped="" ref="0x7f02a36af340"/></to>
    </wire>
    <wire loc="75:/home/hades/tinyos-new/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SendBytePacket" scoped="" ref="0x7f02a35889d0"/></from>
      <to><interface-ref name="SendBytePacket" scoped="" ref="0x7f02a36b4e50"/></to>
    </wire>
    <wire loc="77:/home/hades/tinyos-new/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialFrameComm" scoped="" ref="0x7f02a36a9680"/></from>
      <to><interface-ref name="SerialFrameComm" scoped="" ref="0x7f02a3583b70"/></to>
    </wire>
    <wire loc="78:/home/hades/tinyos-new/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialControl" scoped="" ref="0x7f02a36a8020"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f02a3555080"/></to>
    </wire>
    <wire loc="17:/home/hades/tinyos-new/tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7f02a3555080"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f02a33be0c0"/></to>
    </wire>
    <wire loc="80:/home/hades/tinyos-new/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x7f02a3570d20"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x7f02a3555890"/></to>
    </wire>
    <wire loc="13:/home/hades/tinyos-new/tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x7f02a3555890"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x7f02a33c4440"/></to>
    </wire>
    <wire loc="332:/home/hades/tinyos-new/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="stopDoneTask" scoped="" ref="0x7f02a3654e40"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f02a4fd54f0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:/home/hades/tinyos-new/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="RunTx" scoped="" ref="0x7f02a368cd10"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f02a4fd54f0"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="322:/home/hades/tinyos-new/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="startDoneTask" scoped="" ref="0x7f02a3657400"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f02a4fd54f0"/>
      <arguments>
        <value cst="I:15">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="341:/home/hades/tinyos-new/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="defaultSerialFlushTask" scoped="" ref="0x7f02a36500c0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f02a4fd54f0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="275:/home/hades/tinyos-new/tos/lib/serial/SerialDispatcherP.nc">
      <from><interface-ref name="receiveTask" scoped="" ref="0x7f02a3586c50"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f02a4fd54f0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:/home/hades/tinyos-new/tos/lib/serial/SerialDispatcherP.nc">
      <from><interface-ref name="signalSendDone" scoped="" ref="0x7f02a3585480"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f02a4fd54f0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="14:/home/hades/tinyos-new/tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x7f02a3553020"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x7f02a33c3440"/></to>
    </wire>
    <wire loc="61:/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x7f02a33c3440"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x7f02a353f020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="60:/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x7f02a33c4440"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x7f02a3541860"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="18:/home/hades/tinyos-new/tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f02a33c2020"/></from>
      <to><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f02a33be920"/></to>
    </wire>
    <wire loc="19:/home/hades/tinyos-new/tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f02a33bd020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f02a33c6020"/></to>
    </wire>
    <wire loc="59:/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f02a33c6020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f02a35447a0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f02a33c6c70"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f02a2a8ba90"/></to>
    </wire>
    <wire loc="60:/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f02a2a8ba90"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f02a3406510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="62:/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f02a353c450"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f02a33c2020"/></to>
    </wire>
    <wire loc="66:/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f02a2a85be0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f02a3543a30"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="67:/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x7f02a353d1d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f02a2a8ce00"/></to>
    </wire>
    <wire loc="59:/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f02a2a8ce00"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f02a3407280"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="68:/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x7f02a353b1d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f02a2a85440"/></to>
    </wire>
    <wire loc="63:/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f02a2a85440"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7f02a3408510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f02a3543a30"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f02a34d0dc0"/></to>
    </wire>
    <wire loc="59:/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x7f02a353f020"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x7f02a34ce890"/></to>
    </wire>
    <wire loc="58:/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x7f02a3541860"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x7f02a34cf6d0"/></to>
    </wire>
    <wire loc="55:/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f02a35447a0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f02a34d0020"/></to>
    </wire>
    <wire loc="57:/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f02a34cc3e0"/></from>
      <to><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f02a353c450"/></to>
    </wire>
    <wire loc="60:/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x7f02a34cd5b0"/></from>
      <to><interface-ref name="UsartResource" scoped="" ref="0x7f02a353d1d0"/></to>
    </wire>
    <wire loc="61:/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x7f02a34c65b0"/></from>
      <to><interface-ref name="UsartInterrupts" scoped="" ref="0x7f02a353b1d0"/></to>
    </wire>
    <wire loc="64:/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Usart" scoped="" ref="0x7f02a34cca50"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f02a34b7d30"/></to>
    </wire>
    <wire loc="88:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f02a34b7d30"/></from>
      <to><interface-ref name="Usart" scoped="" ref="0x7f02a34af550"/></to>
    </wire>
    <wire loc="67:/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f02a34c5020"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f02a3423110"/></to>
    </wire>
    <wire loc="49:/home/hades/tinyos-new/tos/chips/msp430/timer/Counter32khz16C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f02a3423110"/></from>
      <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7f02a4370060"/></to>
    </wire>
    <wire loc="70:/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f02a34c3120"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f02a481a020"/></to>
    </wire>
    <wire loc="89:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f02a34b3860"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7f02a34aa130"/></to>
    </wire>
    <wire loc="87:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x7f02a34b7500"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x7f02a34b2bd0"/></to>
    </wire>
    <wire loc="91:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="SIMO" scoped="" ref="0x7f02a34aaa00"/></from>
      <to><interface-ref name="SIMO1" scoped="" ref="0x7f02a476bcc0"/></to>
    </wire>
    <wire loc="92:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="SOMI" scoped="" ref="0x7f02a34a8990"/></from>
      <to><interface-ref name="SOMI1" scoped="" ref="0x7f02a4769cc0"/></to>
    </wire>
    <wire loc="93:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="UCLK" scoped="" ref="0x7f02a34a6990"/></from>
      <to><interface-ref name="UCLK1" scoped="" ref="0x7f02a4767cc0"/></to>
    </wire>
    <wire loc="94:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="URXD" scoped="" ref="0x7f02a34a4990"/></from>
      <to><interface-ref name="URXD1" scoped="" ref="0x7f02a4763cc0"/></to>
    </wire>
    <wire loc="95:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="UTXD" scoped="" ref="0x7f02a34a2990"/></from>
      <to><interface-ref name="UTXD1" scoped="" ref="0x7f02a4765cc0"/></to>
    </wire>
    <wire loc="66:/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f02a2a8aa50"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f02a34b7d30"/></to>
    </wire>
    <wire loc="62:/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f02a2a8a2b0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f02a3406d20"/></to>
    </wire>
    <wire loc="58:/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f02a3406d20"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f02a33fa060"/></to>
    </wire>
    <wire loc="61:/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f02a3404af0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f02a2a85be0"/></to>
    </wire>
    <wire loc="56:/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f02a3406510"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f02a33fcbd0"/></to>
    </wire>
    <wire loc="106:/home/hades/tinyos-new/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f02a33fcbd0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f02a2a143a0"/></to>
    </wire>
    <wire loc="51:/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="Interrupts" scoped="" ref="0x7f02a3408510"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7f02a3402230"/></to>
    </wire>
    <wire loc="55:/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f02a3407280"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f02a33fee30"/></to>
    </wire>
    <wire loc="105:/home/hades/tinyos-new/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f02a33fee30"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f02a2a15540"/></to>
    </wire>
    <wire loc="108:/home/hades/tinyos-new/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f02a33fa060"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f02a2a128b0"/></to>
    </wire>
    <wire loc="52:/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="RawInterrupts" scoped="" ref="0x7f02a34012f0"/></from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f02a34b3860"/></to>
    </wire>
    <wire loc="57:/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f02a33fa930"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f02a3404af0"/></to>
    </wire>
    <wire loc="59:/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f02a3400120"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f02a33fa060"/></to>
    </wire>
    <wire loc="62:/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f02a33e09d0"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f02a33fb400"/></to>
    </wire>
    <wire loc="107:/home/hades/tinyos-new/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f02a33fb400"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f02a2a14b20"/></to>
    </wire>
    <wire loc="65:/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x7f02a33f5b20"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x7f02a34b7500"/></to>
    </wire>
    <wire loc="109:/home/hades/tinyos-new/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f02a2a11210"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f02a33fa930"/></to>
    </wire>
    <wire loc="111:/home/hades/tinyos-new/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7f02a2a119d0"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7f02a2a17330"/></to>
    </wire>
    <wire loc="75:/home/hades/tinyos-new/tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7f02a2a0fc50"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f02a4fd54f0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:/home/hades/tinyos-new/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x7f02a29df3a0"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x7f02a33f5b20"/></to>
    </wire>
    <wire loc="82:/home/hades/tinyos-new/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f02a29dfb00"/></from>
      <to><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f02a33e0400"/></to>
    </wire>
    <wire loc="84:/home/hades/tinyos-new/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f02a29dd0f0"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f02a33e09d0"/></to>
    </wire>
    <wire loc="85:/home/hades/tinyos-new/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f02a29ddd00"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f02a33de720"/></to>
    </wire>
  </wiring>
  <components>
    <component qname="MainC" loc="56:/home/hades/tinyos-new/tos/system/MainC.nc">
      <documentation loc="45:/home/hades/tinyos-new/tos/system/MainC.nc">
        <short>&#10; MainC is the system interface the TinyOS boot sequence.</short>
        <long>&#10; MainC is the system interface the TinyOS boot sequence. It wires the&#10; boot sequence implementation to the scheduler and hardware resources.&#10;&#10; @author Philip Levis&#10; @date   August 6 2005&#10; @see    TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="40:/home/hades/tinyos-new/tos/platforms/telosa/PlatformC.nc">
      <documentation loc="34:/home/hades/tinyos-new/tos/platforms/telosa/PlatformC.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre and Cory Sharp&#10; @version $Revision: 1.6 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="3:/home/hades/tinyos-new/tos/platforms/telosa/PlatformP.nc" safe="">
      <module/>
    </component>
    <component qname="MotePlatformC" loc="1:/home/hades/tinyos-new/tos/platforms/telosb/MotePlatformC.nc" safe="">
      <module/>
    </component>
    <component qname="MoteClockC" loc="37:/home/hades/tinyos-new/tos/platforms/telosb/MoteClockC.nc">
      <documentation loc="33:/home/hades/tinyos-new/tos/platforms/telosb/MoteClockC.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlind.de>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430ClockC" loc="37:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430ClockC.nc">
      <documentation loc="33:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430ClockC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430ClockP" loc="43:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430ClockP.nc" safe="">
      <module/>
    </component>
    <component qname="Msp430TimerC" loc="37:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerC.nc">
      <documentation loc="33:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA" loc="39(Msp430TimerC.Msp430TimerA):/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerP.nc">
      <documentation loc="2:/home/hades/tinyos-new/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430TimerP"/>
        <arguments>
          <value cst="I:302">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:368">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:352">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:512">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB" loc="39(Msp430TimerC.Msp430TimerB):/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerP.nc">
      <documentation loc="2:/home/hades/tinyos-new/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430TimerP"/>
        <arguments>
          <value cst="I:286">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:400">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:384">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:512">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA0" loc="39(Msp430TimerC.Msp430TimerA0):/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:354">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:370">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA1" loc="39(Msp430TimerC.Msp430TimerA1):/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:356">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:372">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA2" loc="39(Msp430TimerC.Msp430TimerA2):/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:358">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:374">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB0" loc="39(Msp430TimerC.Msp430TimerB0):/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:386">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:402">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB1" loc="39(Msp430TimerC.Msp430TimerB1):/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:388">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:404">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB2" loc="39(Msp430TimerC.Msp430TimerB2):/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:390">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:406">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB3" loc="39(Msp430TimerC.Msp430TimerB3):/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:392">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:408">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB4" loc="39(Msp430TimerC.Msp430TimerB4):/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:394">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:410">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB5" loc="39(Msp430TimerC.Msp430TimerB5):/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:396">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:412">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB6" loc="39(Msp430TimerC.Msp430TimerB6):/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:398">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:414">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerCommonP" loc="2:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerCommonP.nc" safe="">
      <module/>
    </component>
    <component qname="McuSleepC" loc="49:/home/hades/tinyos-new/tos/chips/msp430/McuSleepC.nc" safe="">
      <documentation loc="33:/home/hades/tinyos-new/tos/chips/msp430/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the MSP430.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the MSP430. Code for low power calculation copied from older&#10; msp430hardware.h by Vlado Handziski, Joe Polastre, and Cory Sharp.&#10;&#10;&#10; @author Philip Levis&#10; @author Vlado Handziski&#10; @author Joe Polastre&#10; @author Cory Sharp&#10; @date   October 26, 2005&#10; @see  Please refer to TEP 112 for more information about this component and its&#10;          intended use.&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MoteClockP" loc="38:/home/hades/tinyos-new/tos/platforms/telosb/MoteClockP.nc">
      <documentation loc="33:/home/hades/tinyos-new/tos/platforms/telosb/MoteClockP.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlind.de>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="56:/home/hades/tinyos-new/tos/system/RealMainP.nc" safe="">
      <documentation loc="49:/home/hades/tinyos-new/tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="46:/home/hades/tinyos-new/tos/system/TinySchedulerC.nc">
      <documentation loc="34:/home/hades/tinyos-new/tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="54:/home/hades/tinyos-new/tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="BaseStationP" loc="60:BaseStationP.nc" safe="">
      <module/>
    </component>
    <component qname="LedsC" loc="45:/home/hades/tinyos-new/tos/system/LedsC.nc">
      <documentation loc="34:/home/hades/tinyos-new/tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="44:/home/hades/tinyos-new/tos/system/LedsP.nc" safe="">
      <documentation loc="35:/home/hades/tinyos-new/tos/system/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="40:/home/hades/tinyos-new/tos/platforms/telosa/PlatformLedsC.nc">
      <documentation loc="34:/home/hades/tinyos-new/tos/platforms/telosa/PlatformLedsC.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10; @version $Revision: 1.5 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430GeneralIOC" loc="45:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <documentation loc="35:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
        <short>&#10; HPL for the TI MSP430 family of microprocessors.</short>
        <long>&#10; HPL for the TI MSP430 family of microprocessors. This provides an&#10; abstraction for general-purpose I/O.&#10;&#10; @author Joe Polastre&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; @author Peter A. Bigot &#60;pab@peoplepowerco.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430GeneralIOC.P10" loc="39(HplMsp430GeneralIOC.P10):/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/hades/tinyos-new/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P11" loc="39(HplMsp430GeneralIOC.P11):/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/hades/tinyos-new/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P12" loc="39(HplMsp430GeneralIOC.P12):/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/hades/tinyos-new/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P13" loc="39(HplMsp430GeneralIOC.P13):/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/hades/tinyos-new/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P14" loc="39(HplMsp430GeneralIOC.P14):/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/hades/tinyos-new/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P15" loc="39(HplMsp430GeneralIOC.P15):/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/hades/tinyos-new/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P16" loc="39(HplMsp430GeneralIOC.P16):/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/hades/tinyos-new/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P17" loc="39(HplMsp430GeneralIOC.P17):/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/hades/tinyos-new/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P20" loc="39(HplMsp430GeneralIOC.P20):/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/hades/tinyos-new/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P21" loc="39(HplMsp430GeneralIOC.P21):/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/hades/tinyos-new/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P22" loc="39(HplMsp430GeneralIOC.P22):/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/hades/tinyos-new/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P23" loc="39(HplMsp430GeneralIOC.P23):/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/hades/tinyos-new/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P24" loc="39(HplMsp430GeneralIOC.P24):/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/hades/tinyos-new/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P25" loc="39(HplMsp430GeneralIOC.P25):/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/hades/tinyos-new/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P26" loc="39(HplMsp430GeneralIOC.P26):/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/hades/tinyos-new/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P27" loc="39(HplMsp430GeneralIOC.P27):/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/hades/tinyos-new/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P30" loc="39(HplMsp430GeneralIOC.P30):/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/hades/tinyos-new/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P31" loc="39(HplMsp430GeneralIOC.P31):/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/hades/tinyos-new/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P32" loc="39(HplMsp430GeneralIOC.P32):/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/hades/tinyos-new/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P33" loc="39(HplMsp430GeneralIOC.P33):/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/hades/tinyos-new/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P34" loc="39(HplMsp430GeneralIOC.P34):/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/hades/tinyos-new/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P35" loc="39(HplMsp430GeneralIOC.P35):/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/hades/tinyos-new/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P36" loc="39(HplMsp430GeneralIOC.P36):/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/hades/tinyos-new/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P37" loc="39(HplMsp430GeneralIOC.P37):/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/hades/tinyos-new/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P40" loc="39(HplMsp430GeneralIOC.P40):/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/hades/tinyos-new/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P41" loc="39(HplMsp430GeneralIOC.P41):/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/hades/tinyos-new/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P42" loc="39(HplMsp430GeneralIOC.P42):/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/hades/tinyos-new/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P43" loc="39(HplMsp430GeneralIOC.P43):/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/hades/tinyos-new/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P44" loc="39(HplMsp430GeneralIOC.P44):/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/hades/tinyos-new/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P45" loc="39(HplMsp430GeneralIOC.P45):/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/hades/tinyos-new/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P46" loc="39(HplMsp430GeneralIOC.P46):/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/hades/tinyos-new/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P47" loc="39(HplMsp430GeneralIOC.P47):/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/hades/tinyos-new/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P50" loc="39(HplMsp430GeneralIOC.P50):/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/hades/tinyos-new/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P51" loc="39(HplMsp430GeneralIOC.P51):/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/hades/tinyos-new/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P52" loc="39(HplMsp430GeneralIOC.P52):/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/hades/tinyos-new/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P53" loc="39(HplMsp430GeneralIOC.P53):/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/hades/tinyos-new/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P54" loc="39(HplMsp430GeneralIOC.P54):/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/hades/tinyos-new/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P55" loc="39(HplMsp430GeneralIOC.P55):/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/hades/tinyos-new/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P56" loc="39(HplMsp430GeneralIOC.P56):/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/hades/tinyos-new/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P57" loc="39(HplMsp430GeneralIOC.P57):/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/hades/tinyos-new/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P60" loc="39(HplMsp430GeneralIOC.P60):/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/hades/tinyos-new/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P61" loc="39(HplMsp430GeneralIOC.P61):/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/hades/tinyos-new/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P62" loc="39(HplMsp430GeneralIOC.P62):/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/hades/tinyos-new/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P63" loc="39(HplMsp430GeneralIOC.P63):/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/hades/tinyos-new/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P64" loc="39(HplMsp430GeneralIOC.P64):/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/hades/tinyos-new/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P65" loc="39(HplMsp430GeneralIOC.P65):/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/hades/tinyos-new/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P66" loc="39(HplMsp430GeneralIOC.P66):/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/hades/tinyos-new/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P67" loc="39(HplMsp430GeneralIOC.P67):/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/hades/tinyos-new/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led0Impl" loc="42(PlatformLedsC.Led0Impl):/home/hades/tinyos-new/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/hades/tinyos-new/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led1Impl" loc="42(PlatformLedsC.Led1Impl):/home/hades/tinyos-new/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/hades/tinyos-new/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led2Impl" loc="42(PlatformLedsC.Led2Impl):/home/hades/tinyos-new/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/hades/tinyos-new/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="ActiveMessageC" loc="59:/home/hades/tinyos-new/tos/platforms/telosa/ActiveMessageC.nc">
      <configuration/>
    </component>
    <component qname="CC2420ActiveMessageC" loc="53:/home/hades/tinyos-new/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <configuration/>
    </component>
    <component qname="CC2420RadioC" loc="41:/home/hades/tinyos-new/tos/chips/cc2420/CC2420RadioC.nc">
      <documentation loc="24:/home/hades/tinyos-new/tos/chips/cc2420/CC2420RadioC.nc">
        <short>&#10; Radio wiring for the CC2420.</short>
        <long>&#10; Radio wiring for the CC2420.  This layer seperates the common&#10; wiring of the lower-layer components of the CC2420 stack and makes&#10; them available to clients like the AM stack and the IEEE802.15.4&#10; stack.&#10;&#10; This component provides the highest-level internal interface to&#10; other components of the CC2420 stack.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10; @author Stephen Dawson-Haggerty&#10; @version $Revision: 1.2 $ $Date: 2009/08/20 01:37:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420CsmaC" loc="42:/home/hades/tinyos-new/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <documentation loc="32:/home/hades/tinyos-new/tos/chips/cc2420/csma/CC2420CsmaC.nc">
        <short>&#10; Basic implementation of a CSMA MAC for the ChipCon CC2420 radio.</short>
        <long>&#10; Basic implementation of a CSMA MAC for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-05-14 21:33:07 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420CsmaP" loc="37:/home/hades/tinyos-new/tos/chips/cc2420/csma/CC2420CsmaP.nc" safe="">
      <documentation loc="32:/home/hades/tinyos-new/tos/chips/cc2420/csma/CC2420CsmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.12 $ $Date: 2009/09/17 23:36:36 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ControlC" loc="42:/home/hades/tinyos-new/tos/chips/cc2420/control/CC2420ControlC.nc">
      <documentation loc="32:/home/hades/tinyos-new/tos/chips/cc2420/control/CC2420ControlC.nc">
        <short>&#10; Implementation for configuring a ChipCon CC2420 radio.</short>
        <long>&#10; Implementation for configuring a ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008/05/14 21:33:07 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ControlP" loc="42:/home/hades/tinyos-new/tos/chips/cc2420/control/CC2420ControlP.nc" safe="">
      <documentation loc="32:/home/hades/tinyos-new/tos/chips/cc2420/control/CC2420ControlP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Urs Hunkeler (ReadRssi implementation)&#10; @version $Revision: 1.7 $ $Date: 2008/06/24 04:07:28 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="AlarmMultiplexC" loc="43:/home/hades/tinyos-new/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <documentation loc="32:/home/hades/tinyos-new/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
        <short>&#10; A component that multiplexes the use of an alarm.</short>
        <long>&#10; A component that multiplexes the use of an alarm. The assumption is&#10; that its use is mutually exclusive and users check whether the&#10; events are for them.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:14 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm" loc="40(AlarmMultiplexC.Alarm):/home/hades/tinyos-new/tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <documentation loc="32:/home/hades/tinyos-new/tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
        <short>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplCC2420AlarmC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C" loc="41(AlarmMultiplexC.Alarm.Alarm32khz32C):/home/hades/tinyos-new/tos/chips/msp430/timer/Alarm32khz32C.nc">
      <documentation loc="33:/home/hades/tinyos-new/tos/chips/msp430/timer/Alarm32khz32C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Alarm32khz32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC" loc="41(AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC):/home/hades/tinyos-new/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <documentation loc="33:/home/hades/tinyos-new/tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Alarm32khz16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer" loc="37(AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer):/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <documentation loc="33:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Timer32khzC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430Timer32khzMapC" loc="48:/home/hades/tinyos-new/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <documentation loc="34:/home/hades/tinyos-new/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
        <short>&#10; MSP430Timer32khzMapC presents as paramaterized interfaces all of&#10; the 32khz hardware timers on the MSP430 that are available for&#10; compile time allocation by &#34;new Alarm32khz16C()&#34;, &#34;new&#10; AlarmMilli32C()&#34;, and so on.</short>
        <long>&#10; MSP430Timer32khzMapC presents as paramaterized interfaces all of&#10; the 32khz hardware timers on the MSP430 that are available for&#10; compile time allocation by &#34;new Alarm32khz16C()&#34;, &#34;new&#10; AlarmMilli32C()&#34;, and so on.  &#10;&#10; Platforms based on the MSP430 are * encouraged to copy in and&#10; override this file, presenting only the * hardware timers that are&#10; available for allocation on that platform.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @version $Revision: 1.5 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm" loc="43(AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm):/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <documentation loc="34:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f02a45ab7d0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f02a45abb40"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Counter32khz32C" loc="41:/home/hades/tinyos-new/tos/chips/msp430/timer/Counter32khz32C.nc">
      <documentation loc="33:/home/hades/tinyos-new/tos/chips/msp430/timer/Counter32khz32C.nc">
        <short>&#10; Counter32khz32C provides at 32-bit counter at 32768 ticks per second.</short>
        <long>&#10; Counter32khz32C provides at 32-bit counter at 32768 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Counter32khzC" loc="41:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <documentation loc="33:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430Counter32khzC.nc">
        <short>&#10; Msp430Counter32khC provides the standard 32khz counter for the MSP430.</short>
        <long>&#10; Msp430Counter32khC provides the standard 32khz counter for the MSP430.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Counter32khzC.Counter" loc="42(Msp430Counter32khzC.Counter):/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430CounterC.nc">
      <documentation loc="33:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f02a45ab7d0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f02a45abb40"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Counter32khz32C.Transform" loc="54(Counter32khz32C.Transform):/home/hades/tinyos-new/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:/home/hades/tinyos-new/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f02a45ab7d0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f02a45abb40"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f02a51f8920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f02a45ab7d0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f02a45abb40"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f02a51f8520"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f02a51f8520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform" loc="51(AlarmMultiplexC.Alarm.Alarm32khz32C.Transform):/home/hades/tinyos-new/tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:/home/hades/tinyos-new/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f02a45ab7d0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f02a45abb40"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f02a51f8920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f02a45ab7d0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f02a45abb40"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f02a51f8520"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC" loc="40:/home/hades/tinyos-new/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <documentation loc="32:/home/hades/tinyos-new/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
        <short>&#10; HPL implementation of general-purpose I/O for the ChipCon CC2420&#10; radio connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of general-purpose I/O for the ChipCon CC2420&#10; radio connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC2420PinsC.CCAM" loc="42(HplCC2420PinsC.CCAM):/home/hades/tinyos-new/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/hades/tinyos-new/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.CSNM" loc="42(HplCC2420PinsC.CSNM):/home/hades/tinyos-new/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/hades/tinyos-new/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.FIFOM" loc="42(HplCC2420PinsC.FIFOM):/home/hades/tinyos-new/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/hades/tinyos-new/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.FIFOPM" loc="42(HplCC2420PinsC.FIFOPM):/home/hades/tinyos-new/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/hades/tinyos-new/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.RSTNM" loc="42(HplCC2420PinsC.RSTNM):/home/hades/tinyos-new/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/hades/tinyos-new/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.SFDM" loc="42(HplCC2420PinsC.SFDM):/home/hades/tinyos-new/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/hades/tinyos-new/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.VRENM" loc="42(HplCC2420PinsC.VRENM):/home/hades/tinyos-new/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/hades/tinyos-new/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC" loc="40:/home/hades/tinyos-new/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <documentation loc="32:/home/hades/tinyos-new/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
        <short>&#10; HPL implementation of interrupts and captures for the ChipCon&#10; CC2420 radio connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of interrupts and captures for the ChipCon&#10; CC2420 radio connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC2420InterruptsC.CaptureSFDC" loc="38(HplCC2420InterruptsC.CaptureSFDC):/home/hades/tinyos-new/tos/chips/msp430/timer/GpioCaptureC.nc">
      <documentation loc="33:/home/hades/tinyos-new/tos/chips/msp430/timer/GpioCaptureC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="GpioCaptureC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430InterruptC" loc="39:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <documentation loc="33:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
        <short>&#10; HPL for the TI MSP430 family of microprocessors.</short>
        <long>&#10; HPL for the TI MSP430 family of microprocessors. This provides an&#10; abstraction for GPIO interrupts.&#10;&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430InterruptP" loc="36:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430InterruptP.nc" safe="">
      <documentation loc="33:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC.InterruptCCAC" loc="43(HplCC2420InterruptsC.InterruptCCAC):/home/hades/tinyos-new/tos/chips/msp430/pins/Msp430InterruptC.nc">
      <documentation loc="33:/home/hades/tinyos-new/tos/chips/msp430/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430InterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC.InterruptFIFOPC" loc="43(HplCC2420InterruptsC.InterruptFIFOPC):/home/hades/tinyos-new/tos/chips/msp430/pins/Msp430InterruptC.nc">
      <documentation loc="33:/home/hades/tinyos-new/tos/chips/msp430/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430InterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="CC2420ControlC.Spi" loc="39(CC2420ControlC.Spi):/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420SpiWireC" loc="37:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <documentation loc="32:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:16 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420SpiP" loc="41:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiP.nc" safe="">
      <documentation loc="32:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Roman Lim&#10; @author Razvan Musaloie-E.&#10; @author Jeonggil Ko&#10; @version $Revision: 1.4 $ $Date: 2008-06-23 20:25:15 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.WorkingStateC" loc="65(CC2420SpiWireC.WorkingStateC):/home/hades/tinyos-new/tos/system/StateC.nc">
      <documentation loc="32:/home/hades/tinyos-new/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="StateImplC" loc="64:/home/hades/tinyos-new/tos/system/StateImplC.nc">
      <documentation loc="32:/home/hades/tinyos-new/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="StateImplP" loc="64:/home/hades/tinyos-new/tos/system/StateImplP.nc" safe="">
      <documentation loc="32:/home/hades/tinyos-new/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC" loc="40(CC2420SpiWireC.HplCC2420SpiC):/home/hades/tinyos-new/tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <documentation loc="32:/home/hades/tinyos-new/tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
        <short>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplCC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC.SpiC" loc="79(CC2420SpiWireC.HplCC2420SpiC.SpiC):/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <instance number="0">
        <component-ref qname="Msp430Spi0C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430SpiNoDma0P" loc="71:/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <documentation loc="66:/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.6 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430SpiNoDma0P.SpiP" loc="73(Msp430SpiNoDma0P.SpiP):/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <documentation loc="66:/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de> (bugfix in continueOp())&#10; @version $Revision: 1.8 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430SpiNoDmaP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430Usart0C" loc="74:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <documentation loc="31:/home/hades/tinyos-new/tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430Usart0P" loc="74:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430Usart0P.nc" safe="">
      <documentation loc="62:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430Usart0P.nc">
        <short>&#10; Implementation of USART0 lowlevel functionality - stateless.</short>
        <long>&#10; Implementation of USART0 lowlevel functionality - stateless.&#10; Setting a mode will by default disable USART-Interrupts.&#10;&#10; @author: Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10; @author: Jonathan Hui &#60;jhui@archedrock.com>&#10; @author: Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author: Joe Polastre&#10; @author: Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10; @version $Revision: 1.8 $ $Date: 2010-06-04 22:30:21 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC" loc="39(CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC):/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <documentation loc="32:/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430Usart0C.nc">
        <short>&#10; Provides an interface for USART0 on the MSP430.</short>
        <long>&#10; Provides an interface for USART0 on the MSP430.&#10;&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Usart0C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare0P" loc="37:/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <documentation loc="32:/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare0P.UsartShareP" loc="37(Msp430UsartShare0P.UsartShareP):/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <documentation loc="32:/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430UsartShareP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-26 04:39:08 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430UsartShareP"/>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare0P.ArbiterC" loc="89(Msp430UsartShare0P.ArbiterC):/home/hades/tinyos-new/tos/system/FcfsArbiterC.nc">
      <documentation loc="69:/home/hades/tinyos-new/tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="FcfsArbiterC"/>
        <arguments>
          <value cst="S:Msp430Usart0.Resource">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare0P.ArbiterC.Queue" loc="42(Msp430UsartShare0P.ArbiterC.Queue):/home/hades/tinyos-new/tos/system/FcfsResourceQueueC.nc">
      <instance number="1">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare0P.ArbiterC.Arbiter" loc="52(Msp430UsartShare0P.ArbiterC.Arbiter):/home/hades/tinyos-new/tos/system/ArbiterP.nc">
      <documentation loc="30:/home/hades/tinyos-new/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430I2C0C" loc="2:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <configuration/>
    </component>
    <component qname="HplMsp430I2C0P" loc="37:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430I2C0P.nc" safe="">
      <documentation loc="32:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430I2C0P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-24 05:32:31 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ControlC.SyncSpiC" loc="39(CC2420ControlC.SyncSpiC):/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ControlC.RssiResource" loc="39(CC2420ControlC.RssiResource):/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="ActiveMessageAddressC" loc="52:/home/hades/tinyos-new/tos/system/ActiveMessageAddressC.nc" safe="">
      <documentation loc="45:/home/hades/tinyos-new/tos/system/ActiveMessageAddressC.nc">
        <short>&#10; Component that stores the node's active message address and group ID.</short>
        <long>&#10; Component that stores the node's active message address and group ID.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="LocalIeeeEui64C" loc="11:/home/hades/tinyos-new/tos/chips/ds2411/LocalIeeeEui64C.nc">
      <configuration/>
    </component>
    <component qname="LocalIeeeEui64P" loc="3:/home/hades/tinyos-new/tos/chips/ds2411/LocalIeeeEui64P.nc">
      <module/>
    </component>
    <component qname="Ds2411C" loc="7:/home/hades/tinyos-new/tos/chips/ds2411/Ds2411C.nc">
      <configuration/>
    </component>
    <component qname="Ds2411P" loc="9:/home/hades/tinyos-new/tos/chips/ds2411/Ds2411P.nc">
      <module/>
    </component>
    <component qname="OneWireMasterC" loc="6:/home/hades/tinyos-new/tos/lib/onewire/OneWireMasterC.nc">
      <documentation loc="1:/home/hades/tinyos-new/tos/lib/onewire/OneWireMasterC.nc">
        <short>&#10; Dallas/Maxim 1wire bus master&#10;&#10;</short>
      </documentation>
      <configuration/>
    </component>
    <component qname="OneWireMasterP" loc="9:/home/hades/tinyos-new/tos/lib/onewire/OneWireMasterP.nc">
      <documentation loc="2:/home/hades/tinyos-new/tos/lib/onewire/OneWireMasterP.nc">
        <short>&#10; Dallas/Maxim 1wire bus master&#10;&#10; Only supports one device on the 1-wire bus.</short>
      </documentation>
      <module/>
    </component>
    <component qname="BusyWaitMicroC" loc="39:/home/hades/tinyos-new/tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <documentation loc="33:/home/hades/tinyos-new/tos/chips/msp430/timer/BusyWaitMicroC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="BusyWaitMicroC.BusyWaitCounterC" loc="52(BusyWaitMicroC.BusyWaitCounterC):/home/hades/tinyos-new/tos/lib/timer/BusyWaitCounterC.nc">
      <documentation loc="36:/home/hades/tinyos-new/tos/lib/timer/BusyWaitCounterC.nc">
        <short>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses).</short>
        <long>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses). See TEP102 for more&#10; details.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for the&#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="BusyWaitCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f02a45aa020"/>
            <typename><typedef-ref name="TMicro" ref="0x7f02a45aa390"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f02a51f8520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430CounterMicroC" loc="44:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430CounterMicroC.nc">
      <documentation loc="34:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430CounterMicroC.nc">
        <short>&#10; Msp430CounterMicroC provides the standard 1 uis (or 1 us) counter for the&#10; MSP430.</short>
        <long>&#10; Msp430CounterMicroC provides the standard 1 uis (or 1 us) counter for the&#10; MSP430.   If your base clock is in units of binary hertz then 1 uis, decimal&#10; hertz it will be 1us.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430CounterMicroC.Counter" loc="42(Msp430CounterMicroC.Counter):/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430CounterC.nc">
      <documentation loc="33:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f02a45aa020"/>
            <typename><typedef-ref name="TMicro" ref="0x7f02a45aa390"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplDs2411C" loc="1:/home/hades/tinyos-new/tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <configuration/>
    </component>
    <component qname="HplDs2411C.MspGpio" loc="42(HplDs2411C.MspGpio):/home/hades/tinyos-new/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/hades/tinyos-new/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="Ds2411PowerControlC" loc="12:/home/hades/tinyos-new/tos/chips/ds2411/Ds2411PowerControlC.nc">
      <module/>
    </component>
    <component qname="CC2420TransmitC" loc="41:/home/hades/tinyos-new/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <documentation loc="32:/home/hades/tinyos-new/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
        <short>&#10; Implementation of the transmit path for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of the transmit path for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420TransmitP" loc="46:/home/hades/tinyos-new/tos/chips/cc2420/transmit/CC2420TransmitP.nc" safe="">
      <module/>
    </component>
    <component qname="CC2420TransmitC.Spi" loc="39(CC2420TransmitC.Spi):/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveC" loc="39:/home/hades/tinyos-new/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <documentation loc="32:/home/hades/tinyos-new/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
        <short>&#10; Implementation of the receive path for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of the receive path for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveP" loc="45:/home/hades/tinyos-new/tos/chips/cc2420/receive/CC2420ReceiveP.nc" safe="">
      <documentation loc="32:/home/hades/tinyos-new/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Jung Il Choi&#10; @author JeongGil Ko&#10; @author Razvan Musaloiu-E&#10; @version $Revision: 1.21 $ $Date: 2009/09/17 23:36:36 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420PacketC" loc="38:/home/hades/tinyos-new/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <documentation loc="32:/home/hades/tinyos-new/tos/chips/cc2420/packet/CC2420PacketC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420PacketP" loc="43:/home/hades/tinyos-new/tos/chips/cc2420/packet/CC2420PacketP.nc" safe="">
      <documentation loc="32:/home/hades/tinyos-new/tos/chips/cc2420/packet/CC2420PacketP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420PacketC.CounterToLocalTimeC" loc="46(CC2420PacketC.CounterToLocalTimeC):/home/hades/tinyos-new/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/home/hades/tinyos-new/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f02a45ab7d0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f02a45abb40"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC" loc="43:/home/hades/tinyos-new/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <documentation loc="33:/home/hades/tinyos-new/tos/chips/msp430/timer/HilTimerMilliC.nc">
        <short>&#10; HilTimerMilliC provides a parameterized interface to a virtualized&#10; millisecond timer.</short>
        <long>&#10; HilTimerMilliC provides a parameterized interface to a virtualized&#10; millisecond timer.  TimerMilliC in tos/system/ uses this component to&#10; allocate new timers.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C" loc="41(HilTimerMilliC.AlarmMilli32C):/home/hades/tinyos-new/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <documentation loc="33:/home/hades/tinyos-new/tos/chips/msp430/timer/AlarmMilli32C.nc">
        <short>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; </short>
        <long>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmMilli32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom" loc="41(HilTimerMilliC.AlarmMilli32C.AlarmFrom):/home/hades/tinyos-new/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <documentation loc="33:/home/hades/tinyos-new/tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Alarm32khz16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer" loc="37(HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer):/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <documentation loc="33:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430Timer32khzC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm" loc="43(HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm):/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <documentation loc="34:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f02a45ab7d0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f02a45abb40"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMilli32C" loc="41:/home/hades/tinyos-new/tos/chips/msp430/timer/CounterMilli32C.nc">
      <documentation loc="33:/home/hades/tinyos-new/tos/chips/msp430/timer/CounterMilli32C.nc">
        <short>&#10; CounterMilli32C provides at 32-bit counter at 1024 ticks per second.</short>
        <long>&#10; CounterMilli32C provides at 32-bit counter at 1024 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CounterMilli32C.Transform" loc="54(CounterMilli32C.Transform):/home/hades/tinyos-new/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:/home/hades/tinyos-new/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f02a45ab020"/>
            <typename><typedef-ref name="TMilli" ref="0x7f02a45ab390"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f02a51f8920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f02a45ab7d0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f02a45abb40"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f02a51f8520"/></typename>
          </type-int>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f02a51f8920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.Transform" loc="51(HilTimerMilliC.AlarmMilli32C.Transform):/home/hades/tinyos-new/tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:/home/hades/tinyos-new/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f02a45ab020"/>
            <typename><typedef-ref name="TMilli" ref="0x7f02a45ab390"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f02a51f8920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f02a45ab7d0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f02a45abb40"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f02a51f8520"/></typename>
          </type-int>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="46(HilTimerMilliC.AlarmToTimerC):/home/hades/tinyos-new/tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:/home/hades/tinyos-new/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f02a45ab020"/>
            <typename><typedef-ref name="TMilli" ref="0x7f02a45ab390"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="46(HilTimerMilliC.VirtualizeTimerC):/home/hades/tinyos-new/tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:/home/hades/tinyos-new/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f02a45ab020"/>
            <typename><typedef-ref name="TMilli" ref="0x7f02a45ab390"/></typename>
          </type-tag>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="46(HilTimerMilliC.CounterToLocalTimeC):/home/hades/tinyos-new/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/home/hades/tinyos-new/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f02a45ab020"/>
            <typename><typedef-ref name="TMilli" ref="0x7f02a45ab390"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CC2420PacketC.DummyTimer" loc="44(CC2420PacketC.DummyTimer):/home/hades/tinyos-new/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/hades/tinyos-new/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="48:/home/hades/tinyos-new/tos/system/TimerMilliP.nc">
      <documentation loc="34:/home/hades/tinyos-new/tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveC.Spi" loc="39(CC2420ReceiveC.Spi):/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RandomC" loc="43:/home/hades/tinyos-new/tos/system/RandomC.nc">
      <documentation loc="33:/home/hades/tinyos-new/tos/system/RandomC.nc">
        <short>&#10; The standard TinyOS random number generator.</short>
        <long>&#10; The standard TinyOS random number generator. If your system requires a &#10; specific random number generator, it should wire to that component&#10; directly. &#10;&#10; @author  Barbara Hohlt &#10; @author  Phil Levis &#10; @date    March 1 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RandomMlcgC" loc="45:/home/hades/tinyos-new/tos/system/RandomMlcgC.nc" safe="">
      <documentation loc="32:/home/hades/tinyos-new/tos/system/RandomMlcgC.nc">
        <short> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.</short>
        <long> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.  It uses the 32 bit multiplicative &#10;  linear congruential generator, &#10;&#10;&#9;&#9;S' = (A x S) mod (2^31 - 1) &#10;&#10;  for A = 16807.&#10;&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420CsmaC.StateC" loc="65(CC2420CsmaC.StateC):/home/hades/tinyos-new/tos/system/StateC.nc">
      <documentation loc="32:/home/hades/tinyos-new/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UniqueSendC" loc="38:/home/hades/tinyos-new/tos/chips/cc2420/unique/UniqueSendC.nc">
      <documentation loc="32:/home/hades/tinyos-new/tos/chips/cc2420/unique/UniqueSendC.nc">
        <short>&#10; Generate a unique dsn byte for this outgoing packet&#10; This should sit at the top of the stack&#10; </short>
        <long>&#10; Generate a unique dsn byte for this outgoing packet&#10; This should sit at the top of the stack&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="UniqueSendP" loc="38:/home/hades/tinyos-new/tos/chips/cc2420/unique/UniqueSendP.nc" safe="">
      <documentation loc="32:/home/hades/tinyos-new/tos/chips/cc2420/unique/UniqueSendP.nc">
        <short>&#10; This layer is responsible for supplying a unique data sequence number (dsn)&#10; to each outgoing message.</short>
        <long>&#10; This layer is responsible for supplying a unique data sequence number (dsn)&#10; to each outgoing message.&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="UniqueSendC.StateC" loc="65(UniqueSendC.StateC):/home/hades/tinyos-new/tos/system/StateC.nc">
      <documentation loc="32:/home/hades/tinyos-new/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UniqueReceiveC" loc="40:/home/hades/tinyos-new/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <documentation loc="32:/home/hades/tinyos-new/tos/chips/cc2420/unique/UniqueReceiveC.nc">
        <short>&#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.</short>
        <long>&#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.&#10; This should sit at the bottom of the stack&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="UniqueReceiveP" loc="41:/home/hades/tinyos-new/tos/chips/cc2420/unique/UniqueReceiveP.nc" safe="">
      <documentation loc="32:/home/hades/tinyos-new/tos/chips/cc2420/unique/UniqueReceiveP.nc">
        <short> &#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.</short>
        <long> &#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TinyosNetworkC" loc="62:/home/hades/tinyos-new/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <documentation loc="32:/home/hades/tinyos-new/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
        <short>&#10; Original TinyOS T-Frames use a packet header that is not compatible with&#10; other 6LowPAN networks.</short>
        <long>&#10; Original TinyOS T-Frames use a packet header that is not compatible with&#10; other 6LowPAN networks.  They do not include the network byte &#10; responsible for identifying the packing as being sourced from a TinyOS&#10; network.&#10;&#10; TinyOS I-Frames are interoperability packets that do include a network&#10; byte as defined by 6LowPAN specifications.  The I-Frame header type is&#10; the default packet header used in TinyOS networks.&#10;&#10; Since either packet header is acceptable, this layer must do some &#10; preprocessing (sorry) to figure out whether or not it needs to include &#10; the functionality to process I-frames.  If I-Frames are used, then&#10; the network byte is added on the way out and checked on the way in.&#10; If the packet came from a network different from a TinyOS network, the&#10; user may access it through the DispatchP's NonTinyosReceive[] Receive &#10; interface and process it in a different radio stack.&#10;&#10; If T-Frames are used instead, this layer is simply pass-through wiring to the&#10; layer beneath.  &#10;&#10; Define &#34;CC2420_IFRAME_TYPE&#34; to use the interoperability frame and &#10; this layer&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420TinyosNetworkP" loc="44:/home/hades/tinyos-new/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc" safe="">
      <documentation loc="32:/home/hades/tinyos-new/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
        <short>&#10; Fills in the network ID byte for outgoing packets for compatibility with&#10; other 6LowPAN networks.</short>
        <long>&#10; Fills in the network ID byte for outgoing packets for compatibility with&#10; other 6LowPAN networks.  Filters incoming packets that are not&#10; TinyOS network compatible.  Provides the 6LowpanSnoop interface to&#10; sniff for packets that were not originated from TinyOS.&#10;&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TinyosNetworkC.FcfsResourceQueueC" loc="42(CC2420TinyosNetworkC.FcfsResourceQueueC):/home/hades/tinyos-new/tos/system/FcfsResourceQueueC.nc">
      <instance number="0">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DummyLplC" loc="41:/home/hades/tinyos-new/tos/chips/cc2420/lpl/DummyLplC.nc">
      <documentation loc="32:/home/hades/tinyos-new/tos/chips/cc2420/lpl/DummyLplC.nc">
        <short>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.</short>
        <long>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.&#10; Sleep interval is always 0, and duty cycle is always 100%&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="DummyLplP" loc="39:/home/hades/tinyos-new/tos/chips/cc2420/lpl/DummyLplP.nc">
      <documentation loc="32:/home/hades/tinyos-new/tos/chips/cc2420/lpl/DummyLplP.nc">
        <short>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.</short>
        <long>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.&#10; Wakeup interval is always 0 (always on)&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="DummyLplC.StateC" loc="65(DummyLplC.StateC):/home/hades/tinyos-new/tos/system/StateC.nc">
      <documentation loc="32:/home/hades/tinyos-new/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="PacketLinkDummyC" loc="38:/home/hades/tinyos-new/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <documentation loc="32:/home/hades/tinyos-new/tos/chips/cc2420/link/PacketLinkDummyC.nc">
        <short>&#10; Dummy configuration for PacketLink Layer&#10; </short>
        <long>&#10; Dummy configuration for PacketLink Layer&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PacketLinkDummyP" loc="38:/home/hades/tinyos-new/tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <documentation loc="32:/home/hades/tinyos-new/tos/chips/cc2420/link/PacketLinkDummyP.nc">
        <short>&#10; Dummy module for Packet Link layer&#10; </short>
        <long>&#10; Dummy module for Packet Link layer&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ActiveMessageP" loc="46:/home/hades/tinyos-new/tos/chips/cc2420/CC2420ActiveMessageP.nc" safe="">
      <documentation loc="33:/home/hades/tinyos-new/tos/chips/cc2420/CC2420ActiveMessageP.nc">
        <short>&#10; Active message implementation on top of the CC2420 radio.</short>
        <long>&#10; Active message implementation on top of the CC2420 radio. This&#10; implementation uses the 16-bit addressing mode of 802.15.4: the&#10; only additional byte it adds is the AM id byte, as the first byte&#10; of the data payload.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.22 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="SerialActiveMessageC" loc="44:/home/hades/tinyos-new/tos/lib/serial/SerialActiveMessageC.nc">
      <documentation loc="71:/home/hades/tinyos-new/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialActiveMessageC.AM" loc="45(SerialActiveMessageC.AM):/home/hades/tinyos-new/tos/lib/serial/SerialActiveMessageP.nc">
      <documentation loc="71:/home/hades/tinyos-new/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialActiveMessageP"/>
      </instance>
      <module/>
    </component>
    <component qname="SerialDispatcherC" loc="47:/home/hades/tinyos-new/tos/lib/serial/SerialDispatcherC.nc">
      <documentation loc="35:/home/hades/tinyos-new/tos/lib/serial/SerialDispatcherC.nc">
        <short>&#10; This component provides functionality to send many different kinds&#10; of serial packets on top of a general packet sending component.</short>
        <long>&#10; This component provides functionality to send many different kinds&#10; of serial packets on top of a general packet sending component. It&#10; achieves this by knowing where the different packets in a message_t&#10; exist through the SerialPacketInfo interface.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialP" loc="62:/home/hades/tinyos-new/tos/lib/serial/SerialP.nc">
      <module/>
    </component>
    <component qname="SerialDispatcherC.SerialDispatcherP" loc="48(SerialDispatcherC.SerialDispatcherP):/home/hades/tinyos-new/tos/lib/serial/SerialDispatcherP.nc">
      <documentation loc="71:/home/hades/tinyos-new/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialDispatcherP"/>
      </instance>
      <module/>
    </component>
    <component qname="HdlcTranslateC" loc="47:/home/hades/tinyos-new/tos/lib/serial/HdlcTranslateC.nc">
      <documentation loc="71:/home/hades/tinyos-new/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformSerialC" loc="2:/home/hades/tinyos-new/tos/platforms/telosa/PlatformSerialC.nc">
      <configuration/>
    </component>
    <component qname="PlatformSerialC.UartC" loc="42(PlatformSerialC.UartC):/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <documentation loc="31:/home/hades/tinyos-new/tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Uart1C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430Uart1P" loc="39:/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <documentation loc="32:/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430Uart1P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Uart1P.UartP" loc="41(Msp430Uart1P.UartP):/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430UartP.nc">
      <documentation loc="32:/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @version $Revision: 1.7 $ $Date: 2008-06-04 05:31:15 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430UartP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430Usart1C" loc="74:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <documentation loc="31:/home/hades/tinyos-new/tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430Usart1P" loc="73:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <documentation loc="62:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
        <short>&#10; Implementation of USART1 lowlevel functionality - stateless.</short>
        <long>&#10; Implementation of USART1 lowlevel functionality - stateless.&#10; Setting a mode will by default disable USART-Interrupts.&#10;&#10; @author: Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10; @author: Jonathan Hui &#60;jhui@archedrock.com>&#10; @author: Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author: Joe Polastre&#10; @version $Revision: 1.7 $ $Date: 2010-06-04 22:30:21 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Counter32khz16C" loc="41:/home/hades/tinyos-new/tos/chips/msp430/timer/Counter32khz16C.nc">
      <documentation loc="33:/home/hades/tinyos-new/tos/chips/msp430/timer/Counter32khz16C.nc">
        <short>&#10; Counter32khz16C provides at 16-bit counter at 32768 ticks per second.</short>
        <long>&#10; Counter32khz16C provides at 16-bit counter at 32768 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformSerialC.UartC.UsartC" loc="40(PlatformSerialC.UartC.UsartC):/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <documentation loc="32:/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430Usart1C.nc">
        <short>&#10; Provides an interface for USART1 on the MSP430.</short>
        <long>&#10; Provides an interface for USART1 on the MSP430.&#10;&#10; @author Vlado Handziski &#60;handisk@tkn.tu-berlin.de>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Usart1C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P" loc="38:/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <documentation loc="32:/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.6 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P.UsartShareP" loc="37(Msp430UsartShare1P.UsartShareP):/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <documentation loc="32:/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430UsartShareP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-26 04:39:08 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430UsartShareP"/>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare1P.ArbiterC" loc="89(Msp430UsartShare1P.ArbiterC):/home/hades/tinyos-new/tos/system/FcfsArbiterC.nc">
      <documentation loc="69:/home/hades/tinyos-new/tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="FcfsArbiterC"/>
        <arguments>
          <value cst="S:Msp430Usart1.Resource">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P.ArbiterC.Queue" loc="42(Msp430UsartShare1P.ArbiterC.Queue):/home/hades/tinyos-new/tos/system/FcfsResourceQueueC.nc">
      <instance number="2">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare1P.ArbiterC.Arbiter" loc="52(Msp430UsartShare1P.ArbiterC.Arbiter):/home/hades/tinyos-new/tos/system/ArbiterP.nc">
      <documentation loc="30:/home/hades/tinyos-new/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare1P.PowerManagerC" loc="67(Msp430UsartShare1P.PowerManagerC):/home/hades/tinyos-new/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <documentation loc="41:/home/hades/tinyos-new/tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncStdControlPowerManagerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P.PowerManagerC.PowerManager" loc="58(Msp430UsartShare1P.PowerManagerC.PowerManager):/home/hades/tinyos-new/tos/lib/power/AsyncPowerManagerP.nc">
      <documentation loc="41:/home/hades/tinyos-new/tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncPowerManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="TelosSerialP" loc="1:/home/hades/tinyos-new/tos/platforms/telosa/TelosSerialP.nc">
      <module/>
    </component>
    <component qname="SerialPacketInfoActiveMessageP" loc="46:/home/hades/tinyos-new/tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
      <documentation loc="71:/home/hades/tinyos-new/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Msp430TimerP" loc="39:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerP.nc" abstract="" safe="">
      <documentation loc="2:/home/hades/tinyos-new/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <parameters>
        <constant name="TxIV_addr" ref="0x7f02a4a23970" loc="40:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f02a51f8520"/></typename>
          </type-int>
        </constant>
        <constant name="TxR_addr" ref="0x7f02a4a23d10" loc="41:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f02a51f8520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCTL_addr" ref="0x7f02a4a22110" loc="42:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f02a51f8520"/></typename>
          </type-int>
        </constant>
        <constant name="TxIFG" ref="0x7f02a4a22490" loc="43:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f02a51f8520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCLR" ref="0x7f02a4a22810" loc="44:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f02a51f8520"/></typename>
          </type-int>
        </constant>
        <constant name="TxIE" ref="0x7f02a4a22b80" loc="45:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f02a51f8520"/></typename>
          </type-int>
        </constant>
        <constant name="TxSSEL0" ref="0x7f02a4a20020" loc="46:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f02a51f8520"/></typename>
          </type-int>
        </constant>
        <constant name="TxSSEL1" ref="0x7f02a4a203b0" loc="47:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f02a51f8520"/></typename>
          </type-int>
        </constant>
        <constant name="isClockSourceAsync" ref="0x7f02a4a20780" loc="48:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f02a4f6b090"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430TimerCapComP" loc="39:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerCapComP.nc" abstract="" safe="">
      <documentation loc="33:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <constant name="TxCCTLx_addr" ref="0x7f02a49e5e80" loc="40:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
          <component-ref qname="Msp430TimerCapComP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f02a51f8520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCCRx_addr" ref="0x7f02a49e1270" loc="41:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
          <component-ref qname="Msp430TimerCapComP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f02a51f8520"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOP" loc="39:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc" abstract="" safe="">
      <documentation loc="2:/home/hades/tinyos-new/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_in_addr" ref="0x7f02a47441d0" loc="40:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_out_addr" ref="0x7f02a4744580" loc="41:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_dir_addr" ref="0x7f02a4744930" loc="42:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_sel_addr" ref="0x7f02a4744ce0" loc="43:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="pin" ref="0x7f02a47430d0" loc="44:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f02a51f8160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430GpioC" loc="42:/home/hades/tinyos-new/tos/chips/msp430/pins/Msp430GpioC.nc" abstract="" safe="">
      <documentation loc="33:/home/hades/tinyos-new/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="HplCC2420AlarmC" loc="40:/home/hades/tinyos-new/tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc" abstract="">
      <documentation loc="32:/home/hades/tinyos-new/tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
        <short>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Alarm32khz32C" loc="41:/home/hades/tinyos-new/tos/chips/msp430/timer/Alarm32khz32C.nc" abstract="">
      <documentation loc="33:/home/hades/tinyos-new/tos/chips/msp430/timer/Alarm32khz32C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Alarm32khz16C" loc="41:/home/hades/tinyos-new/tos/chips/msp430/timer/Alarm32khz16C.nc" abstract="">
      <documentation loc="33:/home/hades/tinyos-new/tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430Timer32khzC" loc="37:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430Timer32khzC.nc" abstract="">
      <documentation loc="33:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430AlarmC" loc="43:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430AlarmC.nc" abstract="" safe="">
      <documentation loc="34:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x7f02a43af9d0" loc="43:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430AlarmC.nc">
          <component-ref qname="Msp430AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x7f02a43af9d0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430CounterC" loc="42:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430CounterC.nc" abstract="" safe="">
      <documentation loc="33:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x7f02a436a160" loc="42:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430CounterC.nc">
          <component-ref qname="Msp430CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x7f02a436a160"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformCounterC" loc="54:/home/hades/tinyos-new/tos/lib/timer/TransformCounterC.nc" abstract="" safe="">
      <documentation loc="34:/home/hades/tinyos-new/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x7f02a4359a60" loc="55:/home/hades/tinyos-new/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x7f02a4359a60"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x7f02a4356290" loc="56:/home/hades/tinyos-new/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x7f02a4356290"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x7f02a4356680" loc="57:/home/hades/tinyos-new/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x7f02a4356680"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x7f02a4356e60" loc="58:/home/hades/tinyos-new/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x7f02a4356e60"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x7f02a4354260" loc="59:/home/hades/tinyos-new/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f02a51f8160"/></typename>
          </type-int>
        </constant>
        <typedef name="upper_count_type" ref="0x7f02a4354a60" loc="60:/home/hades/tinyos-new/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="upper_count_type" scoped="" ref="0x7f02a4354a60"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformAlarmC" loc="51:/home/hades/tinyos-new/tos/lib/timer/TransformAlarmC.nc" abstract="" safe="">
      <documentation loc="34:/home/hades/tinyos-new/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x7f02a437aa30" loc="52:/home/hades/tinyos-new/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x7f02a437aa30"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x7f02a4333290" loc="53:/home/hades/tinyos-new/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x7f02a4333290"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x7f02a4333680" loc="54:/home/hades/tinyos-new/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x7f02a4333680"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x7f02a4333e60" loc="55:/home/hades/tinyos-new/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x7f02a4333e60"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x7f02a4332260" loc="56:/home/hades/tinyos-new/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f02a51f8160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="GpioCaptureC" loc="38:/home/hades/tinyos-new/tos/chips/msp430/timer/GpioCaptureC.nc" abstract="" safe="">
      <documentation loc="33:/home/hades/tinyos-new/tos/chips/msp430/timer/GpioCaptureC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430InterruptC" loc="43:/home/hades/tinyos-new/tos/chips/msp430/pins/Msp430InterruptC.nc" abstract="" safe="">
      <documentation loc="33:/home/hades/tinyos-new/tos/chips/msp430/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="CC2420SpiC" loc="39:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc" abstract="">
      <documentation loc="32:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="StateC" loc="65:/home/hades/tinyos-new/tos/system/StateC.nc" abstract="">
      <documentation loc="32:/home/hades/tinyos-new/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplCC2420SpiC" loc="40:/home/hades/tinyos-new/tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc" abstract="">
      <documentation loc="32:/home/hades/tinyos-new/tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
        <short>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430Spi0C" loc="79:/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430Spi0C.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430SpiNoDmaP" loc="73:/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc" abstract="">
      <documentation loc="66:/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de> (bugfix in continueOp())&#10; @version $Revision: 1.8 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430Usart0C" loc="39:/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430Usart0C.nc" abstract="">
      <documentation loc="32:/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430Usart0C.nc">
        <short>&#10; Provides an interface for USART0 on the MSP430.</short>
        <long>&#10; Provides an interface for USART0 on the MSP430.&#10;&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430UsartShareP" loc="37:/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430UsartShareP.nc" abstract="" safe="">
      <documentation loc="32:/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430UsartShareP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-26 04:39:08 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="FcfsArbiterC" loc="89:/home/hades/tinyos-new/tos/system/FcfsArbiterC.nc" abstract="">
      <documentation loc="69:/home/hades/tinyos-new/tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x7f02a3ead020" loc="89:/home/hades/tinyos-new/tos/system/FcfsArbiterC.nc">
          <component-ref qname="FcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsResourceQueueC" loc="42:/home/hades/tinyos-new/tos/system/FcfsResourceQueueC.nc" abstract="" safe="">
      <parameters>
        <constant name="size" ref="0x7f02a3ea00d0" loc="42:/home/hades/tinyos-new/tos/system/FcfsResourceQueueC.nc">
          <component-ref qname="FcfsResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f02a51f8160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="ArbiterP" loc="52:/home/hades/tinyos-new/tos/system/ArbiterP.nc" abstract="" safe="">
      <documentation loc="30:/home/hades/tinyos-new/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="default_owner_id" ref="0x7f02a3e85800" loc="52:/home/hades/tinyos-new/tos/system/ArbiterP.nc">
          <component-ref qname="ArbiterP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f02a51f8160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="BusyWaitCounterC" loc="52:/home/hades/tinyos-new/tos/lib/timer/BusyWaitCounterC.nc" abstract="">
      <documentation loc="36:/home/hades/tinyos-new/tos/lib/timer/BusyWaitCounterC.nc">
        <short>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses).</short>
        <long>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses). See TEP102 for more&#10; details.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for the&#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f02a3c43400" loc="52:/home/hades/tinyos-new/tos/lib/timer/BusyWaitCounterC.nc">
          <component-ref qname="BusyWaitCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f02a3c43400"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f02a3c43b90" loc="52:/home/hades/tinyos-new/tos/lib/timer/BusyWaitCounterC.nc">
          <component-ref qname="BusyWaitCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f02a3c43b90"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="46:/home/hades/tinyos-new/tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="36:/home/hades/tinyos-new/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f02a3a1fa60" loc="46:/home/hades/tinyos-new/tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f02a3a1fa60"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmMilli32C" loc="41:/home/hades/tinyos-new/tos/chips/msp430/timer/AlarmMilli32C.nc" abstract="">
      <documentation loc="33:/home/hades/tinyos-new/tos/chips/msp430/timer/AlarmMilli32C.nc">
        <short>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; </short>
        <long>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AlarmToTimerC" loc="46:/home/hades/tinyos-new/tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="36:/home/hades/tinyos-new/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f02a39c8160" loc="46:/home/hades/tinyos-new/tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f02a39c8160"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="46:/home/hades/tinyos-new/tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="34:/home/hades/tinyos-new/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f02a3998740" loc="46:/home/hades/tinyos-new/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f02a3998740"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x7f02a3998a70" loc="46:/home/hades/tinyos-new/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="44:/home/hades/tinyos-new/tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="33:/home/hades/tinyos-new/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="SerialActiveMessageP" loc="45:/home/hades/tinyos-new/tos/lib/serial/SerialActiveMessageP.nc" abstract="">
      <documentation loc="71:/home/hades/tinyos-new/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SerialDispatcherP" loc="48:/home/hades/tinyos-new/tos/lib/serial/SerialDispatcherP.nc" abstract="">
      <documentation loc="71:/home/hades/tinyos-new/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430Uart1C" loc="42:/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430Uart1C.nc" abstract="">
      <documentation loc="31:/home/hades/tinyos-new/tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430UartP" loc="41:/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430UartP.nc" abstract="">
      <documentation loc="32:/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @version $Revision: 1.7 $ $Date: 2008-06-04 05:31:15 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430Usart1C" loc="40:/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430Usart1C.nc" abstract="">
      <documentation loc="32:/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430Usart1C.nc">
        <short>&#10; Provides an interface for USART1 on the MSP430.</short>
        <long>&#10; Provides an interface for USART1 on the MSP430.&#10;&#10; @author Vlado Handziski &#60;handisk@tkn.tu-berlin.de>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AsyncStdControlPowerManagerC" loc="67:/home/hades/tinyos-new/tos/lib/power/AsyncStdControlPowerManagerC.nc" abstract="">
      <documentation loc="41:/home/hades/tinyos-new/tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AsyncPowerManagerP" loc="58:/home/hades/tinyos-new/tos/lib/power/AsyncPowerManagerP.nc" abstract="" safe="">
      <documentation loc="41:/home/hades/tinyos-new/tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="SoftwareInit" ref="0x7f02a4ad1720" loc="58:/home/hades/tinyos-new/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SoftwareInit" scoped="" ref="0x7f02a4ad1720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f02a4ad1aa0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x7f02a4ad2270" loc="57:/home/hades/tinyos-new/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x7f02a4ad2270"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7f02a4ad25f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f02a4ad5710" loc="42:/home/hades/tinyos-new/tos/platforms/telosa/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f02a4ad5710"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f02a4ad5a90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0x7f02a4acc740" loc="6:/home/hades/tinyos-new/tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteInit" scoped="" ref="0x7f02a4acc740"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f02a4accac0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f02a4acf920" loc="4:/home/hades/tinyos-new/tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f02a4acf920"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f02a4acfca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteClockInit" ref="0x7f02a4acc060" loc="5:/home/hades/tinyos-new/tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteClockInit" scoped="" ref="0x7f02a4acc060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f02a4acc3e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LedsInit" ref="0x7f02a4acce20" loc="7:/home/hades/tinyos-new/tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LedsInit" scoped="" ref="0x7f02a4acce20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f02a4acb1c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f02a4acec80" loc="2:/home/hades/tinyos-new/tos/platforms/telosb/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f02a4acec80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f02a4ac50a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MoteClockInit" ref="0x7f02a4aae020" loc="39:/home/hades/tinyos-new/tos/platforms/telosb/MoteClockC.nc">
      <component-ref qname="MoteClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteClockInit" scoped="" ref="0x7f02a4aae020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f02a4aae3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430ClockInit" ref="0x7f02a4aa46c0" loc="40:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430ClockC.nc">
      <component-ref qname="Msp430ClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x7f02a4aa46c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x7f02a4aaa660"/>
        <function-ref name="initTimerB" scoped="" ref="0x7f02a4aa4bd0"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x7f02a4aa4d60"/>
        <function-ref name="initTimerA" scoped="" ref="0x7f02a4aaa020"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x7f02a4aa4a40"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x7f02a4aaa1b0"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x7f02a4aaa340"/>
        <function-ref name="initClocks" scoped="" ref="0x7f02a4aaa4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f02a4aab020" loc="39:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430ClockC.nc">
      <component-ref qname="Msp430ClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f02a4aab020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f02a4aab3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430ClockInit" ref="0x7f02a4a94950" loc="46:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x7f02a4a94950"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x7f02a4a937f0"/>
        <function-ref name="initTimerB" scoped="" ref="0x7f02a4a94e60"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x7f02a4a93020"/>
        <function-ref name="initTimerA" scoped="" ref="0x7f02a4a931b0"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x7f02a4a94cd0"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x7f02a4a93340"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x7f02a4a934d0"/>
        <function-ref name="initClocks" scoped="" ref="0x7f02a4a93660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x7f02a4a93b30" loc="47:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerOverride" scoped="" ref="0x7f02a4a93b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x7f02a4a92020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f02a4a942a0" loc="45:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f02a4a942a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f02a4a94620"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA2" ref="0x7f02a4a50a50" loc="42:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA2" scoped="" ref="0x7f02a4a50a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f02a4a50dd0"/>
        <function-ref name="getControl" scoped="" ref="0x7f02a4a4f020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f02a4a4f1b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f02a4a4f340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f02a4a4f4d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f02a4a4f660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f02a4a4f7f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f02a4a4f980"/>
        <function-ref name="setControl" scoped="" ref="0x7f02a4a4fb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB0" ref="0x7f02a4a3e410" loc="51:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB0" scoped="" ref="0x7f02a4a3e410"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f02a4a3e790"/>
        <function-ref name="getControl" scoped="" ref="0x7f02a4a3e920"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f02a4a3eab0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f02a4a3ec40"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f02a4a3edd0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f02a4a3d020"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f02a4a3d1b0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f02a4a3d340"/>
        <function-ref name="setControl" scoped="" ref="0x7f02a4a3d4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA1" ref="0x7f02a4a47d10" loc="47:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA1" scoped="" ref="0x7f02a4a47d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f02a4a460e0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f02a4a46270"/>
        <function-ref name="captured" scoped="" ref="0x7f02a4a46400"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f02a4a46590"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f02a4a46720"/>
        <function-ref name="setEdge" scoped="" ref="0x7f02a4a468b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB3" ref="0x7f02a4a2a020" loc="68:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB3" scoped="" ref="0x7f02a4a2a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f02a4a2a3a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f02a4a2a530"/>
        <function-ref name="captured" scoped="" ref="0x7f02a4a2a6c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f02a4a2a850"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f02a4a2a9e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f02a4a2ab70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA1" ref="0x7f02a4a4c020" loc="44:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA1" scoped="" ref="0x7f02a4a4c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f02a4a4c3a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f02a4a4c530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f02a4a4c6c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f02a4a4c850"/>
        <function-ref name="fired" scoped="" ref="0x7f02a4a4c9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB3" ref="0x7f02a4a31570" loc="61:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB3" scoped="" ref="0x7f02a4a31570"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f02a4a318f0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f02a4a31a80"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f02a4a31c10"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f02a4a31da0"/>
        <function-ref name="fired" scoped="" ref="0x7f02a4a30020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB6" ref="0x7f02a4a27020" loc="71:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB6" scoped="" ref="0x7f02a4a27020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f02a4a273a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f02a4a27530"/>
        <function-ref name="captured" scoped="" ref="0x7f02a4a276c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f02a4a27850"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f02a4a279e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f02a4a27b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB4" ref="0x7f02a4a39a50" loc="55:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB4" scoped="" ref="0x7f02a4a39a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f02a4a39dd0"/>
        <function-ref name="getControl" scoped="" ref="0x7f02a4a37020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f02a4a371b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f02a4a37340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f02a4a374d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f02a4a37660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f02a4a377f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f02a4a37980"/>
        <function-ref name="setControl" scoped="" ref="0x7f02a4a37b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA0" ref="0x7f02a4a570c0" loc="40:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA0" scoped="" ref="0x7f02a4a570c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f02a4a57440"/>
        <function-ref name="getControl" scoped="" ref="0x7f02a4a575d0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f02a4a57760"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f02a4a578f0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f02a4a57a80"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f02a4a57c10"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f02a4a57da0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f02a4a56020"/>
        <function-ref name="setControl" scoped="" ref="0x7f02a4a561b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB1" ref="0x7f02a4a2c020" loc="66:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB1" scoped="" ref="0x7f02a4a2c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f02a4a2c3a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f02a4a2c530"/>
        <function-ref name="captured" scoped="" ref="0x7f02a4a2c6c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f02a4a2c850"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f02a4a2c9e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f02a4a2cb70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB1" ref="0x7f02a4a33890" loc="59:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB1" scoped="" ref="0x7f02a4a33890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f02a4a33c10"/>
        <function-ref name="setEvent" scoped="" ref="0x7f02a4a33da0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f02a4a32020"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f02a4a321b0"/>
        <function-ref name="fired" scoped="" ref="0x7f02a4a32340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB1" ref="0x7f02a4a3d8c0" loc="52:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB1" scoped="" ref="0x7f02a4a3d8c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f02a4a3dd40"/>
        <function-ref name="getControl" scoped="" ref="0x7f02a4a3c020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f02a4a3c1b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f02a4a3c340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f02a4a3c4d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f02a4a3c660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f02a4a3c7f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f02a4a3c980"/>
        <function-ref name="setControl" scoped="" ref="0x7f02a4a3cb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA2" ref="0x7f02a4a46c70" loc="48:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA2" scoped="" ref="0x7f02a4a46c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f02a4a40020"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f02a4a401b0"/>
        <function-ref name="captured" scoped="" ref="0x7f02a4a40340"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f02a4a404d0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f02a4a40660"/>
        <function-ref name="setEdge" scoped="" ref="0x7f02a4a407f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB4" ref="0x7f02a4a29020" loc="69:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB4" scoped="" ref="0x7f02a4a29020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f02a4a293a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f02a4a29530"/>
        <function-ref name="captured" scoped="" ref="0x7f02a4a296c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f02a4a29850"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f02a4a299e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f02a4a29b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB2" ref="0x7f02a4a3b020" loc="53:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB2" scoped="" ref="0x7f02a4a3b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f02a4a3b3a0"/>
        <function-ref name="getControl" scoped="" ref="0x7f02a4a3b530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f02a4a3b6c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f02a4a3b850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f02a4a3b9e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f02a4a3bb70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f02a4a3bd00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f02a4a3a020"/>
        <function-ref name="setControl" scoped="" ref="0x7f02a4a3a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA2" ref="0x7f02a4a4cda0" loc="45:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA2" scoped="" ref="0x7f02a4a4cda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f02a4a48180"/>
        <function-ref name="setEvent" scoped="" ref="0x7f02a4a48310"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f02a4a484a0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f02a4a48630"/>
        <function-ref name="fired" scoped="" ref="0x7f02a4a487c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerA" ref="0x7f02a4a587b0" loc="39:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerA" scoped="" ref="0x7f02a4a587b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f02a4a58b30"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f02a4a58cc0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f02a4a58e50"/>
        <function-ref name="get" scoped="" ref="0x7f02a4a61020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f02a4a611b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f02a4a61340"/>
        <function-ref name="getMode" scoped="" ref="0x7f02a4a614d0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f02a4a61660"/>
        <function-ref name="overflow" scoped="" ref="0x7f02a4a617f0"/>
        <function-ref name="setMode" scoped="" ref="0x7f02a4a61980"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f02a4a61b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB4" ref="0x7f02a4a303e0" loc="62:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB4" scoped="" ref="0x7f02a4a303e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f02a4a30760"/>
        <function-ref name="setEvent" scoped="" ref="0x7f02a4a308f0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f02a4a30a80"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f02a4a30c10"/>
        <function-ref name="fired" scoped="" ref="0x7f02a4a30da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA1" ref="0x7f02a4a565a0" loc="41:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA1" scoped="" ref="0x7f02a4a565a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f02a4a56920"/>
        <function-ref name="getControl" scoped="" ref="0x7f02a4a56ab0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f02a4a56c40"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f02a4a56dd0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f02a4a50020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f02a4a501b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f02a4a50340"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f02a4a504d0"/>
        <function-ref name="setControl" scoped="" ref="0x7f02a4a50660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB5" ref="0x7f02a4a36020" loc="56:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB5" scoped="" ref="0x7f02a4a36020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f02a4a363a0"/>
        <function-ref name="getControl" scoped="" ref="0x7f02a4a36530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f02a4a366c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f02a4a36850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f02a4a369e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f02a4a36b70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f02a4a36d00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f02a4a35020"/>
        <function-ref name="setControl" scoped="" ref="0x7f02a4a351b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA0" ref="0x7f02a4a41dc0" loc="46:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA0" scoped="" ref="0x7f02a4a41dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f02a4a47180"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f02a4a47310"/>
        <function-ref name="captured" scoped="" ref="0x7f02a4a474a0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f02a4a47630"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f02a4a477c0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f02a4a47950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB2" ref="0x7f02a4a2b020" loc="67:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB2" scoped="" ref="0x7f02a4a2b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f02a4a2b3a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f02a4a2b530"/>
        <function-ref name="captured" scoped="" ref="0x7f02a4a2b6c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f02a4a2b850"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f02a4a2b9e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f02a4a2bb70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA0" ref="0x7f02a4a4d140" loc="43:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA0" scoped="" ref="0x7f02a4a4d140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f02a4a4d4c0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f02a4a4d650"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f02a4a4d7e0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f02a4a4d970"/>
        <function-ref name="fired" scoped="" ref="0x7f02a4a4db00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB2" ref="0x7f02a4a32700" loc="60:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB2" scoped="" ref="0x7f02a4a32700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f02a4a32a80"/>
        <function-ref name="setEvent" scoped="" ref="0x7f02a4a32c10"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f02a4a32da0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f02a4a31020"/>
        <function-ref name="fired" scoped="" ref="0x7f02a4a311b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB5" ref="0x7f02a4a28020" loc="70:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB5" scoped="" ref="0x7f02a4a28020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f02a4a283a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f02a4a28530"/>
        <function-ref name="captured" scoped="" ref="0x7f02a4a286c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f02a4a28850"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f02a4a289e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f02a4a28b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB3" ref="0x7f02a4a3a5a0" loc="54:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB3" scoped="" ref="0x7f02a4a3a5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f02a4a3a920"/>
        <function-ref name="getControl" scoped="" ref="0x7f02a4a3aab0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f02a4a3ac40"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f02a4a3add0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f02a4a39020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f02a4a391b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f02a4a39340"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f02a4a394d0"/>
        <function-ref name="setControl" scoped="" ref="0x7f02a4a39660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerB" ref="0x7f02a4a40b70" loc="50:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerB" scoped="" ref="0x7f02a4a40b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f02a4a3f020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f02a4a3f1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f02a4a3f340"/>
        <function-ref name="get" scoped="" ref="0x7f02a4a3f4d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f02a4a3f660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f02a4a3f7f0"/>
        <function-ref name="getMode" scoped="" ref="0x7f02a4a3f980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f02a4a3fb10"/>
        <function-ref name="overflow" scoped="" ref="0x7f02a4a3fca0"/>
        <function-ref name="setMode" scoped="" ref="0x7f02a4a3fe30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f02a4a3e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB5" ref="0x7f02a4a2f1f0" loc="63:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB5" scoped="" ref="0x7f02a4a2f1f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f02a4a2f570"/>
        <function-ref name="setEvent" scoped="" ref="0x7f02a4a2f700"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f02a4a2f890"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f02a4a2fa20"/>
        <function-ref name="fired" scoped="" ref="0x7f02a4a2fbb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB0" ref="0x7f02a4a2d020" loc="65:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB0" scoped="" ref="0x7f02a4a2d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f02a4a2d3a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f02a4a2d530"/>
        <function-ref name="captured" scoped="" ref="0x7f02a4a2d6c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f02a4a2d850"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f02a4a2d9e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f02a4a2db70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB6" ref="0x7f02a4a2e020" loc="64:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB6" scoped="" ref="0x7f02a4a2e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f02a4a2e5a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f02a4a2e730"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f02a4a2e8c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f02a4a2ea50"/>
        <function-ref name="fired" scoped="" ref="0x7f02a4a2ebe0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB0" ref="0x7f02a4a34a20" loc="58:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB0" scoped="" ref="0x7f02a4a34a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f02a4a34da0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f02a4a33020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f02a4a331b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f02a4a33340"/>
        <function-ref name="fired" scoped="" ref="0x7f02a4a334d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB6" ref="0x7f02a4a355a0" loc="57:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB6" scoped="" ref="0x7f02a4a355a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f02a4a35920"/>
        <function-ref name="getControl" scoped="" ref="0x7f02a4a35ab0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f02a4a35c40"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f02a4a35dd0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f02a4a34020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f02a4a341b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f02a4a34340"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f02a4a344d0"/>
        <function-ref name="setControl" scoped="" ref="0x7f02a4a34660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX0" ref="0x7f02a49efaa0" loc="53:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX0" scoped="" ref="0x7f02a49efaa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f02a49efe20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Overflow" ref="0x7f02a49ef450" loc="52:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x7f02a49ef450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f02a49ef7d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX1" ref="0x7f02a49ee120" loc="54:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX1" scoped="" ref="0x7f02a49ee120"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f02a49ee4a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Event" ref="0x7f02a49f0d80" loc="51:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f02a49f0d80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f02a51f8160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f02a49ef180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f02a49f1540" loc="50:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f02a49f1540"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f02a49f18c0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f02a49f1a50"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f02a49f1be0"/>
        <function-ref name="get" scoped="" ref="0x7f02a49f1d70"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f02a49f0020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f02a49f01b0"/>
        <function-ref name="getMode" scoped="" ref="0x7f02a49f0340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f02a49f04d0"/>
        <function-ref name="overflow" scoped="" ref="0x7f02a49f0660"/>
        <function-ref name="setMode" scoped="" ref="0x7f02a49f07f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f02a49f0980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX0" ref="0x7f02a49e7940" loc="53:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX0" scoped="" ref="0x7f02a49e7940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f02a49e7cc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Overflow" ref="0x7f02a49e72f0" loc="52:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x7f02a49e72f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f02a49e7670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX1" ref="0x7f02a49e6020" loc="54:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX1" scoped="" ref="0x7f02a49e6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f02a49e63a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Event" ref="0x7f02a49e8bf0" loc="51:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f02a49e8bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f02a51f8160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f02a49e7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f02a49e93e0" loc="50:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f02a49e93e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f02a49e9760"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f02a49e98f0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f02a49e9a80"/>
        <function-ref name="get" scoped="" ref="0x7f02a49e9c10"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f02a49e9da0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f02a49e8020"/>
        <function-ref name="getMode" scoped="" ref="0x7f02a49e81b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f02a49e8340"/>
        <function-ref name="overflow" scoped="" ref="0x7f02a49e84d0"/>
        <function-ref name="setMode" scoped="" ref="0x7f02a49e8660"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f02a49e87f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f02a499aa90" loc="46:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f02a499aa90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f02a499ae10"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f02a4999020"/>
        <function-ref name="captured" scoped="" ref="0x7f02a49991b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f02a4999340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f02a49994d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f02a4999660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f02a49e39d0" loc="44:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f02a49e39d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f02a49e3d50"/>
        <function-ref name="getControl" scoped="" ref="0x7f02a499b020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f02a499b1b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f02a499b340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f02a499b4d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f02a499b660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f02a499b7f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f02a499b980"/>
        <function-ref name="setControl" scoped="" ref="0x7f02a499bb10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f02a4997020" loc="48:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f02a4997020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f02a49973a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f02a499bde0" loc="45:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f02a499bde0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f02a499a180"/>
        <function-ref name="setEvent" scoped="" ref="0x7f02a499a310"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f02a499a4a0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f02a499a630"/>
        <function-ref name="fired" scoped="" ref="0x7f02a499a7c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f02a4999930" loc="47:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f02a4999930"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f02a4999cb0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f02a4999e40"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f02a4998020"/>
        <function-ref name="get" scoped="" ref="0x7f02a49981b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f02a4998340"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f02a49984d0"/>
        <function-ref name="getMode" scoped="" ref="0x7f02a4998660"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f02a49987f0"/>
        <function-ref name="overflow" scoped="" ref="0x7f02a4998980"/>
        <function-ref name="setMode" scoped="" ref="0x7f02a4998b10"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f02a4998ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f02a4992160" loc="46:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f02a4992160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f02a49924e0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f02a4992670"/>
        <function-ref name="captured" scoped="" ref="0x7f02a4992800"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f02a4992990"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f02a4992b20"/>
        <function-ref name="setEdge" scoped="" ref="0x7f02a4992cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f02a4994020" loc="44:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f02a4994020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f02a49943a0"/>
        <function-ref name="getControl" scoped="" ref="0x7f02a4994530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f02a49946c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f02a4994850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f02a49949e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f02a4994b70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f02a4994d00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f02a4993020"/>
        <function-ref name="setControl" scoped="" ref="0x7f02a49931b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f02a49907a0" loc="48:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f02a49907a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f02a4990b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f02a4993480" loc="45:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f02a4993480"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f02a4993800"/>
        <function-ref name="setEvent" scoped="" ref="0x7f02a4993990"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f02a4993b20"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f02a4993cb0"/>
        <function-ref name="fired" scoped="" ref="0x7f02a4993e40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f02a4991020" loc="47:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f02a4991020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f02a49913a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f02a4991530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f02a49916c0"/>
        <function-ref name="get" scoped="" ref="0x7f02a4991850"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f02a49919e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f02a4991b70"/>
        <function-ref name="getMode" scoped="" ref="0x7f02a4991d00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f02a4990020"/>
        <function-ref name="overflow" scoped="" ref="0x7f02a49901b0"/>
        <function-ref name="setMode" scoped="" ref="0x7f02a4990340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f02a49904d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f02a498a7a0" loc="46:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f02a498a7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f02a498ab20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f02a498acb0"/>
        <function-ref name="captured" scoped="" ref="0x7f02a498ae40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f02a4989020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f02a49891b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f02a4989340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f02a498c6d0" loc="44:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f02a498c6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f02a498ca50"/>
        <function-ref name="getControl" scoped="" ref="0x7f02a498cbe0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f02a498cd70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f02a498b020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f02a498b1b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f02a498b340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f02a498b4d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f02a498b660"/>
        <function-ref name="setControl" scoped="" ref="0x7f02a498b7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f02a4988c50" loc="48:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f02a4988c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f02a4987020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f02a498bac0" loc="45:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f02a498bac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f02a498be40"/>
        <function-ref name="setEvent" scoped="" ref="0x7f02a498a020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f02a498a1b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f02a498a340"/>
        <function-ref name="fired" scoped="" ref="0x7f02a498a4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f02a4989610" loc="47:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f02a4989610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f02a4989990"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f02a4989b20"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f02a4989cb0"/>
        <function-ref name="get" scoped="" ref="0x7f02a4989e40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f02a4988020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f02a49881b0"/>
        <function-ref name="getMode" scoped="" ref="0x7f02a4988340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f02a49884d0"/>
        <function-ref name="overflow" scoped="" ref="0x7f02a4988660"/>
        <function-ref name="setMode" scoped="" ref="0x7f02a49887f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f02a4988980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f02a4983cb0" loc="46:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f02a4983cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f02a49820a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f02a4982230"/>
        <function-ref name="captured" scoped="" ref="0x7f02a49823c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f02a4982550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f02a49826e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f02a4982870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f02a4985b30" loc="44:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f02a4985b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f02a4984020"/>
        <function-ref name="getControl" scoped="" ref="0x7f02a49841b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f02a4984340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f02a49844d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f02a4984660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f02a49847f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f02a4984980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f02a4984b10"/>
        <function-ref name="setControl" scoped="" ref="0x7f02a4984ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f02a49802f0" loc="48:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f02a49802f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f02a4980670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f02a4983020" loc="45:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f02a4983020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f02a49833a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f02a4983530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f02a49836c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f02a4983850"/>
        <function-ref name="fired" scoped="" ref="0x7f02a49839e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f02a4982b40" loc="47:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f02a4982b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f02a4981020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f02a49811b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f02a4981340"/>
        <function-ref name="get" scoped="" ref="0x7f02a49814d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f02a4981660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f02a49817f0"/>
        <function-ref name="getMode" scoped="" ref="0x7f02a4981980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f02a4981b10"/>
        <function-ref name="overflow" scoped="" ref="0x7f02a4981ca0"/>
        <function-ref name="setMode" scoped="" ref="0x7f02a4981e30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f02a4980020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f02a497a2f0" loc="46:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f02a497a2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f02a497a670"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f02a497a800"/>
        <function-ref name="captured" scoped="" ref="0x7f02a497a990"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f02a497ab20"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f02a497acb0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f02a497ae40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f02a497c220" loc="44:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f02a497c220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f02a497c5a0"/>
        <function-ref name="getControl" scoped="" ref="0x7f02a497c730"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f02a497c8c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f02a497ca50"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f02a497cbe0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f02a497cd70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f02a497b020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f02a497b1b0"/>
        <function-ref name="setControl" scoped="" ref="0x7f02a497b340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f02a49787a0" loc="48:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f02a49787a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f02a4978b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f02a497b610" loc="45:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f02a497b610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f02a497b990"/>
        <function-ref name="setEvent" scoped="" ref="0x7f02a497bb20"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f02a497bcb0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f02a497be40"/>
        <function-ref name="fired" scoped="" ref="0x7f02a497a020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f02a4979160" loc="47:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f02a4979160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f02a49794e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f02a4979670"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f02a4979800"/>
        <function-ref name="get" scoped="" ref="0x7f02a4979990"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f02a4979b20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f02a4979cb0"/>
        <function-ref name="getMode" scoped="" ref="0x7f02a4979e40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f02a4978020"/>
        <function-ref name="overflow" scoped="" ref="0x7f02a49781b0"/>
        <function-ref name="setMode" scoped="" ref="0x7f02a4978340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f02a49784d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f02a49737a0" loc="46:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f02a49737a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f02a4973b20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f02a4973cb0"/>
        <function-ref name="captured" scoped="" ref="0x7f02a4973e40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f02a4972020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f02a49721b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f02a4972340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f02a49756d0" loc="44:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f02a49756d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f02a4975a50"/>
        <function-ref name="getControl" scoped="" ref="0x7f02a4975be0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f02a4975d70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f02a4974020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f02a49741b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f02a4974340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f02a49744d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f02a4974660"/>
        <function-ref name="setControl" scoped="" ref="0x7f02a49747f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f02a4971c50" loc="48:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f02a4971c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f02a4970020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f02a4974ac0" loc="45:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f02a4974ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f02a4974e40"/>
        <function-ref name="setEvent" scoped="" ref="0x7f02a4973020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f02a49731b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f02a4973340"/>
        <function-ref name="fired" scoped="" ref="0x7f02a49734d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f02a4972610" loc="47:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f02a4972610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f02a4972990"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f02a4972b20"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f02a4972cb0"/>
        <function-ref name="get" scoped="" ref="0x7f02a4972e40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f02a4971020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f02a49711b0"/>
        <function-ref name="getMode" scoped="" ref="0x7f02a4971340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f02a49714d0"/>
        <function-ref name="overflow" scoped="" ref="0x7f02a4971660"/>
        <function-ref name="setMode" scoped="" ref="0x7f02a49717f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f02a4971980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f02a496bcb0" loc="46:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f02a496bcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f02a496a0a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f02a496a230"/>
        <function-ref name="captured" scoped="" ref="0x7f02a496a3c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f02a496a550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f02a496a6e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f02a496a870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f02a496db30" loc="44:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f02a496db30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f02a496c020"/>
        <function-ref name="getControl" scoped="" ref="0x7f02a496c1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f02a496c340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f02a496c4d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f02a496c660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f02a496c7f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f02a496c980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f02a496cb10"/>
        <function-ref name="setControl" scoped="" ref="0x7f02a496cca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f02a49682f0" loc="48:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f02a49682f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f02a4968670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f02a496b020" loc="45:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f02a496b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f02a496b3a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f02a496b530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f02a496b6c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f02a496b850"/>
        <function-ref name="fired" scoped="" ref="0x7f02a496b9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f02a496ab40" loc="47:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f02a496ab40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f02a4969020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f02a49691b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f02a4969340"/>
        <function-ref name="get" scoped="" ref="0x7f02a49694d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f02a4969660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f02a49697f0"/>
        <function-ref name="getMode" scoped="" ref="0x7f02a4969980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f02a4969b10"/>
        <function-ref name="overflow" scoped="" ref="0x7f02a4969ca0"/>
        <function-ref name="setMode" scoped="" ref="0x7f02a4969e30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f02a4968020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f02a49632f0" loc="46:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f02a49632f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f02a4963670"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f02a4963800"/>
        <function-ref name="captured" scoped="" ref="0x7f02a4963990"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f02a4963b20"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f02a4963cb0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f02a4963e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f02a4965220" loc="44:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f02a4965220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f02a49655a0"/>
        <function-ref name="getControl" scoped="" ref="0x7f02a4965730"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f02a49658c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f02a4965a50"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f02a4965be0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f02a4965d70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f02a4964020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f02a49641b0"/>
        <function-ref name="setControl" scoped="" ref="0x7f02a4964340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f02a49617a0" loc="48:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f02a49617a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f02a4961b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f02a4964610" loc="45:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f02a4964610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f02a4964990"/>
        <function-ref name="setEvent" scoped="" ref="0x7f02a4964b20"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f02a4964cb0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f02a4964e40"/>
        <function-ref name="fired" scoped="" ref="0x7f02a4963020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f02a4962160" loc="47:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f02a4962160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f02a49624e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f02a4962670"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f02a4962800"/>
        <function-ref name="get" scoped="" ref="0x7f02a4962990"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f02a4962b20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f02a4962cb0"/>
        <function-ref name="getMode" scoped="" ref="0x7f02a4962e40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f02a4961020"/>
        <function-ref name="overflow" scoped="" ref="0x7f02a49611b0"/>
        <function-ref name="setMode" scoped="" ref="0x7f02a4961340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f02a49614d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f02a495b7a0" loc="46:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f02a495b7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f02a495bb20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f02a495bcb0"/>
        <function-ref name="captured" scoped="" ref="0x7f02a495be40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f02a495a020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f02a495a1b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f02a495a340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f02a495e6d0" loc="44:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f02a495e6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f02a495ea50"/>
        <function-ref name="getControl" scoped="" ref="0x7f02a495ebe0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f02a495ed70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f02a495c020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f02a495c1b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f02a495c340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f02a495c4d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f02a495c660"/>
        <function-ref name="setControl" scoped="" ref="0x7f02a495c7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f02a4959c50" loc="48:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f02a4959c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f02a4958020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f02a495cac0" loc="45:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f02a495cac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f02a495ce40"/>
        <function-ref name="setEvent" scoped="" ref="0x7f02a495b020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f02a495b1b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f02a495b340"/>
        <function-ref name="fired" scoped="" ref="0x7f02a495b4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f02a495a610" loc="47:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f02a495a610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f02a495a990"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f02a495ab20"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f02a495acb0"/>
        <function-ref name="get" scoped="" ref="0x7f02a495ae40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f02a4959020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f02a49591b0"/>
        <function-ref name="getMode" scoped="" ref="0x7f02a4959340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f02a49594d0"/>
        <function-ref name="overflow" scoped="" ref="0x7f02a4959660"/>
        <function-ref name="setMode" scoped="" ref="0x7f02a49597f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f02a4959980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f02a4954cb0" loc="46:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f02a4954cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f02a49530a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f02a4953230"/>
        <function-ref name="captured" scoped="" ref="0x7f02a49533c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f02a4953550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f02a49536e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f02a4953870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f02a4956b30" loc="44:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f02a4956b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f02a4955020"/>
        <function-ref name="getControl" scoped="" ref="0x7f02a49551b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f02a4955340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f02a49554d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f02a4955660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f02a49557f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f02a4955980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f02a4955b10"/>
        <function-ref name="setControl" scoped="" ref="0x7f02a4955ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f02a49512f0" loc="48:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f02a49512f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f02a4951670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f02a4954020" loc="45:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f02a4954020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f02a49543a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f02a4954530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f02a49546c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f02a4954850"/>
        <function-ref name="fired" scoped="" ref="0x7f02a49549e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f02a4953b40" loc="47:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f02a4953b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f02a4952020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f02a49521b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f02a4952340"/>
        <function-ref name="get" scoped="" ref="0x7f02a49524d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f02a4952660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f02a49527f0"/>
        <function-ref name="getMode" scoped="" ref="0x7f02a4952980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f02a4952b10"/>
        <function-ref name="overflow" scoped="" ref="0x7f02a4952ca0"/>
        <function-ref name="setMode" scoped="" ref="0x7f02a4952e30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f02a4951020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerB1" ref="0x7f02a494a240" loc="7:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerB1" scoped="" ref="0x7f02a494a240"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f02a494a5c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerA0" ref="0x7f02a494faa0" loc="4:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerA0" scoped="" ref="0x7f02a494faa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f02a494fe20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerA1" ref="0x7f02a494b260" loc="5:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerA1" scoped="" ref="0x7f02a494b260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f02a494b5e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerB0" ref="0x7f02a494b9f0" loc="6:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerB0" scoped="" ref="0x7f02a494b9f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f02a494bd70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x7f02a4be94c0" loc="55:/home/hades/tinyos-new/tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerOverride" scoped="" ref="0x7f02a4be94c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x7f02a4be9840"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x7f02a4efd3b0" loc="51:/home/hades/tinyos-new/tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuSleep" scoped="" ref="0x7f02a4efd3b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="irq_preamble" scoped="" ref="0x7f02a4efd730"/>
        <function-ref name="irq_postamble" scoped="" ref="0x7f02a4efd8c0"/>
        <function-ref name="sleep" scoped="" ref="0x7f02a4efda50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x7f02a4d25be0" loc="52:/home/hades/tinyos-new/tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerState" scoped="" ref="0x7f02a4d25be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x7f02a4e61020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430ClockInit" ref="0x7f02a4aacb50" loc="39:/home/hades/tinyos-new/tos/platforms/telosb/MoteClockP.nc">
      <component-ref qname="MoteClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x7f02a4aacb50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x7f02a4913b10"/>
        <function-ref name="initTimerB" scoped="" ref="0x7f02a49131b0"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x7f02a4913340"/>
        <function-ref name="initTimerA" scoped="" ref="0x7f02a49134d0"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x7f02a4913020"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x7f02a4913660"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x7f02a49137f0"/>
        <function-ref name="initClocks" scoped="" ref="0x7f02a4913980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x7f02a4907dc0" loc="60:/home/hades/tinyos-new/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SoftwareInit" scoped="" ref="0x7f02a4907dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f02a4906180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x7f02a4914590" loc="57:/home/hades/tinyos-new/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x7f02a4914590"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7f02a4914910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x7f02a49076c0" loc="59:/home/hades/tinyos-new/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PlatformInit" scoped="" ref="0x7f02a49076c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f02a4907a40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x7f02a4914c00" loc="58:/home/hades/tinyos-new/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x7f02a4914c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f02a4907020"/>
        <function-ref name="taskLoop" scoped="" ref="0x7f02a49071b0"/>
        <function-ref name="runNextTask" scoped="" ref="0x7f02a4907340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x7f02a4fd54f0" loc="48:/home/hades/tinyos-new/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TaskBasic" scoped="" ref="0x7f02a4fd54f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f02a51f8160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f02a4fd5870"/>
        <function-ref name="runTask" scoped="" ref="0x7f02a4fd5a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x7f02a4f663a0" loc="47:/home/hades/tinyos-new/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x7f02a4f663a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f02a4f66720"/>
        <function-ref name="taskLoop" scoped="" ref="0x7f02a4f668b0"/>
        <function-ref name="runNextTask" scoped="" ref="0x7f02a4f66a40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x7f02a4b0f040" loc="56:/home/hades/tinyos-new/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TaskBasic" scoped="" ref="0x7f02a4b0f040"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f02a51f8160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f02a4b0f3c0"/>
        <function-ref name="runTask" scoped="" ref="0x7f02a4b0f550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x7f02a4b0b490" loc="57:/home/hades/tinyos-new/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuSleep" scoped="" ref="0x7f02a4b0b490"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="irq_preamble" scoped="" ref="0x7f02a4b0b810"/>
        <function-ref name="irq_postamble" scoped="" ref="0x7f02a4b0b9a0"/>
        <function-ref name="sleep" scoped="" ref="0x7f02a4b0bb30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x7f02a4b11140" loc="55:/home/hades/tinyos-new/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x7f02a4b11140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f02a4b114c0"/>
        <function-ref name="taskLoop" scoped="" ref="0x7f02a4b11650"/>
        <function-ref name="runNextTask" scoped="" ref="0x7f02a4b117e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x7f02a48ef660" loc="62:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x7f02a48ef660"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7f02a48ef9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0x7f02a48ee020" loc="63:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialControl" scoped="" ref="0x7f02a48ee020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f02a48ee3a0"/>
        <function-ref name="stopDone" scoped="" ref="0x7f02a48ee530"/>
        <function-ref name="start" scoped="" ref="0x7f02a48ee6c0"/>
        <function-ref name="stop" scoped="" ref="0x7f02a48ee850"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartReceive" ref="0x7f02a4898e30" loc="67:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartReceive" scoped="" ref="0x7f02a4898e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f02a48fb1f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f02a48e81e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAMPacket" ref="0x7f02a487ab40" loc="75:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioAMPacket" scoped="" ref="0x7f02a487ab40"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f02a4879020"/>
        <function-ref name="source" scoped="" ref="0x7f02a48791b0"/>
        <function-ref name="address" scoped="" ref="0x7f02a4879340"/>
        <function-ref name="destination" scoped="" ref="0x7f02a48794d0"/>
        <function-ref name="setSource" scoped="" ref="0x7f02a4879660"/>
        <function-ref name="setDestination" scoped="" ref="0x7f02a48797f0"/>
        <function-ref name="type" scoped="" ref="0x7f02a4879980"/>
        <function-ref name="setType" scoped="" ref="0x7f02a4879b10"/>
        <function-ref name="isForMe" scoped="" ref="0x7f02a4879ca0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f02a4879e30"/>
        <function-ref name="localGroup" scoped="" ref="0x7f02a4878020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="uartSendTask" ref="0x7f02a4867410" loc="98:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="uartSendTask" scoped="" ref="0x7f02a4867410"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f02a4867790"/>
        <function-ref name="runTask" scoped="" ref="0x7f02a4867920"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioControl" ref="0x7f02a48eebe0" loc="64:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioControl" scoped="" ref="0x7f02a48eebe0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f02a48ed020"/>
        <function-ref name="stopDone" scoped="" ref="0x7f02a48ed1b0"/>
        <function-ref name="start" scoped="" ref="0x7f02a48ed340"/>
        <function-ref name="stop" scoped="" ref="0x7f02a48ed4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioPacket" ref="0x7f02a487bd70" loc="74:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioPacket" scoped="" ref="0x7f02a487bd70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f02a487a180"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f02a487a310"/>
        <function-ref name="getPayload" scoped="" ref="0x7f02a487a4a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f02a487a630"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f02a487a7c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioReceive" ref="0x7f02a487da50" loc="72:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioReceive" scoped="" ref="0x7f02a487da50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f02a48fb1f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f02a487ddd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="radioSendTask" ref="0x7f02a4865360" loc="99:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="radioSendTask" scoped="" ref="0x7f02a4865360"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f02a48656e0"/>
        <function-ref name="runTask" scoped="" ref="0x7f02a4865870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f02a486c0d0" loc="77:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f02a486c0d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f02a486c550"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f02a486c6e0"/>
        <function-ref name="led1On" scoped="" ref="0x7f02a486c870"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f02a486ca00"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f02a486cb90"/>
        <function-ref name="get" scoped="" ref="0x7f02a486cd20"/>
        <function-ref name="led1Off" scoped="" ref="0x7f02a4877020"/>
        <function-ref name="led2Off" scoped="" ref="0x7f02a4877660"/>
        <function-ref name="set" scoped="" ref="0x7f02a48771b0"/>
        <function-ref name="led0On" scoped="" ref="0x7f02a4877340"/>
        <function-ref name="led2On" scoped="" ref="0x7f02a48774d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartPacket" ref="0x7f02a488f870" loc="68:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartPacket" scoped="" ref="0x7f02a488f870"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f02a488fbf0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f02a488fd80"/>
        <function-ref name="getPayload" scoped="" ref="0x7f02a489f020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f02a489f1b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f02a489f340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioSend" ref="0x7f02a48906e0" loc="71:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioSend" scoped="" ref="0x7f02a48906e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f02a48fb1f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f02a4890a60"/>
        <function-ref name="getPayload" scoped="" ref="0x7f02a4890bf0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f02a4890d80"/>
        <function-ref name="cancel" scoped="" ref="0x7f02a487d020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f02a487d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartSend" ref="0x7f02a48e9020" loc="66:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartSend" scoped="" ref="0x7f02a48e9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f02a48fb1f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f02a48e93a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f02a48e9530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f02a48e96c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f02a48e9850"/>
        <function-ref name="sendDone" scoped="" ref="0x7f02a48e99e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartAMPacket" ref="0x7f02a487e9b0" loc="69:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartAMPacket" scoped="" ref="0x7f02a487e9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f02a487ed30"/>
        <function-ref name="source" scoped="" ref="0x7f02a489a020"/>
        <function-ref name="address" scoped="" ref="0x7f02a489a1b0"/>
        <function-ref name="destination" scoped="" ref="0x7f02a489a340"/>
        <function-ref name="setSource" scoped="" ref="0x7f02a489a4d0"/>
        <function-ref name="setDestination" scoped="" ref="0x7f02a489a660"/>
        <function-ref name="type" scoped="" ref="0x7f02a489a7f0"/>
        <function-ref name="setType" scoped="" ref="0x7f02a489a980"/>
        <function-ref name="isForMe" scoped="" ref="0x7f02a489ab10"/>
        <function-ref name="setGroup" scoped="" ref="0x7f02a489aca0"/>
        <function-ref name="localGroup" scoped="" ref="0x7f02a489ae30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioSnoop" ref="0x7f02a487b6b0" loc="73:BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioSnoop" scoped="" ref="0x7f02a487b6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f02a48fb1f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f02a487ba30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7f02a481a020" loc="46:/home/hades/tinyos-new/tos/system/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f02a481a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f02a481a3a0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f02a481a530"/>
        <function-ref name="led1On" scoped="" ref="0x7f02a481a6c0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f02a481a850"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f02a481a9e0"/>
        <function-ref name="get" scoped="" ref="0x7f02a481ab70"/>
        <function-ref name="led1Off" scoped="" ref="0x7f02a481ad00"/>
        <function-ref name="led2Off" scoped="" ref="0x7f02a48194d0"/>
        <function-ref name="set" scoped="" ref="0x7f02a4819020"/>
        <function-ref name="led0On" scoped="" ref="0x7f02a48191b0"/>
        <function-ref name="led2On" scoped="" ref="0x7f02a4819340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x7f02a4812060" loc="50:/home/hades/tinyos-new/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led0" scoped="" ref="0x7f02a4812060"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f02a48123e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f02a4812570"/>
        <function-ref name="toggle" scoped="" ref="0x7f02a4812700"/>
        <function-ref name="isOutput" scoped="" ref="0x7f02a4812890"/>
        <function-ref name="get" scoped="" ref="0x7f02a4812a20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f02a4812bb0"/>
        <function-ref name="set" scoped="" ref="0x7f02a4812d40"/>
        <function-ref name="clr" scoped="" ref="0x7f02a4811020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f02a4816470" loc="46:/home/hades/tinyos-new/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f02a4816470"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f02a48167f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x7f02a4811340" loc="51:/home/hades/tinyos-new/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led1" scoped="" ref="0x7f02a4811340"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f02a48116c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f02a4811850"/>
        <function-ref name="toggle" scoped="" ref="0x7f02a48119e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f02a4811b70"/>
        <function-ref name="get" scoped="" ref="0x7f02a4811d00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f02a480c020"/>
        <function-ref name="set" scoped="" ref="0x7f02a480c1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f02a480c340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7f02a4816a70" loc="47:/home/hades/tinyos-new/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f02a4816a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f02a4816df0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f02a4814020"/>
        <function-ref name="led1On" scoped="" ref="0x7f02a48141b0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f02a4814340"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f02a48144d0"/>
        <function-ref name="get" scoped="" ref="0x7f02a4814660"/>
        <function-ref name="led1Off" scoped="" ref="0x7f02a48147f0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f02a4814e30"/>
        <function-ref name="set" scoped="" ref="0x7f02a4814980"/>
        <function-ref name="led0On" scoped="" ref="0x7f02a4814b10"/>
        <function-ref name="led2On" scoped="" ref="0x7f02a4814ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x7f02a480c660" loc="52:/home/hades/tinyos-new/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led2" scoped="" ref="0x7f02a480c660"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f02a480c9e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f02a480cb70"/>
        <function-ref name="toggle" scoped="" ref="0x7f02a480cd00"/>
        <function-ref name="isOutput" scoped="" ref="0x7f02a480b020"/>
        <function-ref name="get" scoped="" ref="0x7f02a480b1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f02a480b340"/>
        <function-ref name="set" scoped="" ref="0x7f02a480b4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f02a480b660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x7f02a4817af0" loc="41:/home/hades/tinyos-new/tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led0" scoped="" ref="0x7f02a4817af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f02a4817e70"/>
        <function-ref name="isInput" scoped="" ref="0x7f02a47f0030"/>
        <function-ref name="toggle" scoped="" ref="0x7f02a47f01c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f02a47f0350"/>
        <function-ref name="get" scoped="" ref="0x7f02a47f04e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f02a47f0670"/>
        <function-ref name="set" scoped="" ref="0x7f02a47f0800"/>
        <function-ref name="clr" scoped="" ref="0x7f02a47f0990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x7f02a47f0cf0" loc="42:/home/hades/tinyos-new/tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led1" scoped="" ref="0x7f02a47f0cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f02a47ef0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f02a47ef230"/>
        <function-ref name="toggle" scoped="" ref="0x7f02a47ef3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f02a47ef550"/>
        <function-ref name="get" scoped="" ref="0x7f02a47ef6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f02a47ef870"/>
        <function-ref name="set" scoped="" ref="0x7f02a47efa00"/>
        <function-ref name="clr" scoped="" ref="0x7f02a47efb90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x7f02a47ed2e0" loc="44:/home/hades/tinyos-new/tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f02a47ed2e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f02a47ed660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x7f02a47ee020" loc="43:/home/hades/tinyos-new/tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led2" scoped="" ref="0x7f02a47ee020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f02a47ee3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f02a47ee530"/>
        <function-ref name="toggle" scoped="" ref="0x7f02a47ee6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f02a47ee850"/>
        <function-ref name="get" scoped="" ref="0x7f02a47ee9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f02a47eeb70"/>
        <function-ref name="set" scoped="" ref="0x7f02a47eed00"/>
        <function-ref name="clr" scoped="" ref="0x7f02a47ed020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x7f02a47d7810" loc="53:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x7f02a47d7810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f02a47d7b90"/>
        <function-ref name="isInput" scoped="" ref="0x7f02a47d7d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f02a47d6020"/>
        <function-ref name="toggle" scoped="" ref="0x7f02a47d61b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f02a47d6340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f02a47d64d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f02a47d6660"/>
        <function-ref name="get" scoped="" ref="0x7f02a47d67f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f02a47d6980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f02a47d6b10"/>
        <function-ref name="set" scoped="" ref="0x7f02a47d6ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f02a47d6e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f02a47d5020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f02a47d52b0"/>
        <function-ref name="clr" scoped="" ref="0x7f02a47d5440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x7f02a47c3810" loc="66:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x7f02a47c3810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f02a47c3b90"/>
        <function-ref name="isInput" scoped="" ref="0x7f02a47c3d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f02a47c2020"/>
        <function-ref name="toggle" scoped="" ref="0x7f02a47c21b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f02a47c2340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f02a47c24d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f02a47c2660"/>
        <function-ref name="get" scoped="" ref="0x7f02a47c27f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f02a47c2980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f02a47c2b10"/>
        <function-ref name="set" scoped="" ref="0x7f02a47c2ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f02a47c2e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f02a47c1020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f02a47c12b0"/>
        <function-ref name="clr" scoped="" ref="0x7f02a47c1440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SDA" ref="0x7f02a4779ca0" loc="145:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SDA" scoped="" ref="0x7f02a4779ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f02a47780a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f02a4778230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f02a47783c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f02a4778550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f02a47786e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f02a4778870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f02a4778a00"/>
        <function-ref name="get" scoped="" ref="0x7f02a4778b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f02a4778d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f02a4777020"/>
        <function-ref name="set" scoped="" ref="0x7f02a47771b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f02a4777340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f02a47774d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f02a4777760"/>
        <function-ref name="clr" scoped="" ref="0x7f02a47778f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC6" ref="0x7f02a4755cb0" loc="165:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC6" scoped="" ref="0x7f02a4755cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f02a47540a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f02a4754230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f02a47543c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f02a4754550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f02a47546e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f02a4754870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f02a4754a00"/>
        <function-ref name="get" scoped="" ref="0x7f02a4754b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f02a4754d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f02a4753020"/>
        <function-ref name="set" scoped="" ref="0x7f02a47531b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f02a4753340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f02a47534d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f02a4753760"/>
        <function-ref name="clr" scoped="" ref="0x7f02a47538f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SOMI0" ref="0x7f02a4777cc0" loc="146:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI0" scoped="" ref="0x7f02a4777cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f02a47760a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f02a4776230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f02a47763c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f02a4776550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f02a47766e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f02a4776870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f02a4776a00"/>
        <function-ref name="get" scoped="" ref="0x7f02a4776b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f02a4776d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f02a4775020"/>
        <function-ref name="set" scoped="" ref="0x7f02a47751b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f02a4775340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f02a47754d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f02a4775760"/>
        <function-ref name="clr" scoped="" ref="0x7f02a47758f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port30" ref="0x7f02a47bf810" loc="71:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port30" scoped="" ref="0x7f02a47bf810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f02a47bfb90"/>
        <function-ref name="isInput" scoped="" ref="0x7f02a47bfd20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f02a47be020"/>
        <function-ref name="toggle" scoped="" ref="0x7f02a47be1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f02a47be340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f02a47be4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f02a47be660"/>
        <function-ref name="get" scoped="" ref="0x7f02a47be7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f02a47be980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f02a47beb10"/>
        <function-ref name="set" scoped="" ref="0x7f02a47beca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f02a47bee30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f02a47bd020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f02a47bd2b0"/>
        <function-ref name="clr" scoped="" ref="0x7f02a47bd440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port42" ref="0x7f02a47aa9a0" loc="84:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port42" scoped="" ref="0x7f02a47aa9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f02a47aad20"/>
        <function-ref name="isInput" scoped="" ref="0x7f02a47a9020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f02a47a91b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f02a47a9340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f02a47a94d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f02a47a9660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f02a47a97f0"/>
        <function-ref name="get" scoped="" ref="0x7f02a47a9980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f02a47a9b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f02a47a9ca0"/>
        <function-ref name="set" scoped="" ref="0x7f02a47a9e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f02a47a8020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f02a47a81b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f02a47a8440"/>
        <function-ref name="clr" scoped="" ref="0x7f02a47a85d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port54" ref="0x7f02a47969a0" loc="97:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port54" scoped="" ref="0x7f02a47969a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f02a4796d20"/>
        <function-ref name="isInput" scoped="" ref="0x7f02a4795020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f02a47951b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f02a4795340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f02a47954d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f02a4795660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f02a47957f0"/>
        <function-ref name="get" scoped="" ref="0x7f02a4795980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f02a4795b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f02a4795ca0"/>
        <function-ref name="set" scoped="" ref="0x7f02a4795e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f02a4794020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f02a47941b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f02a4794440"/>
        <function-ref name="clr" scoped="" ref="0x7f02a47945d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port64" ref="0x7f02a47869a0" loc="108:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port64" scoped="" ref="0x7f02a47869a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f02a4786d20"/>
        <function-ref name="isInput" scoped="" ref="0x7f02a4785020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f02a47851b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f02a4785340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f02a47854d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f02a4785660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f02a47857f0"/>
        <function-ref name="get" scoped="" ref="0x7f02a4785980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f02a4785b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f02a4785ca0"/>
        <function-ref name="set" scoped="" ref="0x7f02a4785e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f02a4784020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f02a47841b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f02a4784440"/>
        <function-ref name="clr" scoped="" ref="0x7f02a47845d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UTXD0" ref="0x7f02a4771cc0" loc="149:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD0" scoped="" ref="0x7f02a4771cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f02a47700a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f02a4770230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f02a47703c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f02a4770550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f02a47706e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f02a4770870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f02a4770a00"/>
        <function-ref name="get" scoped="" ref="0x7f02a4770b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f02a4770d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f02a476f020"/>
        <function-ref name="set" scoped="" ref="0x7f02a476f1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f02a476f340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f02a476f4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f02a476f760"/>
        <function-ref name="clr" scoped="" ref="0x7f02a476f8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC0" ref="0x7f02a4761cb0" loc="159:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC0" scoped="" ref="0x7f02a4761cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f02a47600a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f02a4760230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f02a47603c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f02a4760550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f02a47606e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f02a4760870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f02a4760a00"/>
        <function-ref name="get" scoped="" ref="0x7f02a4760b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f02a4760d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f02a475f020"/>
        <function-ref name="set" scoped="" ref="0x7f02a475f1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f02a475f340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f02a475f4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f02a475f760"/>
        <function-ref name="clr" scoped="" ref="0x7f02a475f8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SVSIN" ref="0x7f02a474ccc0" loc="171:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SVSIN" scoped="" ref="0x7f02a474ccc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f02a474b0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f02a474b230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f02a474b3c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f02a474b550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f02a474b6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f02a474b870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f02a474ba00"/>
        <function-ref name="get" scoped="" ref="0x7f02a474bb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f02a474bd20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f02a474a020"/>
        <function-ref name="set" scoped="" ref="0x7f02a474a1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f02a474a340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f02a474a4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f02a474a760"/>
        <function-ref name="clr" scoped="" ref="0x7f02a474a8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x7f02a47d1810" loc="56:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x7f02a47d1810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f02a47d1b90"/>
        <function-ref name="isInput" scoped="" ref="0x7f02a47d1d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f02a47d0020"/>
        <function-ref name="toggle" scoped="" ref="0x7f02a47d01b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f02a47d0340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f02a47d04d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f02a47d0660"/>
        <function-ref name="get" scoped="" ref="0x7f02a47d07f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f02a47d0980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f02a47d0b10"/>
        <function-ref name="set" scoped="" ref="0x7f02a47d0ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f02a47d0e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f02a47cf020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f02a47cf2b0"/>
        <function-ref name="clr" scoped="" ref="0x7f02a47cf440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="URXD0" ref="0x7f02a476fcc0" loc="150:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD0" scoped="" ref="0x7f02a476fcc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f02a476e0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f02a476e230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f02a476e3c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f02a476e550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f02a476e6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f02a476e870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f02a476ea00"/>
        <function-ref name="get" scoped="" ref="0x7f02a476eb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f02a476ed20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f02a476d020"/>
        <function-ref name="set" scoped="" ref="0x7f02a476d1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f02a476d340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f02a476d4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f02a476d760"/>
        <function-ref name="clr" scoped="" ref="0x7f02a476d8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x7f02a47cd810" loc="61:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x7f02a47cd810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f02a47cdb90"/>
        <function-ref name="isInput" scoped="" ref="0x7f02a47cdd20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f02a47cc020"/>
        <function-ref name="toggle" scoped="" ref="0x7f02a47cc1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f02a47cc340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f02a47cc4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f02a47cc660"/>
        <function-ref name="get" scoped="" ref="0x7f02a47cc7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f02a47cc980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f02a47ccb10"/>
        <function-ref name="set" scoped="" ref="0x7f02a47ccca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f02a47cce30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f02a47cb020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f02a47cb2b0"/>
        <function-ref name="clr" scoped="" ref="0x7f02a47cb440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port33" ref="0x7f02a47b9810" loc="74:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port33" scoped="" ref="0x7f02a47b9810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f02a47b9b90"/>
        <function-ref name="isInput" scoped="" ref="0x7f02a47b9d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f02a47b8020"/>
        <function-ref name="toggle" scoped="" ref="0x7f02a47b81b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f02a47b8340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f02a47b84d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f02a47b8660"/>
        <function-ref name="get" scoped="" ref="0x7f02a47b87f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f02a47b8980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f02a47b8b10"/>
        <function-ref name="set" scoped="" ref="0x7f02a47b8ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f02a47b8e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f02a47b7020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f02a47b72b0"/>
        <function-ref name="clr" scoped="" ref="0x7f02a47b7440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port45" ref="0x7f02a47a49a0" loc="87:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port45" scoped="" ref="0x7f02a47a49a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f02a47a4d20"/>
        <function-ref name="isInput" scoped="" ref="0x7f02a47a3020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f02a47a31b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f02a47a3340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f02a47a34d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f02a47a3660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f02a47a37f0"/>
        <function-ref name="get" scoped="" ref="0x7f02a47a3980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f02a47a3b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f02a47a3ca0"/>
        <function-ref name="set" scoped="" ref="0x7f02a47a3e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f02a47a2020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f02a47a21b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f02a47a2440"/>
        <function-ref name="clr" scoped="" ref="0x7f02a47a25d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port57" ref="0x7f02a47909a0" loc="100:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port57" scoped="" ref="0x7f02a47909a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f02a4790d20"/>
        <function-ref name="isInput" scoped="" ref="0x7f02a478f020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f02a478f1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f02a478f340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f02a478f4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f02a478f660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f02a478f7f0"/>
        <function-ref name="get" scoped="" ref="0x7f02a478f980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f02a478fb10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f02a478fca0"/>
        <function-ref name="set" scoped="" ref="0x7f02a478fe30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f02a478e020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f02a478e1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f02a478e440"/>
        <function-ref name="clr" scoped="" ref="0x7f02a478e5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port67" ref="0x7f02a477f9a0" loc="111:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port67" scoped="" ref="0x7f02a477f9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f02a477fd20"/>
        <function-ref name="isInput" scoped="" ref="0x7f02a477e020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f02a477e1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f02a477e340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f02a477e4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f02a477e660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f02a477e7f0"/>
        <function-ref name="get" scoped="" ref="0x7f02a477e980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f02a477eb10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f02a477eca0"/>
        <function-ref name="set" scoped="" ref="0x7f02a477ee30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f02a477d020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f02a477d1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f02a477d440"/>
        <function-ref name="clr" scoped="" ref="0x7f02a477d5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x7f02a47db810" loc="51:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x7f02a47db810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f02a47dbb90"/>
        <function-ref name="isInput" scoped="" ref="0x7f02a47dbd20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f02a47da020"/>
        <function-ref name="toggle" scoped="" ref="0x7f02a47da1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f02a47da340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f02a47da4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f02a47da660"/>
        <function-ref name="get" scoped="" ref="0x7f02a47da7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f02a47da980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f02a47dab10"/>
        <function-ref name="set" scoped="" ref="0x7f02a47daca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f02a47dae30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f02a47d9020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f02a47d92b0"/>
        <function-ref name="clr" scoped="" ref="0x7f02a47d9440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x7f02a47c7810" loc="64:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x7f02a47c7810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f02a47c7c90"/>
        <function-ref name="isInput" scoped="" ref="0x7f02a47c7e20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f02a47c6020"/>
        <function-ref name="toggle" scoped="" ref="0x7f02a47c61b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f02a47c6340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f02a47c64d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f02a47c6660"/>
        <function-ref name="get" scoped="" ref="0x7f02a47c67f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f02a47c6980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f02a47c6b10"/>
        <function-ref name="set" scoped="" ref="0x7f02a47c6ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f02a47c6e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f02a47c5020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f02a47c52b0"/>
        <function-ref name="clr" scoped="" ref="0x7f02a47c5440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port36" ref="0x7f02a47b3810" loc="77:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port36" scoped="" ref="0x7f02a47b3810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f02a47b3b90"/>
        <function-ref name="isInput" scoped="" ref="0x7f02a47b3d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f02a47b2020"/>
        <function-ref name="toggle" scoped="" ref="0x7f02a47b21b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f02a47b2340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f02a47b24d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f02a47b2660"/>
        <function-ref name="get" scoped="" ref="0x7f02a47b27f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f02a47b2980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f02a47b2b10"/>
        <function-ref name="set" scoped="" ref="0x7f02a47b2ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f02a47b2e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f02a47b1020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f02a47b12b0"/>
        <function-ref name="clr" scoped="" ref="0x7f02a47b1440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SIMO0" ref="0x7f02a477bcc0" loc="144:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO0" scoped="" ref="0x7f02a477bcc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f02a477a0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f02a477a230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f02a477a3c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f02a477a550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f02a477a6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f02a477a870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f02a477aa00"/>
        <function-ref name="get" scoped="" ref="0x7f02a477ab90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f02a477ad20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f02a4779020"/>
        <function-ref name="set" scoped="" ref="0x7f02a47791b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f02a4779340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f02a47794d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f02a4779760"/>
        <function-ref name="clr" scoped="" ref="0x7f02a47798f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC3" ref="0x7f02a475bcb0" loc="162:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC3" scoped="" ref="0x7f02a475bcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f02a475a0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f02a475a230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f02a475a3c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f02a475a550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f02a475a6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f02a475a870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f02a475aa00"/>
        <function-ref name="get" scoped="" ref="0x7f02a475ab90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f02a475ad20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f02a4759020"/>
        <function-ref name="set" scoped="" ref="0x7f02a47591b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f02a4759340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f02a47594d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f02a4759760"/>
        <function-ref name="clr" scoped="" ref="0x7f02a47598f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DAC1" ref="0x7f02a474ecb0" loc="169:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DAC1" scoped="" ref="0x7f02a474ecb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f02a474d0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f02a474d230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f02a474d3c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f02a474d550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f02a474d6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f02a474d870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f02a474da00"/>
        <function-ref name="get" scoped="" ref="0x7f02a474db90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f02a474dd20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f02a474c020"/>
        <function-ref name="set" scoped="" ref="0x7f02a474c1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f02a474c340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f02a474c4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f02a474c760"/>
        <function-ref name="clr" scoped="" ref="0x7f02a474c8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCLK1" ref="0x7f02a4767cc0" loc="155:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK1" scoped="" ref="0x7f02a4767cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f02a47660a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f02a4766230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f02a47663c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f02a4766550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f02a47666e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f02a4766870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f02a4766a00"/>
        <function-ref name="get" scoped="" ref="0x7f02a4766b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f02a4766d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f02a4765020"/>
        <function-ref name="set" scoped="" ref="0x7f02a47651b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f02a4765340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f02a47654d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f02a4765760"/>
        <function-ref name="clr" scoped="" ref="0x7f02a47658f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port40" ref="0x7f02a47ae810" loc="82:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port40" scoped="" ref="0x7f02a47ae810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f02a47aed90"/>
        <function-ref name="isInput" scoped="" ref="0x7f02a47ad020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f02a47ad1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f02a47ad340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f02a47ad4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f02a47ad660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f02a47ad7f0"/>
        <function-ref name="get" scoped="" ref="0x7f02a47ad980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f02a47adb10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f02a47adca0"/>
        <function-ref name="set" scoped="" ref="0x7f02a47ade30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f02a47ac020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f02a47ac1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f02a47ac440"/>
        <function-ref name="clr" scoped="" ref="0x7f02a47ac5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port52" ref="0x7f02a479a9a0" loc="95:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port52" scoped="" ref="0x7f02a479a9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f02a479ad20"/>
        <function-ref name="isInput" scoped="" ref="0x7f02a4799020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f02a47991b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f02a4799340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f02a47994d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f02a4799660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f02a47997f0"/>
        <function-ref name="get" scoped="" ref="0x7f02a4799980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f02a4799b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f02a4799ca0"/>
        <function-ref name="set" scoped="" ref="0x7f02a4799e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f02a4798020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f02a47981b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f02a4798440"/>
        <function-ref name="clr" scoped="" ref="0x7f02a47985d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port62" ref="0x7f02a478a9a0" loc="106:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port62" scoped="" ref="0x7f02a478a9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f02a478ad20"/>
        <function-ref name="isInput" scoped="" ref="0x7f02a4789020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f02a47891b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f02a4789340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f02a47894d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f02a4789660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f02a47897f0"/>
        <function-ref name="get" scoped="" ref="0x7f02a4789980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f02a4789b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f02a4789ca0"/>
        <function-ref name="set" scoped="" ref="0x7f02a4789e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f02a4788020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f02a47881b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f02a4788440"/>
        <function-ref name="clr" scoped="" ref="0x7f02a47885d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC4" ref="0x7f02a4759cb0" loc="163:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC4" scoped="" ref="0x7f02a4759cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f02a47580a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f02a4758230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f02a47583c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f02a4758550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f02a47586e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f02a4758870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f02a4758a00"/>
        <function-ref name="get" scoped="" ref="0x7f02a4758b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f02a4758d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f02a4757020"/>
        <function-ref name="set" scoped="" ref="0x7f02a47571b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f02a4757340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f02a47574d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f02a4757760"/>
        <function-ref name="clr" scoped="" ref="0x7f02a47578f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STE1" ref="0x7f02a476dcb0" loc="152:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STE1" scoped="" ref="0x7f02a476dcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f02a476c0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f02a476c230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f02a476c3c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f02a476c550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f02a476c6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f02a476c870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f02a476ca00"/>
        <function-ref name="get" scoped="" ref="0x7f02a476cb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f02a476cd20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f02a476b020"/>
        <function-ref name="set" scoped="" ref="0x7f02a476b1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f02a476b340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f02a476b4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f02a476b760"/>
        <function-ref name="clr" scoped="" ref="0x7f02a476b8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x7f02a47d5810" loc="54:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x7f02a47d5810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f02a47d5b90"/>
        <function-ref name="isInput" scoped="" ref="0x7f02a47d5d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f02a47d4020"/>
        <function-ref name="toggle" scoped="" ref="0x7f02a47d41b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f02a47d4340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f02a47d44d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f02a47d4660"/>
        <function-ref name="get" scoped="" ref="0x7f02a47d47f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f02a47d4980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f02a47d4b10"/>
        <function-ref name="set" scoped="" ref="0x7f02a47d4ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f02a47d4e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f02a47d3020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f02a47d32b0"/>
        <function-ref name="clr" scoped="" ref="0x7f02a47d3440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x7f02a47c1810" loc="67:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x7f02a47c1810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f02a47c1b90"/>
        <function-ref name="isInput" scoped="" ref="0x7f02a47c1d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f02a47c0020"/>
        <function-ref name="toggle" scoped="" ref="0x7f02a47c01b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f02a47c0340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f02a47c04d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f02a47c0660"/>
        <function-ref name="get" scoped="" ref="0x7f02a47c07f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f02a47c0980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f02a47c0b10"/>
        <function-ref name="set" scoped="" ref="0x7f02a47c0ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f02a47c0e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f02a47bf020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f02a47bf2b0"/>
        <function-ref name="clr" scoped="" ref="0x7f02a47bf440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port60" ref="0x7f02a478e9a0" loc="104:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port60" scoped="" ref="0x7f02a478e9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f02a478ed20"/>
        <function-ref name="isInput" scoped="" ref="0x7f02a478d020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f02a478d1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f02a478d340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f02a478d4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f02a478d660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f02a478d7f0"/>
        <function-ref name="get" scoped="" ref="0x7f02a478d980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f02a478db10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f02a478dca0"/>
        <function-ref name="set" scoped="" ref="0x7f02a478de30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f02a478c020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f02a478c1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f02a478c440"/>
        <function-ref name="clr" scoped="" ref="0x7f02a478c5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port31" ref="0x7f02a47bd810" loc="72:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port31" scoped="" ref="0x7f02a47bd810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f02a47bdb90"/>
        <function-ref name="isInput" scoped="" ref="0x7f02a47bdd20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f02a47bc020"/>
        <function-ref name="toggle" scoped="" ref="0x7f02a47bc1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f02a47bc340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f02a47bc4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f02a47bc660"/>
        <function-ref name="get" scoped="" ref="0x7f02a47bc7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f02a47bc980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f02a47bcb10"/>
        <function-ref name="set" scoped="" ref="0x7f02a47bcca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f02a47bce30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f02a47bb020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f02a47bb2b0"/>
        <function-ref name="clr" scoped="" ref="0x7f02a47bb440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port43" ref="0x7f02a47a89a0" loc="85:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port43" scoped="" ref="0x7f02a47a89a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f02a47a8d20"/>
        <function-ref name="isInput" scoped="" ref="0x7f02a47a7020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f02a47a71b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f02a47a7340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f02a47a74d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f02a47a7660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f02a47a77f0"/>
        <function-ref name="get" scoped="" ref="0x7f02a47a7980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f02a47a7b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f02a47a7ca0"/>
        <function-ref name="set" scoped="" ref="0x7f02a47a7e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f02a47a6020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f02a47a61b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f02a47a6440"/>
        <function-ref name="clr" scoped="" ref="0x7f02a47a65d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port55" ref="0x7f02a47949a0" loc="98:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port55" scoped="" ref="0x7f02a47949a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f02a4794d20"/>
        <function-ref name="isInput" scoped="" ref="0x7f02a4793020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f02a47931b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f02a4793340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f02a47934d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f02a4793660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f02a47937f0"/>
        <function-ref name="get" scoped="" ref="0x7f02a4793980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f02a4793b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f02a4793ca0"/>
        <function-ref name="set" scoped="" ref="0x7f02a4793e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f02a4792020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f02a47921b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f02a4792440"/>
        <function-ref name="clr" scoped="" ref="0x7f02a47925d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port65" ref="0x7f02a47849a0" loc="109:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port65" scoped="" ref="0x7f02a47849a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f02a4784d20"/>
        <function-ref name="isInput" scoped="" ref="0x7f02a4783020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f02a47831b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f02a4783340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f02a47834d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f02a4783660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f02a47837f0"/>
        <function-ref name="get" scoped="" ref="0x7f02a4783980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f02a4783b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f02a4783ca0"/>
        <function-ref name="set" scoped="" ref="0x7f02a4783e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f02a4782020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f02a47821b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f02a4782440"/>
        <function-ref name="clr" scoped="" ref="0x7f02a47825d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SOMI1" ref="0x7f02a4769cc0" loc="154:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI1" scoped="" ref="0x7f02a4769cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f02a47680a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f02a4768230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f02a47683c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f02a4768550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f02a47686e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f02a4768870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f02a4768a00"/>
        <function-ref name="get" scoped="" ref="0x7f02a4768b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f02a4768d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f02a4767020"/>
        <function-ref name="set" scoped="" ref="0x7f02a47671b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f02a4767340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f02a47674d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f02a4767760"/>
        <function-ref name="clr" scoped="" ref="0x7f02a47678f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x7f02a47de870" loc="49:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x7f02a47de870"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f02a47debf0"/>
        <function-ref name="isInput" scoped="" ref="0x7f02a47ded80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f02a47e8020"/>
        <function-ref name="toggle" scoped="" ref="0x7f02a47e81b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f02a47e8340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f02a47e84d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f02a47e8660"/>
        <function-ref name="get" scoped="" ref="0x7f02a47e87f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f02a47e8980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f02a47e8b10"/>
        <function-ref name="set" scoped="" ref="0x7f02a47e8ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f02a47e8e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f02a47e7020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f02a47e72b0"/>
        <function-ref name="clr" scoped="" ref="0x7f02a47e7440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x7f02a47cb810" loc="62:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x7f02a47cb810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f02a47cbb90"/>
        <function-ref name="isInput" scoped="" ref="0x7f02a47cbd20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f02a47ca020"/>
        <function-ref name="toggle" scoped="" ref="0x7f02a47ca1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f02a47ca340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f02a47ca4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f02a47ca660"/>
        <function-ref name="get" scoped="" ref="0x7f02a47ca7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f02a47ca980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f02a47cab10"/>
        <function-ref name="set" scoped="" ref="0x7f02a47caca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f02a47cae30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f02a47c9020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f02a47c92b0"/>
        <function-ref name="clr" scoped="" ref="0x7f02a47c9440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port34" ref="0x7f02a47b7810" loc="75:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port34" scoped="" ref="0x7f02a47b7810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f02a47b7b90"/>
        <function-ref name="isInput" scoped="" ref="0x7f02a47b7d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f02a47b6020"/>
        <function-ref name="toggle" scoped="" ref="0x7f02a47b61b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f02a47b6340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f02a47b64d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f02a47b6660"/>
        <function-ref name="get" scoped="" ref="0x7f02a47b67f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f02a47b6980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f02a47b6b10"/>
        <function-ref name="set" scoped="" ref="0x7f02a47b6ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f02a47b6e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f02a47b5020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f02a47b52b0"/>
        <function-ref name="clr" scoped="" ref="0x7f02a47b5440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port46" ref="0x7f02a47a29a0" loc="88:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port46" scoped="" ref="0x7f02a47a29a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f02a47a2d20"/>
        <function-ref name="isInput" scoped="" ref="0x7f02a47a1020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f02a47a11b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f02a47a1340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f02a47a14d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f02a47a1660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f02a47a17f0"/>
        <function-ref name="get" scoped="" ref="0x7f02a47a1980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f02a47a1b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f02a47a1ca0"/>
        <function-ref name="set" scoped="" ref="0x7f02a47a1e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f02a47a0020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f02a47a01b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f02a47a0440"/>
        <function-ref name="clr" scoped="" ref="0x7f02a47a05d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UTXD1" ref="0x7f02a4765cc0" loc="156:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD1" scoped="" ref="0x7f02a4765cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f02a47640a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f02a4764230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f02a47643c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f02a4764550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f02a47646e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f02a4764870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f02a4764a00"/>
        <function-ref name="get" scoped="" ref="0x7f02a4764b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f02a4764d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f02a4763020"/>
        <function-ref name="set" scoped="" ref="0x7f02a47631b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f02a4763340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f02a47634d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f02a4763760"/>
        <function-ref name="clr" scoped="" ref="0x7f02a47638f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC1" ref="0x7f02a475fcb0" loc="160:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC1" scoped="" ref="0x7f02a475fcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f02a475e0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f02a475e230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f02a475e3c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f02a475e550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f02a475e6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f02a475e870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f02a475ea00"/>
        <function-ref name="get" scoped="" ref="0x7f02a475eb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f02a475ed20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f02a475d020"/>
        <function-ref name="set" scoped="" ref="0x7f02a475d1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f02a475d340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f02a475d4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f02a475d760"/>
        <function-ref name="clr" scoped="" ref="0x7f02a475d8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC7" ref="0x7f02a4753cb0" loc="166:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC7" scoped="" ref="0x7f02a4753cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f02a47510a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f02a4751230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f02a47513c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f02a4751550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f02a47516e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f02a4751870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f02a4751a00"/>
        <function-ref name="get" scoped="" ref="0x7f02a4751b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f02a4751d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f02a4750020"/>
        <function-ref name="set" scoped="" ref="0x7f02a47501b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f02a4750340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f02a47504d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f02a4750760"/>
        <function-ref name="clr" scoped="" ref="0x7f02a47508f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port50" ref="0x7f02a479e9a0" loc="93:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port50" scoped="" ref="0x7f02a479e9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f02a479ed20"/>
        <function-ref name="isInput" scoped="" ref="0x7f02a479d020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f02a479d1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f02a479d340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f02a479d4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f02a479d660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f02a479d7f0"/>
        <function-ref name="get" scoped="" ref="0x7f02a479d980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f02a479db10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f02a479dca0"/>
        <function-ref name="set" scoped="" ref="0x7f02a479de30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f02a479c020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f02a479c1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f02a479c440"/>
        <function-ref name="clr" scoped="" ref="0x7f02a479c5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="URXD1" ref="0x7f02a4763cc0" loc="157:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD1" scoped="" ref="0x7f02a4763cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f02a47620a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f02a4762230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f02a47623c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f02a4762550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f02a47626e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f02a4762870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f02a4762a00"/>
        <function-ref name="get" scoped="" ref="0x7f02a4762b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f02a4762d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f02a4761020"/>
        <function-ref name="set" scoped="" ref="0x7f02a47611b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f02a4761340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f02a47614d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f02a4761760"/>
        <function-ref name="clr" scoped="" ref="0x7f02a47618f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x7f02a47d9810" loc="52:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x7f02a47d9810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f02a47d9b90"/>
        <function-ref name="isInput" scoped="" ref="0x7f02a47d9d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f02a47d8020"/>
        <function-ref name="toggle" scoped="" ref="0x7f02a47d81b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f02a47d8340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f02a47d84d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f02a47d8660"/>
        <function-ref name="get" scoped="" ref="0x7f02a47d87f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f02a47d8980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f02a47d8b10"/>
        <function-ref name="set" scoped="" ref="0x7f02a47d8ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f02a47d8e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f02a47d7020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f02a47d72b0"/>
        <function-ref name="clr" scoped="" ref="0x7f02a47d7440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x7f02a47c5810" loc="65:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x7f02a47c5810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f02a47c5b90"/>
        <function-ref name="isInput" scoped="" ref="0x7f02a47c5d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f02a47c4020"/>
        <function-ref name="toggle" scoped="" ref="0x7f02a47c41b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f02a47c4340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f02a47c44d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f02a47c4660"/>
        <function-ref name="get" scoped="" ref="0x7f02a47c47f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f02a47c4980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f02a47c4b10"/>
        <function-ref name="set" scoped="" ref="0x7f02a47c4ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f02a47c4e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f02a47c3020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f02a47c32b0"/>
        <function-ref name="clr" scoped="" ref="0x7f02a47c3440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port37" ref="0x7f02a47b1810" loc="78:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port37" scoped="" ref="0x7f02a47b1810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f02a47b1b90"/>
        <function-ref name="isInput" scoped="" ref="0x7f02a47b1d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f02a47af020"/>
        <function-ref name="toggle" scoped="" ref="0x7f02a47af1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f02a47af340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f02a47af4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f02a47af660"/>
        <function-ref name="get" scoped="" ref="0x7f02a47af7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f02a47af980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f02a47afb10"/>
        <function-ref name="set" scoped="" ref="0x7f02a47afca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f02a47afe30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f02a47ae020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f02a47ae2b0"/>
        <function-ref name="clr" scoped="" ref="0x7f02a47ae440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SIMO1" ref="0x7f02a476bcc0" loc="153:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO1" scoped="" ref="0x7f02a476bcc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f02a476a0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f02a476a230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f02a476a3c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f02a476a550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f02a476a6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f02a476a870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f02a476aa00"/>
        <function-ref name="get" scoped="" ref="0x7f02a476ab90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f02a476ad20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f02a4769020"/>
        <function-ref name="set" scoped="" ref="0x7f02a47691b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f02a4769340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f02a47694d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f02a4769760"/>
        <function-ref name="clr" scoped="" ref="0x7f02a47698f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC5" ref="0x7f02a4757cb0" loc="164:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC5" scoped="" ref="0x7f02a4757cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f02a47560a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f02a4756230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f02a47563c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f02a4756550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f02a47566e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f02a4756870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f02a4756a00"/>
        <function-ref name="get" scoped="" ref="0x7f02a4756b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f02a4756d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f02a4755020"/>
        <function-ref name="set" scoped="" ref="0x7f02a47551b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f02a4755340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f02a47554d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f02a4755760"/>
        <function-ref name="clr" scoped="" ref="0x7f02a47558f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port41" ref="0x7f02a47ac9a0" loc="83:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port41" scoped="" ref="0x7f02a47ac9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f02a47acd20"/>
        <function-ref name="isInput" scoped="" ref="0x7f02a47ab020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f02a47ab1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f02a47ab340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f02a47ab4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f02a47ab660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f02a47ab7f0"/>
        <function-ref name="get" scoped="" ref="0x7f02a47ab980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f02a47abb10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f02a47abca0"/>
        <function-ref name="set" scoped="" ref="0x7f02a47abe30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f02a47aa020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f02a47aa1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f02a47aa440"/>
        <function-ref name="clr" scoped="" ref="0x7f02a47aa5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port53" ref="0x7f02a47989a0" loc="96:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port53" scoped="" ref="0x7f02a47989a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f02a4798d20"/>
        <function-ref name="isInput" scoped="" ref="0x7f02a4797020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f02a47971b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f02a4797340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f02a47974d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f02a4797660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f02a47977f0"/>
        <function-ref name="get" scoped="" ref="0x7f02a4797980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f02a4797b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f02a4797ca0"/>
        <function-ref name="set" scoped="" ref="0x7f02a4797e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f02a4796020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f02a47961b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f02a4796440"/>
        <function-ref name="clr" scoped="" ref="0x7f02a47965d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port63" ref="0x7f02a47889a0" loc="107:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port63" scoped="" ref="0x7f02a47889a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f02a4788d20"/>
        <function-ref name="isInput" scoped="" ref="0x7f02a4787020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f02a47871b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f02a4787340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f02a47874d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f02a4787660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f02a47877f0"/>
        <function-ref name="get" scoped="" ref="0x7f02a4787980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f02a4787b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f02a4787ca0"/>
        <function-ref name="set" scoped="" ref="0x7f02a4787e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f02a4786020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f02a47861b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f02a4786440"/>
        <function-ref name="clr" scoped="" ref="0x7f02a47865d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x7f02a47d3810" loc="55:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x7f02a47d3810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f02a47d3b90"/>
        <function-ref name="isInput" scoped="" ref="0x7f02a47d3d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f02a47d2020"/>
        <function-ref name="toggle" scoped="" ref="0x7f02a47d21b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f02a47d2340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f02a47d24d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f02a47d2660"/>
        <function-ref name="get" scoped="" ref="0x7f02a47d27f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f02a47d2980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f02a47d2b10"/>
        <function-ref name="set" scoped="" ref="0x7f02a47d2ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f02a47d2e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f02a47d1020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f02a47d12b0"/>
        <function-ref name="clr" scoped="" ref="0x7f02a47d1440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port61" ref="0x7f02a478c9a0" loc="105:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port61" scoped="" ref="0x7f02a478c9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f02a478cd20"/>
        <function-ref name="isInput" scoped="" ref="0x7f02a478b020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f02a478b1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f02a478b340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f02a478b4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f02a478b660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f02a478b7f0"/>
        <function-ref name="get" scoped="" ref="0x7f02a478b980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f02a478bb10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f02a478bca0"/>
        <function-ref name="set" scoped="" ref="0x7f02a478be30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f02a478a020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f02a478a1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f02a478a440"/>
        <function-ref name="clr" scoped="" ref="0x7f02a478a5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x7f02a47cf810" loc="60:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x7f02a47cf810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f02a47cfb90"/>
        <function-ref name="isInput" scoped="" ref="0x7f02a47cfd20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f02a47ce020"/>
        <function-ref name="toggle" scoped="" ref="0x7f02a47ce1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f02a47ce340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f02a47ce4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f02a47ce660"/>
        <function-ref name="get" scoped="" ref="0x7f02a47ce7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f02a47ce980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f02a47ceb10"/>
        <function-ref name="set" scoped="" ref="0x7f02a47ceca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f02a47cee30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f02a47cd020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f02a47cd2b0"/>
        <function-ref name="clr" scoped="" ref="0x7f02a47cd440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port32" ref="0x7f02a47bb810" loc="73:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port32" scoped="" ref="0x7f02a47bb810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f02a47bbb90"/>
        <function-ref name="isInput" scoped="" ref="0x7f02a47bbd20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f02a47ba020"/>
        <function-ref name="toggle" scoped="" ref="0x7f02a47ba1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f02a47ba340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f02a47ba4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f02a47ba660"/>
        <function-ref name="get" scoped="" ref="0x7f02a47ba7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f02a47ba980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f02a47bab10"/>
        <function-ref name="set" scoped="" ref="0x7f02a47baca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f02a47bae30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f02a47b9020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f02a47b92b0"/>
        <function-ref name="clr" scoped="" ref="0x7f02a47b9440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port44" ref="0x7f02a47a69a0" loc="86:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port44" scoped="" ref="0x7f02a47a69a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f02a47a6d20"/>
        <function-ref name="isInput" scoped="" ref="0x7f02a47a5020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f02a47a51b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f02a47a5340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f02a47a54d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f02a47a5660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f02a47a57f0"/>
        <function-ref name="get" scoped="" ref="0x7f02a47a5980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f02a47a5b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f02a47a5ca0"/>
        <function-ref name="set" scoped="" ref="0x7f02a47a5e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f02a47a4020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f02a47a41b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f02a47a4440"/>
        <function-ref name="clr" scoped="" ref="0x7f02a47a45d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port56" ref="0x7f02a47929a0" loc="99:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port56" scoped="" ref="0x7f02a47929a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f02a4792d20"/>
        <function-ref name="isInput" scoped="" ref="0x7f02a4791020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f02a47911b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f02a4791340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f02a47914d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f02a4791660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f02a47917f0"/>
        <function-ref name="get" scoped="" ref="0x7f02a4791980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f02a4791b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f02a4791ca0"/>
        <function-ref name="set" scoped="" ref="0x7f02a4791e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f02a4790020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f02a47901b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f02a4790440"/>
        <function-ref name="clr" scoped="" ref="0x7f02a47905d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port66" ref="0x7f02a47829a0" loc="110:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port66" scoped="" ref="0x7f02a47829a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f02a4782d20"/>
        <function-ref name="isInput" scoped="" ref="0x7f02a4780020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f02a47801b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f02a4780340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f02a47804d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f02a4780660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f02a47807f0"/>
        <function-ref name="get" scoped="" ref="0x7f02a4780980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f02a4780b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f02a4780ca0"/>
        <function-ref name="set" scoped="" ref="0x7f02a4780e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f02a477f020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f02a477f1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f02a477f440"/>
        <function-ref name="clr" scoped="" ref="0x7f02a477f5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x7f02a47e7810" loc="50:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x7f02a47e7810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f02a47e7b90"/>
        <function-ref name="isInput" scoped="" ref="0x7f02a47e7d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f02a47dc020"/>
        <function-ref name="toggle" scoped="" ref="0x7f02a47dc1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f02a47dc340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f02a47dc4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f02a47dc660"/>
        <function-ref name="get" scoped="" ref="0x7f02a47dc7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f02a47dc980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f02a47dcb10"/>
        <function-ref name="set" scoped="" ref="0x7f02a47dcca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f02a47dce30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f02a47db020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f02a47db2b0"/>
        <function-ref name="clr" scoped="" ref="0x7f02a47db440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x7f02a47c9810" loc="63:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x7f02a47c9810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f02a47c9b90"/>
        <function-ref name="isInput" scoped="" ref="0x7f02a47c9d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f02a47c8020"/>
        <function-ref name="toggle" scoped="" ref="0x7f02a47c81b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f02a47c8340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f02a47c84d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f02a47c8660"/>
        <function-ref name="get" scoped="" ref="0x7f02a47c87f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f02a47c8980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f02a47c8b10"/>
        <function-ref name="set" scoped="" ref="0x7f02a47c8ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f02a47c8e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f02a47c7020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f02a47c72b0"/>
        <function-ref name="clr" scoped="" ref="0x7f02a47c7440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port35" ref="0x7f02a47b5810" loc="76:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port35" scoped="" ref="0x7f02a47b5810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f02a47b5b90"/>
        <function-ref name="isInput" scoped="" ref="0x7f02a47b5d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f02a47b4020"/>
        <function-ref name="toggle" scoped="" ref="0x7f02a47b41b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f02a47b4340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f02a47b44d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f02a47b4660"/>
        <function-ref name="get" scoped="" ref="0x7f02a47b47f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f02a47b4980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f02a47b4b10"/>
        <function-ref name="set" scoped="" ref="0x7f02a47b4ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f02a47b4e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f02a47b3020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f02a47b32b0"/>
        <function-ref name="clr" scoped="" ref="0x7f02a47b3440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port47" ref="0x7f02a47a09a0" loc="89:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port47" scoped="" ref="0x7f02a47a09a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f02a47a0d20"/>
        <function-ref name="isInput" scoped="" ref="0x7f02a479f020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f02a479f1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f02a479f340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f02a479f4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f02a479f660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f02a479f7f0"/>
        <function-ref name="get" scoped="" ref="0x7f02a479f980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f02a479fb10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f02a479fca0"/>
        <function-ref name="set" scoped="" ref="0x7f02a479fe30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f02a479e020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f02a479e1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f02a479e440"/>
        <function-ref name="clr" scoped="" ref="0x7f02a479e5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SCL" ref="0x7f02a4773ca0" loc="148:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SCL" scoped="" ref="0x7f02a4773ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f02a47720a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f02a4772230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f02a47723c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f02a4772550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f02a47726e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f02a4772870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f02a4772a00"/>
        <function-ref name="get" scoped="" ref="0x7f02a4772b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f02a4772d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f02a4771020"/>
        <function-ref name="set" scoped="" ref="0x7f02a47711b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f02a4771340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f02a47714d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f02a4771760"/>
        <function-ref name="clr" scoped="" ref="0x7f02a47718f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC2" ref="0x7f02a475dcb0" loc="161:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC2" scoped="" ref="0x7f02a475dcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f02a475c0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f02a475c230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f02a475c3c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f02a475c550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f02a475c6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f02a475c870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f02a475ca00"/>
        <function-ref name="get" scoped="" ref="0x7f02a475cb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f02a475cd20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f02a475b020"/>
        <function-ref name="set" scoped="" ref="0x7f02a475b1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f02a475b340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f02a475b4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f02a475b760"/>
        <function-ref name="clr" scoped="" ref="0x7f02a475b8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCLK0" ref="0x7f02a4775cc0" loc="147:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK0" scoped="" ref="0x7f02a4775cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f02a47740a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f02a4774230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f02a47743c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f02a4774550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f02a47746e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f02a4774870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f02a4774a00"/>
        <function-ref name="get" scoped="" ref="0x7f02a4774b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f02a4774d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f02a4773020"/>
        <function-ref name="set" scoped="" ref="0x7f02a47731b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f02a4773340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f02a47734d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f02a4773760"/>
        <function-ref name="clr" scoped="" ref="0x7f02a47738f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port51" ref="0x7f02a479c9a0" loc="94:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port51" scoped="" ref="0x7f02a479c9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f02a479cd20"/>
        <function-ref name="isInput" scoped="" ref="0x7f02a479b020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f02a479b1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f02a479b340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f02a479b4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f02a479b660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f02a479b7f0"/>
        <function-ref name="get" scoped="" ref="0x7f02a479b980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f02a479bb10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f02a479bca0"/>
        <function-ref name="set" scoped="" ref="0x7f02a479be30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f02a479a020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f02a479a1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f02a479a440"/>
        <function-ref name="clr" scoped="" ref="0x7f02a479a5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DAC0" ref="0x7f02a4750cb0" loc="168:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DAC0" scoped="" ref="0x7f02a4750cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f02a474f0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f02a474f230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f02a474f3c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f02a474f550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f02a474f6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f02a474f870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f02a474fa00"/>
        <function-ref name="get" scoped="" ref="0x7f02a474fb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f02a474fd20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f02a474e020"/>
        <function-ref name="set" scoped="" ref="0x7f02a474e1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f02a474e340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f02a474e4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f02a474e760"/>
        <function-ref name="clr" scoped="" ref="0x7f02a474e8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SVSOUT" ref="0x7f02a474acc0" loc="172:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SVSOUT" scoped="" ref="0x7f02a474acc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f02a47490a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f02a4749230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f02a47493c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f02a4749550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f02a47496e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f02a4749870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f02a4749a00"/>
        <function-ref name="get" scoped="" ref="0x7f02a4749b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f02a4749d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f02a4748020"/>
        <function-ref name="set" scoped="" ref="0x7f02a47481b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f02a4748340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f02a47484d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f02a4748760"/>
        <function-ref name="clr" scoped="" ref="0x7f02a47488f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STE0" ref="0x7f02a477d9f0" loc="143:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STE0" scoped="" ref="0x7f02a477d9f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f02a477c1c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f02a477c350"/>
        <function-ref name="setResistor" scoped="" ref="0x7f02a477c4e0"/>
        <function-ref name="toggle" scoped="" ref="0x7f02a477c670"/>
        <function-ref name="isOutput" scoped="" ref="0x7f02a477c800"/>
        <function-ref name="getResistor" scoped="" ref="0x7f02a477c990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f02a477cb20"/>
        <function-ref name="get" scoped="" ref="0x7f02a477ccb0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f02a477ce40"/>
        <function-ref name="getRaw" scoped="" ref="0x7f02a477b020"/>
        <function-ref name="set" scoped="" ref="0x7f02a477b1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f02a477b340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f02a477b4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f02a477b760"/>
        <function-ref name="clr" scoped="" ref="0x7f02a477b8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f02a4745d10" loc="47:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P10"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f02a4745d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f02a471e0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f02a471e270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f02a471e400"/>
        <function-ref name="toggle" scoped="" ref="0x7f02a471e590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f02a471e720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f02a471e8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f02a471ea40"/>
        <function-ref name="get" scoped="" ref="0x7f02a471ebd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f02a471ed60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f02a471d020"/>
        <function-ref name="set" scoped="" ref="0x7f02a471d1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f02a471d340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f02a471d4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f02a471d760"/>
        <function-ref name="clr" scoped="" ref="0x7f02a471d8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f02a471a740" loc="47:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P11"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f02a471a740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f02a471aac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f02a471ac50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f02a471ade0"/>
        <function-ref name="toggle" scoped="" ref="0x7f02a4719020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f02a47191b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f02a4719340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f02a47194d0"/>
        <function-ref name="get" scoped="" ref="0x7f02a4719660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f02a47197f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f02a4719980"/>
        <function-ref name="set" scoped="" ref="0x7f02a4719b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f02a4719ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f02a4719e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f02a4718120"/>
        <function-ref name="clr" scoped="" ref="0x7f02a47182b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f02a4715100" loc="47:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P12"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f02a4715100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f02a4715480"/>
        <function-ref name="isInput" scoped="" ref="0x7f02a4715610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f02a47157a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f02a4715930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f02a4715ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f02a4715c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f02a4715de0"/>
        <function-ref name="get" scoped="" ref="0x7f02a4714020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f02a47141b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f02a4714340"/>
        <function-ref name="set" scoped="" ref="0x7f02a47144d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f02a4714660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f02a47147f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f02a4714a80"/>
        <function-ref name="clr" scoped="" ref="0x7f02a4714c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f02a4711d10" loc="47:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P13"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f02a4711d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f02a47100e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f02a4710270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f02a4710400"/>
        <function-ref name="toggle" scoped="" ref="0x7f02a4710590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f02a4710720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f02a47108b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f02a4710a40"/>
        <function-ref name="get" scoped="" ref="0x7f02a4710bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f02a4710d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f02a470f020"/>
        <function-ref name="set" scoped="" ref="0x7f02a470f1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f02a470f340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f02a470f4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f02a470f760"/>
        <function-ref name="clr" scoped="" ref="0x7f02a470f8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f02a470c740" loc="47:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P14"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f02a470c740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f02a470cac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f02a470cc50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f02a470cde0"/>
        <function-ref name="toggle" scoped="" ref="0x7f02a470b020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f02a470b1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f02a470b340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f02a470b4d0"/>
        <function-ref name="get" scoped="" ref="0x7f02a470b660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f02a470b7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f02a470b980"/>
        <function-ref name="set" scoped="" ref="0x7f02a470bb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f02a470bca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f02a470be30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f02a470a120"/>
        <function-ref name="clr" scoped="" ref="0x7f02a470a2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f02a4707100" loc="47:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P15"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f02a4707100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f02a4707480"/>
        <function-ref name="isInput" scoped="" ref="0x7f02a4707610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f02a47077a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f02a4707930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f02a4707ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f02a4707c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f02a4707de0"/>
        <function-ref name="get" scoped="" ref="0x7f02a4705020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f02a47051b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f02a4705340"/>
        <function-ref name="set" scoped="" ref="0x7f02a47054d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f02a4705660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f02a47057f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f02a4705a80"/>
        <function-ref name="clr" scoped="" ref="0x7f02a4705c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f02a4702d10" loc="47:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P16"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f02a4702d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f02a47010e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f02a4701270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f02a4701400"/>
        <function-ref name="toggle" scoped="" ref="0x7f02a4701590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f02a4701720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f02a47018b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f02a4701a40"/>
        <function-ref name="get" scoped="" ref="0x7f02a4701bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f02a4701d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f02a4700020"/>
        <function-ref name="set" scoped="" ref="0x7f02a47001b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f02a4700340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f02a47004d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f02a4700760"/>
        <function-ref name="clr" scoped="" ref="0x7f02a47008f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f02a46fd740" loc="47:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P17"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f02a46fd740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f02a46fdac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f02a46fdc50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f02a46fdde0"/>
        <function-ref name="toggle" scoped="" ref="0x7f02a46fc020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f02a46fc1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f02a46fc340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f02a46fc4d0"/>
        <function-ref name="get" scoped="" ref="0x7f02a46fc660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f02a46fc7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f02a46fc980"/>
        <function-ref name="set" scoped="" ref="0x7f02a46fcb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f02a46fcca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f02a46fce30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f02a46fb120"/>
        <function-ref name="clr" scoped="" ref="0x7f02a46fb2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f02a46f8100" loc="47:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P20"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f02a46f8100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f02a46f8480"/>
        <function-ref name="isInput" scoped="" ref="0x7f02a46f8610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f02a46f87a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f02a46f8930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f02a46f8ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f02a46f8c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f02a46f8de0"/>
        <function-ref name="get" scoped="" ref="0x7f02a46f7020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f02a46f71b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f02a46f7340"/>
        <function-ref name="set" scoped="" ref="0x7f02a46f74d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f02a46f7660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f02a46f77f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f02a46f7a80"/>
        <function-ref name="clr" scoped="" ref="0x7f02a46f7c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f02a46f4d10" loc="47:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P21"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f02a46f4d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f02a46f30e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f02a46f3270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f02a46f3400"/>
        <function-ref name="toggle" scoped="" ref="0x7f02a46f3590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f02a46f3720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f02a46f38b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f02a46f3a40"/>
        <function-ref name="get" scoped="" ref="0x7f02a46f3bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f02a46f3d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f02a46f2020"/>
        <function-ref name="set" scoped="" ref="0x7f02a46f21b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f02a46f2340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f02a46f24d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f02a46f2760"/>
        <function-ref name="clr" scoped="" ref="0x7f02a46f28f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f02a46ef740" loc="47:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P22"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f02a46ef740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f02a46efac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f02a46efc50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f02a46efde0"/>
        <function-ref name="toggle" scoped="" ref="0x7f02a46ee020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f02a46ee1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f02a46ee340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f02a46ee4d0"/>
        <function-ref name="get" scoped="" ref="0x7f02a46ee660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f02a46ee7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f02a46ee980"/>
        <function-ref name="set" scoped="" ref="0x7f02a46eeb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f02a46eeca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f02a46eee30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f02a46ed120"/>
        <function-ref name="clr" scoped="" ref="0x7f02a46ed2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f02a46ea100" loc="47:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P23"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f02a46ea100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f02a46ea480"/>
        <function-ref name="isInput" scoped="" ref="0x7f02a46ea610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f02a46ea7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f02a46ea930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f02a46eaac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f02a46eac50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f02a46eade0"/>
        <function-ref name="get" scoped="" ref="0x7f02a46e9020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f02a46e91b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f02a46e9340"/>
        <function-ref name="set" scoped="" ref="0x7f02a46e94d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f02a46e9660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f02a46e97f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f02a46e9a80"/>
        <function-ref name="clr" scoped="" ref="0x7f02a46e9c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f02a46e6d80" loc="47:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P24"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f02a46e6d80"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f02a46e5180"/>
        <function-ref name="isInput" scoped="" ref="0x7f02a46e5310"/>
        <function-ref name="setResistor" scoped="" ref="0x7f02a46e54a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f02a46e5630"/>
        <function-ref name="isOutput" scoped="" ref="0x7f02a46e57c0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f02a46e5950"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f02a46e5ae0"/>
        <function-ref name="get" scoped="" ref="0x7f02a46e5c70"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f02a46e5e00"/>
        <function-ref name="getRaw" scoped="" ref="0x7f02a46e4020"/>
        <function-ref name="set" scoped="" ref="0x7f02a46e41b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f02a46e4340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f02a46e44d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f02a46e4760"/>
        <function-ref name="clr" scoped="" ref="0x7f02a46e48f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f02a46e0740" loc="47:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P25"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f02a46e0740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f02a46e0ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f02a46e0c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f02a46e0de0"/>
        <function-ref name="toggle" scoped="" ref="0x7f02a46df020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f02a46df1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f02a46df340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f02a46df4d0"/>
        <function-ref name="get" scoped="" ref="0x7f02a46df660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f02a46df7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f02a46df980"/>
        <function-ref name="set" scoped="" ref="0x7f02a46dfb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f02a46dfca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f02a46dfe30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f02a46de120"/>
        <function-ref name="clr" scoped="" ref="0x7f02a46de2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f02a46db100" loc="47:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P26"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f02a46db100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f02a46db480"/>
        <function-ref name="isInput" scoped="" ref="0x7f02a46db610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f02a46db7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f02a46db930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f02a46dbac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f02a46dbc50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f02a46dbde0"/>
        <function-ref name="get" scoped="" ref="0x7f02a46da020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f02a46da1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f02a46da340"/>
        <function-ref name="set" scoped="" ref="0x7f02a46da4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f02a46da660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f02a46da7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f02a46daa80"/>
        <function-ref name="clr" scoped="" ref="0x7f02a46dac10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f02a46d7d10" loc="47:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P27"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f02a46d7d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f02a46d60e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f02a46d6270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f02a46d6400"/>
        <function-ref name="toggle" scoped="" ref="0x7f02a46d6590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f02a46d6720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f02a46d68b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f02a46d6a40"/>
        <function-ref name="get" scoped="" ref="0x7f02a46d6bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f02a46d6d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f02a46d5020"/>
        <function-ref name="set" scoped="" ref="0x7f02a46d51b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f02a46d5340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f02a46d54d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f02a46d5760"/>
        <function-ref name="clr" scoped="" ref="0x7f02a46d58f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f02a46d2740" loc="47:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P30"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f02a46d2740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f02a46d2ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f02a46d2c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f02a46d2de0"/>
        <function-ref name="toggle" scoped="" ref="0x7f02a46d1020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f02a46d11b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f02a46d1340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f02a46d14d0"/>
        <function-ref name="get" scoped="" ref="0x7f02a46d1660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f02a46d17f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f02a46d1980"/>
        <function-ref name="set" scoped="" ref="0x7f02a46d1b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f02a46d1ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f02a46d1e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f02a46d0120"/>
        <function-ref name="clr" scoped="" ref="0x7f02a46d02b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f02a46cd100" loc="47:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P31"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f02a46cd100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f02a46cd480"/>
        <function-ref name="isInput" scoped="" ref="0x7f02a46cd610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f02a46cd7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f02a46cd930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f02a46cdac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f02a46cdc50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f02a46cdde0"/>
        <function-ref name="get" scoped="" ref="0x7f02a46cc020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f02a46cc1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f02a46cc340"/>
        <function-ref name="set" scoped="" ref="0x7f02a46cc4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f02a46cc660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f02a46cc7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f02a46cca80"/>
        <function-ref name="clr" scoped="" ref="0x7f02a46ccc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f02a46c9d10" loc="47:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P32"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f02a46c9d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f02a46c80e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f02a46c8270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f02a46c8400"/>
        <function-ref name="toggle" scoped="" ref="0x7f02a46c8590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f02a46c8720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f02a46c88b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f02a46c8a40"/>
        <function-ref name="get" scoped="" ref="0x7f02a46c8bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f02a46c8d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f02a46c7020"/>
        <function-ref name="set" scoped="" ref="0x7f02a46c71b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f02a46c7340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f02a46c74d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f02a46c7760"/>
        <function-ref name="clr" scoped="" ref="0x7f02a46c78f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f02a46c4740" loc="47:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P33"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f02a46c4740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f02a46c4ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f02a46c4c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f02a46c4de0"/>
        <function-ref name="toggle" scoped="" ref="0x7f02a46c3020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f02a46c31b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f02a46c3340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f02a46c34d0"/>
        <function-ref name="get" scoped="" ref="0x7f02a46c3660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f02a46c37f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f02a46c3980"/>
        <function-ref name="set" scoped="" ref="0x7f02a46c3b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f02a46c3ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f02a46c3e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f02a46c2120"/>
        <function-ref name="clr" scoped="" ref="0x7f02a46c22b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f02a46bf100" loc="47:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P34"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f02a46bf100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f02a46bf480"/>
        <function-ref name="isInput" scoped="" ref="0x7f02a46bf610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f02a46bf7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f02a46bf930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f02a46bfac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f02a46bfc50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f02a46bfde0"/>
        <function-ref name="get" scoped="" ref="0x7f02a46bd020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f02a46bd1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f02a46bd340"/>
        <function-ref name="set" scoped="" ref="0x7f02a46bd4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f02a46bd660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f02a46bd7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f02a46bda80"/>
        <function-ref name="clr" scoped="" ref="0x7f02a46bdc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f02a46bad10" loc="47:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P35"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f02a46bad10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f02a46b90e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f02a46b9270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f02a46b9400"/>
        <function-ref name="toggle" scoped="" ref="0x7f02a46b9590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f02a46b9720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f02a46b98b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f02a46b9a40"/>
        <function-ref name="get" scoped="" ref="0x7f02a46b9bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f02a46b9d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f02a46b8020"/>
        <function-ref name="set" scoped="" ref="0x7f02a46b81b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f02a46b8340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f02a46b84d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f02a46b8760"/>
        <function-ref name="clr" scoped="" ref="0x7f02a46b88f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f02a46b5740" loc="47:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P36"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f02a46b5740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f02a46b5ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f02a46b5c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f02a46b5de0"/>
        <function-ref name="toggle" scoped="" ref="0x7f02a46b4020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f02a46b41b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f02a46b4340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f02a46b44d0"/>
        <function-ref name="get" scoped="" ref="0x7f02a46b4660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f02a46b47f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f02a46b4980"/>
        <function-ref name="set" scoped="" ref="0x7f02a46b4b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f02a46b4ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f02a46b4e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f02a46b3120"/>
        <function-ref name="clr" scoped="" ref="0x7f02a46b32b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f02a46b0100" loc="47:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P37"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f02a46b0100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f02a46b0480"/>
        <function-ref name="isInput" scoped="" ref="0x7f02a46b0610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f02a46b07a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f02a46b0930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f02a46b0ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f02a46b0c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f02a46b0de0"/>
        <function-ref name="get" scoped="" ref="0x7f02a46af020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f02a46af1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f02a46af340"/>
        <function-ref name="set" scoped="" ref="0x7f02a46af4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f02a46af660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f02a46af7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f02a46afa80"/>
        <function-ref name="clr" scoped="" ref="0x7f02a46afc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f02a46ace60" loc="47:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P40"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f02a46ace60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f02a46ab210"/>
        <function-ref name="isInput" scoped="" ref="0x7f02a46ab3a0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f02a46ab530"/>
        <function-ref name="toggle" scoped="" ref="0x7f02a46ab6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f02a46ab850"/>
        <function-ref name="getResistor" scoped="" ref="0x7f02a46ab9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f02a46abb70"/>
        <function-ref name="get" scoped="" ref="0x7f02a46abd00"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f02a46aa020"/>
        <function-ref name="getRaw" scoped="" ref="0x7f02a46aa1b0"/>
        <function-ref name="set" scoped="" ref="0x7f02a46aa340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f02a46aa4d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f02a46aa660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f02a46aa8f0"/>
        <function-ref name="clr" scoped="" ref="0x7f02a46aaa80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f02a46a79f0" loc="47:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P41"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f02a46a79f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f02a46a7d70"/>
        <function-ref name="isInput" scoped="" ref="0x7f02a46a6020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f02a46a61b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f02a46a6340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f02a46a64d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f02a46a6660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f02a46a67f0"/>
        <function-ref name="get" scoped="" ref="0x7f02a46a6980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f02a46a6b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f02a46a6ca0"/>
        <function-ref name="set" scoped="" ref="0x7f02a46a6e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f02a46a5020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f02a46a51b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f02a46a5440"/>
        <function-ref name="clr" scoped="" ref="0x7f02a46a55d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f02a46a2460" loc="47:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P42"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f02a46a2460"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f02a46a27e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f02a46a2970"/>
        <function-ref name="setResistor" scoped="" ref="0x7f02a46a2b00"/>
        <function-ref name="toggle" scoped="" ref="0x7f02a46a2c90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f02a46a2e20"/>
        <function-ref name="getResistor" scoped="" ref="0x7f02a46a1020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f02a46a11b0"/>
        <function-ref name="get" scoped="" ref="0x7f02a46a1340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f02a46a14d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f02a46a1660"/>
        <function-ref name="set" scoped="" ref="0x7f02a46a17f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f02a46a1980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f02a46a1b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f02a46a1da0"/>
        <function-ref name="clr" scoped="" ref="0x7f02a46a0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f02a469ee00" loc="47:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P43"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f02a469ee00"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f02a469d1c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f02a469d350"/>
        <function-ref name="setResistor" scoped="" ref="0x7f02a469d4e0"/>
        <function-ref name="toggle" scoped="" ref="0x7f02a469d670"/>
        <function-ref name="isOutput" scoped="" ref="0x7f02a469d800"/>
        <function-ref name="getResistor" scoped="" ref="0x7f02a469d990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f02a469db20"/>
        <function-ref name="get" scoped="" ref="0x7f02a469dcb0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f02a469de40"/>
        <function-ref name="getRaw" scoped="" ref="0x7f02a469c020"/>
        <function-ref name="set" scoped="" ref="0x7f02a469c1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f02a469c340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f02a469c4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f02a469c760"/>
        <function-ref name="clr" scoped="" ref="0x7f02a469c8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f02a4699740" loc="47:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P44"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f02a4699740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f02a4699ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f02a4699c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f02a4699de0"/>
        <function-ref name="toggle" scoped="" ref="0x7f02a4697020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f02a46971b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f02a4697340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f02a46974d0"/>
        <function-ref name="get" scoped="" ref="0x7f02a4697660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f02a46977f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f02a4697980"/>
        <function-ref name="set" scoped="" ref="0x7f02a4697b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f02a4697ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f02a4697e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f02a4696120"/>
        <function-ref name="clr" scoped="" ref="0x7f02a46962b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f02a4693100" loc="47:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P45"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f02a4693100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f02a4693480"/>
        <function-ref name="isInput" scoped="" ref="0x7f02a4693610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f02a46937a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f02a4693930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f02a4693ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f02a4693c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f02a4693de0"/>
        <function-ref name="get" scoped="" ref="0x7f02a4692020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f02a46921b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f02a4692340"/>
        <function-ref name="set" scoped="" ref="0x7f02a46924d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f02a4692660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f02a46927f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f02a4692a80"/>
        <function-ref name="clr" scoped="" ref="0x7f02a4692c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f02a468fd10" loc="47:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P46"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f02a468fd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f02a468e0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f02a468e270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f02a468e400"/>
        <function-ref name="toggle" scoped="" ref="0x7f02a468e590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f02a468e720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f02a468e8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f02a468ea40"/>
        <function-ref name="get" scoped="" ref="0x7f02a468ebd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f02a468ed60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f02a468d020"/>
        <function-ref name="set" scoped="" ref="0x7f02a468d1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f02a468d340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f02a468d4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f02a468d760"/>
        <function-ref name="clr" scoped="" ref="0x7f02a468d8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f02a468a740" loc="47:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P47"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f02a468a740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f02a468aac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f02a468ac50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f02a468ade0"/>
        <function-ref name="toggle" scoped="" ref="0x7f02a4689020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f02a46891b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f02a4689340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f02a46894d0"/>
        <function-ref name="get" scoped="" ref="0x7f02a4689660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f02a46897f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f02a4689980"/>
        <function-ref name="set" scoped="" ref="0x7f02a4689b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f02a4689ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f02a4689e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f02a4688120"/>
        <function-ref name="clr" scoped="" ref="0x7f02a46882b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f02a4685100" loc="47:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P50"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f02a4685100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f02a4685480"/>
        <function-ref name="isInput" scoped="" ref="0x7f02a4685610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f02a46857a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f02a4685930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f02a4685ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f02a4685c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f02a4685de0"/>
        <function-ref name="get" scoped="" ref="0x7f02a4684020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f02a46841b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f02a4684340"/>
        <function-ref name="set" scoped="" ref="0x7f02a46844d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f02a4684660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f02a46847f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f02a4684a80"/>
        <function-ref name="clr" scoped="" ref="0x7f02a4684c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f02a4681d10" loc="47:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P51"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f02a4681d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f02a46800e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f02a4680270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f02a4680400"/>
        <function-ref name="toggle" scoped="" ref="0x7f02a4680590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f02a4680720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f02a46808b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f02a4680a40"/>
        <function-ref name="get" scoped="" ref="0x7f02a4680bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f02a4680d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f02a467f020"/>
        <function-ref name="set" scoped="" ref="0x7f02a467f1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f02a467f340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f02a467f4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f02a467f760"/>
        <function-ref name="clr" scoped="" ref="0x7f02a467f8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f02a467c740" loc="47:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P52"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f02a467c740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f02a467cac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f02a467cc50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f02a467cde0"/>
        <function-ref name="toggle" scoped="" ref="0x7f02a467b020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f02a467b1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f02a467b340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f02a467b4d0"/>
        <function-ref name="get" scoped="" ref="0x7f02a467b660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f02a467b7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f02a467b980"/>
        <function-ref name="set" scoped="" ref="0x7f02a467bb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f02a467bca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f02a467be30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f02a467a120"/>
        <function-ref name="clr" scoped="" ref="0x7f02a467a2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f02a4677100" loc="47:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P53"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f02a4677100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f02a4677480"/>
        <function-ref name="isInput" scoped="" ref="0x7f02a4677610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f02a46777a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f02a4677930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f02a4677ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f02a4677c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f02a4677de0"/>
        <function-ref name="get" scoped="" ref="0x7f02a4676020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f02a46761b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f02a4676340"/>
        <function-ref name="set" scoped="" ref="0x7f02a46764d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f02a4676660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f02a46767f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f02a4676a80"/>
        <function-ref name="clr" scoped="" ref="0x7f02a4676c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f02a4672d10" loc="47:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P54"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f02a4672d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f02a46710e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f02a4671270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f02a4671400"/>
        <function-ref name="toggle" scoped="" ref="0x7f02a4671590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f02a4671720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f02a46718b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f02a4671a40"/>
        <function-ref name="get" scoped="" ref="0x7f02a4671bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f02a4671d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f02a4670020"/>
        <function-ref name="set" scoped="" ref="0x7f02a46701b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f02a4670340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f02a46704d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f02a4670760"/>
        <function-ref name="clr" scoped="" ref="0x7f02a46708f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f02a466d740" loc="47:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P55"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f02a466d740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f02a466dac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f02a466dc50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f02a466dde0"/>
        <function-ref name="toggle" scoped="" ref="0x7f02a466c020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f02a466c1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f02a466c340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f02a466c4d0"/>
        <function-ref name="get" scoped="" ref="0x7f02a466c660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f02a466c7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f02a466c980"/>
        <function-ref name="set" scoped="" ref="0x7f02a466cb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f02a466cca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f02a466ce30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f02a466b120"/>
        <function-ref name="clr" scoped="" ref="0x7f02a466b2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f02a4668100" loc="47:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P56"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f02a4668100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f02a4668480"/>
        <function-ref name="isInput" scoped="" ref="0x7f02a4668610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f02a46687a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f02a4668930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f02a4668ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f02a4668c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f02a4668de0"/>
        <function-ref name="get" scoped="" ref="0x7f02a4667020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f02a46671b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f02a4667340"/>
        <function-ref name="set" scoped="" ref="0x7f02a46674d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f02a4667660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f02a46677f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f02a4667a80"/>
        <function-ref name="clr" scoped="" ref="0x7f02a4667c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f02a4664d10" loc="47:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P57"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f02a4664d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f02a46630e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f02a4663270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f02a4663400"/>
        <function-ref name="toggle" scoped="" ref="0x7f02a4663590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f02a4663720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f02a46638b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f02a4663a40"/>
        <function-ref name="get" scoped="" ref="0x7f02a4663bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f02a4663d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f02a4662020"/>
        <function-ref name="set" scoped="" ref="0x7f02a46621b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f02a4662340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f02a46624d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f02a4662760"/>
        <function-ref name="clr" scoped="" ref="0x7f02a46628f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f02a465f740" loc="47:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P60"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f02a465f740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f02a465fac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f02a465fc50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f02a465fde0"/>
        <function-ref name="toggle" scoped="" ref="0x7f02a465e020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f02a465e1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f02a465e340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f02a465e4d0"/>
        <function-ref name="get" scoped="" ref="0x7f02a465e660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f02a465e7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f02a465e980"/>
        <function-ref name="set" scoped="" ref="0x7f02a465eb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f02a465eca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f02a465ee30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f02a465d120"/>
        <function-ref name="clr" scoped="" ref="0x7f02a465d2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f02a465a100" loc="47:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P61"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f02a465a100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f02a465a480"/>
        <function-ref name="isInput" scoped="" ref="0x7f02a465a610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f02a465a7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f02a465a930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f02a465aac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f02a465ac50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f02a465ade0"/>
        <function-ref name="get" scoped="" ref="0x7f02a4659020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f02a46591b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f02a4659340"/>
        <function-ref name="set" scoped="" ref="0x7f02a46594d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f02a4659660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f02a46597f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f02a4659a80"/>
        <function-ref name="clr" scoped="" ref="0x7f02a4659c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f02a4656d10" loc="47:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P62"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f02a4656d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f02a46550e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f02a4655270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f02a4655400"/>
        <function-ref name="toggle" scoped="" ref="0x7f02a4655590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f02a4655720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f02a46558b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f02a4655a40"/>
        <function-ref name="get" scoped="" ref="0x7f02a4655bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f02a4655d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f02a4654020"/>
        <function-ref name="set" scoped="" ref="0x7f02a46541b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f02a4654340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f02a46544d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f02a4654760"/>
        <function-ref name="clr" scoped="" ref="0x7f02a46548f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f02a4651740" loc="47:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P63"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f02a4651740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f02a4651ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f02a4651c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f02a4651de0"/>
        <function-ref name="toggle" scoped="" ref="0x7f02a464f020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f02a464f1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f02a464f340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f02a464f4d0"/>
        <function-ref name="get" scoped="" ref="0x7f02a464f660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f02a464f7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f02a464f980"/>
        <function-ref name="set" scoped="" ref="0x7f02a464fb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f02a464fca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f02a464fe30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f02a464e120"/>
        <function-ref name="clr" scoped="" ref="0x7f02a464e2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f02a464b100" loc="47:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P64"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f02a464b100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f02a464b480"/>
        <function-ref name="isInput" scoped="" ref="0x7f02a464b610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f02a464b7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f02a464b930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f02a464bac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f02a464bc50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f02a464bde0"/>
        <function-ref name="get" scoped="" ref="0x7f02a464a020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f02a464a1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f02a464a340"/>
        <function-ref name="set" scoped="" ref="0x7f02a464a4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f02a464a660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f02a464a7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f02a464aa80"/>
        <function-ref name="clr" scoped="" ref="0x7f02a464ac10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f02a4647d10" loc="47:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P65"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f02a4647d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f02a46460e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f02a4646270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f02a4646400"/>
        <function-ref name="toggle" scoped="" ref="0x7f02a4646590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f02a4646720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f02a46468b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f02a4646a40"/>
        <function-ref name="get" scoped="" ref="0x7f02a4646bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f02a4646d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f02a4645020"/>
        <function-ref name="set" scoped="" ref="0x7f02a46451b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f02a4645340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f02a46454d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f02a4645760"/>
        <function-ref name="clr" scoped="" ref="0x7f02a46458f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f02a4642740" loc="47:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P66"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f02a4642740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f02a4642ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f02a4642c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f02a4642de0"/>
        <function-ref name="toggle" scoped="" ref="0x7f02a4641020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f02a46411b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f02a4641340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f02a46414d0"/>
        <function-ref name="get" scoped="" ref="0x7f02a4641660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f02a46417f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f02a4641980"/>
        <function-ref name="set" scoped="" ref="0x7f02a4641b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f02a4641ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f02a4641e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f02a4640120"/>
        <function-ref name="clr" scoped="" ref="0x7f02a46402b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f02a463d100" loc="47:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P67"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f02a463d100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f02a463d480"/>
        <function-ref name="isInput" scoped="" ref="0x7f02a463d610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f02a463d7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f02a463d930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f02a463dac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f02a463dc50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f02a463dde0"/>
        <function-ref name="get" scoped="" ref="0x7f02a463c020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f02a463c1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f02a463c340"/>
        <function-ref name="set" scoped="" ref="0x7f02a463c4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f02a463c660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f02a463c7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f02a463ca80"/>
        <function-ref name="clr" scoped="" ref="0x7f02a463cc10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f02a45c52f0" loc="44:/home/hades/tinyos-new/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led0Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f02a45c52f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f02a45c5670"/>
        <function-ref name="isInput" scoped="" ref="0x7f02a45c5800"/>
        <function-ref name="setResistor" scoped="" ref="0x7f02a45c5990"/>
        <function-ref name="toggle" scoped="" ref="0x7f02a45c5b20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f02a45c5cb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f02a45c5e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f02a45c4020"/>
        <function-ref name="get" scoped="" ref="0x7f02a45c41b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f02a45c4340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f02a45c44d0"/>
        <function-ref name="set" scoped="" ref="0x7f02a45c4660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f02a45c47f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f02a45c4980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f02a45c4c10"/>
        <function-ref name="clr" scoped="" ref="0x7f02a45c4da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f02a45d6020" loc="43:/home/hades/tinyos-new/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led0Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f02a45d6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f02a45d63a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f02a45d6530"/>
        <function-ref name="toggle" scoped="" ref="0x7f02a45d66c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f02a45d6850"/>
        <function-ref name="get" scoped="" ref="0x7f02a45d69e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f02a45d6b70"/>
        <function-ref name="set" scoped="" ref="0x7f02a45d6d00"/>
        <function-ref name="clr" scoped="" ref="0x7f02a45c5020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f02a45c1de0" loc="44:/home/hades/tinyos-new/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led1Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f02a45c1de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f02a45c0180"/>
        <function-ref name="isInput" scoped="" ref="0x7f02a45c0310"/>
        <function-ref name="setResistor" scoped="" ref="0x7f02a45c04a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f02a45c0630"/>
        <function-ref name="isOutput" scoped="" ref="0x7f02a45c07c0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f02a45c0950"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f02a45c0ae0"/>
        <function-ref name="get" scoped="" ref="0x7f02a45c0c70"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f02a45c0e00"/>
        <function-ref name="getRaw" scoped="" ref="0x7f02a45bf020"/>
        <function-ref name="set" scoped="" ref="0x7f02a45bf1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f02a45bf340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f02a45bf4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f02a45bf760"/>
        <function-ref name="clr" scoped="" ref="0x7f02a45bf8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f02a45c2b90" loc="43:/home/hades/tinyos-new/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led1Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f02a45c2b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f02a45c1020"/>
        <function-ref name="isInput" scoped="" ref="0x7f02a45c11b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f02a45c1340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f02a45c14d0"/>
        <function-ref name="get" scoped="" ref="0x7f02a45c1660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f02a45c17f0"/>
        <function-ref name="set" scoped="" ref="0x7f02a45c1980"/>
        <function-ref name="clr" scoped="" ref="0x7f02a45c1b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f02a45bb930" loc="44:/home/hades/tinyos-new/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led2Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f02a45bb930"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f02a45bbcb0"/>
        <function-ref name="isInput" scoped="" ref="0x7f02a45bbe40"/>
        <function-ref name="setResistor" scoped="" ref="0x7f02a45ba020"/>
        <function-ref name="toggle" scoped="" ref="0x7f02a45ba1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f02a45ba340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f02a45ba4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f02a45ba660"/>
        <function-ref name="get" scoped="" ref="0x7f02a45ba7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f02a45ba980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f02a45bab10"/>
        <function-ref name="set" scoped="" ref="0x7f02a45baca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f02a45bae30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f02a45b9020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f02a45b92b0"/>
        <function-ref name="clr" scoped="" ref="0x7f02a45b9440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f02a45bc710" loc="43:/home/hades/tinyos-new/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led2Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f02a45bc710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f02a45bca90"/>
        <function-ref name="isInput" scoped="" ref="0x7f02a45bcc20"/>
        <function-ref name="toggle" scoped="" ref="0x7f02a45bcdb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f02a45bb020"/>
        <function-ref name="get" scoped="" ref="0x7f02a45bb1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f02a45bb340"/>
        <function-ref name="set" scoped="" ref="0x7f02a45bb4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f02a45bb660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f02a45aa7b0" loc="61:/home/hades/tinyos-new/tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f02a45aa7b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f02a45aab30"/>
        <function-ref name="stopDone" scoped="" ref="0x7f02a45aacc0"/>
        <function-ref name="start" scoped="" ref="0x7f02a45aae50"/>
        <function-ref name="stop" scoped="" ref="0x7f02a45a8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f02a45a87f0" loc="63:/home/hades/tinyos-new/tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f02a45a87f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f02a48fb1f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f02a45a8b70"/>
        <function-ref name="getPayload" scoped="" ref="0x7f02a45a8d00"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f02a45a7020"/>
        <function-ref name="cancel" scoped="" ref="0x7f02a45a71b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f02a45a7340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7f02a45a6880" loc="65:/home/hades/tinyos-new/tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0x7f02a45a6880"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f02a48fb1f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f02a45a6c00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f02a45a5020" loc="67:/home/hades/tinyos-new/tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f02a45a5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f02a45a53a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f02a45a5530"/>
        <function-ref name="getPayload" scoped="" ref="0x7f02a45a56c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f02a45a5850"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f02a45a59e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x7f02a45a1310" loc="70:/home/hades/tinyos-new/tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f02a45a1310"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f02a45ab7d0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f02a45abb40"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f02a51f8920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f02a459c880"/>
        <function-ref name="clear" scoped="" ref="0x7f02a4593020"/>
        <function-ref name="isValid" scoped="" ref="0x7f02a459c150"/>
        <function-ref name="set" scoped="" ref="0x7f02a4593750"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7f02a45865b0" loc="72:/home/hades/tinyos-new/tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7f02a45865b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f02a4586930"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f02a4586ac0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f02a4586c50"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f02a4586de0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f02a45a7b20" loc="64:/home/hades/tinyos-new/tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f02a45a7b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f02a48fb1f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f02a45a6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7f02a45a2080" loc="69:/home/hades/tinyos-new/tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f02a45a2080"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f02a45a2400"/>
        <function-ref name="noAck" scoped="" ref="0x7f02a45a2590"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f02a45a2720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f02a45a5c90" loc="68:/home/hades/tinyos-new/tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f02a45a5c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f02a45a40a0"/>
        <function-ref name="source" scoped="" ref="0x7f02a45a4230"/>
        <function-ref name="address" scoped="" ref="0x7f02a45a43c0"/>
        <function-ref name="destination" scoped="" ref="0x7f02a45a4550"/>
        <function-ref name="setSource" scoped="" ref="0x7f02a45a46e0"/>
        <function-ref name="setDestination" scoped="" ref="0x7f02a45a4870"/>
        <function-ref name="type" scoped="" ref="0x7f02a45a4a00"/>
        <function-ref name="setType" scoped="" ref="0x7f02a45a4b90"/>
        <function-ref name="isForMe" scoped="" ref="0x7f02a45a4d20"/>
        <function-ref name="setGroup" scoped="" ref="0x7f02a45a3020"/>
        <function-ref name="localGroup" scoped="" ref="0x7f02a45a31b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7f02a45923f0" loc="71:/home/hades/tinyos-new/tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f02a45923f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f02a45ab020"/>
            <typename><typedef-ref name="TMilli" ref="0x7f02a45ab390"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f02a51f8920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f02a4591970"/>
        <function-ref name="clear" scoped="" ref="0x7f02a458f0d0"/>
        <function-ref name="isValid" scoped="" ref="0x7f02a4591240"/>
        <function-ref name="set" scoped="" ref="0x7f02a458f800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f02a457a2f0" loc="55:/home/hades/tinyos-new/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f02a457a2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f02a457a670"/>
        <function-ref name="stopDone" scoped="" ref="0x7f02a457a800"/>
        <function-ref name="start" scoped="" ref="0x7f02a457a990"/>
        <function-ref name="stop" scoped="" ref="0x7f02a457ab20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7f02a45722c0" loc="64:/home/hades/tinyos-new/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7f02a45722c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f02a48fb1f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f02a4572640"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f02a45727d0"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f02a4572960"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f02a4572af0"/>
        <function-ref name="setCca" scoped="" ref="0x7f02a4572c80"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f02a4572e10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x7f02a455e1d0" loc="67:/home/hades/tinyos-new/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendNotifier" scoped="" ref="0x7f02a455e1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f02a48fb1f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x7f02a455e650"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f02a4574020" loc="60:/home/hades/tinyos-new/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f02a4574020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f02a45743a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f02a4574530"/>
        <function-ref name="getPayload" scoped="" ref="0x7f02a45746c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f02a4574850"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f02a45749e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f02a4579320" loc="56:/home/hades/tinyos-new/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f02a4579320"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f02a48fb1f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f02a45796a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f02a4579830"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f02a45799c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f02a4579b50"/>
        <function-ref name="sendDone" scoped="" ref="0x7f02a4579ce0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7f02a45761d0" loc="58:/home/hades/tinyos-new/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0x7f02a45761d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f02a48fb1f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f02a4576550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7f02a456a0f0" loc="61:/home/hades/tinyos-new/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f02a456a0f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f02a456a470"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f02a456a600"/>
        <function-ref name="getRssi" scoped="" ref="0x7f02a456a790"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f02a456a920"/>
        <function-ref name="getPower" scoped="" ref="0x7f02a456aab0"/>
        <function-ref name="getLqi" scoped="" ref="0x7f02a456ac40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7f02a4569170" loc="65:/home/hades/tinyos-new/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7f02a4569170"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f02a45694f0"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f02a4569680"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f02a4569810"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f02a45699a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f02a4577510" loc="57:/home/hades/tinyos-new/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f02a4577510"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f02a48fb1f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f02a4577890"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7f02a4573020" loc="62:/home/hades/tinyos-new/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f02a4573020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f02a45733a0"/>
        <function-ref name="noAck" scoped="" ref="0x7f02a4573530"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f02a45736c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7f02a4555430" loc="66:/home/hades/tinyos-new/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x7f02a4555430"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7f02a45557b0"/>
        <function-ref name="setRetries" scoped="" ref="0x7f02a4555940"/>
        <function-ref name="getRetries" scoped="" ref="0x7f02a4555ad0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7f02a4555c60"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7f02a4555df0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f02a4576800" loc="59:/home/hades/tinyos-new/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f02a4576800"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f02a4576b80"/>
        <function-ref name="source" scoped="" ref="0x7f02a4576d10"/>
        <function-ref name="address" scoped="" ref="0x7f02a4575020"/>
        <function-ref name="destination" scoped="" ref="0x7f02a45751b0"/>
        <function-ref name="setSource" scoped="" ref="0x7f02a4575340"/>
        <function-ref name="setDestination" scoped="" ref="0x7f02a45754d0"/>
        <function-ref name="type" scoped="" ref="0x7f02a4575660"/>
        <function-ref name="setType" scoped="" ref="0x7f02a45757f0"/>
        <function-ref name="isForMe" scoped="" ref="0x7f02a4575980"/>
        <function-ref name="setGroup" scoped="" ref="0x7f02a4575b10"/>
        <function-ref name="localGroup" scoped="" ref="0x7f02a4575ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7f02a4566170" loc="63:/home/hades/tinyos-new/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f02a4566170"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7f02a45664f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f02a4550020" loc="43:/home/hades/tinyos-new/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f02a4550020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f02a45503a0"/>
        <function-ref name="stopDone" scoped="" ref="0x7f02a4550530"/>
        <function-ref name="start" scoped="" ref="0x7f02a45506c0"/>
        <function-ref name="stop" scoped="" ref="0x7f02a4550850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7f02a453d9d0" loc="55:/home/hades/tinyos-new/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f02a453d9d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7f02a453dd50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7f02a453cb70" loc="57:/home/hades/tinyos-new/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x7f02a453cb70"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7f02a453b020"/>
        <function-ref name="setRetries" scoped="" ref="0x7f02a453b1b0"/>
        <function-ref name="getRetries" scoped="" ref="0x7f02a453b340"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7f02a453b4d0"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7f02a453b660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7f02a453e020" loc="53:/home/hades/tinyos-new/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f02a453e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f02a453e3a0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f02a453e530"/>
        <function-ref name="getRssi" scoped="" ref="0x7f02a453e6c0"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f02a453e850"/>
        <function-ref name="getPower" scoped="" ref="0x7f02a453e9e0"/>
        <function-ref name="getLqi" scoped="" ref="0x7f02a453eb70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x7f02a4548a70" loc="50:/home/hades/tinyos-new/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveSend" scoped="" ref="0x7f02a4548a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f02a4548df0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f02a4541020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f02a45411b0"/>
        <function-ref name="cancel" scoped="" ref="0x7f02a4541340"/>
        <function-ref name="sendDone" scoped="" ref="0x7f02a45414d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7f02a453c080" loc="56:/home/hades/tinyos-new/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7f02a453c080"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f02a453c400"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f02a453c590"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f02a453c720"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f02a453c8b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x7f02a4549690" loc="47:/home/hades/tinyos-new/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareReceive" scoped="" ref="0x7f02a4549690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f02a4549a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7f02a453d020" loc="54:/home/hades/tinyos-new/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f02a453d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f02a453d3a0"/>
        <function-ref name="noAck" scoped="" ref="0x7f02a453d530"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f02a453d6c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f02a454f530" loc="45:/home/hades/tinyos-new/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f02a454f530"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f02a51f8160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f02a454f8b0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f02a454fa40"/>
        <function-ref name="request" scoped="" ref="0x7f02a454fbd0"/>
        <function-ref name="granted" scoped="" ref="0x7f02a454fd60"/>
        <function-ref name="isOwner" scoped="" ref="0x7f02a454e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x7f02a4540940" loc="46:/home/hades/tinyos-new/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareSend" scoped="" ref="0x7f02a4540940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f02a4540cc0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f02a4540e50"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f02a4549020"/>
        <function-ref name="cancel" scoped="" ref="0x7f02a45491b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f02a4549340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x7f02a4549d50" loc="48:/home/hades/tinyos-new/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BarePacket" scoped="" ref="0x7f02a4549d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f02a4548100"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f02a4548290"/>
        <function-ref name="getPayload" scoped="" ref="0x7f02a4548420"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f02a45485b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f02a4548740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x7f02a4541840" loc="51:/home/hades/tinyos-new/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveReceive" scoped="" ref="0x7f02a4541840"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f02a4541bc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f02a4538390" loc="44:/home/hades/tinyos-new/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f02a4538390"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f02a4538710"/>
        <function-ref name="stopDone" scoped="" ref="0x7f02a45388a0"/>
        <function-ref name="start" scoped="" ref="0x7f02a4538a30"/>
        <function-ref name="stop" scoped="" ref="0x7f02a4538bc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7f02a4536330" loc="47:/home/hades/tinyos-new/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7f02a4536330"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f02a45366b0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f02a4536840"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f02a45369d0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f02a4536b60"/>
        <function-ref name="setCca" scoped="" ref="0x7f02a4536cf0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f02a4536e80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f02a4538e80" loc="45:/home/hades/tinyos-new/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f02a4538e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f02a4537220"/>
        <function-ref name="getPayload" scoped="" ref="0x7f02a45373b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f02a4537540"/>
        <function-ref name="cancel" scoped="" ref="0x7f02a45376d0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f02a4537860"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f02a4537b40" loc="46:/home/hades/tinyos-new/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f02a4537b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f02a4536020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f02a4535e80" loc="39:/home/hades/tinyos-new/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f02a4535e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f02a4532220"/>
        <function-ref name="stopDone" scoped="" ref="0x7f02a45323b0"/>
        <function-ref name="start" scoped="" ref="0x7f02a4532540"/>
        <function-ref name="stop" scoped="" ref="0x7f02a45326d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7f02a45317e0" loc="41:/home/hades/tinyos-new/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7f02a45317e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f02a4531b60"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f02a4531cf0"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f02a4531e80"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f02a4530030"/>
        <function-ref name="setCca" scoped="" ref="0x7f02a45301c0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f02a4530350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBackoff" ref="0x7f02a45263e0" loc="47:/home/hades/tinyos-new/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubBackoff" scoped="" ref="0x7f02a45263e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f02a4526760"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f02a45268f0"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f02a4526a80"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f02a4526c10"/>
        <function-ref name="setCca" scoped="" ref="0x7f02a4526da0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f02a4523020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7f02a451b7e0" loc="50:/home/hades/tinyos-new/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f02a451b7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f02a451bb60"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f02a451bcf0"/>
        <function-ref name="getRssi" scoped="" ref="0x7f02a451be80"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f02a4518030"/>
        <function-ref name="getPower" scoped="" ref="0x7f02a45181c0"/>
        <function-ref name="getLqi" scoped="" ref="0x7f02a4518350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Transmit" ref="0x7f02a451d4d0" loc="46:/home/hades/tinyos-new/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Transmit" scoped="" ref="0x7f02a451d4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f02a451d850"/>
        <function-ref name="cancel" scoped="" ref="0x7f02a451d9e0"/>
        <function-ref name="modify" scoped="" ref="0x7f02a451db70"/>
        <function-ref name="sendDone" scoped="" ref="0x7f02a451dd00"/>
        <function-ref name="resend" scoped="" ref="0x7f02a4526020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f02a4532990" loc="40:/home/hades/tinyos-new/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f02a4532990"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f02a4532d10"/>
        <function-ref name="getPayload" scoped="" ref="0x7f02a4531020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f02a45311b0"/>
        <function-ref name="cancel" scoped="" ref="0x7f02a4531340"/>
        <function-ref name="sendDone" scoped="" ref="0x7f02a45314d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x7f02a451a840" loc="48:/home/hades/tinyos-new/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x7f02a451a840"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7f02a451abc0"/>
        <function-ref name="rand32" scoped="" ref="0x7f02a451ad50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x7f02a45247a0" loc="45:/home/hades/tinyos-new/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubControl" scoped="" ref="0x7f02a45247a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f02a4524b20"/>
        <function-ref name="stop" scoped="" ref="0x7f02a4524cb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f02a4513d00" loc="51:/home/hades/tinyos-new/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f02a4513d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f02a45170a0"/>
        <function-ref name="getHeader" scoped="" ref="0x7f02a4517230"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f02a45173c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Power" ref="0x7f02a4528b50" loc="44:/home/hades/tinyos-new/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Power" scoped="" ref="0x7f02a4528b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x7f02a452e020"/>
        <function-ref name="rfOff" scoped="" ref="0x7f02a452e1b0"/>
        <function-ref name="rxOn" scoped="" ref="0x7f02a452e340"/>
        <function-ref name="startVReg" scoped="" ref="0x7f02a452e4d0"/>
        <function-ref name="stopVReg" scoped="" ref="0x7f02a452e660"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x7f02a452e7f0"/>
        <function-ref name="stopOscillator" scoped="" ref="0x7f02a452e980"/>
        <function-ref name="startVRegDone" scoped="" ref="0x7f02a452eb10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f02a451c080" loc="49:/home/hades/tinyos-new/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f02a451c080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f02a451c400"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f02a451c590"/>
        <function-ref name="led1On" scoped="" ref="0x7f02a451c720"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f02a451c8b0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f02a451ca40"/>
        <function-ref name="get" scoped="" ref="0x7f02a451cbd0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f02a451cd60"/>
        <function-ref name="led2Off" scoped="" ref="0x7f02a451b4d0"/>
        <function-ref name="set" scoped="" ref="0x7f02a451b020"/>
        <function-ref name="led0On" scoped="" ref="0x7f02a451b1b0"/>
        <function-ref name="led2On" scoped="" ref="0x7f02a451b340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7f02a4530640" loc="43:/home/hades/tinyos-new/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f02a4530640"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f02a45309c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f02a4530b50"/>
        <function-ref name="request" scoped="" ref="0x7f02a4530ce0"/>
        <function-ref name="granted" scoped="" ref="0x7f02a4530e70"/>
        <function-ref name="isOwner" scoped="" ref="0x7f02a452f030"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControlState" ref="0x7f02a450c3f0" loc="52:/home/hades/tinyos-new/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControlState" scoped="" ref="0x7f02a450c3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f02a450c870"/>
        <function-ref name="toIdle" scoped="" ref="0x7f02a450ca00"/>
        <function-ref name="isState" scoped="" ref="0x7f02a450cb90"/>
        <function-ref name="isIdle" scoped="" ref="0x7f02a450cd20"/>
        <function-ref name="requestState" scoped="" ref="0x7f02a4516020"/>
        <function-ref name="forceState" scoped="" ref="0x7f02a45161b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendDone_task" ref="0x7f02a4507020" loc="76:/home/hades/tinyos-new/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="sendDone_task" scoped="" ref="0x7f02a4507020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f02a45073a0"/>
        <function-ref name="runTask" scoped="" ref="0x7f02a4507530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDone_task" ref="0x7f02a4509020" loc="75:/home/hades/tinyos-new/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="stopDone_task" scoped="" ref="0x7f02a4509020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f02a45093a0"/>
        <function-ref name="runTask" scoped="" ref="0x7f02a4509530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startDone_task" ref="0x7f02a450a020" loc="74:/home/hades/tinyos-new/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="startDone_task" scoped="" ref="0x7f02a450a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f02a450a3a0"/>
        <function-ref name="runTask" scoped="" ref="0x7f02a450a530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Config" ref="0x7f02a44b0dc0" loc="45:/home/hades/tinyos-new/tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x7f02a44b0dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7f02a44bc180"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7f02a44bc310"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7f02a44bc4a0"/>
        <function-ref name="syncDone" scoped="" ref="0x7f02a44bc630"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x7f02a44bc7c0"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7f02a44bc950"/>
        <function-ref name="setChannel" scoped="" ref="0x7f02a44bcae0"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7f02a44bcc70"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7f02a44bce00"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7f02a44bb020"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7f02a44bb1b0"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7f02a44bb340"/>
        <function-ref name="sync" scoped="" ref="0x7f02a44bb4d0"/>
        <function-ref name="getChannel" scoped="" ref="0x7f02a44bb760"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7f02a44bb8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadRssi" ref="0x7f02a44ad0c0" loc="47:/home/hades/tinyos-new/tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadRssi" scoped="" ref="0x7f02a44ad0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f02a51f8520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f02a44adcb0"/>
        <function-ref name="readDone" scoped="" ref="0x7f02a44ac170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Power" ref="0x7f02a44bbbf0" loc="46:/home/hades/tinyos-new/tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Power" scoped="" ref="0x7f02a44bbbf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x7f02a44af020"/>
        <function-ref name="rfOff" scoped="" ref="0x7f02a44af1b0"/>
        <function-ref name="rxOn" scoped="" ref="0x7f02a44af340"/>
        <function-ref name="startVReg" scoped="" ref="0x7f02a44af4d0"/>
        <function-ref name="stopVReg" scoped="" ref="0x7f02a44af660"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x7f02a44af7f0"/>
        <function-ref name="stopOscillator" scoped="" ref="0x7f02a44af980"/>
        <function-ref name="startVRegDone" scoped="" ref="0x7f02a44afb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f02a44c1960" loc="44:/home/hades/tinyos-new/tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f02a44c1960"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f02a44c1ce0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f02a44c1e70"/>
        <function-ref name="request" scoped="" ref="0x7f02a44bd030"/>
        <function-ref name="granted" scoped="" ref="0x7f02a44bd1c0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f02a44bd350"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Config" ref="0x7f02a44a6970" loc="46:/home/hades/tinyos-new/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x7f02a44a6970"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7f02a44a6cf0"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7f02a44a6e80"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7f02a44a5030"/>
        <function-ref name="syncDone" scoped="" ref="0x7f02a44a51c0"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x7f02a44a5350"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7f02a44a54e0"/>
        <function-ref name="setChannel" scoped="" ref="0x7f02a44a5670"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7f02a44a5800"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7f02a44a5990"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7f02a44a5b20"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7f02a44a5cb0"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7f02a44a5e40"/>
        <function-ref name="sync" scoped="" ref="0x7f02a44a4020"/>
        <function-ref name="getChannel" scoped="" ref="0x7f02a44a42b0"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7f02a44a4440"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXCTRL1" ref="0x7f02a447e8e0" loc="66:/home/hades/tinyos-new/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7f02a447e8e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f02a447ec60"/>
        <function-ref name="write" scoped="" ref="0x7f02a447edf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalIeeeEui64" ref="0x7f02a449f020" loc="50:/home/hades/tinyos-new/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f02a449f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x7f02a449f3a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StartupTimer" ref="0x7f02a4497d90" loc="52:/home/hades/tinyos-new/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StartupTimer" scoped="" ref="0x7f02a4497d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f02a45ab7d0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f02a45abb40"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f02a51f8920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f02a4496670"/>
        <function-ref name="fired" scoped="" ref="0x7f02a449d5d0"/>
        <function-ref name="startAt" scoped="" ref="0x7f02a4496020"/>
        <function-ref name="isRunning" scoped="" ref="0x7f02a449da90"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f02a4496b30"/>
        <function-ref name="start" scoped="" ref="0x7f02a449ebc0"/>
        <function-ref name="stop" scoped="" ref="0x7f02a449d110"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL0" ref="0x7f02a44825f0" loc="64:/home/hades/tinyos-new/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7f02a44825f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f02a4482970"/>
        <function-ref name="write" scoped="" ref="0x7f02a4482b00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSTN" ref="0x7f02a4493380" loc="54:/home/hades/tinyos-new/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSTN" scoped="" ref="0x7f02a4493380"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f02a4493700"/>
        <function-ref name="isInput" scoped="" ref="0x7f02a4493890"/>
        <function-ref name="toggle" scoped="" ref="0x7f02a4493a20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f02a4493bb0"/>
        <function-ref name="get" scoped="" ref="0x7f02a4493d40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f02a4492020"/>
        <function-ref name="set" scoped="" ref="0x7f02a44921b0"/>
        <function-ref name="clr" scoped="" ref="0x7f02a4492340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadRssi" ref="0x7f02a44a3b40" loc="48:/home/hades/tinyos-new/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadRssi" scoped="" ref="0x7f02a44a3b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f02a51f8520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f02a44a2750"/>
        <function-ref name="readDone" scoped="" ref="0x7f02a44a2bd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="syncDone" ref="0x7f02a446c820" loc="126:/home/hades/tinyos-new/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="syncDone" scoped="" ref="0x7f02a446c820"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f02a446cba0"/>
        <function-ref name="runTask" scoped="" ref="0x7f02a446cd30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSSI" ref="0x7f02a447d1c0" loc="67:/home/hades/tinyos-new/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7f02a447d1c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f02a447d540"/>
        <function-ref name="write" scoped="" ref="0x7f02a447d6d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXCTRL" ref="0x7f02a447da70" loc="68:/home/hades/tinyos-new/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7f02a447da70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f02a447ddf0"/>
        <function-ref name="write" scoped="" ref="0x7f02a447c020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IOCFG0" ref="0x7f02a44873d0" loc="62:/home/hades/tinyos-new/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7f02a44873d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f02a4487750"/>
        <function-ref name="write" scoped="" ref="0x7f02a44878e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x7f02a4488810" loc="57:/home/hades/tinyos-new/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f02a4488810"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x7f02a4488b90"/>
        <function-ref name="changed" scoped="" ref="0x7f02a4488d20"/>
        <function-ref name="amGroup" scoped="" ref="0x7f02a448f020"/>
        <function-ref name="setAddress" scoped="" ref="0x7f02a448f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x7f02a4494060" loc="53:/home/hades/tinyos-new/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x7f02a4494060"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f02a44943e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f02a4494570"/>
        <function-ref name="toggle" scoped="" ref="0x7f02a4494700"/>
        <function-ref name="isOutput" scoped="" ref="0x7f02a4494890"/>
        <function-ref name="get" scoped="" ref="0x7f02a4494a20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f02a4494bb0"/>
        <function-ref name="set" scoped="" ref="0x7f02a4494d40"/>
        <function-ref name="clr" scoped="" ref="0x7f02a4493020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SXOSCOFF" ref="0x7f02a447b160" loc="71:/home/hades/tinyos-new/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7f02a447b160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f02a447b6e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VREN" ref="0x7f02a44926a0" loc="55:/home/hades/tinyos-new/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VREN" scoped="" ref="0x7f02a44926a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f02a4492a20"/>
        <function-ref name="isInput" scoped="" ref="0x7f02a4492bb0"/>
        <function-ref name="toggle" scoped="" ref="0x7f02a4492d40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f02a4491020"/>
        <function-ref name="get" scoped="" ref="0x7f02a44911b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f02a4491340"/>
        <function-ref name="set" scoped="" ref="0x7f02a44914d0"/>
        <function-ref name="clr" scoped="" ref="0x7f02a4491660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f02a44a75c0" loc="44:/home/hades/tinyos-new/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f02a44a75c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f02a44a7940"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL1" ref="0x7f02a447e020" loc="65:/home/hades/tinyos-new/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f02a447e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f02a447e3a0"/>
        <function-ref name="write" scoped="" ref="0x7f02a447e530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SXOSCON" ref="0x7f02a447ba80" loc="72:/home/hades/tinyos-new/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7f02a447ba80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f02a447be00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7f02a447a1d0" loc="74:/home/hades/tinyos-new/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x7f02a447a1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f02a447a550"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f02a447a6e0"/>
        <function-ref name="request" scoped="" ref="0x7f02a447a870"/>
        <function-ref name="granted" scoped="" ref="0x7f02a447aa00"/>
        <function-ref name="isOwner" scoped="" ref="0x7f02a447ab90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SyncResource" ref="0x7f02a4478d90" loc="76:/home/hades/tinyos-new/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SyncResource" scoped="" ref="0x7f02a4478d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f02a4477180"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f02a4477310"/>
        <function-ref name="request" scoped="" ref="0x7f02a44774a0"/>
        <function-ref name="granted" scoped="" ref="0x7f02a4477630"/>
        <function-ref name="isOwner" scoped="" ref="0x7f02a44777c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Power" ref="0x7f02a44a4740" loc="47:/home/hades/tinyos-new/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Power" scoped="" ref="0x7f02a44a4740"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x7f02a44a4ac0"/>
        <function-ref name="rfOff" scoped="" ref="0x7f02a44a4c50"/>
        <function-ref name="rxOn" scoped="" ref="0x7f02a44a4de0"/>
        <function-ref name="startVReg" scoped="" ref="0x7f02a44a3020"/>
        <function-ref name="stopVReg" scoped="" ref="0x7f02a44a31b0"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x7f02a44a3340"/>
        <function-ref name="stopOscillator" scoped="" ref="0x7f02a44a34d0"/>
        <function-ref name="startVRegDone" scoped="" ref="0x7f02a44a3660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IOCFG1" ref="0x7f02a4487c80" loc="63:/home/hades/tinyos-new/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7f02a4487c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f02a44820a0"/>
        <function-ref name="write" scoped="" ref="0x7f02a4482230"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FSCTRL" ref="0x7f02a4480b00" loc="61:/home/hades/tinyos-new/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7f02a4480b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f02a4480e80"/>
        <function-ref name="write" scoped="" ref="0x7f02a4487030"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRXON" ref="0x7f02a44792e0" loc="69:/home/hades/tinyos-new/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7f02a44792e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f02a4479660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f02a4477a80" loc="78:/home/hades/tinyos-new/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f02a4477a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f02a4477e00"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f02a4476020"/>
        <function-ref name="led1On" scoped="" ref="0x7f02a44761b0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f02a4476340"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f02a44764d0"/>
        <function-ref name="get" scoped="" ref="0x7f02a4476660"/>
        <function-ref name="led1Off" scoped="" ref="0x7f02a44767f0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f02a4476e30"/>
        <function-ref name="set" scoped="" ref="0x7f02a4476980"/>
        <function-ref name="led0On" scoped="" ref="0x7f02a4476b10"/>
        <function-ref name="led2On" scoped="" ref="0x7f02a4476ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sync" ref="0x7f02a446d940" loc="125:/home/hades/tinyos-new/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="sync" scoped="" ref="0x7f02a446d940"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f02a446dcc0"/>
        <function-ref name="runTask" scoped="" ref="0x7f02a446de50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f02a44a7c30" loc="45:/home/hades/tinyos-new/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f02a44a7c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f02a44a6020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f02a44a61b0"/>
        <function-ref name="request" scoped="" ref="0x7f02a44a6340"/>
        <function-ref name="granted" scoped="" ref="0x7f02a44a64d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f02a44a6660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PANID" ref="0x7f02a448b520" loc="60:/home/hades/tinyos-new/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7f02a448b520"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f02a448b8a0"/>
        <function-ref name="write" scoped="" ref="0x7f02a448ba30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IEEEADR" ref="0x7f02a4483a90" loc="59:/home/hades/tinyos-new/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7f02a4483a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f02a448b020"/>
        <function-ref name="write" scoped="" ref="0x7f02a448b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptCCA" ref="0x7f02a44900e0" loc="56:/home/hades/tinyos-new/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptCCA" scoped="" ref="0x7f02a44900e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f02a4490460"/>
        <function-ref name="disable" scoped="" ref="0x7f02a44905f0"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f02a4490780"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f02a4490910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RssiResource" ref="0x7f02a4478020" loc="75:/home/hades/tinyos-new/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RssiResource" scoped="" ref="0x7f02a4478020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f02a44783a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f02a4478530"/>
        <function-ref name="request" scoped="" ref="0x7f02a44786c0"/>
        <function-ref name="granted" scoped="" ref="0x7f02a4478850"/>
        <function-ref name="isOwner" scoped="" ref="0x7f02a44789e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRFOFF" ref="0x7f02a44799f0" loc="70:/home/hades/tinyos-new/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7f02a44799f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f02a4479d70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f02a43f67f0" loc="45:/home/hades/tinyos-new/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <component-ref qname="AlarmMultiplexC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f02a43f67f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f02a43f6b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm32khz32" ref="0x7f02a43f3220" loc="46:/home/hades/tinyos-new/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <component-ref qname="AlarmMultiplexC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm32khz32" scoped="" ref="0x7f02a43f3220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f02a45ab7d0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f02a45abb40"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f02a51f8920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f02a43f1b30"/>
        <function-ref name="fired" scoped="" ref="0x7f02a43f2a60"/>
        <function-ref name="startAt" scoped="" ref="0x7f02a43f14e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f02a43f1020"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f02a43ef020"/>
        <function-ref name="start" scoped="" ref="0x7f02a43f2090"/>
        <function-ref name="stop" scoped="" ref="0x7f02a43f25a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f02a43ed490" loc="42:/home/hades/tinyos-new/tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f02a43ed490"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f02a43ed810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm32khz32" ref="0x7f02a43edd20" loc="43:/home/hades/tinyos-new/tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm32khz32" scoped="" ref="0x7f02a43edd20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f02a45ab7d0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f02a45abb40"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f02a51f8920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f02a42f3670"/>
        <function-ref name="fired" scoped="" ref="0x7f02a42f5550"/>
        <function-ref name="startAt" scoped="" ref="0x7f02a42f3020"/>
        <function-ref name="isRunning" scoped="" ref="0x7f02a42f5a10"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f02a42f3b30"/>
        <function-ref name="start" scoped="" ref="0x7f02a42f6b60"/>
        <function-ref name="stop" scoped="" ref="0x7f02a42f5090"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f02a2eaeab0" loc="44:/home/hades/tinyos-new/tos/chips/msp430/timer/Alarm32khz32C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f02a2eaeab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f02a45ab7d0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f02a45abb40"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f02a51f8920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f02a2eaa390"/>
        <function-ref name="fired" scoped="" ref="0x7f02a2eab340"/>
        <function-ref name="startAt" scoped="" ref="0x7f02a2eabcc0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f02a2eab800"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f02a2eaa850"/>
        <function-ref name="start" scoped="" ref="0x7f02a2ead8f0"/>
        <function-ref name="stop" scoped="" ref="0x7f02a2eade00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f02a2eae260" loc="43:/home/hades/tinyos-new/tos/chips/msp430/timer/Alarm32khz32C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f02a2eae260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f02a2eae5e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f02a2ea6c20" loc="44:/home/hades/tinyos-new/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f02a2ea6c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f02a45ab7d0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f02a45abb40"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f02a51f8520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f02a2ea34e0"/>
        <function-ref name="fired" scoped="" ref="0x7f02a2ea44e0"/>
        <function-ref name="startAt" scoped="" ref="0x7f02a2ea4e60"/>
        <function-ref name="isRunning" scoped="" ref="0x7f02a2ea49a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f02a2ea39a0"/>
        <function-ref name="start" scoped="" ref="0x7f02a2ea5a80"/>
        <function-ref name="stop" scoped="" ref="0x7f02a2ea4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f02a2ea63d0" loc="43:/home/hades/tinyos-new/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f02a2ea63d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f02a2ea6750"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x7f02a2e79440" loc="41:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7f02a2e79440"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f02a2e797c0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f02a2e79950"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f02a2e79ae0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f02a2e79c70"/>
        <function-ref name="fired" scoped="" ref="0x7f02a2e79e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x7f02a2e7c9d0" loc="39:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f02a2e7c9d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f02a2e7cd50"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f02a2e7b020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f02a2e7b1b0"/>
        <function-ref name="get" scoped="" ref="0x7f02a2e7b340"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f02a2e7b4d0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f02a2e7b660"/>
        <function-ref name="getMode" scoped="" ref="0x7f02a2e7b7f0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f02a2e7b980"/>
        <function-ref name="overflow" scoped="" ref="0x7f02a2e7bb10"/>
        <function-ref name="setMode" scoped="" ref="0x7f02a2e7bca0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f02a2e7be30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x7f02a2e7a120" loc="40:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f02a2e7a120"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f02a2e7a4a0"/>
        <function-ref name="getControl" scoped="" ref="0x7f02a2e7a630"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f02a2e7a7c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f02a2e7a950"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f02a2e7aae0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f02a2e7ac70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f02a2e7ae00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f02a2e79020"/>
        <function-ref name="setControl" scoped="" ref="0x7f02a2e791b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x7f02a43cbba0" loc="52:/home/hades/tinyos-new/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7f02a43cbba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f02a51f8160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f02a43ca020"/>
        <function-ref name="setEvent" scoped="" ref="0x7f02a43ca1b0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f02a43ca340"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f02a43ca4d0"/>
        <function-ref name="fired" scoped="" ref="0x7f02a43ca660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x7f02a43cf4d0" loc="50:/home/hades/tinyos-new/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f02a43cf4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f02a51f8160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f02a43cf850"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f02a43cf9e0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f02a43cfb70"/>
        <function-ref name="get" scoped="" ref="0x7f02a43cfd00"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f02a43ce020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f02a43ce1b0"/>
        <function-ref name="getMode" scoped="" ref="0x7f02a43ce340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f02a43ce4d0"/>
        <function-ref name="overflow" scoped="" ref="0x7f02a43ce660"/>
        <function-ref name="setMode" scoped="" ref="0x7f02a43ce7f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f02a43ce980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x7f02a43cc280" loc="51:/home/hades/tinyos-new/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f02a43cc280"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f02a51f8160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f02a43cc600"/>
        <function-ref name="getControl" scoped="" ref="0x7f02a43cc790"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f02a43cc920"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f02a43ccab0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f02a43ccc40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f02a43ccdd0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f02a43cb020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f02a43cb1b0"/>
        <function-ref name="setControl" scoped="" ref="0x7f02a43cb340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Compare" ref="0x7f02a2e6f0c0" loc="49:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7f02a2e6f0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f02a2e6f440"/>
        <function-ref name="setEvent" scoped="" ref="0x7f02a2e6f5d0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f02a2e6f760"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f02a2e6f8f0"/>
        <function-ref name="fired" scoped="" ref="0x7f02a2e6fa80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7f02a2e72710" loc="47:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f02a2e72710"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f02a2e72a90"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f02a2e72c20"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f02a2e72db0"/>
        <function-ref name="get" scoped="" ref="0x7f02a2e71020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f02a2e711b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f02a2e71340"/>
        <function-ref name="getMode" scoped="" ref="0x7f02a2e714d0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f02a2e71660"/>
        <function-ref name="overflow" scoped="" ref="0x7f02a2e717f0"/>
        <function-ref name="setMode" scoped="" ref="0x7f02a2e71980"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f02a2e71b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f02a2e765b0" loc="46:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f02a2e765b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f02a45ab7d0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f02a45abb40"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f02a51f8520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f02a2e73df0"/>
        <function-ref name="fired" scoped="" ref="0x7f02a2e75df0"/>
        <function-ref name="startAt" scoped="" ref="0x7f02a2e737a0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f02a2e732e0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f02a2e722e0"/>
        <function-ref name="start" scoped="" ref="0x7f02a2e75420"/>
        <function-ref name="stop" scoped="" ref="0x7f02a2e75930"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f02a2e77ca0" loc="45:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f02a2e77ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f02a2e760a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x7f02a2e71da0" loc="48:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f02a2e71da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f02a2e70180"/>
        <function-ref name="getControl" scoped="" ref="0x7f02a2e70310"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f02a2e704a0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f02a2e70630"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f02a2e707c0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f02a2e70950"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f02a2e70ae0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f02a2e70c70"/>
        <function-ref name="setControl" scoped="" ref="0x7f02a2e70e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f02a4379020" loc="43:/home/hades/tinyos-new/tos/chips/msp430/timer/Counter32khz32C.nc">
      <component-ref qname="Counter32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f02a4379020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f02a45ab7d0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f02a45abb40"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f02a51f8920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f02a4379e30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f02a4378800"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f02a4378340"/>
        <function-ref name="overflow" scoped="" ref="0x7f02a4378cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Counter32khz" ref="0x7f02a4370060" loc="43:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <component-ref qname="Msp430Counter32khzC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7f02a4370060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f02a45ab7d0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f02a45abb40"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f02a51f8520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f02a4370e70"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f02a436e820"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f02a436e360"/>
        <function-ref name="overflow" scoped="" ref="0x7f02a436ece0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7f02a435c2c0" loc="45:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430Counter32khzC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f02a435c2c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f02a435c640"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f02a435c7d0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f02a435c960"/>
        <function-ref name="get" scoped="" ref="0x7f02a435caf0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f02a435cc80"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f02a435ce10"/>
        <function-ref name="getMode" scoped="" ref="0x7f02a435b020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f02a435b1b0"/>
        <function-ref name="overflow" scoped="" ref="0x7f02a435b340"/>
        <function-ref name="setMode" scoped="" ref="0x7f02a435b4d0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f02a435b660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f02a436b0a0" loc="44:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430Counter32khzC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f02a436b0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f02a45ab7d0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f02a45abb40"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f02a51f8520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f02a435e020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f02a435e9a0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f02a435e4e0"/>
        <function-ref name="overflow" scoped="" ref="0x7f02a435ee60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x7f02a433a540" loc="63:/home/hades/tinyos-new/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CounterFrom" scoped="" ref="0x7f02a433a540"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f02a45ab7d0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f02a45abb40"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f02a51f8520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f02a43393d0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f02a4339d50"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f02a4339890"/>
        <function-ref name="overflow" scoped="" ref="0x7f02a4337260"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f02a433d0f0" loc="62:/home/hades/tinyos-new/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f02a433d0f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f02a45ab7d0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f02a45abb40"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f02a51f8920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f02a433b020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f02a433b9a0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f02a433b4e0"/>
        <function-ref name="overflow" scoped="" ref="0x7f02a433be60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f02a2e8c020" loc="61:/home/hades/tinyos-new/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f02a2e8c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f02a45ab7d0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f02a45abb40"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f02a51f8920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f02a2e89870"/>
        <function-ref name="fired" scoped="" ref="0x7f02a2e8a840"/>
        <function-ref name="startAt" scoped="" ref="0x7f02a2e89220"/>
        <function-ref name="isRunning" scoped="" ref="0x7f02a2e8ad00"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f02a2e89d30"/>
        <function-ref name="start" scoped="" ref="0x7f02a2e8ce30"/>
        <function-ref name="stop" scoped="" ref="0x7f02a2e8a380"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x7f02a2e85780" loc="73:/home/hades/tinyos-new/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AlarmFrom" scoped="" ref="0x7f02a2e85780"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f02a45ab7d0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f02a45abb40"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f02a51f8520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f02a2e82020"/>
        <function-ref name="fired" scoped="" ref="0x7f02a2e83020"/>
        <function-ref name="startAt" scoped="" ref="0x7f02a2e839a0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f02a2e834e0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f02a2e824e0"/>
        <function-ref name="start" scoped="" ref="0x7f02a2e845d0"/>
        <function-ref name="stop" scoped="" ref="0x7f02a2e84ae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f02a2e883d0" loc="68:/home/hades/tinyos-new/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f02a2e883d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f02a45ab7d0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f02a45abb40"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f02a51f8920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f02a2e87240"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f02a2e87bc0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f02a2e87700"/>
        <function-ref name="overflow" scoped="" ref="0x7f02a2e850d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FIFO" ref="0x7f02a42ed380" loc="44:/home/hades/tinyos-new/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFO" scoped="" ref="0x7f02a42ed380"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f02a42ed700"/>
        <function-ref name="isInput" scoped="" ref="0x7f02a42ed890"/>
        <function-ref name="toggle" scoped="" ref="0x7f02a42eda20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f02a42edbb0"/>
        <function-ref name="get" scoped="" ref="0x7f02a42edd40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f02a42ec020"/>
        <function-ref name="set" scoped="" ref="0x7f02a42ec1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f02a42ec340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FIFOP" ref="0x7f02a42ec6b0" loc="45:/home/hades/tinyos-new/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFOP" scoped="" ref="0x7f02a42ec6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f02a42eca30"/>
        <function-ref name="isInput" scoped="" ref="0x7f02a42ecbc0"/>
        <function-ref name="toggle" scoped="" ref="0x7f02a42ecd50"/>
        <function-ref name="isOutput" scoped="" ref="0x7f02a42eb020"/>
        <function-ref name="get" scoped="" ref="0x7f02a42eb1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f02a42eb340"/>
        <function-ref name="set" scoped="" ref="0x7f02a42eb4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f02a42eb660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSTN" ref="0x7f02a42eb9c0" loc="46:/home/hades/tinyos-new/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSTN" scoped="" ref="0x7f02a42eb9c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f02a42ebd40"/>
        <function-ref name="isInput" scoped="" ref="0x7f02a42ea020"/>
        <function-ref name="toggle" scoped="" ref="0x7f02a42ea1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f02a42ea340"/>
        <function-ref name="get" scoped="" ref="0x7f02a42ea4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f02a42ea660"/>
        <function-ref name="set" scoped="" ref="0x7f02a42ea7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f02a42ea980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CSN" ref="0x7f02a42ee060" loc="43:/home/hades/tinyos-new/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x7f02a42ee060"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f02a42ee3e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f02a42ee570"/>
        <function-ref name="toggle" scoped="" ref="0x7f02a42ee700"/>
        <function-ref name="isOutput" scoped="" ref="0x7f02a42ee890"/>
        <function-ref name="get" scoped="" ref="0x7f02a42eea20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f02a42eebb0"/>
        <function-ref name="set" scoped="" ref="0x7f02a42eed40"/>
        <function-ref name="clr" scoped="" ref="0x7f02a42ed020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VREN" ref="0x7f02a42e8020" loc="48:/home/hades/tinyos-new/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VREN" scoped="" ref="0x7f02a42e8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f02a42e83a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f02a42e8530"/>
        <function-ref name="toggle" scoped="" ref="0x7f02a42e86c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f02a42e8850"/>
        <function-ref name="get" scoped="" ref="0x7f02a42e89e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f02a42e8b70"/>
        <function-ref name="set" scoped="" ref="0x7f02a42e8d00"/>
        <function-ref name="clr" scoped="" ref="0x7f02a42e7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CCA" ref="0x7f02a43f4e40" loc="42:/home/hades/tinyos-new/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CCA" scoped="" ref="0x7f02a43f4e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f02a42ef1e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f02a42ef370"/>
        <function-ref name="toggle" scoped="" ref="0x7f02a42ef500"/>
        <function-ref name="isOutput" scoped="" ref="0x7f02a42ef690"/>
        <function-ref name="get" scoped="" ref="0x7f02a42ef820"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f02a42ef9b0"/>
        <function-ref name="set" scoped="" ref="0x7f02a42efb40"/>
        <function-ref name="clr" scoped="" ref="0x7f02a42efcd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFD" ref="0x7f02a42eacd0" loc="47:/home/hades/tinyos-new/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFD" scoped="" ref="0x7f02a42eacd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f02a42e90a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f02a42e9230"/>
        <function-ref name="toggle" scoped="" ref="0x7f02a42e93c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f02a42e9550"/>
        <function-ref name="get" scoped="" ref="0x7f02a42e96e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f02a42e9870"/>
        <function-ref name="set" scoped="" ref="0x7f02a42e9a00"/>
        <function-ref name="clr" scoped="" ref="0x7f02a42e9b90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f02a42e5610" loc="44:/home/hades/tinyos-new/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CCAM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f02a42e5610"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f02a42e5990"/>
        <function-ref name="isInput" scoped="" ref="0x7f02a42e5b20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f02a42e5cb0"/>
        <function-ref name="toggle" scoped="" ref="0x7f02a42e5e40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f02a42e4020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f02a42e41b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f02a42e4340"/>
        <function-ref name="get" scoped="" ref="0x7f02a42e44d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f02a42e4660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f02a42e47f0"/>
        <function-ref name="set" scoped="" ref="0x7f02a42e4980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f02a42e4b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f02a42e4ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f02a42e3020"/>
        <function-ref name="clr" scoped="" ref="0x7f02a42e31b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f02a42e6440" loc="43:/home/hades/tinyos-new/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CCAM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f02a42e6440"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f02a42e67c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f02a42e6950"/>
        <function-ref name="toggle" scoped="" ref="0x7f02a42e6ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f02a42e6c70"/>
        <function-ref name="get" scoped="" ref="0x7f02a42e6e00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f02a42e5020"/>
        <function-ref name="set" scoped="" ref="0x7f02a42e51b0"/>
        <function-ref name="clr" scoped="" ref="0x7f02a42e5340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f02a42df2f0" loc="44:/home/hades/tinyos-new/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CSNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f02a42df2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f02a42df670"/>
        <function-ref name="isInput" scoped="" ref="0x7f02a42df800"/>
        <function-ref name="setResistor" scoped="" ref="0x7f02a42df990"/>
        <function-ref name="toggle" scoped="" ref="0x7f02a42dfb20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f02a42dfcb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f02a42dfe40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f02a42de020"/>
        <function-ref name="get" scoped="" ref="0x7f02a42de1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f02a42de340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f02a42de4d0"/>
        <function-ref name="set" scoped="" ref="0x7f02a42de660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f02a42de7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f02a42de980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f02a42dec10"/>
        <function-ref name="clr" scoped="" ref="0x7f02a42deda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f02a42e0020" loc="43:/home/hades/tinyos-new/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CSNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f02a42e0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f02a42e03a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f02a42e0530"/>
        <function-ref name="toggle" scoped="" ref="0x7f02a42e06c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f02a42e0850"/>
        <function-ref name="get" scoped="" ref="0x7f02a42e09e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f02a42e0b70"/>
        <function-ref name="set" scoped="" ref="0x7f02a42e0d00"/>
        <function-ref name="clr" scoped="" ref="0x7f02a42df020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f02a42dbde0" loc="44:/home/hades/tinyos-new/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f02a42dbde0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f02a42da180"/>
        <function-ref name="isInput" scoped="" ref="0x7f02a42da310"/>
        <function-ref name="setResistor" scoped="" ref="0x7f02a42da4a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f02a42da630"/>
        <function-ref name="isOutput" scoped="" ref="0x7f02a42da7c0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f02a42da950"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f02a42daae0"/>
        <function-ref name="get" scoped="" ref="0x7f02a42dac70"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f02a42dae00"/>
        <function-ref name="getRaw" scoped="" ref="0x7f02a42d9020"/>
        <function-ref name="set" scoped="" ref="0x7f02a42d91b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f02a42d9340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f02a42d94d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f02a42d9760"/>
        <function-ref name="clr" scoped="" ref="0x7f02a42d98f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f02a42dcb70" loc="43:/home/hades/tinyos-new/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f02a42dcb70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f02a42db020"/>
        <function-ref name="isInput" scoped="" ref="0x7f02a42db1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f02a42db340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f02a42db4d0"/>
        <function-ref name="get" scoped="" ref="0x7f02a42db660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f02a42db7f0"/>
        <function-ref name="set" scoped="" ref="0x7f02a42db980"/>
        <function-ref name="clr" scoped="" ref="0x7f02a42dbb10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f02a42d6930" loc="44:/home/hades/tinyos-new/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOPM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f02a42d6930"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f02a42d6cb0"/>
        <function-ref name="isInput" scoped="" ref="0x7f02a42d6e40"/>
        <function-ref name="setResistor" scoped="" ref="0x7f02a42d5020"/>
        <function-ref name="toggle" scoped="" ref="0x7f02a42d51b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f02a42d5340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f02a42d54d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f02a42d5660"/>
        <function-ref name="get" scoped="" ref="0x7f02a42d57f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f02a42d5980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f02a42d5b10"/>
        <function-ref name="set" scoped="" ref="0x7f02a42d5ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f02a42d5e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f02a42d4020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f02a42d42b0"/>
        <function-ref name="clr" scoped="" ref="0x7f02a42d4440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f02a42d7710" loc="43:/home/hades/tinyos-new/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOPM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f02a42d7710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f02a42d7a90"/>
        <function-ref name="isInput" scoped="" ref="0x7f02a42d7c20"/>
        <function-ref name="toggle" scoped="" ref="0x7f02a42d7db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f02a42d6020"/>
        <function-ref name="get" scoped="" ref="0x7f02a42d61b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f02a42d6340"/>
        <function-ref name="set" scoped="" ref="0x7f02a42d64d0"/>
        <function-ref name="clr" scoped="" ref="0x7f02a42d6660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f02a42d1480" loc="44:/home/hades/tinyos-new/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.RSTNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f02a42d1480"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f02a42d1800"/>
        <function-ref name="isInput" scoped="" ref="0x7f02a42d1990"/>
        <function-ref name="setResistor" scoped="" ref="0x7f02a42d1b20"/>
        <function-ref name="toggle" scoped="" ref="0x7f02a42d1cb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f02a42d1e40"/>
        <function-ref name="getResistor" scoped="" ref="0x7f02a42d0020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f02a42d01b0"/>
        <function-ref name="get" scoped="" ref="0x7f02a42d0340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f02a42d04d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f02a42d0660"/>
        <function-ref name="set" scoped="" ref="0x7f02a42d07f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f02a42d0980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f02a42d0b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f02a42d0da0"/>
        <function-ref name="clr" scoped="" ref="0x7f02a42cf020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f02a42d21d0" loc="43:/home/hades/tinyos-new/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.RSTNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f02a42d21d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f02a42d2550"/>
        <function-ref name="isInput" scoped="" ref="0x7f02a42d26e0"/>
        <function-ref name="toggle" scoped="" ref="0x7f02a42d2870"/>
        <function-ref name="isOutput" scoped="" ref="0x7f02a42d2a00"/>
        <function-ref name="get" scoped="" ref="0x7f02a42d2b90"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f02a42d2d20"/>
        <function-ref name="set" scoped="" ref="0x7f02a42d1020"/>
        <function-ref name="clr" scoped="" ref="0x7f02a42d11b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f02a42cc020" loc="44:/home/hades/tinyos-new/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.SFDM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f02a42cc020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f02a42cc3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f02a42cc530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f02a42cc6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f02a42cc850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f02a42cc9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f02a42ccb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f02a42ccd00"/>
        <function-ref name="get" scoped="" ref="0x7f02a42ca020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f02a42ca1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f02a42ca340"/>
        <function-ref name="set" scoped="" ref="0x7f02a42ca4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f02a42ca660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f02a42ca7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f02a42caa80"/>
        <function-ref name="clr" scoped="" ref="0x7f02a42cac10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f02a42ced60" loc="43:/home/hades/tinyos-new/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.SFDM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f02a42ced60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f02a42cd180"/>
        <function-ref name="isInput" scoped="" ref="0x7f02a42cd310"/>
        <function-ref name="toggle" scoped="" ref="0x7f02a42cd4a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f02a42cd630"/>
        <function-ref name="get" scoped="" ref="0x7f02a42cd7c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f02a42cd950"/>
        <function-ref name="set" scoped="" ref="0x7f02a42cdae0"/>
        <function-ref name="clr" scoped="" ref="0x7f02a42cdc70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f02a42c7de0" loc="44:/home/hades/tinyos-new/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.VRENM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f02a42c7de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f02a42c6180"/>
        <function-ref name="isInput" scoped="" ref="0x7f02a42c6310"/>
        <function-ref name="setResistor" scoped="" ref="0x7f02a42c64a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f02a42c6630"/>
        <function-ref name="isOutput" scoped="" ref="0x7f02a42c67c0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f02a42c6950"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f02a42c6ae0"/>
        <function-ref name="get" scoped="" ref="0x7f02a42c6c70"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f02a42c6e00"/>
        <function-ref name="getRaw" scoped="" ref="0x7f02a42c5020"/>
        <function-ref name="set" scoped="" ref="0x7f02a42c51b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f02a42c5340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f02a42c54d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f02a42c5760"/>
        <function-ref name="clr" scoped="" ref="0x7f02a42c58f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f02a42c8b70" loc="43:/home/hades/tinyos-new/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.VRENM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f02a42c8b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f02a42c7020"/>
        <function-ref name="isInput" scoped="" ref="0x7f02a42c71b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f02a42c7340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f02a42c74d0"/>
        <function-ref name="get" scoped="" ref="0x7f02a42c7660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f02a42c77f0"/>
        <function-ref name="set" scoped="" ref="0x7f02a42c7980"/>
        <function-ref name="clr" scoped="" ref="0x7f02a42c7b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureSFD" ref="0x7f02a42b2150" loc="42:/home/hades/tinyos-new/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureSFD" scoped="" ref="0x7f02a42b2150"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7f02a42b24d0"/>
        <function-ref name="disable" scoped="" ref="0x7f02a42b2660"/>
        <function-ref name="captured" scoped="" ref="0x7f02a42b27f0"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7f02a42b2980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptCCA" ref="0x7f02a42b2d60" loc="43:/home/hades/tinyos-new/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptCCA" scoped="" ref="0x7f02a42b2d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f02a42b1180"/>
        <function-ref name="disable" scoped="" ref="0x7f02a42b1310"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f02a42b14a0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f02a42b1630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptFIFOP" ref="0x7f02a42b1a20" loc="44:/home/hades/tinyos-new/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptFIFOP" scoped="" ref="0x7f02a42b1a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f02a42b1da0"/>
        <function-ref name="disable" scoped="" ref="0x7f02a42ab020"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f02a42ab1b0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f02a42ab340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Capture" ref="0x7f02a42968f0" loc="42:/home/hades/tinyos-new/tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Capture" scoped="" ref="0x7f02a42968f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f02a4296c70"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f02a4296e00"/>
        <function-ref name="captured" scoped="" ref="0x7f02a4295020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f02a42951b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f02a4295340"/>
        <function-ref name="setEdge" scoped="" ref="0x7f02a42954d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f02a42a8a20" loc="40:/home/hades/tinyos-new/tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f02a42a8a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7f02a42a8da0"/>
        <function-ref name="disable" scoped="" ref="0x7f02a4297020"/>
        <function-ref name="captured" scoped="" ref="0x7f02a42971b0"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7f02a4297340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x7f02a42975d0" loc="41:/home/hades/tinyos-new/tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f02a42975d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f02a4297950"/>
        <function-ref name="getControl" scoped="" ref="0x7f02a4297ae0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f02a4297c70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f02a4297e00"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f02a4296020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f02a42961b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f02a4296340"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f02a42964d0"/>
        <function-ref name="setControl" scoped="" ref="0x7f02a4296660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="GeneralIO" ref="0x7f02a42957a0" loc="43:/home/hades/tinyos-new/tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f02a42957a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f02a4295b20"/>
        <function-ref name="isInput" scoped="" ref="0x7f02a4295cb0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f02a4295e40"/>
        <function-ref name="toggle" scoped="" ref="0x7f02a4294020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f02a42941b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f02a4294340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f02a42944d0"/>
        <function-ref name="get" scoped="" ref="0x7f02a4294660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f02a42947f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f02a4294980"/>
        <function-ref name="set" scoped="" ref="0x7f02a4294b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f02a4294ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f02a4294e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f02a4293120"/>
        <function-ref name="clr" scoped="" ref="0x7f02a42932b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x7f02a4286a30" loc="46:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x7f02a4286a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f02a4286db0"/>
        <function-ref name="fired" scoped="" ref="0x7f02a4285020"/>
        <function-ref name="disable" scoped="" ref="0x7f02a42851b0"/>
        <function-ref name="edge" scoped="" ref="0x7f02a4285340"/>
        <function-ref name="enable" scoped="" ref="0x7f02a42854d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f02a4285660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x7f02a427bbc0" loc="58:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x7f02a427bbc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f02a427a020"/>
        <function-ref name="fired" scoped="" ref="0x7f02a427a1b0"/>
        <function-ref name="disable" scoped="" ref="0x7f02a427a340"/>
        <function-ref name="edge" scoped="" ref="0x7f02a427a4d0"/>
        <function-ref name="enable" scoped="" ref="0x7f02a427a660"/>
        <function-ref name="getValue" scoped="" ref="0x7f02a427a7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x7f02a4283a30" loc="49:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x7f02a4283a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f02a4283db0"/>
        <function-ref name="fired" scoped="" ref="0x7f02a4282020"/>
        <function-ref name="disable" scoped="" ref="0x7f02a42821b0"/>
        <function-ref name="edge" scoped="" ref="0x7f02a4282340"/>
        <function-ref name="enable" scoped="" ref="0x7f02a42824d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f02a4282660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x7f02a4281a30" loc="53:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x7f02a4281a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f02a4281db0"/>
        <function-ref name="fired" scoped="" ref="0x7f02a4280020"/>
        <function-ref name="disable" scoped="" ref="0x7f02a42801b0"/>
        <function-ref name="edge" scoped="" ref="0x7f02a4280340"/>
        <function-ref name="enable" scoped="" ref="0x7f02a42804d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f02a4280660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x7f02a428ca30" loc="44:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x7f02a428ca30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f02a428cdb0"/>
        <function-ref name="fired" scoped="" ref="0x7f02a4287020"/>
        <function-ref name="disable" scoped="" ref="0x7f02a42871b0"/>
        <function-ref name="edge" scoped="" ref="0x7f02a4287340"/>
        <function-ref name="enable" scoped="" ref="0x7f02a42874d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f02a4287660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x7f02a427da30" loc="56:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x7f02a427da30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f02a427c020"/>
        <function-ref name="fired" scoped="" ref="0x7f02a427c1b0"/>
        <function-ref name="disable" scoped="" ref="0x7f02a427c340"/>
        <function-ref name="edge" scoped="" ref="0x7f02a427c4d0"/>
        <function-ref name="enable" scoped="" ref="0x7f02a427c660"/>
        <function-ref name="getValue" scoped="" ref="0x7f02a427c7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x7f02a4285a30" loc="47:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x7f02a4285a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f02a4285db0"/>
        <function-ref name="fired" scoped="" ref="0x7f02a4284020"/>
        <function-ref name="disable" scoped="" ref="0x7f02a42841b0"/>
        <function-ref name="edge" scoped="" ref="0x7f02a4284340"/>
        <function-ref name="enable" scoped="" ref="0x7f02a42844d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f02a4284660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x7f02a427abc0" loc="59:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x7f02a427abc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f02a4279020"/>
        <function-ref name="fired" scoped="" ref="0x7f02a42791b0"/>
        <function-ref name="disable" scoped="" ref="0x7f02a4279340"/>
        <function-ref name="edge" scoped="" ref="0x7f02a42794d0"/>
        <function-ref name="enable" scoped="" ref="0x7f02a4279660"/>
        <function-ref name="getValue" scoped="" ref="0x7f02a42797f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x7f02a4288a20" loc="42:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x7f02a4288a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f02a4288da0"/>
        <function-ref name="fired" scoped="" ref="0x7f02a428d020"/>
        <function-ref name="disable" scoped="" ref="0x7f02a428d1b0"/>
        <function-ref name="edge" scoped="" ref="0x7f02a428d340"/>
        <function-ref name="enable" scoped="" ref="0x7f02a428d4d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f02a428d660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x7f02a4280a30" loc="54:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x7f02a4280a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f02a4280db0"/>
        <function-ref name="fired" scoped="" ref="0x7f02a427e020"/>
        <function-ref name="disable" scoped="" ref="0x7f02a427e1b0"/>
        <function-ref name="edge" scoped="" ref="0x7f02a427e340"/>
        <function-ref name="enable" scoped="" ref="0x7f02a427e4d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f02a427e660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x7f02a4287a30" loc="45:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x7f02a4287a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f02a4287db0"/>
        <function-ref name="fired" scoped="" ref="0x7f02a4286020"/>
        <function-ref name="disable" scoped="" ref="0x7f02a42861b0"/>
        <function-ref name="edge" scoped="" ref="0x7f02a4286340"/>
        <function-ref name="enable" scoped="" ref="0x7f02a42864d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f02a4286660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x7f02a427cbc0" loc="57:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x7f02a427cbc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f02a427b020"/>
        <function-ref name="fired" scoped="" ref="0x7f02a427b1b0"/>
        <function-ref name="disable" scoped="" ref="0x7f02a427b340"/>
        <function-ref name="edge" scoped="" ref="0x7f02a427b4d0"/>
        <function-ref name="enable" scoped="" ref="0x7f02a427b660"/>
        <function-ref name="getValue" scoped="" ref="0x7f02a427b7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x7f02a4284a30" loc="48:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x7f02a4284a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f02a4284db0"/>
        <function-ref name="fired" scoped="" ref="0x7f02a4283020"/>
        <function-ref name="disable" scoped="" ref="0x7f02a42831b0"/>
        <function-ref name="edge" scoped="" ref="0x7f02a4283340"/>
        <function-ref name="enable" scoped="" ref="0x7f02a42834d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f02a4283660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x7f02a4282a30" loc="52:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x7f02a4282a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f02a4282db0"/>
        <function-ref name="fired" scoped="" ref="0x7f02a4281020"/>
        <function-ref name="disable" scoped="" ref="0x7f02a42811b0"/>
        <function-ref name="edge" scoped="" ref="0x7f02a4281340"/>
        <function-ref name="enable" scoped="" ref="0x7f02a42814d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f02a4281660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x7f02a428da30" loc="43:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x7f02a428da30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f02a428ddb0"/>
        <function-ref name="fired" scoped="" ref="0x7f02a428c020"/>
        <function-ref name="disable" scoped="" ref="0x7f02a428c1b0"/>
        <function-ref name="edge" scoped="" ref="0x7f02a428c340"/>
        <function-ref name="enable" scoped="" ref="0x7f02a428c4d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f02a428c660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x7f02a427ea30" loc="55:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x7f02a427ea30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f02a427edb0"/>
        <function-ref name="fired" scoped="" ref="0x7f02a427d020"/>
        <function-ref name="disable" scoped="" ref="0x7f02a427d1b0"/>
        <function-ref name="edge" scoped="" ref="0x7f02a427d340"/>
        <function-ref name="enable" scoped="" ref="0x7f02a427d4d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f02a427d660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x7f02a4271020" loc="43:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x7f02a4271020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f02a42713a0"/>
        <function-ref name="fired" scoped="" ref="0x7f02a4271530"/>
        <function-ref name="disable" scoped="" ref="0x7f02a42716c0"/>
        <function-ref name="edge" scoped="" ref="0x7f02a4271850"/>
        <function-ref name="enable" scoped="" ref="0x7f02a42719e0"/>
        <function-ref name="getValue" scoped="" ref="0x7f02a4271b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x7f02a4267020" loc="55:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x7f02a4267020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f02a42673a0"/>
        <function-ref name="fired" scoped="" ref="0x7f02a4267530"/>
        <function-ref name="disable" scoped="" ref="0x7f02a42676c0"/>
        <function-ref name="edge" scoped="" ref="0x7f02a4267850"/>
        <function-ref name="enable" scoped="" ref="0x7f02a42679e0"/>
        <function-ref name="getValue" scoped="" ref="0x7f02a4267b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x7f02a426e020" loc="46:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x7f02a426e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f02a426e3a0"/>
        <function-ref name="fired" scoped="" ref="0x7f02a426e530"/>
        <function-ref name="disable" scoped="" ref="0x7f02a426e6c0"/>
        <function-ref name="edge" scoped="" ref="0x7f02a426e850"/>
        <function-ref name="enable" scoped="" ref="0x7f02a426e9e0"/>
        <function-ref name="getValue" scoped="" ref="0x7f02a426eb70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x7f02a426c020" loc="50:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x7f02a426c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f02a426c3a0"/>
        <function-ref name="fired" scoped="" ref="0x7f02a426c530"/>
        <function-ref name="disable" scoped="" ref="0x7f02a426c6c0"/>
        <function-ref name="edge" scoped="" ref="0x7f02a426c850"/>
        <function-ref name="enable" scoped="" ref="0x7f02a426c9e0"/>
        <function-ref name="getValue" scoped="" ref="0x7f02a426cb70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x7f02a42730a0" loc="41:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x7f02a42730a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f02a4273420"/>
        <function-ref name="fired" scoped="" ref="0x7f02a42735b0"/>
        <function-ref name="disable" scoped="" ref="0x7f02a4273740"/>
        <function-ref name="edge" scoped="" ref="0x7f02a42738d0"/>
        <function-ref name="enable" scoped="" ref="0x7f02a4273a60"/>
        <function-ref name="getValue" scoped="" ref="0x7f02a4273bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x7f02a4269020" loc="53:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x7f02a4269020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f02a42694a0"/>
        <function-ref name="fired" scoped="" ref="0x7f02a4269630"/>
        <function-ref name="disable" scoped="" ref="0x7f02a42697c0"/>
        <function-ref name="edge" scoped="" ref="0x7f02a4269950"/>
        <function-ref name="enable" scoped="" ref="0x7f02a4269ae0"/>
        <function-ref name="getValue" scoped="" ref="0x7f02a4269c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x7f02a4270020" loc="44:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x7f02a4270020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f02a42703a0"/>
        <function-ref name="fired" scoped="" ref="0x7f02a4270530"/>
        <function-ref name="disable" scoped="" ref="0x7f02a42706c0"/>
        <function-ref name="edge" scoped="" ref="0x7f02a4270850"/>
        <function-ref name="enable" scoped="" ref="0x7f02a42709e0"/>
        <function-ref name="getValue" scoped="" ref="0x7f02a4270b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x7f02a4266020" loc="56:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x7f02a4266020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f02a42663a0"/>
        <function-ref name="fired" scoped="" ref="0x7f02a4266530"/>
        <function-ref name="disable" scoped="" ref="0x7f02a42666c0"/>
        <function-ref name="edge" scoped="" ref="0x7f02a4266850"/>
        <function-ref name="enable" scoped="" ref="0x7f02a42669e0"/>
        <function-ref name="getValue" scoped="" ref="0x7f02a4266b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x7f02a4275200" loc="39:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x7f02a4275200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f02a4275580"/>
        <function-ref name="fired" scoped="" ref="0x7f02a4275710"/>
        <function-ref name="disable" scoped="" ref="0x7f02a42758a0"/>
        <function-ref name="edge" scoped="" ref="0x7f02a4275a30"/>
        <function-ref name="enable" scoped="" ref="0x7f02a4275bc0"/>
        <function-ref name="getValue" scoped="" ref="0x7f02a4275d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x7f02a426b020" loc="51:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x7f02a426b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f02a426b3a0"/>
        <function-ref name="fired" scoped="" ref="0x7f02a426b530"/>
        <function-ref name="disable" scoped="" ref="0x7f02a426b6c0"/>
        <function-ref name="edge" scoped="" ref="0x7f02a426b850"/>
        <function-ref name="enable" scoped="" ref="0x7f02a426b9e0"/>
        <function-ref name="getValue" scoped="" ref="0x7f02a426bb70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x7f02a4272020" loc="42:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x7f02a4272020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f02a42723a0"/>
        <function-ref name="fired" scoped="" ref="0x7f02a4272530"/>
        <function-ref name="disable" scoped="" ref="0x7f02a42726c0"/>
        <function-ref name="edge" scoped="" ref="0x7f02a4272850"/>
        <function-ref name="enable" scoped="" ref="0x7f02a42729e0"/>
        <function-ref name="getValue" scoped="" ref="0x7f02a4272b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x7f02a4268060" loc="54:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x7f02a4268060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f02a42683e0"/>
        <function-ref name="fired" scoped="" ref="0x7f02a4268570"/>
        <function-ref name="disable" scoped="" ref="0x7f02a4268700"/>
        <function-ref name="edge" scoped="" ref="0x7f02a4268890"/>
        <function-ref name="enable" scoped="" ref="0x7f02a4268a20"/>
        <function-ref name="getValue" scoped="" ref="0x7f02a4268bb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x7f02a426f020" loc="45:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x7f02a426f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f02a426f3a0"/>
        <function-ref name="fired" scoped="" ref="0x7f02a426f530"/>
        <function-ref name="disable" scoped="" ref="0x7f02a426f6c0"/>
        <function-ref name="edge" scoped="" ref="0x7f02a426f850"/>
        <function-ref name="enable" scoped="" ref="0x7f02a426f9e0"/>
        <function-ref name="getValue" scoped="" ref="0x7f02a426fb70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x7f02a426d020" loc="49:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x7f02a426d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f02a426d3a0"/>
        <function-ref name="fired" scoped="" ref="0x7f02a426d530"/>
        <function-ref name="disable" scoped="" ref="0x7f02a426d6c0"/>
        <function-ref name="edge" scoped="" ref="0x7f02a426d850"/>
        <function-ref name="enable" scoped="" ref="0x7f02a426d9e0"/>
        <function-ref name="getValue" scoped="" ref="0x7f02a426db70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x7f02a4274140" loc="40:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x7f02a4274140"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f02a42744c0"/>
        <function-ref name="fired" scoped="" ref="0x7f02a4274650"/>
        <function-ref name="disable" scoped="" ref="0x7f02a42747e0"/>
        <function-ref name="edge" scoped="" ref="0x7f02a4274970"/>
        <function-ref name="enable" scoped="" ref="0x7f02a4274b00"/>
        <function-ref name="getValue" scoped="" ref="0x7f02a4274c90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x7f02a426a020" loc="52:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x7f02a426a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f02a426a3a0"/>
        <function-ref name="fired" scoped="" ref="0x7f02a426a530"/>
        <function-ref name="disable" scoped="" ref="0x7f02a426a6c0"/>
        <function-ref name="edge" scoped="" ref="0x7f02a426a850"/>
        <function-ref name="enable" scoped="" ref="0x7f02a426a9e0"/>
        <function-ref name="getValue" scoped="" ref="0x7f02a426ab70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplInterrupt" ref="0x7f02a4193b20" loc="46:/home/hades/tinyos-new/tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptCCAC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplInterrupt" scoped="" ref="0x7f02a4193b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f02a4186020"/>
        <function-ref name="fired" scoped="" ref="0x7f02a41861b0"/>
        <function-ref name="disable" scoped="" ref="0x7f02a4186340"/>
        <function-ref name="edge" scoped="" ref="0x7f02a41864d0"/>
        <function-ref name="enable" scoped="" ref="0x7f02a4186660"/>
        <function-ref name="getValue" scoped="" ref="0x7f02a41867f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x7f02a4193020" loc="45:/home/hades/tinyos-new/tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptCCAC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupt" scoped="" ref="0x7f02a4193020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f02a41933a0"/>
        <function-ref name="disable" scoped="" ref="0x7f02a4193530"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f02a41936c0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f02a4193850"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplInterrupt" ref="0x7f02a4184c00" loc="46:/home/hades/tinyos-new/tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptFIFOPC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplInterrupt" scoped="" ref="0x7f02a4184c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f02a4183020"/>
        <function-ref name="fired" scoped="" ref="0x7f02a41831b0"/>
        <function-ref name="disable" scoped="" ref="0x7f02a4183340"/>
        <function-ref name="edge" scoped="" ref="0x7f02a41834d0"/>
        <function-ref name="enable" scoped="" ref="0x7f02a4183660"/>
        <function-ref name="getValue" scoped="" ref="0x7f02a41837f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x7f02a4184100" loc="45:/home/hades/tinyos-new/tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptFIFOPC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupt" scoped="" ref="0x7f02a4184100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f02a4184480"/>
        <function-ref name="disable" scoped="" ref="0x7f02a4184610"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f02a41847a0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f02a4184930"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7f02a3d32e50" loc="69:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7f02a3d32e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f02a3d31410"/>
        <function-ref name="write" scoped="" ref="0x7f02a3d315a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7f02a3d3c160" loc="47:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7f02a3d3c160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f02a3d3c4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7f02a3d36e50" loc="63:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7f02a3d36e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f02a3d34210"/>
        <function-ref name="write" scoped="" ref="0x7f02a3d343a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7f02a3d30880" loc="72:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7f02a3d30880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f02a3d30c00"/>
        <function-ref name="write" scoped="" ref="0x7f02a3d30d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7f02a3d280a0" loc="86:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7f02a3d280a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f02a3d28420"/>
        <function-ref name="write" scoped="" ref="0x7f02a3d285b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7f02a3d2f0a0" loc="73:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7f02a3d2f0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f02a3d2f420"/>
        <function-ref name="write" scoped="" ref="0x7f02a3d2f5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7f02a3d1c500" loc="108:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7f02a3d1c500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f02a3d1c880"/>
        <function-ref name="write" scoped="" ref="0x7f02a3d1ca10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7f02a3d1e500" loc="104:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7f02a3d1e500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f02a3d1e880"/>
        <function-ref name="write" scoped="" ref="0x7f02a3d1ea10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7f02a3d3b490" loc="50:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7f02a3d3b490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f02a3d3b810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7f02a3d24880" loc="93:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7f02a3d24880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f02a3d24c00"/>
        <function-ref name="write" scoped="" ref="0x7f02a3d24d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7f02a3d1f500" loc="102:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f02a3d1f500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f02a3d1f880"/>
        <function-ref name="write" scoped="" ref="0x7f02a3d1fa10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7f02a3d34e50" loc="65:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7f02a3d34e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f02a3d33210"/>
        <function-ref name="write" scoped="" ref="0x7f02a3d333a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7f02a3d33e50" loc="67:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7f02a3d33e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f02a3d32210"/>
        <function-ref name="write" scoped="" ref="0x7f02a3d323a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7f02a3d2a880" loc="83:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7f02a3d2a880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f02a3d2ac00"/>
        <function-ref name="write" scoped="" ref="0x7f02a3d2ad90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7f02a3d2b0a0" loc="79:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7f02a3d2b0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f02a3d2b420"/>
        <function-ref name="write" scoped="" ref="0x7f02a3d2b5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7f02a3d2f880" loc="74:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7f02a3d2f880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f02a3d2fc00"/>
        <function-ref name="write" scoped="" ref="0x7f02a3d2fd90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f02a3d40a90" loc="42:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f02a3d40a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f02a3d40e10"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f02a3d3f020"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f02a3d3f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7f02a3d39e00" loc="54:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7f02a3d39e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f02a3d381c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7f02a3d38490" loc="55:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7f02a3d38490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f02a3d38910"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7f02a3d23c80" loc="95:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f02a3d23c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f02a3d220a0"/>
        <function-ref name="write" scoped="" ref="0x7f02a3d22230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7f02a3d38be0" loc="56:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7f02a3d38be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f02a3d37020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7f02a3d1fce0" loc="103:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f02a3d1fce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f02a3d1e0a0"/>
        <function-ref name="write" scoped="" ref="0x7f02a3d1e230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7f02a3d39160" loc="52:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7f02a3d39160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f02a3d394e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7f02a3d240a0" loc="92:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7f02a3d240a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f02a3d24420"/>
        <function-ref name="write" scoped="" ref="0x7f02a3d245b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7f02a3d33670" loc="66:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7f02a3d33670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f02a3d339f0"/>
        <function-ref name="write" scoped="" ref="0x7f02a3d33b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7f02a3d34670" loc="64:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f02a3d34670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f02a3d349f0"/>
        <function-ref name="write" scoped="" ref="0x7f02a3d34b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7f02a3d3fad0" loc="46:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7f02a3d3fad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f02a3d3fe50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7f02a3d250a0" loc="90:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7f02a3d250a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f02a3d25420"/>
        <function-ref name="write" scoped="" ref="0x7f02a3d255b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7f02a3d28880" loc="87:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7f02a3d28880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f02a3d28c00"/>
        <function-ref name="write" scoped="" ref="0x7f02a3d28d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7f02a3d25880" loc="91:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7f02a3d25880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f02a3d25c00"/>
        <function-ref name="write" scoped="" ref="0x7f02a3d25d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7f02a3d1dce0" loc="107:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7f02a3d1dce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f02a3d1c0a0"/>
        <function-ref name="write" scoped="" ref="0x7f02a3d1c230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7f02a3d1ece0" loc="105:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7f02a3d1ece0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f02a3d1d0a0"/>
        <function-ref name="write" scoped="" ref="0x7f02a3d1d230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7f02a3d2b880" loc="80:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7f02a3d2b880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f02a3d2bc00"/>
        <function-ref name="write" scoped="" ref="0x7f02a3d2bd90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7f02a3d260a0" loc="88:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7f02a3d260a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f02a3d26420"/>
        <function-ref name="write" scoped="" ref="0x7f02a3d265b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7f02a3d21ce0" loc="101:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7f02a3d21ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f02a3d1f0a0"/>
        <function-ref name="write" scoped="" ref="0x7f02a3d1f230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7f02a3d2e880" loc="76:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7f02a3d2e880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f02a3d2ec00"/>
        <function-ref name="write" scoped="" ref="0x7f02a3d2ed90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7f02a3d1cce0" loc="111:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7f02a3d1cce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f02a3d1b0a0"/>
        <function-ref name="writeDone" scoped="" ref="0x7f02a3d1b230"/>
        <function-ref name="write" scoped="" ref="0x7f02a3d1b3c0"/>
        <function-ref name="beginRead" scoped="" ref="0x7f02a3d1b550"/>
        <function-ref name="readDone" scoped="" ref="0x7f02a3d1b6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7f02a3d3f480" loc="45:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7f02a3d3f480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f02a3d3f800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7f02a3d36670" loc="62:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7f02a3d36670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f02a3d369f0"/>
        <function-ref name="write" scoped="" ref="0x7f02a3d36b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7f02a3d32670" loc="68:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7f02a3d32670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f02a3d329f0"/>
        <function-ref name="write" scoped="" ref="0x7f02a3d32b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7f02a3d290a0" loc="84:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7f02a3d290a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f02a3d29420"/>
        <function-ref name="write" scoped="" ref="0x7f02a3d295b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7f02a3d2e0a0" loc="75:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7f02a3d2e0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f02a3d2e420"/>
        <function-ref name="write" scoped="" ref="0x7f02a3d2e5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7f02a3d29880" loc="85:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7f02a3d29880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f02a3d29c00"/>
        <function-ref name="write" scoped="" ref="0x7f02a3d29d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7f02a3d31870" loc="70:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7f02a3d31870"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f02a3d31bf0"/>
        <function-ref name="write" scoped="" ref="0x7f02a3d31d80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7f02a3d3c7b0" loc="48:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7f02a3d3c7b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f02a3d3cb30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7f02a3d300a0" loc="71:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7f02a3d300a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f02a3d30420"/>
        <function-ref name="write" scoped="" ref="0x7f02a3d305b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f02a3d41e20" loc="41:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f02a3d41e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f02a3d401c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f02a3d40350"/>
        <function-ref name="request" scoped="" ref="0x7f02a3d404e0"/>
        <function-ref name="granted" scoped="" ref="0x7f02a3d40670"/>
        <function-ref name="isOwner" scoped="" ref="0x7f02a3d40800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7f02a3d372f0" loc="57:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7f02a3d372f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f02a3d37670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7f02a3d36020" loc="59:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7f02a3d36020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f02a3d363a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7f02a3d21500" loc="100:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7f02a3d21500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f02a3d21880"/>
        <function-ref name="write" scoped="" ref="0x7f02a3d21a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7f02a3d22ce0" loc="99:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7f02a3d22ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f02a3d210a0"/>
        <function-ref name="write" scoped="" ref="0x7f02a3d21230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7f02a3d397b0" loc="53:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7f02a3d397b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f02a3d39b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7f02a3d22500" loc="96:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f02a3d22500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f02a3d22880"/>
        <function-ref name="write" scoped="" ref="0x7f02a3d22a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7f02a3d1d500" loc="106:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7f02a3d1d500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f02a3d1d880"/>
        <function-ref name="write" scoped="" ref="0x7f02a3d1da10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7f02a3d2a0a0" loc="81:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7f02a3d2a0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f02a3d2a420"/>
        <function-ref name="write" scoped="" ref="0x7f02a3d2a5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7f02a3d26880" loc="89:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7f02a3d26880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f02a3d26c00"/>
        <function-ref name="write" scoped="" ref="0x7f02a3d26d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7f02a3d3ce00" loc="49:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7f02a3d3ce00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f02a3d3b1c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7f02a3d3bae0" loc="51:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7f02a3d3bae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f02a3d3be60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7f02a3d2c0a0" loc="77:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7f02a3d2c0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f02a3d2c420"/>
        <function-ref name="write" scoped="" ref="0x7f02a3d2c5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7f02a3d37940" loc="58:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7f02a3d37940"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f02a3d37cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7f02a3d2c880" loc="78:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7f02a3d2c880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f02a3d2cc00"/>
        <function-ref name="write" scoped="" ref="0x7f02a3d2cd90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7f02a3d230a0" loc="94:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7f02a3d230a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f02a3d23820"/>
        <function-ref name="write" scoped="" ref="0x7f02a3d239b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7f02a3d1b9b0" loc="112:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7f02a3d1b9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f02a3d1bd30"/>
        <function-ref name="writeDone" scoped="" ref="0x7f02a3d1a020"/>
        <function-ref name="write" scoped="" ref="0x7f02a3d1a1b0"/>
        <function-ref name="beginRead" scoped="" ref="0x7f02a3d1a340"/>
        <function-ref name="readDone" scoped="" ref="0x7f02a3d1a4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Fifo" ref="0x7f02a4142630" loc="41:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Fifo" scoped="" ref="0x7f02a4142630"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f02a51f8160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f02a41429b0"/>
        <function-ref name="writeDone" scoped="" ref="0x7f02a4142b40"/>
        <function-ref name="write" scoped="" ref="0x7f02a4142cd0"/>
        <function-ref name="beginRead" scoped="" ref="0x7f02a4142e60"/>
        <function-ref name="readDone" scoped="" ref="0x7f02a4141020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f02a4143680" loc="40:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f02a4143680"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f02a4143a00"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f02a4143b90"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f02a4143d20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ram" ref="0x7f02a41418c0" loc="42:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Ram" scoped="" ref="0x7f02a41418c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x7f02a51f8520"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f02a4141c40"/>
        <function-ref name="write" scoped="" ref="0x7f02a4141dd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Reg" ref="0x7f02a41406f0" loc="43:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Reg" scoped="" ref="0x7f02a41406f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f02a51f8160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f02a4140a70"/>
        <function-ref name="write" scoped="" ref="0x7f02a4140c00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f02a4146960" loc="39:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f02a4146960"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f02a51f8160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f02a4146ce0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f02a4146e70"/>
        <function-ref name="request" scoped="" ref="0x7f02a4143030"/>
        <function-ref name="granted" scoped="" ref="0x7f02a41431c0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f02a4143350"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Strobe" ref="0x7f02a413e510" loc="44:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Strobe" scoped="" ref="0x7f02a413e510"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f02a51f8160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f02a413e890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiPacket" ref="0x7f02a4129680" loc="55:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7f02a4129680"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f02a4129a00"/>
        <function-ref name="sendDone" scoped="" ref="0x7f02a4129b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Fifo" ref="0x7f02a4139bb0" loc="46:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Fifo" scoped="" ref="0x7f02a4139bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f02a51f8160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f02a4138020"/>
        <function-ref name="writeDone" scoped="" ref="0x7f02a41381b0"/>
        <function-ref name="write" scoped="" ref="0x7f02a4138340"/>
        <function-ref name="beginRead" scoped="" ref="0x7f02a41384d0"/>
        <function-ref name="readDone" scoped="" ref="0x7f02a4138660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f02a413d930" loc="44:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f02a413d930"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f02a413dcb0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f02a413de40"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f02a413a020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiByte" ref="0x7f02a4132080" loc="54:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7f02a4132080"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7f02a4132400"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="WorkingState" ref="0x7f02a4131020" loc="56:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="WorkingState" scoped="" ref="0x7f02a4131020"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f02a41313a0"/>
        <function-ref name="toIdle" scoped="" ref="0x7f02a4131530"/>
        <function-ref name="isState" scoped="" ref="0x7f02a41316c0"/>
        <function-ref name="isIdle" scoped="" ref="0x7f02a4131850"/>
        <function-ref name="requestState" scoped="" ref="0x7f02a41319e0"/>
        <function-ref name="forceState" scoped="" ref="0x7f02a4131b70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7f02a4134400" loc="53:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x7f02a4134400"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f02a4134780"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f02a4134910"/>
        <function-ref name="request" scoped="" ref="0x7f02a4134aa0"/>
        <function-ref name="granted" scoped="" ref="0x7f02a4134c30"/>
        <function-ref name="isOwner" scoped="" ref="0x7f02a4134dc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ram" ref="0x7f02a4137020" loc="47:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Ram" scoped="" ref="0x7f02a4137020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x7f02a51f8520"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f02a41373a0"/>
        <function-ref name="write" scoped="" ref="0x7f02a4137530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Reg" ref="0x7f02a4137db0" loc="48:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Reg" scoped="" ref="0x7f02a4137db0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f02a51f8160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f02a4135180"/>
        <function-ref name="write" scoped="" ref="0x7f02a4135310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f02a4131df0" loc="57:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f02a4131df0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f02a41301c0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f02a4130350"/>
        <function-ref name="led1On" scoped="" ref="0x7f02a41304e0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f02a4130670"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f02a4130800"/>
        <function-ref name="get" scoped="" ref="0x7f02a4130990"/>
        <function-ref name="led1Off" scoped="" ref="0x7f02a4130b20"/>
        <function-ref name="led2Off" scoped="" ref="0x7f02a412a1b0"/>
        <function-ref name="set" scoped="" ref="0x7f02a4130cb0"/>
        <function-ref name="led0On" scoped="" ref="0x7f02a4130e40"/>
        <function-ref name="led2On" scoped="" ref="0x7f02a412a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f02a413a810" loc="45:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f02a413a810"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f02a51f8160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f02a413ab90"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f02a413ad20"/>
        <function-ref name="request" scoped="" ref="0x7f02a4139020"/>
        <function-ref name="granted" scoped="" ref="0x7f02a41391b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f02a4139340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grant" ref="0x7f02a4124120" loc="88:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grant" scoped="" ref="0x7f02a4124120"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f02a41244a0"/>
        <function-ref name="runTask" scoped="" ref="0x7f02a4124630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Strobe" ref="0x7f02a4135ba0" loc="49:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Strobe" scoped="" ref="0x7f02a4135ba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f02a51f8160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f02a4134020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7f02a40c9770" loc="67:/home/hades/tinyos-new/tos/system/StateC.nc">
      <component-ref qname="CC2420SpiWireC.WorkingStateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7f02a40c9770"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f02a40c9af0"/>
        <function-ref name="toIdle" scoped="" ref="0x7f02a40c9c80"/>
        <function-ref name="isState" scoped="" ref="0x7f02a40c9e10"/>
        <function-ref name="isIdle" scoped="" ref="0x7f02a40c5020"/>
        <function-ref name="requestState" scoped="" ref="0x7f02a40c51b0"/>
        <function-ref name="forceState" scoped="" ref="0x7f02a40c5340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7f02a40c4280" loc="66:/home/hades/tinyos-new/tos/system/StateImplC.nc">
      <component-ref qname="StateImplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7f02a40c4280"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f02a51f8160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f02a40c4600"/>
        <function-ref name="toIdle" scoped="" ref="0x7f02a40c4790"/>
        <function-ref name="isState" scoped="" ref="0x7f02a40c4920"/>
        <function-ref name="isIdle" scoped="" ref="0x7f02a40c4ab0"/>
        <function-ref name="requestState" scoped="" ref="0x7f02a40c4c40"/>
        <function-ref name="forceState" scoped="" ref="0x7f02a40c4dd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f02a40c0020" loc="66:/home/hades/tinyos-new/tos/system/StateImplP.nc">
      <component-ref qname="StateImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f02a40c0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f02a40c03a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7f02a40c0b70" loc="67:/home/hades/tinyos-new/tos/system/StateImplP.nc">
      <component-ref qname="StateImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7f02a40c0b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f02a51f8160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f02a40be020"/>
        <function-ref name="toIdle" scoped="" ref="0x7f02a40be1b0"/>
        <function-ref name="isState" scoped="" ref="0x7f02a40be340"/>
        <function-ref name="isIdle" scoped="" ref="0x7f02a40be4d0"/>
        <function-ref name="requestState" scoped="" ref="0x7f02a40be660"/>
        <function-ref name="forceState" scoped="" ref="0x7f02a40be7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7f02a3d67020" loc="44:/home/hades/tinyos-new/tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7f02a3d67020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f02a3d673a0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f02a3d67530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7f02a40a68f0" loc="43:/home/hades/tinyos-new/tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7f02a40a68f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7f02a40a6c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f02a40a7c40" loc="42:/home/hades/tinyos-new/tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f02a40a7c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f02a40a6020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f02a40a61b0"/>
        <function-ref name="request" scoped="" ref="0x7f02a40a6340"/>
        <function-ref name="granted" scoped="" ref="0x7f02a40a64d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f02a40a6660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f02a2d93af0" loc="82:/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f02a2d93af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f02a2d93e70"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f02a2d92030"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7f02a2d91440" loc="87:/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7f02a2d91440"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f02a2d917c0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f02a2d91950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430SpiConfigure" ref="0x7f02a2d91be0" loc="89:/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7f02a2d91be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430SpiConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7f02a2d90020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7f02a2d922c0" loc="83:/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7f02a2d922c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7f02a2d92640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f02a2d95e70" loc="81:/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f02a2d95e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f02a2d93220"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f02a2d933b0"/>
        <function-ref name="request" scoped="" ref="0x7f02a2d93540"/>
        <function-ref name="granted" scoped="" ref="0x7f02a2d936d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f02a2d93860"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x7f02a2d928d0" loc="85:/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FastSpiByte" scoped="" ref="0x7f02a2d928d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7f02a2d92c50"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7f02a2d92de0"/>
        <function-ref name="splitRead" scoped="" ref="0x7f02a2d91020"/>
        <function-ref name="write" scoped="" ref="0x7f02a2d911b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x7f02a40425e0" loc="74:/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f02a40425e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f02a51f8160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f02a4042960"/>
        <function-ref name="configure" scoped="" ref="0x7f02a4042af0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7f02a403e510" loc="77:/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7f02a403e510"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f02a51f8160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f02a403e890"/>
        <function-ref name="sendDone" scoped="" ref="0x7f02a403ea20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430SpiConfigure" ref="0x7f02a403c600" loc="80:/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7f02a403c600"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430SpiConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f02a51f8160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7f02a403c980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7f02a4042dd0" loc="75:/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7f02a4042dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7f02a4041180"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x7f02a403d370" loc="79:/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x7f02a403d370"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f02a51f8160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f02a403d6f0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f02a403d880"/>
        <function-ref name="request" scoped="" ref="0x7f02a403da10"/>
        <function-ref name="granted" scoped="" ref="0x7f02a403dba0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f02a403dd30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f02a4047a30" loc="73:/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f02a4047a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f02a51f8160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f02a4047db0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f02a4043020"/>
        <function-ref name="request" scoped="" ref="0x7f02a40431b0"/>
        <function-ref name="granted" scoped="" ref="0x7f02a4043340"/>
        <function-ref name="isOwner" scoped="" ref="0x7f02a40434d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x7f02a4041480" loc="76:/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FastSpiByte" scoped="" ref="0x7f02a4041480"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7f02a4041800"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7f02a4041990"/>
        <function-ref name="splitRead" scoped="" ref="0x7f02a4041b20"/>
        <function-ref name="write" scoped="" ref="0x7f02a4041cb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x7f02a40376a0" loc="81:/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x7f02a40376a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f02a4037a20"/>
        <function-ref name="txDone" scoped="" ref="0x7f02a4037bb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x7f02a3fc7c40" loc="76:/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f02a3fc7c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f02a51f8160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f02a3fc6020"/>
        <function-ref name="configure" scoped="" ref="0x7f02a3fc61b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7f02a3fc4700" loc="79:/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7f02a3fc4700"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f02a51f8160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f02a3fc4aa0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f02a3fc4c30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430SpiConfigure" ref="0x7f02a3fc3e00" loc="82:/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7f02a3fc3e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430SpiConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f02a51f8160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7f02a3fc21c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7f02a3fc6440" loc="77:/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7f02a3fc6440"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7f02a3fc67c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Usart" ref="0x7f02a3fc2490" loc="83:/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x7f02a3fc2490"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f02a3fc2810"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f02a3fc29a0"/>
        <function-ref name="setUctl" scoped="" ref="0x7f02a3fc2b30"/>
        <function-ref name="enableUart" scoped="" ref="0x7f02a3fc2cc0"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f02a3fc2e50"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f02a3fc1020"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f02a3fc11b0"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f02a3fc1340"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f02a3fc14d0"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f02a3fc1660"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f02a3fc17f0"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f02a3fc1980"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f02a3fc1b10"/>
        <function-ref name="getUbr" scoped="" ref="0x7f02a3fc1da0"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f02a3fc0020"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f02a3fc01b0"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f02a3fc0340"/>
        <function-ref name="isUart" scoped="" ref="0x7f02a3fc04d0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f02a3fc0660"/>
        <function-ref name="isSpi" scoped="" ref="0x7f02a3fc07f0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f02a3fc0980"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f02a3fc0b10"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f02a3fc0ca0"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f02a3fc0e30"/>
        <function-ref name="getMode" scoped="" ref="0x7f02a3fbf020"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f02a3fbf3b0"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f02a3fbf540"/>
        <function-ref name="setUbr" scoped="" ref="0x7f02a3fbf6d0"/>
        <function-ref name="tx" scoped="" ref="0x7f02a3fbf860"/>
        <function-ref name="getUctl" scoped="" ref="0x7f02a3fbf9f0"/>
        <function-ref name="disableUart" scoped="" ref="0x7f02a3fbfb80"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f02a3fbfd10"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f02a3fbe020"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f02a3fbe1b0"/>
        <function-ref name="rx" scoped="" ref="0x7f02a3fbe340"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f02a3fbe4d0"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f02a3fbe660"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f02a3fbe7f0"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f02a3fbe980"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f02a3fbeb10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f02a3fbd5a0" loc="85:/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f02a3fbd5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f02a3fbd920"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f02a3fbdab0"/>
        <function-ref name="led1On" scoped="" ref="0x7f02a3fbdc40"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f02a3fbddd0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f02a3fbc020"/>
        <function-ref name="get" scoped="" ref="0x7f02a3fbc1b0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f02a3fbc340"/>
        <function-ref name="led2On" scoped="" ref="0x7f02a3fbc980"/>
        <function-ref name="set" scoped="" ref="0x7f02a3fbc660"/>
        <function-ref name="led2Off" scoped="" ref="0x7f02a3fbc4d0"/>
        <function-ref name="led0On" scoped="" ref="0x7f02a3fbc7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x7f02a3fc3060" loc="81:/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x7f02a3fc3060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f02a51f8160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f02a3fc3400"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f02a3fc3590"/>
        <function-ref name="request" scoped="" ref="0x7f02a3fc3720"/>
        <function-ref name="granted" scoped="" ref="0x7f02a3fc38b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f02a3fc3a40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f02a3fc8e80" loc="75:/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f02a3fc8e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f02a51f8160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f02a3fc7240"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f02a3fc73d0"/>
        <function-ref name="request" scoped="" ref="0x7f02a3fc7560"/>
        <function-ref name="granted" scoped="" ref="0x7f02a3fc76f0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f02a3fc7880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x7f02a3fc6a50" loc="78:/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FastSpiByte" scoped="" ref="0x7f02a3fc6a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7f02a3fc6dd0"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7f02a3fc4020"/>
        <function-ref name="splitRead" scoped="" ref="0x7f02a3fc41b0"/>
        <function-ref name="write" scoped="" ref="0x7f02a3fc4340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x7f02a3fbede0" loc="84:/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x7f02a3fbede0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f02a3fbd180"/>
        <function-ref name="txDone" scoped="" ref="0x7f02a3fbd310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalDone_task" ref="0x7f02a3fbcc50" loc="102:/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="signalDone_task" scoped="" ref="0x7f02a3fbcc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f02a3fbb020"/>
        <function-ref name="runTask" scoped="" ref="0x7f02a3fbb1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2CInterrupts" ref="0x7f02a3fac980" loc="78:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <component-ref qname="HplMsp430Usart0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7f02a3fac980"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f02a3facd00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x7f02a3faf3b0" loc="77:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <component-ref qname="HplMsp430Usart0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f02a3faf3b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f02a3faf730"/>
        <function-ref name="txDone" scoped="" ref="0x7f02a3faf8c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x7f02a3fb6870" loc="76:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <component-ref qname="HplMsp430Usart0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f02a3fb6870"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f02a3fb6bf0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f02a3fb6d80"/>
        <function-ref name="setUctl" scoped="" ref="0x7f02a3fb3020"/>
        <function-ref name="enableUart" scoped="" ref="0x7f02a3fb31b0"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f02a3fb3340"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f02a3fb34d0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f02a3fb3660"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f02a3fb37f0"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f02a3fb3980"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f02a3fb3b10"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f02a3fb3ca0"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f02a3fb3e30"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f02a3fb2020"/>
        <function-ref name="getUbr" scoped="" ref="0x7f02a3fb22b0"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f02a3fb2440"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f02a3fb25d0"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f02a3fb2760"/>
        <function-ref name="isUart" scoped="" ref="0x7f02a3fb28f0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f02a3fb2a80"/>
        <function-ref name="isSpi" scoped="" ref="0x7f02a3fb2c10"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f02a3fb2da0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f02a3fb1020"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f02a3fb11b0"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f02a3fb1340"/>
        <function-ref name="getMode" scoped="" ref="0x7f02a3fb14d0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f02a3fb1860"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f02a3fb19f0"/>
        <function-ref name="setUbr" scoped="" ref="0x7f02a3fb1b80"/>
        <function-ref name="tx" scoped="" ref="0x7f02a3fb1d10"/>
        <function-ref name="getUctl" scoped="" ref="0x7f02a3fb0020"/>
        <function-ref name="disableUart" scoped="" ref="0x7f02a3fb01b0"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f02a3fb0340"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f02a3fb04d0"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f02a3fb0660"/>
        <function-ref name="rx" scoped="" ref="0x7f02a3fb07f0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f02a3fb0980"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f02a3fb0b10"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f02a3fb0ca0"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f02a3fb0e30"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f02a3faf020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UCLK" ref="0x7f02a3f71670" loc="82:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK" scoped="" ref="0x7f02a3f71670"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f02a3f719f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f02a3f71b80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f02a3f71d10"/>
        <function-ref name="toggle" scoped="" ref="0x7f02a3f70020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f02a3f701b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f02a3f70340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f02a3f704d0"/>
        <function-ref name="get" scoped="" ref="0x7f02a3f70660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f02a3f707f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f02a3f70980"/>
        <function-ref name="set" scoped="" ref="0x7f02a3f70b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f02a3f70ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f02a3f70e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f02a3f6f120"/>
        <function-ref name="clr" scoped="" ref="0x7f02a3f6f2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7f02a3fa4dc0" loc="76:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7f02a3fa4dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f02a3fa3180"/>
        <function-ref name="txDone" scoped="" ref="0x7f02a3fa3310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="URXD" ref="0x7f02a3f6f670" loc="83:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD" scoped="" ref="0x7f02a3f6f670"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f02a3f6f9f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f02a3f6fb80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f02a3f6fd10"/>
        <function-ref name="toggle" scoped="" ref="0x7f02a3f6e020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f02a3f6e1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f02a3f6e340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f02a3f6e4d0"/>
        <function-ref name="get" scoped="" ref="0x7f02a3f6e660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f02a3f6e7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f02a3f6e980"/>
        <function-ref name="set" scoped="" ref="0x7f02a3f6eb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f02a3f6eca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f02a3f6ee30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f02a3f6d120"/>
        <function-ref name="clr" scoped="" ref="0x7f02a3f6d2b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UTXD" ref="0x7f02a3f6d670" loc="84:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD" scoped="" ref="0x7f02a3f6d670"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f02a3f6d9f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f02a3f6db80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f02a3f6dd10"/>
        <function-ref name="toggle" scoped="" ref="0x7f02a3f6c020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f02a3f6c1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f02a3f6c340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f02a3f6c4d0"/>
        <function-ref name="get" scoped="" ref="0x7f02a3f6c660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f02a3f6c7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f02a3f6c980"/>
        <function-ref name="set" scoped="" ref="0x7f02a3f6cb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f02a3f6cca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f02a3f6ce30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f02a3f6b120"/>
        <function-ref name="clr" scoped="" ref="0x7f02a3f6b2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Usart" ref="0x7f02a3fa8060" loc="75:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x7f02a3fa8060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f02a3fa83e0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f02a3fa8570"/>
        <function-ref name="setUctl" scoped="" ref="0x7f02a3fa8700"/>
        <function-ref name="enableUart" scoped="" ref="0x7f02a3fa8890"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f02a3fa8a20"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f02a3fa8bb0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f02a3fa8d40"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f02a3fa7020"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f02a3fa71b0"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f02a3fa7340"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f02a3fa74d0"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f02a3fa7660"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f02a3fa77f0"/>
        <function-ref name="getUbr" scoped="" ref="0x7f02a3fa7a80"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f02a3fa7c10"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f02a3fa7da0"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f02a3fa6020"/>
        <function-ref name="isUart" scoped="" ref="0x7f02a3fa61b0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f02a3fa6340"/>
        <function-ref name="isSpi" scoped="" ref="0x7f02a3fa64d0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f02a3fa6660"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f02a3fa67f0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f02a3fa6980"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f02a3fa6b10"/>
        <function-ref name="getMode" scoped="" ref="0x7f02a3fa6ca0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f02a3fa5220"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f02a3fa53b0"/>
        <function-ref name="setUbr" scoped="" ref="0x7f02a3fa5540"/>
        <function-ref name="tx" scoped="" ref="0x7f02a3fa56d0"/>
        <function-ref name="getUctl" scoped="" ref="0x7f02a3fa5860"/>
        <function-ref name="disableUart" scoped="" ref="0x7f02a3fa59f0"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f02a3fa5b80"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f02a3fa5d10"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f02a3fa4020"/>
        <function-ref name="rx" scoped="" ref="0x7f02a3fa41b0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f02a3fa4340"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f02a3fa44d0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f02a3fa4660"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f02a3fa47f0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f02a3fa4980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplI2C" ref="0x7f02a3f7a5b0" loc="79:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplI2C" scoped="" ref="0x7f02a3f7a5b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x7f02a3f7a930"/>
        <function-ref name="getStartByte" scoped="" ref="0x7f02a3f7aac0"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x7f02a3f7ac50"/>
        <function-ref name="setMasterMode" scoped="" ref="0x7f02a3f7ade0"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x7f02a3fa1020"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x7f02a3fa11b0"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x7f02a3fa1340"/>
        <function-ref name="getStopBit" scoped="" ref="0x7f02a3fa14d0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f02a3fa1660"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x7f02a3fa17f0"/>
        <function-ref name="getData" scoped="" ref="0x7f02a3fa1980"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x7f02a3fa1b10"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x7f02a3fa1ca0"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x7f02a3fa0020"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x7f02a3fa01b0"/>
        <function-ref name="getIV" scoped="" ref="0x7f02a3fa0340"/>
        <function-ref name="enableI2C" scoped="" ref="0x7f02a3fa04d0"/>
        <function-ref name="setStartBit" scoped="" ref="0x7f02a3fa0660"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x7f02a3fa07f0"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x7f02a3fa0980"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x7f02a3fa0b10"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x7f02a3fa0ca0"/>
        <function-ref name="isI2C" scoped="" ref="0x7f02a3fa0e30"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x7f02a3f79020"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x7f02a3f791b0"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x7f02a3f79540"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x7f02a3f796d0"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x7f02a3f79860"/>
        <function-ref name="disableNoAck" scoped="" ref="0x7f02a3f799f0"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x7f02a3f79b80"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x7f02a3f79d10"/>
        <function-ref name="disableI2C" scoped="" ref="0x7f02a3f78020"/>
        <function-ref name="getShiftClock" scoped="" ref="0x7f02a3f781b0"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x7f02a3f78340"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x7f02a3f784d0"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x7f02a3f78660"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x7f02a3f787f0"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x7f02a3f78980"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x7f02a3f78b10"/>
        <function-ref name="setModeI2C" scoped="" ref="0x7f02a3f78ca0"/>
        <function-ref name="getStartBit" scoped="" ref="0x7f02a3f78e30"/>
        <function-ref name="setWordMode" scoped="" ref="0x7f02a3f77020"/>
        <function-ref name="setData" scoped="" ref="0x7f02a3f771b0"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x7f02a3f77340"/>
        <function-ref name="getClockSource" scoped="" ref="0x7f02a3f774d0"/>
        <function-ref name="getWordMode" scoped="" ref="0x7f02a3f77660"/>
        <function-ref name="setShiftClock" scoped="" ref="0x7f02a3f777f0"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x7f02a3f77980"/>
        <function-ref name="enableNoAck" scoped="" ref="0x7f02a3f77b10"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x7f02a3f76420"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x7f02a3f765b0"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x7f02a3f76740"/>
        <function-ref name="setStopBit" scoped="" ref="0x7f02a3f768d0"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x7f02a3f76a60"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x7f02a3f76bf0"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x7f02a3f76d80"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x7f02a3f75020"/>
        <function-ref name="setStartByte" scoped="" ref="0x7f02a3f751b0"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x7f02a3f75340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SOMI" ref="0x7f02a3f73670" loc="81:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI" scoped="" ref="0x7f02a3f73670"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f02a3f739f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f02a3f73b80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f02a3f73d10"/>
        <function-ref name="toggle" scoped="" ref="0x7f02a3f72020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f02a3f721b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f02a3f72340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f02a3f724d0"/>
        <function-ref name="get" scoped="" ref="0x7f02a3f72660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f02a3f727f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f02a3f72980"/>
        <function-ref name="set" scoped="" ref="0x7f02a3f72b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f02a3f72ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f02a3f72e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f02a3f71120"/>
        <function-ref name="clr" scoped="" ref="0x7f02a3f712b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x7f02a3fa3750" loc="77:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x7f02a3fa3750"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f02a3fa3ad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SIMO" ref="0x7f02a3f75700" loc="80:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO" scoped="" ref="0x7f02a3f75700"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f02a3f75a80"/>
        <function-ref name="isInput" scoped="" ref="0x7f02a3f75c10"/>
        <function-ref name="setResistor" scoped="" ref="0x7f02a3f75da0"/>
        <function-ref name="toggle" scoped="" ref="0x7f02a3f74020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f02a3f741b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f02a3f74340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f02a3f744d0"/>
        <function-ref name="get" scoped="" ref="0x7f02a3f74660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f02a3f747f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f02a3f74980"/>
        <function-ref name="set" scoped="" ref="0x7f02a3f74b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f02a3f74ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f02a3f74e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f02a3f73120"/>
        <function-ref name="clr" scoped="" ref="0x7f02a3f732b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f02a2d895d0" loc="42:/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f02a2d895d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f02a2d89950"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f02a2d89ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2CInterrupts" ref="0x7f02a2d827c0" loc="46:/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7f02a2d827c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f02a2d82b40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f02a2d7ba80" loc="51:/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f02a2d7ba80"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f02a2d7be00"/>
        <function-ref name="configure" scoped="" ref="0x7f02a2d7a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2C" ref="0x7f02a2d82dd0" loc="48:/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2C" scoped="" ref="0x7f02a2d82dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x7f02a2d81180"/>
        <function-ref name="getStartByte" scoped="" ref="0x7f02a2d81310"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x7f02a2d814a0"/>
        <function-ref name="setMasterMode" scoped="" ref="0x7f02a2d81630"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x7f02a2d817c0"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x7f02a2d81950"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x7f02a2d81ae0"/>
        <function-ref name="getStopBit" scoped="" ref="0x7f02a2d81c70"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f02a2d81e00"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x7f02a2d80020"/>
        <function-ref name="getData" scoped="" ref="0x7f02a2d801b0"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x7f02a2d80340"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x7f02a2d804d0"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x7f02a2d80760"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x7f02a2d808f0"/>
        <function-ref name="getIV" scoped="" ref="0x7f02a2d80a80"/>
        <function-ref name="enableI2C" scoped="" ref="0x7f02a2d80c10"/>
        <function-ref name="setStartBit" scoped="" ref="0x7f02a2d80da0"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x7f02a2d7f020"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x7f02a2d7f1b0"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x7f02a2d7f340"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x7f02a2d7f4d0"/>
        <function-ref name="isI2C" scoped="" ref="0x7f02a2d7f660"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x7f02a2d7f7f0"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x7f02a2d7f980"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x7f02a2d7fd10"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x7f02a2d7e020"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x7f02a2d7e1b0"/>
        <function-ref name="disableNoAck" scoped="" ref="0x7f02a2d7e340"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x7f02a2d7e4d0"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x7f02a2d7e660"/>
        <function-ref name="disableI2C" scoped="" ref="0x7f02a2d7e7f0"/>
        <function-ref name="getShiftClock" scoped="" ref="0x7f02a2d7e980"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x7f02a2d7eb10"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x7f02a2d7eca0"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x7f02a2d7ee30"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x7f02a2d7d020"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x7f02a2d7d1b0"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x7f02a2d7d340"/>
        <function-ref name="setModeI2C" scoped="" ref="0x7f02a2d7d4d0"/>
        <function-ref name="getStartBit" scoped="" ref="0x7f02a2d7d660"/>
        <function-ref name="setWordMode" scoped="" ref="0x7f02a2d7d7f0"/>
        <function-ref name="setData" scoped="" ref="0x7f02a2d7d980"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x7f02a2d7db10"/>
        <function-ref name="getClockSource" scoped="" ref="0x7f02a2d7dca0"/>
        <function-ref name="getWordMode" scoped="" ref="0x7f02a2d7de30"/>
        <function-ref name="setShiftClock" scoped="" ref="0x7f02a2d7c020"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x7f02a2d7c1b0"/>
        <function-ref name="enableNoAck" scoped="" ref="0x7f02a2d7c340"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x7f02a2d7c8d0"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x7f02a2d7ca60"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x7f02a2d7cbf0"/>
        <function-ref name="setStopBit" scoped="" ref="0x7f02a2d7cd80"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x7f02a2d7b020"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x7f02a2d7b1b0"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x7f02a2d7b340"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x7f02a2d7b4d0"/>
        <function-ref name="setStartByte" scoped="" ref="0x7f02a2d7b660"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x7f02a2d7b7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x7f02a2d82020" loc="45:/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f02a2d82020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f02a2d823a0"/>
        <function-ref name="txDone" scoped="" ref="0x7f02a2d82530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f02a2d8a860" loc="41:/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f02a2d8a860"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f02a2d8abe0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f02a2d8ad70"/>
        <function-ref name="request" scoped="" ref="0x7f02a2d89020"/>
        <function-ref name="granted" scoped="" ref="0x7f02a2d891b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f02a2d89340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x7f02a2d875a0" loc="44:/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f02a2d875a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f02a2d87920"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f02a2d87ab0"/>
        <function-ref name="setUctl" scoped="" ref="0x7f02a2d87c40"/>
        <function-ref name="enableUart" scoped="" ref="0x7f02a2d87dd0"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f02a2d86020"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f02a2d861b0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f02a2d86340"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f02a2d864d0"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f02a2d86660"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f02a2d867f0"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f02a2d86980"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f02a2d86b10"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f02a2d86ca0"/>
        <function-ref name="getUbr" scoped="" ref="0x7f02a2d85020"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f02a2d851b0"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f02a2d85340"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f02a2d854d0"/>
        <function-ref name="isUart" scoped="" ref="0x7f02a2d85660"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f02a2d857f0"/>
        <function-ref name="isSpi" scoped="" ref="0x7f02a2d85980"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f02a2d85b10"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f02a2d85ca0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f02a2d85e30"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f02a2d84020"/>
        <function-ref name="getMode" scoped="" ref="0x7f02a2d841b0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f02a2d84540"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f02a2d846d0"/>
        <function-ref name="setUbr" scoped="" ref="0x7f02a2d84860"/>
        <function-ref name="tx" scoped="" ref="0x7f02a2d849f0"/>
        <function-ref name="getUctl" scoped="" ref="0x7f02a2d84b80"/>
        <function-ref name="disableUart" scoped="" ref="0x7f02a2d84d10"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f02a2d83020"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f02a2d831b0"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f02a2d83340"/>
        <function-ref name="rx" scoped="" ref="0x7f02a2d834d0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f02a2d83660"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f02a2d837f0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f02a2d83980"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f02a2d83b10"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f02a2d83ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f02a2d89d70" loc="43:/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f02a2d89d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f02a2d87180"/>
        <function-ref name="userId" scoped="" ref="0x7f02a2d87310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f02a3eca8a0" loc="42:/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f02a3eca8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f02a51f8160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f02a3ecac20"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f02a3ecadb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f02a3ec7020" loc="45:/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f02a3ec7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f02a51f8160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f02a3ec73a0"/>
        <function-ref name="configure" scoped="" ref="0x7f02a3ec7530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7f02a3ecfa90" loc="39:/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7f02a3ecfa90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f02a51f8160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f02a3ecfe10"/>
        <function-ref name="txDone" scoped="" ref="0x7f02a3ecc020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f02a3ecb5c0" loc="41:/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f02a3ecb5c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f02a51f8160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f02a3ecb940"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f02a3ecbad0"/>
        <function-ref name="request" scoped="" ref="0x7f02a3ecbc60"/>
        <function-ref name="granted" scoped="" ref="0x7f02a3ecbdf0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f02a3eca020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x7f02a3ecc9a0" loc="40:/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x7f02a3ecc9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f02a51f8160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f02a3eccd20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f02a3ec8130" loc="43:/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f02a3ec8130"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f02a3ec84b0"/>
        <function-ref name="userId" scoped="" ref="0x7f02a3ec8640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7f02a3eb34b0" loc="43:/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f02a3eb34b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f02a3eb3830"/>
        <function-ref name="userId" scoped="" ref="0x7f02a3eb39c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7f02a3ec55c0" loc="39:/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7f02a3ec55c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f02a51f8160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f02a3ec5960"/>
        <function-ref name="txDone" scoped="" ref="0x7f02a3ec5af0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawI2CInterrupts" ref="0x7f02a3eb4e70" loc="42:/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawI2CInterrupts" scoped="" ref="0x7f02a3eb4e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f02a3eb3220"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x7f02a3eb4020" loc="40:/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x7f02a3eb4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f02a51f8160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f02a3eb43c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawInterrupts" ref="0x7f02a3eb4690" loc="41:/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawInterrupts" scoped="" ref="0x7f02a3eb4690"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f02a3eb4a10"/>
        <function-ref name="txDone" scoped="" ref="0x7f02a3eb4ba0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f02a3e39bf0" loc="92:/home/hades/tinyos-new/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f02a3e39bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f02a51f8160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f02a3e38020"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f02a3e381b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f02a3e37930" loc="96:/home/hades/tinyos-new/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f02a3e37930"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f02a51f8160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f02a3e37cd0"/>
        <function-ref name="configure" scoped="" ref="0x7f02a3e37e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7f02a3e38400" loc="93:/home/hades/tinyos-new/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f02a3e38400"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f02a3e38780"/>
        <function-ref name="requested" scoped="" ref="0x7f02a3e38910"/>
        <function-ref name="granted" scoped="" ref="0x7f02a3e38aa0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f02a3e38c30"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f02a3e38dc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f02a3e3ae60" loc="91:/home/hades/tinyos-new/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f02a3e3ae60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f02a51f8160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f02a3e39230"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f02a3e393c0"/>
        <function-ref name="request" scoped="" ref="0x7f02a3e39550"/>
        <function-ref name="granted" scoped="" ref="0x7f02a3e396e0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f02a3e39870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f02a3e37060" loc="94:/home/hades/tinyos-new/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f02a3e37060"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f02a3e373e0"/>
        <function-ref name="userId" scoped="" ref="0x7f02a3e37570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f02a2d0da40" loc="44:/home/hades/tinyos-new/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f02a2d0da40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f02a2d0ddc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7f02a2d0c0a0" loc="45:/home/hades/tinyos-new/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FcfsQueue" scoped="" ref="0x7f02a2d0c0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f02a2d0c420"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f02a2d0c5b0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f02a2d0c740"/>
        <function-ref name="dequeue" scoped="" ref="0x7f02a2d0c8d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f02a2d08020" loc="55:/home/hades/tinyos-new/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f02a2d08020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f02a51f8160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f02a2d083c0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f02a2d08550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f02a2d07cf0" loc="60:/home/hades/tinyos-new/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f02a2d07cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f02a51f8160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f02a2d060e0"/>
        <function-ref name="configure" scoped="" ref="0x7f02a2d06270"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7f02a2d06500" loc="61:/home/hades/tinyos-new/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x7f02a2d06500"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f02a2d06880"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f02a2d06a10"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f02a2d06ba0"/>
        <function-ref name="dequeue" scoped="" ref="0x7f02a2d06d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7f02a2d087a0" loc="56:/home/hades/tinyos-new/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f02a2d087a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f02a2d08b20"/>
        <function-ref name="requested" scoped="" ref="0x7f02a2d08cb0"/>
        <function-ref name="granted" scoped="" ref="0x7f02a2d08e40"/>
        <function-ref name="isOwner" scoped="" ref="0x7f02a2d07020"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f02a2d071b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f02a2d05020" loc="62:/home/hades/tinyos-new/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f02a2d05020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f02a2d053a0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f02a2d05530"/>
        <function-ref name="led1On" scoped="" ref="0x7f02a2d056c0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f02a2d05850"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f02a2d059e0"/>
        <function-ref name="get" scoped="" ref="0x7f02a2d05b70"/>
        <function-ref name="led1Off" scoped="" ref="0x7f02a2d05d00"/>
        <function-ref name="led0On" scoped="" ref="0x7f02a2d044d0"/>
        <function-ref name="set" scoped="" ref="0x7f02a2d041b0"/>
        <function-ref name="led2On" scoped="" ref="0x7f02a2d04020"/>
        <function-ref name="led2Off" scoped="" ref="0x7f02a2d04340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f02a2d09270" loc="54:/home/hades/tinyos-new/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f02a2d09270"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f02a51f8160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f02a2d09610"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f02a2d097a0"/>
        <function-ref name="request" scoped="" ref="0x7f02a2d09930"/>
        <function-ref name="granted" scoped="" ref="0x7f02a2d09ac0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f02a2d09c50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f02a2d07400" loc="57:/home/hades/tinyos-new/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f02a2d07400"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f02a2d07780"/>
        <function-ref name="userId" scoped="" ref="0x7f02a2d07910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7f02a2d047a0" loc="75:/home/hades/tinyos-new/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantedTask" scoped="" ref="0x7f02a2d047a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f02a2d04b20"/>
        <function-ref name="runTask" scoped="" ref="0x7f02a2d04cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2C" ref="0x7f02a3e30880" loc="4:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <component-ref qname="HplMsp430I2C0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2C" scoped="" ref="0x7f02a3e30880"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x7f02a3e30c00"/>
        <function-ref name="getStartByte" scoped="" ref="0x7f02a3e30d90"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x7f02a3e2d020"/>
        <function-ref name="setMasterMode" scoped="" ref="0x7f02a3e2d1b0"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x7f02a3e2d340"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x7f02a3e2d4d0"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x7f02a3e2d660"/>
        <function-ref name="getStopBit" scoped="" ref="0x7f02a3e2d7f0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f02a3e2d980"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x7f02a3e2db10"/>
        <function-ref name="getData" scoped="" ref="0x7f02a3e2dca0"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x7f02a3e2de30"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x7f02a3e2c020"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x7f02a3e2c2b0"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x7f02a3e2c440"/>
        <function-ref name="getIV" scoped="" ref="0x7f02a3e2c5d0"/>
        <function-ref name="enableI2C" scoped="" ref="0x7f02a3e2c760"/>
        <function-ref name="setStartBit" scoped="" ref="0x7f02a3e2c8f0"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x7f02a3e2ca80"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x7f02a3e2cc10"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x7f02a3e2cda0"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x7f02a3e2b020"/>
        <function-ref name="isI2C" scoped="" ref="0x7f02a3e2b1b0"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x7f02a3e2b340"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x7f02a3e2b4d0"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x7f02a3e2b860"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x7f02a3e2b9f0"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x7f02a3e2bb80"/>
        <function-ref name="disableNoAck" scoped="" ref="0x7f02a3e2bd10"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x7f02a3e2a020"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x7f02a3e2a1b0"/>
        <function-ref name="disableI2C" scoped="" ref="0x7f02a3e2a340"/>
        <function-ref name="getShiftClock" scoped="" ref="0x7f02a3e2a4d0"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x7f02a3e2a660"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x7f02a3e2a7f0"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x7f02a3e2a980"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x7f02a3e2ab10"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x7f02a3e2aca0"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x7f02a3e2ae30"/>
        <function-ref name="setModeI2C" scoped="" ref="0x7f02a3e29020"/>
        <function-ref name="getStartBit" scoped="" ref="0x7f02a3e291b0"/>
        <function-ref name="setWordMode" scoped="" ref="0x7f02a3e29340"/>
        <function-ref name="setData" scoped="" ref="0x7f02a3e294d0"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x7f02a3e29660"/>
        <function-ref name="getClockSource" scoped="" ref="0x7f02a3e297f0"/>
        <function-ref name="getWordMode" scoped="" ref="0x7f02a3e29980"/>
        <function-ref name="setShiftClock" scoped="" ref="0x7f02a3e29b10"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x7f02a3e29ca0"/>
        <function-ref name="enableNoAck" scoped="" ref="0x7f02a3e29e30"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x7f02a3e28420"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x7f02a3e285b0"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x7f02a3e28740"/>
        <function-ref name="setStopBit" scoped="" ref="0x7f02a3e288d0"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x7f02a3e28a60"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x7f02a3e28bf0"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x7f02a3e28d80"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x7f02a3e27020"/>
        <function-ref name="setStartByte" scoped="" ref="0x7f02a3e271b0"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x7f02a3e27340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUsart" ref="0x7f02a3e1c250" loc="41:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplUsart" scoped="" ref="0x7f02a3e1c250"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f02a3e1c5d0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f02a3e1c760"/>
        <function-ref name="setUctl" scoped="" ref="0x7f02a3e1c8f0"/>
        <function-ref name="enableUart" scoped="" ref="0x7f02a3e1ca80"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f02a3e1cc10"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f02a3e1cda0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f02a3e1b020"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f02a3e1b1b0"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f02a3e1b340"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f02a3e1b4d0"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f02a3e1b660"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f02a3e1b7f0"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f02a3e1b980"/>
        <function-ref name="getUbr" scoped="" ref="0x7f02a3e1bc10"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f02a3e1bda0"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f02a3e1a020"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f02a3e1a1b0"/>
        <function-ref name="isUart" scoped="" ref="0x7f02a3e1a340"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f02a3e1a4d0"/>
        <function-ref name="isSpi" scoped="" ref="0x7f02a3e1a660"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f02a3e1a7f0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f02a3e1a980"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f02a3e1ab10"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f02a3e1aca0"/>
        <function-ref name="getMode" scoped="" ref="0x7f02a3e1ae30"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f02a3e19220"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f02a3e193b0"/>
        <function-ref name="setUbr" scoped="" ref="0x7f02a3e19540"/>
        <function-ref name="tx" scoped="" ref="0x7f02a3e196d0"/>
        <function-ref name="getUctl" scoped="" ref="0x7f02a3e19860"/>
        <function-ref name="disableUart" scoped="" ref="0x7f02a3e199f0"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f02a3e19b80"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f02a3e19d10"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f02a3e18020"/>
        <function-ref name="rx" scoped="" ref="0x7f02a3e181b0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f02a3e18340"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f02a3e184d0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f02a3e18660"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f02a3e187f0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f02a3e18980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UCLK" ref="0x7f02a3e16cb0" loc="43:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK" scoped="" ref="0x7f02a3e16cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f02a3e150a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f02a3e15230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f02a3e153c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f02a3e15550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f02a3e156e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f02a3e15870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f02a3e15a00"/>
        <function-ref name="get" scoped="" ref="0x7f02a3e15b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f02a3e15d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f02a3e14020"/>
        <function-ref name="set" scoped="" ref="0x7f02a3e141b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f02a3e14340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f02a3e144d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f02a3e14760"/>
        <function-ref name="clr" scoped="" ref="0x7f02a3e148f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplI2C" ref="0x7f02a3e24430" loc="39:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplI2C" scoped="" ref="0x7f02a3e24430"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x7f02a3e247b0"/>
        <function-ref name="getStartByte" scoped="" ref="0x7f02a3e24940"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x7f02a3e24ad0"/>
        <function-ref name="setMasterMode" scoped="" ref="0x7f02a3e24c60"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x7f02a3e24df0"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x7f02a3e23020"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x7f02a3e231b0"/>
        <function-ref name="getStopBit" scoped="" ref="0x7f02a3e23340"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f02a3e234d0"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x7f02a3e23660"/>
        <function-ref name="getData" scoped="" ref="0x7f02a3e237f0"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x7f02a3e23980"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x7f02a3e23b10"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x7f02a3e23da0"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x7f02a3e22020"/>
        <function-ref name="getIV" scoped="" ref="0x7f02a3e221b0"/>
        <function-ref name="enableI2C" scoped="" ref="0x7f02a3e22340"/>
        <function-ref name="setStartBit" scoped="" ref="0x7f02a3e224d0"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x7f02a3e22660"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x7f02a3e227f0"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x7f02a3e22980"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x7f02a3e22b10"/>
        <function-ref name="isI2C" scoped="" ref="0x7f02a3e22ca0"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x7f02a3e22e30"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x7f02a3e21020"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x7f02a3e213b0"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x7f02a3e21540"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x7f02a3e216d0"/>
        <function-ref name="disableNoAck" scoped="" ref="0x7f02a3e21860"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x7f02a3e219f0"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x7f02a3e21b80"/>
        <function-ref name="disableI2C" scoped="" ref="0x7f02a3e21d10"/>
        <function-ref name="getShiftClock" scoped="" ref="0x7f02a3e20020"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x7f02a3e201b0"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x7f02a3e20340"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x7f02a3e204d0"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x7f02a3e20660"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x7f02a3e207f0"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x7f02a3e20980"/>
        <function-ref name="setModeI2C" scoped="" ref="0x7f02a3e20b10"/>
        <function-ref name="getStartBit" scoped="" ref="0x7f02a3e20ca0"/>
        <function-ref name="setWordMode" scoped="" ref="0x7f02a3e20e30"/>
        <function-ref name="setData" scoped="" ref="0x7f02a3e1f020"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x7f02a3e1f1b0"/>
        <function-ref name="getClockSource" scoped="" ref="0x7f02a3e1f340"/>
        <function-ref name="getWordMode" scoped="" ref="0x7f02a3e1f4d0"/>
        <function-ref name="setShiftClock" scoped="" ref="0x7f02a3e1f660"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x7f02a3e1f7f0"/>
        <function-ref name="enableNoAck" scoped="" ref="0x7f02a3e1f980"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x7f02a3e1e020"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x7f02a3e1e1b0"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x7f02a3e1e340"/>
        <function-ref name="setStopBit" scoped="" ref="0x7f02a3e1e4d0"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x7f02a3e1e660"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x7f02a3e1e7f0"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x7f02a3e1e980"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x7f02a3e1eb10"/>
        <function-ref name="setStartByte" scoped="" ref="0x7f02a3e1eca0"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x7f02a3e1ee30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SIMO" ref="0x7f02a3e18d40" loc="42:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO" scoped="" ref="0x7f02a3e18d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f02a3e170e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f02a3e17270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f02a3e17400"/>
        <function-ref name="toggle" scoped="" ref="0x7f02a3e17590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f02a3e17720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f02a3e178b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f02a3e17a40"/>
        <function-ref name="get" scoped="" ref="0x7f02a3e17bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f02a3e17d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f02a3e16020"/>
        <function-ref name="set" scoped="" ref="0x7f02a3e161b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f02a3e16340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f02a3e164d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f02a3e16760"/>
        <function-ref name="clr" scoped="" ref="0x7f02a3e168f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7f02a3d02c60" loc="69:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7f02a3d02c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f02a3d00210"/>
        <function-ref name="write" scoped="" ref="0x7f02a3d003a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7f02a3d0cda0" loc="47:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7f02a3d0cda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f02a3d0b180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7f02a3d05b50" loc="63:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7f02a3d05b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f02a3d04020"/>
        <function-ref name="write" scoped="" ref="0x7f02a3d041b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7f02a3cff670" loc="72:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7f02a3cff670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f02a3cff9f0"/>
        <function-ref name="write" scoped="" ref="0x7f02a3cffb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7f02a3cf8e50" loc="86:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7f02a3cf8e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f02a3cf7210"/>
        <function-ref name="write" scoped="" ref="0x7f02a3cf73a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7f02a3cffe50" loc="73:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7f02a3cffe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f02a3cfe210"/>
        <function-ref name="write" scoped="" ref="0x7f02a3cfe3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7f02a3ceb2f0" loc="108:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7f02a3ceb2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f02a3ceb670"/>
        <function-ref name="write" scoped="" ref="0x7f02a3ceb800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7f02a3cee2f0" loc="104:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7f02a3cee2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f02a3cee670"/>
        <function-ref name="write" scoped="" ref="0x7f02a3cee800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7f02a3d0a120" loc="50:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7f02a3d0a120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f02a3d0a4a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7f02a3cf4670" loc="93:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7f02a3cf4670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f02a3cf49f0"/>
        <function-ref name="write" scoped="" ref="0x7f02a3cf4b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7f02a3cef2f0" loc="102:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f02a3cef2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f02a3cef670"/>
        <function-ref name="write" scoped="" ref="0x7f02a3cef800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7f02a3d04c60" loc="65:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7f02a3d04c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f02a3d03020"/>
        <function-ref name="write" scoped="" ref="0x7f02a3d031b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7f02a3d03c60" loc="67:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7f02a3d03c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f02a3d02020"/>
        <function-ref name="write" scoped="" ref="0x7f02a3d021b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7f02a3cf9670" loc="83:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7f02a3cf9670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f02a3cf99f0"/>
        <function-ref name="write" scoped="" ref="0x7f02a3cf9b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7f02a3cfce50" loc="79:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7f02a3cfce50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f02a3cfb210"/>
        <function-ref name="write" scoped="" ref="0x7f02a3cfb3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7f02a3cfe670" loc="74:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7f02a3cfe670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f02a3cfe9f0"/>
        <function-ref name="write" scoped="" ref="0x7f02a3cfeb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f02a3d0e760" loc="42:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f02a3d0e760"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f02a3d0eae0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f02a3d0ec70"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f02a3d0ee00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7f02a3d09aa0" loc="54:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7f02a3d09aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f02a3d09e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7f02a3d08120" loc="55:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7f02a3d08120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f02a3d085a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7f02a3cf2a70" loc="95:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f02a3cf2a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f02a3cf2df0"/>
        <function-ref name="write" scoped="" ref="0x7f02a3cf1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7f02a3d08870" loc="56:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7f02a3d08870"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f02a3d08bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7f02a3cefad0" loc="103:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f02a3cefad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f02a3cefe50"/>
        <function-ref name="write" scoped="" ref="0x7f02a3cee020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7f02a3d0adc0" loc="52:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7f02a3d0adc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f02a3d09180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7f02a3cf5e50" loc="92:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7f02a3cf5e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f02a3cf4210"/>
        <function-ref name="write" scoped="" ref="0x7f02a3cf43a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7f02a3d03480" loc="66:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7f02a3d03480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f02a3d03800"/>
        <function-ref name="write" scoped="" ref="0x7f02a3d03990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7f02a3d04480" loc="64:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f02a3d04480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f02a3d04800"/>
        <function-ref name="write" scoped="" ref="0x7f02a3d04990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7f02a3d0c750" loc="46:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7f02a3d0c750"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f02a3d0cad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7f02a3cf6e50" loc="90:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7f02a3cf6e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f02a3cf5210"/>
        <function-ref name="write" scoped="" ref="0x7f02a3cf53a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7f02a3cf7670" loc="87:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7f02a3cf7670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f02a3cf79f0"/>
        <function-ref name="write" scoped="" ref="0x7f02a3cf7b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7f02a3cf5670" loc="91:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7f02a3cf5670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f02a3cf59f0"/>
        <function-ref name="write" scoped="" ref="0x7f02a3cf5b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7f02a3cedad0" loc="107:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7f02a3cedad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f02a3cede50"/>
        <function-ref name="write" scoped="" ref="0x7f02a3ceb020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7f02a3ceead0" loc="105:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7f02a3ceead0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f02a3ceee50"/>
        <function-ref name="write" scoped="" ref="0x7f02a3ced020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7f02a3cfb670" loc="80:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7f02a3cfb670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f02a3cfb9f0"/>
        <function-ref name="write" scoped="" ref="0x7f02a3cfbb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7f02a3cf7e50" loc="88:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7f02a3cf7e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f02a3cf6210"/>
        <function-ref name="write" scoped="" ref="0x7f02a3cf63a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7f02a3cf0ad0" loc="101:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7f02a3cf0ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f02a3cf0e50"/>
        <function-ref name="write" scoped="" ref="0x7f02a3cef020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7f02a3cfd670" loc="76:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7f02a3cfd670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f02a3cfd9f0"/>
        <function-ref name="write" scoped="" ref="0x7f02a3cfdb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7f02a3cebad0" loc="111:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7f02a3cebad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f02a3cebe50"/>
        <function-ref name="writeDone" scoped="" ref="0x7f02a3cea020"/>
        <function-ref name="write" scoped="" ref="0x7f02a3cea1b0"/>
        <function-ref name="beginRead" scoped="" ref="0x7f02a3cea340"/>
        <function-ref name="readDone" scoped="" ref="0x7f02a3cea4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7f02a3d0c100" loc="45:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7f02a3d0c100"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f02a3d0c480"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7f02a3d05370" loc="62:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7f02a3d05370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f02a3d056f0"/>
        <function-ref name="write" scoped="" ref="0x7f02a3d05880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7f02a3d02480" loc="68:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7f02a3d02480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f02a3d02800"/>
        <function-ref name="write" scoped="" ref="0x7f02a3d02990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7f02a3cf9e50" loc="84:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7f02a3cf9e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f02a3cf8210"/>
        <function-ref name="write" scoped="" ref="0x7f02a3cf83a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7f02a3cfee50" loc="75:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7f02a3cfee50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f02a3cfd210"/>
        <function-ref name="write" scoped="" ref="0x7f02a3cfd3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7f02a3cf8670" loc="85:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7f02a3cf8670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f02a3cf89f0"/>
        <function-ref name="write" scoped="" ref="0x7f02a3cf8b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7f02a3d00670" loc="70:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7f02a3d00670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f02a3d009f0"/>
        <function-ref name="write" scoped="" ref="0x7f02a3d00b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7f02a3d0b450" loc="48:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7f02a3d0b450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f02a3d0b7d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7f02a3d00e50" loc="71:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7f02a3d00e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f02a3cff210"/>
        <function-ref name="write" scoped="" ref="0x7f02a3cff3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f02a3d0fa80" loc="41:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f02a3d0fa80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f02a3d0fe00"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f02a3d0e020"/>
        <function-ref name="request" scoped="" ref="0x7f02a3d0e1b0"/>
        <function-ref name="granted" scoped="" ref="0x7f02a3d0e340"/>
        <function-ref name="isOwner" scoped="" ref="0x7f02a3d0e4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7f02a3d06020" loc="57:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7f02a3d06020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f02a3d063a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7f02a3d06cc0" loc="59:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7f02a3d06cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f02a3d050a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7f02a3cf02f0" loc="100:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7f02a3cf02f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f02a3cf0670"/>
        <function-ref name="write" scoped="" ref="0x7f02a3cf0800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7f02a3cf1ad0" loc="99:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7f02a3cf1ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f02a3cf1e50"/>
        <function-ref name="write" scoped="" ref="0x7f02a3cf0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7f02a3d09450" loc="53:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7f02a3d09450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f02a3d097d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7f02a3cf12f0" loc="96:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f02a3cf12f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f02a3cf1670"/>
        <function-ref name="write" scoped="" ref="0x7f02a3cf1800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7f02a3ced2f0" loc="106:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7f02a3ced2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f02a3ced670"/>
        <function-ref name="write" scoped="" ref="0x7f02a3ced800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7f02a3cfbe50" loc="81:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7f02a3cfbe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f02a3cf9210"/>
        <function-ref name="write" scoped="" ref="0x7f02a3cf93a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7f02a3cf6670" loc="89:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7f02a3cf6670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f02a3cf69f0"/>
        <function-ref name="write" scoped="" ref="0x7f02a3cf6b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7f02a3d0baa0" loc="49:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7f02a3d0baa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f02a3d0be20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7f02a3d0a770" loc="51:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7f02a3d0a770"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f02a3d0aaf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7f02a3cfde50" loc="77:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7f02a3cfde50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f02a3cfc210"/>
        <function-ref name="write" scoped="" ref="0x7f02a3cfc3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7f02a3d06670" loc="58:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7f02a3d06670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f02a3d069f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7f02a3cfc670" loc="78:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7f02a3cfc670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f02a3cfc9f0"/>
        <function-ref name="write" scoped="" ref="0x7f02a3cfcb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7f02a3cf4e50" loc="94:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7f02a3cf4e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f02a3cf2610"/>
        <function-ref name="write" scoped="" ref="0x7f02a3cf27a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7f02a3cea7a0" loc="112:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7f02a3cea7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f02a3ceab20"/>
        <function-ref name="writeDone" scoped="" ref="0x7f02a3ceacb0"/>
        <function-ref name="write" scoped="" ref="0x7f02a3ceae40"/>
        <function-ref name="beginRead" scoped="" ref="0x7f02a3ce9020"/>
        <function-ref name="readDone" scoped="" ref="0x7f02a3ce91b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7f02a3cd5c60" loc="69:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7f02a3cd5c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f02a3cd4210"/>
        <function-ref name="write" scoped="" ref="0x7f02a3cd43a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7f02a3ce0da0" loc="47:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7f02a3ce0da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f02a3cdf180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7f02a3cd9b50" loc="63:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7f02a3cd9b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f02a3cd7020"/>
        <function-ref name="write" scoped="" ref="0x7f02a3cd71b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7f02a3cd3670" loc="72:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7f02a3cd3670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f02a3cd39f0"/>
        <function-ref name="write" scoped="" ref="0x7f02a3cd3b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7f02a3ccce50" loc="86:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7f02a3ccce50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f02a3ccb210"/>
        <function-ref name="write" scoped="" ref="0x7f02a3ccb3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7f02a3cd3e50" loc="73:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7f02a3cd3e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f02a3cd2210"/>
        <function-ref name="write" scoped="" ref="0x7f02a3cd23a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7f02a3cbf2f0" loc="108:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7f02a3cbf2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f02a3cbf670"/>
        <function-ref name="write" scoped="" ref="0x7f02a3cbf800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7f02a3cc12f0" loc="104:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7f02a3cc12f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f02a3cc1670"/>
        <function-ref name="write" scoped="" ref="0x7f02a3cc1800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7f02a3cdd120" loc="50:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7f02a3cdd120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f02a3cdd4a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7f02a3cc7670" loc="93:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7f02a3cc7670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f02a3cc79f0"/>
        <function-ref name="write" scoped="" ref="0x7f02a3cc7b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7f02a3cc22f0" loc="102:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f02a3cc22f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f02a3cc2670"/>
        <function-ref name="write" scoped="" ref="0x7f02a3cc2800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7f02a3cd7c60" loc="65:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7f02a3cd7c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f02a3cd6020"/>
        <function-ref name="write" scoped="" ref="0x7f02a3cd61b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7f02a3cd6c60" loc="67:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7f02a3cd6c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f02a3cd5020"/>
        <function-ref name="write" scoped="" ref="0x7f02a3cd51b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7f02a3ccd670" loc="83:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7f02a3ccd670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f02a3ccd9f0"/>
        <function-ref name="write" scoped="" ref="0x7f02a3ccdb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7f02a3ccfe50" loc="79:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7f02a3ccfe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f02a3cce210"/>
        <function-ref name="write" scoped="" ref="0x7f02a3cce3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7f02a3cd2670" loc="74:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7f02a3cd2670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f02a3cd29f0"/>
        <function-ref name="write" scoped="" ref="0x7f02a3cd2b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f02a3ce1760" loc="42:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f02a3ce1760"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f02a3ce1ae0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f02a3ce1c70"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f02a3ce1e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7f02a3cdcaa0" loc="54:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7f02a3cdcaa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f02a3cdce20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7f02a3cdb120" loc="55:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7f02a3cdb120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f02a3cdb5a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7f02a3cc6a70" loc="95:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f02a3cc6a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f02a3cc6df0"/>
        <function-ref name="write" scoped="" ref="0x7f02a3cc5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7f02a3cdb870" loc="56:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7f02a3cdb870"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f02a3cdbbf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7f02a3cc2ad0" loc="103:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f02a3cc2ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f02a3cc2e50"/>
        <function-ref name="write" scoped="" ref="0x7f02a3cc1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7f02a3cdddc0" loc="52:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7f02a3cdddc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f02a3cdc180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7f02a3cc8e50" loc="92:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7f02a3cc8e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f02a3cc7210"/>
        <function-ref name="write" scoped="" ref="0x7f02a3cc73a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7f02a3cd6480" loc="66:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7f02a3cd6480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f02a3cd6800"/>
        <function-ref name="write" scoped="" ref="0x7f02a3cd6990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7f02a3cd7480" loc="64:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f02a3cd7480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f02a3cd7800"/>
        <function-ref name="write" scoped="" ref="0x7f02a3cd7990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7f02a3ce0750" loc="46:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7f02a3ce0750"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f02a3ce0ad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7f02a3cc9e50" loc="90:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7f02a3cc9e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f02a3cc8210"/>
        <function-ref name="write" scoped="" ref="0x7f02a3cc83a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7f02a3ccb670" loc="87:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7f02a3ccb670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f02a3ccb9f0"/>
        <function-ref name="write" scoped="" ref="0x7f02a3ccbb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7f02a3cc8670" loc="91:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7f02a3cc8670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f02a3cc89f0"/>
        <function-ref name="write" scoped="" ref="0x7f02a3cc8b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7f02a3cc0ad0" loc="107:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7f02a3cc0ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f02a3cc0e50"/>
        <function-ref name="write" scoped="" ref="0x7f02a3cbf020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7f02a3cc1ad0" loc="105:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7f02a3cc1ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f02a3cc1e50"/>
        <function-ref name="write" scoped="" ref="0x7f02a3cc0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7f02a3cce670" loc="80:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7f02a3cce670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f02a3cce9f0"/>
        <function-ref name="write" scoped="" ref="0x7f02a3cceb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7f02a3ccbe50" loc="88:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7f02a3ccbe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f02a3cc9210"/>
        <function-ref name="write" scoped="" ref="0x7f02a3cc93a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7f02a3cc4ad0" loc="101:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7f02a3cc4ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f02a3cc4e50"/>
        <function-ref name="write" scoped="" ref="0x7f02a3cc2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7f02a3cd0670" loc="76:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7f02a3cd0670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f02a3cd09f0"/>
        <function-ref name="write" scoped="" ref="0x7f02a3cd0b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7f02a3cbfad0" loc="111:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7f02a3cbfad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f02a3cbfe50"/>
        <function-ref name="writeDone" scoped="" ref="0x7f02a3cbe020"/>
        <function-ref name="write" scoped="" ref="0x7f02a3cbe1b0"/>
        <function-ref name="beginRead" scoped="" ref="0x7f02a3cbe340"/>
        <function-ref name="readDone" scoped="" ref="0x7f02a3cbe4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7f02a3ce0100" loc="45:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7f02a3ce0100"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f02a3ce0480"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7f02a3cd9370" loc="62:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7f02a3cd9370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f02a3cd96f0"/>
        <function-ref name="write" scoped="" ref="0x7f02a3cd9880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7f02a3cd5480" loc="68:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7f02a3cd5480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f02a3cd5800"/>
        <function-ref name="write" scoped="" ref="0x7f02a3cd5990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7f02a3ccde50" loc="84:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7f02a3ccde50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f02a3ccc210"/>
        <function-ref name="write" scoped="" ref="0x7f02a3ccc3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7f02a3cd2e50" loc="75:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7f02a3cd2e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f02a3cd0210"/>
        <function-ref name="write" scoped="" ref="0x7f02a3cd03a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7f02a3ccc670" loc="85:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7f02a3ccc670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f02a3ccc9f0"/>
        <function-ref name="write" scoped="" ref="0x7f02a3cccb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7f02a3cd4670" loc="70:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7f02a3cd4670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f02a3cd49f0"/>
        <function-ref name="write" scoped="" ref="0x7f02a3cd4b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7f02a3cdf450" loc="48:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7f02a3cdf450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f02a3cdf7d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7f02a3cd4e50" loc="71:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7f02a3cd4e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f02a3cd3210"/>
        <function-ref name="write" scoped="" ref="0x7f02a3cd33a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f02a3ce29e0" loc="41:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f02a3ce29e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f02a3ce2d60"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f02a3ce1020"/>
        <function-ref name="request" scoped="" ref="0x7f02a3ce11b0"/>
        <function-ref name="granted" scoped="" ref="0x7f02a3ce1340"/>
        <function-ref name="isOwner" scoped="" ref="0x7f02a3ce14d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7f02a3cda020" loc="57:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7f02a3cda020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f02a3cda3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7f02a3cdacc0" loc="59:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7f02a3cdacc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f02a3cd90a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7f02a3cc42f0" loc="100:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7f02a3cc42f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f02a3cc4670"/>
        <function-ref name="write" scoped="" ref="0x7f02a3cc4800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7f02a3cc5ad0" loc="99:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7f02a3cc5ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f02a3cc5e50"/>
        <function-ref name="write" scoped="" ref="0x7f02a3cc4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7f02a3cdc450" loc="53:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7f02a3cdc450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f02a3cdc7d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7f02a3cc52f0" loc="96:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f02a3cc52f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f02a3cc5670"/>
        <function-ref name="write" scoped="" ref="0x7f02a3cc5800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7f02a3cc02f0" loc="106:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7f02a3cc02f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f02a3cc0670"/>
        <function-ref name="write" scoped="" ref="0x7f02a3cc0800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7f02a3ccee50" loc="81:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7f02a3ccee50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f02a3ccd210"/>
        <function-ref name="write" scoped="" ref="0x7f02a3ccd3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7f02a3cc9670" loc="89:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7f02a3cc9670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f02a3cc99f0"/>
        <function-ref name="write" scoped="" ref="0x7f02a3cc9b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7f02a3cdfaa0" loc="49:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7f02a3cdfaa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f02a3cdfe20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7f02a3cdd770" loc="51:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7f02a3cdd770"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f02a3cddaf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7f02a3cd0e50" loc="77:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7f02a3cd0e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f02a3ccf210"/>
        <function-ref name="write" scoped="" ref="0x7f02a3ccf3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7f02a3cda670" loc="58:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7f02a3cda670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f02a3cda9f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7f02a3ccf670" loc="78:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7f02a3ccf670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f02a3ccf9f0"/>
        <function-ref name="write" scoped="" ref="0x7f02a3ccfb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7f02a3cc7e50" loc="94:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7f02a3cc7e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f02a3cc6610"/>
        <function-ref name="write" scoped="" ref="0x7f02a3cc67a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7f02a3cbe7a0" loc="112:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7f02a3cbe7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f02a3cbeb20"/>
        <function-ref name="writeDone" scoped="" ref="0x7f02a3cbecb0"/>
        <function-ref name="write" scoped="" ref="0x7f02a3cbee40"/>
        <function-ref name="beginRead" scoped="" ref="0x7f02a3cbd020"/>
        <function-ref name="readDone" scoped="" ref="0x7f02a3cbd1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageAddress" ref="0x7f02a3cb6b30" loc="54:/home/hades/tinyos-new/tos/system/ActiveMessageAddressC.nc">
      <component-ref qname="ActiveMessageAddressC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f02a3cb6b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x7f02a3cb3020"/>
        <function-ref name="changed" scoped="" ref="0x7f02a3cb31b0"/>
        <function-ref name="amGroup" scoped="" ref="0x7f02a3cb3340"/>
        <function-ref name="setAddress" scoped="" ref="0x7f02a3cb34d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalIeeeEui64" ref="0x7f02a3cb5d30" loc="13:/home/hades/tinyos-new/tos/chips/ds2411/LocalIeeeEui64C.nc">
      <component-ref qname="LocalIeeeEui64C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f02a3cb5d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x7f02a3c9e0e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalIeeeEui64" ref="0x7f02a3c9a310" loc="5:/home/hades/tinyos-new/tos/chips/ds2411/LocalIeeeEui64P.nc">
      <component-ref qname="LocalIeeeEui64P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f02a3c9a310"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x7f02a3c9a690"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReadId48" ref="0x7f02a3c978c0" loc="8:/home/hades/tinyos-new/tos/chips/ds2411/LocalIeeeEui64P.nc">
      <component-ref qname="LocalIeeeEui64P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadId48" scoped="" ref="0x7f02a3c978c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadId48"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f02a3c97c40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadId48" ref="0x7f02a3c8c020" loc="8:/home/hades/tinyos-new/tos/chips/ds2411/Ds2411C.nc">
      <component-ref qname="Ds2411C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadId48" scoped="" ref="0x7f02a3c8c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadId48"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f02a3c8c3a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="OneWire" ref="0x7f02a3c83cb0" loc="14:/home/hades/tinyos-new/tos/chips/ds2411/Ds2411P.nc">
      <component-ref qname="Ds2411P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="OneWire" scoped="" ref="0x7f02a3c83cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="OneWireReadWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f02a3c860a0"/>
        <function-ref name="write" scoped="" ref="0x7f02a3c86230"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerControl" ref="0x7f02a3c865b0" loc="15:/home/hades/tinyos-new/tos/chips/ds2411/Ds2411P.nc">
      <component-ref qname="Ds2411P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PowerControl" scoped="" ref="0x7f02a3c865b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f02a3c86930"/>
        <function-ref name="stop" scoped="" ref="0x7f02a3c86ac0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadId48" ref="0x7f02a3c87210" loc="11:/home/hades/tinyos-new/tos/chips/ds2411/Ds2411P.nc">
      <component-ref qname="Ds2411P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadId48" scoped="" ref="0x7f02a3c87210"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadId48"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f02a3c87590"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="OneWire" ref="0x7f02a3c72020" loc="8:/home/hades/tinyos-new/tos/lib/onewire/OneWireMasterC.nc">
      <component-ref qname="OneWireMasterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="OneWire" scoped="" ref="0x7f02a3c72020"/></type-interface>
      <instance>
        <interfacedef-ref qname="OneWireReadWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f02a3c723a0"/>
        <function-ref name="write" scoped="" ref="0x7f02a3c72530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Pin" ref="0x7f02a3c728c0" loc="11:/home/hades/tinyos-new/tos/lib/onewire/OneWireMasterC.nc">
      <component-ref qname="OneWireMasterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Pin" scoped="" ref="0x7f02a3c728c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f02a3c72c40"/>
        <function-ref name="isInput" scoped="" ref="0x7f02a3c72dd0"/>
        <function-ref name="toggle" scoped="" ref="0x7f02a3c71020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f02a3c711b0"/>
        <function-ref name="get" scoped="" ref="0x7f02a3c71340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f02a3c714d0"/>
        <function-ref name="set" scoped="" ref="0x7f02a3c71660"/>
        <function-ref name="clr" scoped="" ref="0x7f02a3c717f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BusyWait" ref="0x7f02a3c68b40" loc="15:/home/hades/tinyos-new/tos/lib/onewire/OneWireMasterP.nc">
      <component-ref qname="OneWireMasterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BusyWait" scoped="" ref="0x7f02a3c68b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f02a45aa020"/>
            <typename><typedef-ref name="TMicro" ref="0x7f02a45aa390"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f02a51f8520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x7f02a3c6a970"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="OneWire" ref="0x7f02a3c70490" loc="11:/home/hades/tinyos-new/tos/lib/onewire/OneWireMasterP.nc">
      <component-ref qname="OneWireMasterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="OneWire" scoped="" ref="0x7f02a3c70490"/></type-interface>
      <instance>
        <interfacedef-ref qname="OneWireReadWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f02a3c70810"/>
        <function-ref name="write" scoped="" ref="0x7f02a3c709a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Pin" ref="0x7f02a3c70d30" loc="14:/home/hades/tinyos-new/tos/lib/onewire/OneWireMasterP.nc">
      <component-ref qname="OneWireMasterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Pin" scoped="" ref="0x7f02a3c70d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f02a3c6c0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f02a3c6c270"/>
        <function-ref name="toggle" scoped="" ref="0x7f02a3c6c400"/>
        <function-ref name="isOutput" scoped="" ref="0x7f02a3c6c590"/>
        <function-ref name="get" scoped="" ref="0x7f02a3c6c720"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f02a3c6c8b0"/>
        <function-ref name="set" scoped="" ref="0x7f02a3c6ca40"/>
        <function-ref name="clr" scoped="" ref="0x7f02a3c6cbd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusyWait" ref="0x7f02a3c47020" loc="41:/home/hades/tinyos-new/tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <component-ref qname="BusyWaitMicroC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BusyWait" scoped="" ref="0x7f02a3c47020"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f02a45aa020"/>
            <typename><typedef-ref name="TMicro" ref="0x7f02a45aa390"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f02a51f8520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x7f02a3c47e30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusyWait" ref="0x7f02a3c45d20" loc="54:/home/hades/tinyos-new/tos/lib/timer/BusyWaitCounterC.nc">
      <component-ref qname="BusyWaitMicroC.BusyWaitCounterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BusyWait" scoped="" ref="0x7f02a3c45d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f02a45aa020"/>
            <typename><typedef-ref name="TMicro" ref="0x7f02a45aa390"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f02a51f8520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x7f02a3c36b60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f02a3c35260" loc="55:/home/hades/tinyos-new/tos/lib/timer/BusyWaitCounterC.nc">
      <component-ref qname="BusyWaitMicroC.BusyWaitCounterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f02a3c35260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f02a45aa020"/>
            <typename><typedef-ref name="TMicro" ref="0x7f02a45aa390"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f02a51f8520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f02a3c34090"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f02a3c34a10"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f02a3c34550"/>
        <function-ref name="overflow" scoped="" ref="0x7f02a3c32020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430CounterMicro" ref="0x7f02a3c31890" loc="46:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430CounterMicroC.nc">
      <component-ref qname="Msp430CounterMicroC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430CounterMicro" scoped="" ref="0x7f02a3c31890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f02a45aa020"/>
            <typename><typedef-ref name="TMicro" ref="0x7f02a45aa390"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f02a51f8520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f02a3c2e6e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f02a3c2d090"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f02a3c2eba0"/>
        <function-ref name="overflow" scoped="" ref="0x7f02a3c2d550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7f02a3c28190" loc="45:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430CounterMicroC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f02a3c28190"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f02a3c28510"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f02a3c286a0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f02a3c28830"/>
        <function-ref name="get" scoped="" ref="0x7f02a3c289c0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f02a3c28b50"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f02a3c28ce0"/>
        <function-ref name="getMode" scoped="" ref="0x7f02a3c28e70"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f02a3c27030"/>
        <function-ref name="overflow" scoped="" ref="0x7f02a3c271c0"/>
        <function-ref name="setMode" scoped="" ref="0x7f02a3c27350"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f02a3c274e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f02a3c2a060" loc="44:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430CounterMicroC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f02a3c2a060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f02a45aa020"/>
            <typename><typedef-ref name="TMicro" ref="0x7f02a45aa390"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f02a51f8520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f02a3c2ae70"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f02a3c29820"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f02a3c29360"/>
        <function-ref name="overflow" scoped="" ref="0x7f02a3c29ce0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Gpio" ref="0x7f02a3c735a0" loc="3:/home/hades/tinyos-new/tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <component-ref qname="HplDs2411C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Gpio" scoped="" ref="0x7f02a3c735a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f02a3c73920"/>
        <function-ref name="isInput" scoped="" ref="0x7f02a3c73ab0"/>
        <function-ref name="toggle" scoped="" ref="0x7f02a3c73c40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f02a3c73dd0"/>
        <function-ref name="get" scoped="" ref="0x7f02a3c23020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f02a3c231b0"/>
        <function-ref name="set" scoped="" ref="0x7f02a3c23340"/>
        <function-ref name="clr" scoped="" ref="0x7f02a3c234d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f02a3c20c50" loc="44:/home/hades/tinyos-new/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplDs2411C.MspGpio"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f02a3c20c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f02a3c1f020"/>
        <function-ref name="isInput" scoped="" ref="0x7f02a3c1f1b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f02a3c1f340"/>
        <function-ref name="toggle" scoped="" ref="0x7f02a3c1f4d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f02a3c1f660"/>
        <function-ref name="getResistor" scoped="" ref="0x7f02a3c1f7f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f02a3c1f980"/>
        <function-ref name="get" scoped="" ref="0x7f02a3c1fb10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f02a3c1fca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f02a3c1fe30"/>
        <function-ref name="set" scoped="" ref="0x7f02a3c1e020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f02a3c1e1b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f02a3c1e340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f02a3c1e5d0"/>
        <function-ref name="clr" scoped="" ref="0x7f02a3c1e760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f02a3c229e0" loc="43:/home/hades/tinyos-new/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplDs2411C.MspGpio"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f02a3c229e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f02a3c22d60"/>
        <function-ref name="isInput" scoped="" ref="0x7f02a3c20020"/>
        <function-ref name="toggle" scoped="" ref="0x7f02a3c201b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f02a3c20340"/>
        <function-ref name="get" scoped="" ref="0x7f02a3c204d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f02a3c20660"/>
        <function-ref name="set" scoped="" ref="0x7f02a3c207f0"/>
        <function-ref name="clr" scoped="" ref="0x7f02a3c20980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f02a3c24a20" loc="14:/home/hades/tinyos-new/tos/chips/ds2411/Ds2411PowerControlC.nc">
      <component-ref qname="Ds2411PowerControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f02a3c24a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f02a3c24da0"/>
        <function-ref name="stop" scoped="" ref="0x7f02a3c19020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7f02a3c08cb0" loc="46:/home/hades/tinyos-new/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7f02a3c08cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f02a3c070a0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f02a3c07230"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f02a3c073c0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f02a3c07550"/>
        <function-ref name="setCca" scoped="" ref="0x7f02a3c076e0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f02a3c07870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EnergyIndicator" ref="0x7f02a3c049f0" loc="47:/home/hades/tinyos-new/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="EnergyIndicator" scoped="" ref="0x7f02a3c049f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7f02a3c04d70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Transmit" ref="0x7f02a3c08020" loc="45:/home/hades/tinyos-new/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Transmit" scoped="" ref="0x7f02a3c08020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f02a3c083a0"/>
        <function-ref name="cancel" scoped="" ref="0x7f02a3c08530"/>
        <function-ref name="modify" scoped="" ref="0x7f02a3c086c0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f02a3c08850"/>
        <function-ref name="resend" scoped="" ref="0x7f02a3c089e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f02a3c0b6d0" loc="44:/home/hades/tinyos-new/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f02a3c0b6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f02a3c0ba50"/>
        <function-ref name="stop" scoped="" ref="0x7f02a3c0bbe0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ByteIndicator" ref="0x7f02a3c06190" loc="48:/home/hades/tinyos-new/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ByteIndicator" scoped="" ref="0x7f02a3c06190"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7f02a3c06510"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7f02a3bfa970" loc="51:/home/hades/tinyos-new/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7f02a3bfa970"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f02a3bfacf0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f02a3bfae80"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f02a3bf9030"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f02a3bf91c0"/>
        <function-ref name="setCca" scoped="" ref="0x7f02a3bf9350"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f02a3bf94e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x7f02a3bf2950" loc="58:/home/hades/tinyos-new/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp" scoped="" ref="0x7f02a3bf2950"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f02a45ab7d0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f02a45abb40"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f02a51f8920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f02a3bf0020"/>
        <function-ref name="clear" scoped="" ref="0x7f02a3bf0750"/>
        <function-ref name="isValid" scoped="" ref="0x7f02a3bf1780"/>
        <function-ref name="set" scoped="" ref="0x7f02a3bf0e80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL1" ref="0x7f02a3bdb020" loc="78:/home/hades/tinyos-new/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7f02a3bdb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f02a3bdb3a0"/>
        <function-ref name="write" scoped="" ref="0x7f02a3bdb530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY0" ref="0x7f02a3bdb890" loc="79:/home/hades/tinyos-new/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7f02a3bdb890"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f02a3bdbc10"/>
        <function-ref name="write" scoped="" ref="0x7f02a3bdbda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EnergyIndicator" ref="0x7f02a3bf9900" loc="52:/home/hades/tinyos-new/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="EnergyIndicator" scoped="" ref="0x7f02a3bf9900"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7f02a3bf9c80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXONCCA" ref="0x7f02a3bde530" loc="72:/home/hades/tinyos-new/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7f02a3bde530"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f02a3bde8b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CaptureSFD" ref="0x7f02a3bed880" loc="60:/home/hades/tinyos-new/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureSFD" scoped="" ref="0x7f02a3bed880"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7f02a3bedc00"/>
        <function-ref name="disable" scoped="" ref="0x7f02a3bedd90"/>
        <function-ref name="captured" scoped="" ref="0x7f02a3bec020"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7f02a3bec1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BackoffTimer" ref="0x7f02a3bf8ae0" loc="55:/home/hades/tinyos-new/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BackoffTimer" scoped="" ref="0x7f02a3bf8ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f02a45ab7d0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f02a45abb40"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f02a51f8920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f02a3bf5390"/>
        <function-ref name="fired" scoped="" ref="0x7f02a3bf6360"/>
        <function-ref name="startAt" scoped="" ref="0x7f02a3bf6ce0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f02a3bf6820"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f02a3bf5850"/>
        <function-ref name="start" scoped="" ref="0x7f02a3bf7970"/>
        <function-ref name="stop" scoped="" ref="0x7f02a3bf7e80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7f02a3bf5d00" loc="56:/home/hades/tinyos-new/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f02a3bf5d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f02a3bf30a0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f02a3bf3230"/>
        <function-ref name="getRssi" scoped="" ref="0x7f02a3bf33c0"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f02a3bf3550"/>
        <function-ref name="getPower" scoped="" ref="0x7f02a3bf36e0"/>
        <function-ref name="getLqi" scoped="" ref="0x7f02a3bf3870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXFIFO_RAM" ref="0x7f02a3be0550" loc="68:/home/hades/tinyos-new/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f02a3be0550"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f02a3be08d0"/>
        <function-ref name="write" scoped="" ref="0x7f02a3be0a60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXCTRL" ref="0x7f02a3be0e00" loc="69:/home/hades/tinyos-new/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7f02a3be0e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f02a3bdf1c0"/>
        <function-ref name="write" scoped="" ref="0x7f02a3bdf350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Receive" ref="0x7f02a3bd4d40" loc="83:/home/hades/tinyos-new/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Receive" scoped="" ref="0x7f02a3bd4d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f02a3bd80e0"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x7f02a3bd8270"/>
        <function-ref name="sfd" scoped="" ref="0x7f02a3bd8400"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f02a3bfcbc0" loc="50:/home/hades/tinyos-new/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f02a3bfcbc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f02a3bfa020"/>
        <function-ref name="cancel" scoped="" ref="0x7f02a3bfa1b0"/>
        <function-ref name="modify" scoped="" ref="0x7f02a3bfa340"/>
        <function-ref name="sendDone" scoped="" ref="0x7f02a3bfa4d0"/>
        <function-ref name="resend" scoped="" ref="0x7f02a3bfa660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ChipSpiResource" ref="0x7f02a3be2d10" loc="66:/home/hades/tinyos-new/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f02a3be2d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f02a3be10e0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f02a3be1270"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f02a3be1400"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFLUSHTX" ref="0x7f02a3bdec60" loc="73:/home/hades/tinyos-new/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7f02a3bdec60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f02a3bdd020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x7f02a3be5820" loc="62:/home/hades/tinyos-new/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x7f02a3be5820"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f02a3be5ba0"/>
        <function-ref name="isInput" scoped="" ref="0x7f02a3be5d30"/>
        <function-ref name="toggle" scoped="" ref="0x7f02a3be4020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f02a3be41b0"/>
        <function-ref name="get" scoped="" ref="0x7f02a3be4340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f02a3be44d0"/>
        <function-ref name="set" scoped="" ref="0x7f02a3be4660"/>
        <function-ref name="clr" scoped="" ref="0x7f02a3be47f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f02a3bfdc60" loc="48:/home/hades/tinyos-new/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f02a3bfdc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f02a3bfc020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f02a3bf3bb0" loc="57:/home/hades/tinyos-new/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f02a3bf3bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f02a3bf2020"/>
        <function-ref name="getHeader" scoped="" ref="0x7f02a3bf21b0"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f02a3bf2340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeSyncOffset" ref="0x7f02a3be7be0" loc="59:/home/hades/tinyos-new/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f02a3be7be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f02a3bed020"/>
        <function-ref name="isSet" scoped="" ref="0x7f02a3bed1b0"/>
        <function-ref name="cancel" scoped="" ref="0x7f02a3bed340"/>
        <function-ref name="set" scoped="" ref="0x7f02a3bed4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL1" ref="0x7f02a3bdd3e0" loc="74:/home/hades/tinyos-new/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f02a3bdd3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f02a3bdd960"/>
        <function-ref name="write" scoped="" ref="0x7f02a3bddaf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7f02a3be2020" loc="65:/home/hades/tinyos-new/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x7f02a3be2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f02a3be23a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f02a3be2530"/>
        <function-ref name="request" scoped="" ref="0x7f02a3be26c0"/>
        <function-ref name="granted" scoped="" ref="0x7f02a3be2850"/>
        <function-ref name="isOwner" scoped="" ref="0x7f02a3be29e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CCA" ref="0x7f02a3bec500" loc="61:/home/hades/tinyos-new/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CCA" scoped="" ref="0x7f02a3bec500"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f02a3bec980"/>
        <function-ref name="isInput" scoped="" ref="0x7f02a3becb10"/>
        <function-ref name="toggle" scoped="" ref="0x7f02a3becca0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f02a3bece30"/>
        <function-ref name="get" scoped="" ref="0x7f02a3be5020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f02a3be51b0"/>
        <function-ref name="set" scoped="" ref="0x7f02a3be5340"/>
        <function-ref name="clr" scoped="" ref="0x7f02a3be54d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY1" ref="0x7f02a3bda130" loc="80:/home/hades/tinyos-new/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7f02a3bda130"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f02a3bda4b0"/>
        <function-ref name="write" scoped="" ref="0x7f02a3bda640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXNONCE" ref="0x7f02a3bda9c0" loc="81:/home/hades/tinyos-new/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7f02a3bda9c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f02a3bdad40"/>
        <function-ref name="write" scoped="" ref="0x7f02a3bd9020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SNOP" ref="0x7f02a3bdf6d0" loc="70:/home/hades/tinyos-new/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7f02a3bdf6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f02a3bdfa50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFD" ref="0x7f02a3be4b40" loc="63:/home/hades/tinyos-new/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFD" scoped="" ref="0x7f02a3be4b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f02a3be3020"/>
        <function-ref name="isInput" scoped="" ref="0x7f02a3be31b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f02a3be3340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f02a3be34d0"/>
        <function-ref name="get" scoped="" ref="0x7f02a3be3660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f02a3be37f0"/>
        <function-ref name="set" scoped="" ref="0x7f02a3be3980"/>
        <function-ref name="clr" scoped="" ref="0x7f02a3be3b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f02a3bd86c0" loc="84:/home/hades/tinyos-new/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f02a3bd86c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f02a3bd8a40"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f02a3bd8bd0"/>
        <function-ref name="led1On" scoped="" ref="0x7f02a3bd8d60"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f02a3bd7020"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f02a3bd71b0"/>
        <function-ref name="get" scoped="" ref="0x7f02a3bd7340"/>
        <function-ref name="led1Off" scoped="" ref="0x7f02a3bd74d0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f02a3bd7b10"/>
        <function-ref name="set" scoped="" ref="0x7f02a3bd7660"/>
        <function-ref name="led0On" scoped="" ref="0x7f02a3bd77f0"/>
        <function-ref name="led2On" scoped="" ref="0x7f02a3bd7980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL0" ref="0x7f02a3bdc5e0" loc="77:/home/hades/tinyos-new/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7f02a3bdc5e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f02a3bdc960"/>
        <function-ref name="write" scoped="" ref="0x7f02a3bdcaf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f02a3bfc320" loc="49:/home/hades/tinyos-new/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f02a3bfc320"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f02a3bfc6a0"/>
        <function-ref name="stop" scoped="" ref="0x7f02a3bfc830"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXFIFO" ref="0x7f02a3be1780" loc="67:/home/hades/tinyos-new/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7f02a3be1780"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f02a3be1b00"/>
        <function-ref name="writeDone" scoped="" ref="0x7f02a3be1c90"/>
        <function-ref name="write" scoped="" ref="0x7f02a3be1e20"/>
        <function-ref name="beginRead" scoped="" ref="0x7f02a3be0020"/>
        <function-ref name="readDone" scoped="" ref="0x7f02a3be01b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXON" ref="0x7f02a3bdfde0" loc="71:/home/hades/tinyos-new/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7f02a3bdfde0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f02a3bde180"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXENC" ref="0x7f02a3bdde80" loc="76:/home/hades/tinyos-new/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7f02a3bdde80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f02a3bdc220"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ByteIndicator" ref="0x7f02a3bf80f0" loc="53:/home/hades/tinyos-new/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ByteIndicator" scoped="" ref="0x7f02a3bf80f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7f02a3bf8470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7f02a3b3ac60" loc="69:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7f02a3b3ac60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f02a3b39210"/>
        <function-ref name="write" scoped="" ref="0x7f02a3b393a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7f02a3b44020" loc="47:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7f02a3b44020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f02a3b443a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7f02a3b3ec70" loc="63:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7f02a3b3ec70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f02a3b3c020"/>
        <function-ref name="write" scoped="" ref="0x7f02a3b3c1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7f02a3b38670" loc="72:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7f02a3b38670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f02a3b389f0"/>
        <function-ref name="write" scoped="" ref="0x7f02a3b38b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7f02a3b31e50" loc="86:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7f02a3b31e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f02a3b30210"/>
        <function-ref name="write" scoped="" ref="0x7f02a3b303a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7f02a3b38e50" loc="73:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7f02a3b38e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f02a3b37210"/>
        <function-ref name="write" scoped="" ref="0x7f02a3b373a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7f02a3b242f0" loc="108:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7f02a3b242f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f02a3b24670"/>
        <function-ref name="write" scoped="" ref="0x7f02a3b24800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7f02a3b262f0" loc="104:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7f02a3b262f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f02a3b26670"/>
        <function-ref name="write" scoped="" ref="0x7f02a3b26800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7f02a3b42370" loc="50:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7f02a3b42370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f02a3b426f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7f02a3b2c670" loc="93:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7f02a3b2c670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f02a3b2c9f0"/>
        <function-ref name="write" scoped="" ref="0x7f02a3b2cb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7f02a3b272f0" loc="102:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f02a3b272f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f02a3b27670"/>
        <function-ref name="write" scoped="" ref="0x7f02a3b27800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7f02a3b3cc60" loc="65:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7f02a3b3cc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f02a3b3b020"/>
        <function-ref name="write" scoped="" ref="0x7f02a3b3b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7f02a3b3bc60" loc="67:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7f02a3b3bc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f02a3b3a020"/>
        <function-ref name="write" scoped="" ref="0x7f02a3b3a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7f02a3b32670" loc="83:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7f02a3b32670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f02a3b329f0"/>
        <function-ref name="write" scoped="" ref="0x7f02a3b32b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7f02a3b34e50" loc="79:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7f02a3b34e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f02a3b33210"/>
        <function-ref name="write" scoped="" ref="0x7f02a3b333a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7f02a3b37670" loc="74:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7f02a3b37670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f02a3b379f0"/>
        <function-ref name="write" scoped="" ref="0x7f02a3b37b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f02a3b468f0" loc="42:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f02a3b468f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f02a3b46c70"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f02a3b46e00"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f02a3b45020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7f02a3b41d00" loc="54:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7f02a3b41d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f02a3b400a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7f02a3b40370" loc="55:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7f02a3b40370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f02a3b407f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7f02a3b2ba70" loc="95:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f02a3b2ba70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f02a3b2bdf0"/>
        <function-ref name="write" scoped="" ref="0x7f02a3b2a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7f02a3b40ac0" loc="56:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7f02a3b40ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f02a3b40e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7f02a3b27ad0" loc="103:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f02a3b27ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f02a3b27e50"/>
        <function-ref name="write" scoped="" ref="0x7f02a3b26020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7f02a3b41060" loc="52:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7f02a3b41060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f02a3b413e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7f02a3b2de50" loc="92:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7f02a3b2de50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f02a3b2c210"/>
        <function-ref name="write" scoped="" ref="0x7f02a3b2c3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7f02a3b3b480" loc="66:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7f02a3b3b480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f02a3b3b800"/>
        <function-ref name="write" scoped="" ref="0x7f02a3b3b990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7f02a3b3c480" loc="64:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f02a3b3c480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f02a3b3c800"/>
        <function-ref name="write" scoped="" ref="0x7f02a3b3c990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7f02a3b45940" loc="46:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7f02a3b45940"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f02a3b45cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7f02a3b2ee50" loc="90:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7f02a3b2ee50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f02a3b2d210"/>
        <function-ref name="write" scoped="" ref="0x7f02a3b2d3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7f02a3b30670" loc="87:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7f02a3b30670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f02a3b309f0"/>
        <function-ref name="write" scoped="" ref="0x7f02a3b30b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7f02a3b2d670" loc="91:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7f02a3b2d670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f02a3b2d9f0"/>
        <function-ref name="write" scoped="" ref="0x7f02a3b2db80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7f02a3b25ad0" loc="107:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7f02a3b25ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f02a3b25e50"/>
        <function-ref name="write" scoped="" ref="0x7f02a3b24020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7f02a3b26ad0" loc="105:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7f02a3b26ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f02a3b26e50"/>
        <function-ref name="write" scoped="" ref="0x7f02a3b25020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7f02a3b33670" loc="80:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7f02a3b33670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f02a3b339f0"/>
        <function-ref name="write" scoped="" ref="0x7f02a3b33b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7f02a3b30e50" loc="88:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7f02a3b30e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f02a3b2e210"/>
        <function-ref name="write" scoped="" ref="0x7f02a3b2e3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7f02a3b29ad0" loc="101:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7f02a3b29ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f02a3b29e50"/>
        <function-ref name="write" scoped="" ref="0x7f02a3b27020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7f02a3b35670" loc="76:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7f02a3b35670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f02a3b359f0"/>
        <function-ref name="write" scoped="" ref="0x7f02a3b35b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7f02a3b24ad0" loc="111:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7f02a3b24ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f02a3b24e50"/>
        <function-ref name="writeDone" scoped="" ref="0x7f02a3b23020"/>
        <function-ref name="write" scoped="" ref="0x7f02a3b231b0"/>
        <function-ref name="beginRead" scoped="" ref="0x7f02a3b23340"/>
        <function-ref name="readDone" scoped="" ref="0x7f02a3b234d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7f02a3b452f0" loc="45:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7f02a3b452f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f02a3b45670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7f02a3b3e490" loc="62:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7f02a3b3e490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f02a3b3e810"/>
        <function-ref name="write" scoped="" ref="0x7f02a3b3e9a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7f02a3b3a480" loc="68:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7f02a3b3a480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f02a3b3a800"/>
        <function-ref name="write" scoped="" ref="0x7f02a3b3a990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7f02a3b32e50" loc="84:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7f02a3b32e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f02a3b31210"/>
        <function-ref name="write" scoped="" ref="0x7f02a3b313a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7f02a3b37e50" loc="75:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7f02a3b37e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f02a3b35210"/>
        <function-ref name="write" scoped="" ref="0x7f02a3b353a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7f02a3b31670" loc="85:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7f02a3b31670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f02a3b319f0"/>
        <function-ref name="write" scoped="" ref="0x7f02a3b31b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7f02a3b39670" loc="70:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7f02a3b39670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f02a3b399f0"/>
        <function-ref name="write" scoped="" ref="0x7f02a3b39b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7f02a3b44670" loc="48:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7f02a3b44670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f02a3b449f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7f02a3b39e50" loc="71:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7f02a3b39e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f02a3b38210"/>
        <function-ref name="write" scoped="" ref="0x7f02a3b383a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f02a3b47c30" loc="41:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f02a3b47c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f02a3b46020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f02a3b461b0"/>
        <function-ref name="request" scoped="" ref="0x7f02a3b46340"/>
        <function-ref name="granted" scoped="" ref="0x7f02a3b464d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f02a3b46660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7f02a3b3f160" loc="57:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7f02a3b3f160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f02a3b3f4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7f02a3b3fe00" loc="59:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7f02a3b3fe00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f02a3b3e1c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7f02a3b292f0" loc="100:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7f02a3b292f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f02a3b29670"/>
        <function-ref name="write" scoped="" ref="0x7f02a3b29800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7f02a3b2aad0" loc="99:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7f02a3b2aad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f02a3b2ae50"/>
        <function-ref name="write" scoped="" ref="0x7f02a3b29020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7f02a3b416b0" loc="53:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7f02a3b416b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f02a3b41a30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7f02a3b2a2f0" loc="96:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f02a3b2a2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f02a3b2a670"/>
        <function-ref name="write" scoped="" ref="0x7f02a3b2a800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7f02a3b252f0" loc="106:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7f02a3b252f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f02a3b25670"/>
        <function-ref name="write" scoped="" ref="0x7f02a3b25800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7f02a3b33e50" loc="81:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7f02a3b33e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f02a3b32210"/>
        <function-ref name="write" scoped="" ref="0x7f02a3b323a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7f02a3b2e670" loc="89:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7f02a3b2e670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f02a3b2e9f0"/>
        <function-ref name="write" scoped="" ref="0x7f02a3b2eb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7f02a3b44cc0" loc="49:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7f02a3b44cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f02a3b420a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7f02a3b429c0" loc="51:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7f02a3b429c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f02a3b42d40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7f02a3b35e50" loc="77:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7f02a3b35e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f02a3b34210"/>
        <function-ref name="write" scoped="" ref="0x7f02a3b343a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7f02a3b3f7b0" loc="58:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7f02a3b3f7b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f02a3b3fb30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7f02a3b34670" loc="78:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7f02a3b34670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f02a3b349f0"/>
        <function-ref name="write" scoped="" ref="0x7f02a3b34b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7f02a3b2ce50" loc="94:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7f02a3b2ce50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f02a3b2b610"/>
        <function-ref name="write" scoped="" ref="0x7f02a3b2b7a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7f02a3b237a0" loc="112:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7f02a3b237a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f02a3b23b20"/>
        <function-ref name="writeDone" scoped="" ref="0x7f02a3b23cb0"/>
        <function-ref name="write" scoped="" ref="0x7f02a3b23e40"/>
        <function-ref name="beginRead" scoped="" ref="0x7f02a3b22020"/>
        <function-ref name="readDone" scoped="" ref="0x7f02a3b221b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Receive" ref="0x7f02a3b17e00" loc="42:/home/hades/tinyos-new/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Receive" scoped="" ref="0x7f02a3b17e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f02a3b141c0"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x7f02a3b14350"/>
        <function-ref name="sfd" scoped="" ref="0x7f02a3b144e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f02a3b147c0" loc="43:/home/hades/tinyos-new/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f02a3b147c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f02a3b14b40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketIndicator" ref="0x7f02a3b12020" loc="44:/home/hades/tinyos-new/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketIndicator" scoped="" ref="0x7f02a3b12020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7f02a3b123a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f02a3b175d0" loc="41:/home/hades/tinyos-new/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f02a3b175d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f02a3b17950"/>
        <function-ref name="stop" scoped="" ref="0x7f02a3b17ae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FIFO" ref="0x7f02a3b0b380" loc="54:/home/hades/tinyos-new/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFO" scoped="" ref="0x7f02a3b0b380"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f02a3b0b700"/>
        <function-ref name="isInput" scoped="" ref="0x7f02a3b0b890"/>
        <function-ref name="toggle" scoped="" ref="0x7f02a3b0ba20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f02a3b0bbb0"/>
        <function-ref name="get" scoped="" ref="0x7f02a3b0bd40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f02a3b0a020"/>
        <function-ref name="set" scoped="" ref="0x7f02a3b0a1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f02a3b0a340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Config" ref="0x7f02a3b04b90" loc="64:/home/hades/tinyos-new/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x7f02a3b04b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7f02a3b03020"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7f02a3b031b0"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7f02a3b03340"/>
        <function-ref name="syncDone" scoped="" ref="0x7f02a3b034d0"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x7f02a3b03660"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7f02a3b037f0"/>
        <function-ref name="setChannel" scoped="" ref="0x7f02a3b03980"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7f02a3b03b10"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7f02a3b03ca0"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7f02a3b03e30"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7f02a3b02020"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7f02a3b021b0"/>
        <function-ref name="sync" scoped="" ref="0x7f02a3b02340"/>
        <function-ref name="getChannel" scoped="" ref="0x7f02a3b025d0"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7f02a3b02760"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveDone_task" ref="0x7f02a3aed9d0" loc="148:/home/hades/tinyos-new/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="receiveDone_task" scoped="" ref="0x7f02a3aed9d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f02a3aedd50"/>
        <function-ref name="runTask" scoped="" ref="0x7f02a3aeb020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x7f02a3b02d70" loc="65:/home/hades/tinyos-new/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp" scoped="" ref="0x7f02a3b02d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f02a45ab7d0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f02a45abb40"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f02a51f8920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f02a3aff330"/>
        <function-ref name="clear" scoped="" ref="0x7f02a3affa60"/>
        <function-ref name="isValid" scoped="" ref="0x7f02a3b01ba0"/>
        <function-ref name="set" scoped="" ref="0x7f02a3afe210"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FIFOP" ref="0x7f02a3b0a6b0" loc="55:/home/hades/tinyos-new/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFOP" scoped="" ref="0x7f02a3b0a6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f02a3b0aa30"/>
        <function-ref name="isInput" scoped="" ref="0x7f02a3b0abc0"/>
        <function-ref name="toggle" scoped="" ref="0x7f02a3b0ad50"/>
        <function-ref name="isOutput" scoped="" ref="0x7f02a3b09020"/>
        <function-ref name="get" scoped="" ref="0x7f02a3b091b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f02a3b09340"/>
        <function-ref name="set" scoped="" ref="0x7f02a3b094d0"/>
        <function-ref name="clr" scoped="" ref="0x7f02a3b09660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL1" ref="0x7f02a3afdcb0" loc="69:/home/hades/tinyos-new/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7f02a3afdcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f02a3afc0a0"/>
        <function-ref name="write" scoped="" ref="0x7f02a3afc230"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY0" ref="0x7f02a3afc590" loc="70:/home/hades/tinyos-new/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7f02a3afc590"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f02a3afc910"/>
        <function-ref name="write" scoped="" ref="0x7f02a3afcaa0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXNONCE" ref="0x7f02a3afa6d0" loc="72:/home/hades/tinyos-new/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7f02a3afa6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f02a3afaa50"/>
        <function-ref name="write" scoped="" ref="0x7f02a3afabe0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7f02a3b05330" loc="62:/home/hades/tinyos-new/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f02a3b05330"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f02a3b056b0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f02a3b05840"/>
        <function-ref name="getRssi" scoped="" ref="0x7f02a3b059d0"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f02a3b05b60"/>
        <function-ref name="getPower" scoped="" ref="0x7f02a3b05cf0"/>
        <function-ref name="getLqi" scoped="" ref="0x7f02a3b05e80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Receive" ref="0x7f02a3b0e550" loc="49:/home/hades/tinyos-new/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Receive" scoped="" ref="0x7f02a3b0e550"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f02a3b0e8d0"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x7f02a3b0ea60"/>
        <function-ref name="sfd" scoped="" ref="0x7f02a3b0ebf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SACK" ref="0x7f02a3b063a0" loc="60:/home/hades/tinyos-new/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7f02a3b063a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f02a3b06720"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x7f02a3b0c020" loc="53:/home/hades/tinyos-new/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x7f02a3b0c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f02a3b0c3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f02a3b0c530"/>
        <function-ref name="toggle" scoped="" ref="0x7f02a3b0c6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f02a3b0c850"/>
        <function-ref name="get" scoped="" ref="0x7f02a3b0c9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f02a3b0cb70"/>
        <function-ref name="set" scoped="" ref="0x7f02a3b0cd00"/>
        <function-ref name="clr" scoped="" ref="0x7f02a3b0b020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXFIFO_RAM" ref="0x7f02a3af9020" loc="73:/home/hades/tinyos-new/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f02a3af9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f02a3af93a0"/>
        <function-ref name="write" scoped="" ref="0x7f02a3af9530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f02a3b0f620" loc="47:/home/hades/tinyos-new/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f02a3b0f620"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f02a3b0f9a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f02a3b041e0" loc="63:/home/hades/tinyos-new/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f02a3b041e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f02a3b04560"/>
        <function-ref name="getHeader" scoped="" ref="0x7f02a3b046f0"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f02a3b04880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f02a3b0d020" loc="50:/home/hades/tinyos-new/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f02a3b0d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f02a3b0d3a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7f02a3b086e0" loc="58:/home/hades/tinyos-new/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x7f02a3b086e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f02a3b08a60"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f02a3b08bf0"/>
        <function-ref name="request" scoped="" ref="0x7f02a3b08d80"/>
        <function-ref name="granted" scoped="" ref="0x7f02a3b07020"/>
        <function-ref name="isOwner" scoped="" ref="0x7f02a3b071b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY1" ref="0x7f02a3afce00" loc="71:/home/hades/tinyos-new/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7f02a3afce00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f02a3afa1c0"/>
        <function-ref name="write" scoped="" ref="0x7f02a3afa350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXFIFO" ref="0x7f02a3b07530" loc="59:/home/hades/tinyos-new/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7f02a3b07530"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f02a3b078b0"/>
        <function-ref name="writeDone" scoped="" ref="0x7f02a3b07a40"/>
        <function-ref name="write" scoped="" ref="0x7f02a3b07bd0"/>
        <function-ref name="beginRead" scoped="" ref="0x7f02a3b07d60"/>
        <function-ref name="readDone" scoped="" ref="0x7f02a3b06020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SNOP" ref="0x7f02a3af98b0" loc="74:/home/hades/tinyos-new/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7f02a3af98b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f02a3af9e30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketIndicator" ref="0x7f02a3b0d7c0" loc="51:/home/hades/tinyos-new/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketIndicator" scoped="" ref="0x7f02a3b0d7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7f02a3b0db40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f02a3af8150" loc="76:/home/hades/tinyos-new/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f02a3af8150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f02a3af84d0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f02a3af8660"/>
        <function-ref name="led1On" scoped="" ref="0x7f02a3af87f0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f02a3af8980"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f02a3af8b10"/>
        <function-ref name="get" scoped="" ref="0x7f02a3af8ca0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f02a3af8e30"/>
        <function-ref name="led2Off" scoped="" ref="0x7f02a3af74d0"/>
        <function-ref name="set" scoped="" ref="0x7f02a3af7020"/>
        <function-ref name="led0On" scoped="" ref="0x7f02a3af71b0"/>
        <function-ref name="led2On" scoped="" ref="0x7f02a3af7340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL0" ref="0x7f02a3afd3e0" loc="68:/home/hades/tinyos-new/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7f02a3afd3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f02a3afd760"/>
        <function-ref name="write" scoped="" ref="0x7f02a3afd8f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRXDEC" ref="0x7f02a3afeb10" loc="67:/home/hades/tinyos-new/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7f02a3afeb10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f02a3afd020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptFIFOP" ref="0x7f02a3b09a50" loc="56:/home/hades/tinyos-new/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptFIFOP" scoped="" ref="0x7f02a3b09a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f02a3b09dd0"/>
        <function-ref name="disable" scoped="" ref="0x7f02a3b08020"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f02a3b081b0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f02a3b08340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFLUSHRX" ref="0x7f02a3b06ad0" loc="61:/home/hades/tinyos-new/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7f02a3b06ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f02a3b05020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f02a3b0fca0" loc="48:/home/hades/tinyos-new/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f02a3b0fca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f02a3b0e0a0"/>
        <function-ref name="stop" scoped="" ref="0x7f02a3b0e230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7f02a3a8ba70" loc="44:/home/hades/tinyos-new/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f02a3a8ba70"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7f02a3a8bdf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7f02a3a90670" loc="41:/home/hades/tinyos-new/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f02a3a90670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f02a3a909f0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f02a3a90b80"/>
        <function-ref name="getRssi" scoped="" ref="0x7f02a3a90d10"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f02a3a8c020"/>
        <function-ref name="getPower" scoped="" ref="0x7f02a3a8c1b0"/>
        <function-ref name="getLqi" scoped="" ref="0x7f02a3a8c340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x7f02a3a8a550" loc="46:/home/hades/tinyos-new/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f02a3a8a550"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f02a45ab7d0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f02a45abb40"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f02a51f8920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f02a3a89b00"/>
        <function-ref name="clear" scoped="" ref="0x7f02a3a872a0"/>
        <function-ref name="isValid" scoped="" ref="0x7f02a3a893d0"/>
        <function-ref name="set" scoped="" ref="0x7f02a3a879d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420PacketBody" ref="0x7f02a3a8b0c0" loc="43:/home/hades/tinyos-new/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f02a3a8b0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f02a3a8b440"/>
        <function-ref name="getHeader" scoped="" ref="0x7f02a3a8b5d0"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f02a3a8b760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x7f02a3a82480" loc="48:/home/hades/tinyos-new/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f02a3a82480"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f02a3a82800"/>
        <function-ref name="isSet" scoped="" ref="0x7f02a3a82990"/>
        <function-ref name="cancel" scoped="" ref="0x7f02a3a82b20"/>
        <function-ref name="set" scoped="" ref="0x7f02a3a82cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7f02a3a86660" loc="47:/home/hades/tinyos-new/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f02a3a86660"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f02a45ab020"/>
            <typename><typedef-ref name="TMilli" ref="0x7f02a45ab390"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f02a51f8920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f02a3a85ce0"/>
        <function-ref name="clear" scoped="" ref="0x7f02a3a83460"/>
        <function-ref name="isValid" scoped="" ref="0x7f02a3a855b0"/>
        <function-ref name="set" scoped="" ref="0x7f02a3a83b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7f02a3a8c6e0" loc="42:/home/hades/tinyos-new/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x7f02a3a8c6e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f02a3a8ca60"/>
        <function-ref name="noAck" scoped="" ref="0x7f02a3a8cbf0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f02a3a8cd80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7f02a3a7c020" loc="49:/home/hades/tinyos-new/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f02a3a7c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7f02a3a7c3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7f02a3a81d20" loc="46:/home/hades/tinyos-new/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f02a3a81d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f02a3a7e0e0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f02a3a7e270"/>
        <function-ref name="getRssi" scoped="" ref="0x7f02a3a7e400"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f02a3a7e590"/>
        <function-ref name="getPower" scoped="" ref="0x7f02a3a7e720"/>
        <function-ref name="getLqi" scoped="" ref="0x7f02a3a7e8b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7f02a3a734a0" loc="56:/home/hades/tinyos-new/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f02a3a734a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f02a3a73820"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f02a3a739b0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f02a3a73b40"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f02a3a73cd0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f02a3a73e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x7f02a3a7ca80" loc="51:/home/hades/tinyos-new/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f02a3a7ca80"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f02a45ab7d0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f02a45abb40"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f02a51f8920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f02a3a79020"/>
        <function-ref name="clear" scoped="" ref="0x7f02a3a79750"/>
        <function-ref name="isValid" scoped="" ref="0x7f02a3a7a8d0"/>
        <function-ref name="set" scoped="" ref="0x7f02a3a79e80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420PacketBody" ref="0x7f02a3a7d640" loc="48:/home/hades/tinyos-new/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f02a3a7d640"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f02a3a7d9c0"/>
        <function-ref name="getHeader" scoped="" ref="0x7f02a3a7db50"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f02a3a7dce0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x7f02a3a748b0" loc="53:/home/hades/tinyos-new/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f02a3a748b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f02a3a74c30"/>
        <function-ref name="isSet" scoped="" ref="0x7f02a3a74dc0"/>
        <function-ref name="cancel" scoped="" ref="0x7f02a3a73020"/>
        <function-ref name="set" scoped="" ref="0x7f02a3a731b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime32khz" ref="0x7f02a3a6e820" loc="57:/home/hades/tinyos-new/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime32khz" scoped="" ref="0x7f02a3a6e820"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f02a45ab7d0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f02a45abb40"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f02a3a704c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeMilli" ref="0x7f02a3a70b80" loc="58:/home/hades/tinyos-new/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTimeMilli" scoped="" ref="0x7f02a3a70b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f02a45ab020"/>
            <typename><typedef-ref name="TMilli" ref="0x7f02a45ab390"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f02a3a6f7d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7f02a3a78af0" loc="52:/home/hades/tinyos-new/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f02a3a78af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f02a45ab020"/>
            <typename><typedef-ref name="TMilli" ref="0x7f02a45ab390"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f02a51f8920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f02a3a750d0"/>
        <function-ref name="clear" scoped="" ref="0x7f02a3a75800"/>
        <function-ref name="isValid" scoped="" ref="0x7f02a3a76970"/>
        <function-ref name="set" scoped="" ref="0x7f02a3a74020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7f02a3a7ec50" loc="47:/home/hades/tinyos-new/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x7f02a3a7ec50"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f02a3a7d020"/>
        <function-ref name="noAck" scoped="" ref="0x7f02a3a7d1b0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f02a3a7d340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7f02a3a1d4e0" loc="48:/home/hades/tinyos-new/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC2420PacketC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x7f02a3a1d4e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f02a45ab7d0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f02a45abb40"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f02a3a15150"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f02a3a157c0" loc="49:/home/hades/tinyos-new/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC2420PacketC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f02a3a157c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f02a45ab7d0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f02a45abb40"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f02a51f8920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f02a3a13620"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f02a3a12020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f02a3a13ae0"/>
        <function-ref name="overflow" scoped="" ref="0x7f02a3a124e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x7f02a3a0d7d0" loc="46:/home/hades/tinyos-new/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerMilli" scoped="" ref="0x7f02a3a0d7d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f02a45ab020"/>
            <typename><typedef-ref name="TMilli" ref="0x7f02a45ab390"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f02a51f8160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f02a3a00c40"/>
        <function-ref name="fired" scoped="" ref="0x7f02a3a02260"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f02a3a00020"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f02a3a02b60"/>
        <function-ref name="getdt" scoped="" ref="0x7f02a39ff590"/>
        <function-ref name="gett0" scoped="" ref="0x7f02a39ff110"/>
        <function-ref name="isRunning" scoped="" ref="0x7f02a3a026e0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f02a3a0c400"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f02a3a00630"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f02a3a0c8d0"/>
        <function-ref name="stop" scoped="" ref="0x7f02a3a0cda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7f02a39ffb80" loc="47:/home/hades/tinyos-new/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x7f02a39ffb80"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f02a45ab020"/>
            <typename><typedef-ref name="TMilli" ref="0x7f02a45ab390"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f02a39fd7d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f02a3a0e130" loc="45:/home/hades/tinyos-new/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f02a3a0e130"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f02a3a0e4b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f02a39d0af0" loc="44:/home/hades/tinyos-new/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f02a39d0af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f02a45ab020"/>
            <typename><typedef-ref name="TMilli" ref="0x7f02a45ab390"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f02a51f8920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f02a39cd390"/>
        <function-ref name="fired" scoped="" ref="0x7f02a39ce360"/>
        <function-ref name="startAt" scoped="" ref="0x7f02a39cece0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f02a39ce820"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f02a39cd850"/>
        <function-ref name="start" scoped="" ref="0x7f02a39cf970"/>
        <function-ref name="stop" scoped="" ref="0x7f02a39cfe80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f02a39d02a0" loc="43:/home/hades/tinyos-new/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f02a39d02a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f02a39d0620"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f02a2c01260" loc="44:/home/hades/tinyos-new/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f02a2c01260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f02a45ab7d0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f02a45abb40"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f02a51f8520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f02a2bfeb30"/>
        <function-ref name="fired" scoped="" ref="0x7f02a2c00a60"/>
        <function-ref name="startAt" scoped="" ref="0x7f02a2bfe4e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f02a2bfe020"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f02a2bfd020"/>
        <function-ref name="start" scoped="" ref="0x7f02a2c00090"/>
        <function-ref name="stop" scoped="" ref="0x7f02a2c005a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f02a2c029d0" loc="43:/home/hades/tinyos-new/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f02a2c029d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f02a2c02d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x7f02a2be8a80" loc="41:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7f02a2be8a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f02a2be8e00"/>
        <function-ref name="setEvent" scoped="" ref="0x7f02a2be7020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f02a2be71b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f02a2be7340"/>
        <function-ref name="fired" scoped="" ref="0x7f02a2be74d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x7f02a2bea020" loc="39:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f02a2bea020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f02a2bea3a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f02a2bea530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f02a2bea6c0"/>
        <function-ref name="get" scoped="" ref="0x7f02a2bea850"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f02a2bea9e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f02a2beab70"/>
        <function-ref name="getMode" scoped="" ref="0x7f02a2bead00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f02a2be9020"/>
        <function-ref name="overflow" scoped="" ref="0x7f02a2be91b0"/>
        <function-ref name="setMode" scoped="" ref="0x7f02a2be9340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f02a2be94d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x7f02a2be9760" loc="40:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f02a2be9760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f02a2be9ae0"/>
        <function-ref name="getControl" scoped="" ref="0x7f02a2be9c70"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f02a2be9e00"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f02a2be8020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f02a2be81b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f02a2be8340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f02a2be84d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f02a2be8660"/>
        <function-ref name="setControl" scoped="" ref="0x7f02a2be87f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Compare" ref="0x7f02a2bbb760" loc="49:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7f02a2bbb760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f02a2bbbae0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f02a2bbbc70"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f02a2bbbe00"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f02a2bba020"/>
        <function-ref name="fired" scoped="" ref="0x7f02a2bba1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7f02a2bbfdd0" loc="47:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f02a2bbfdd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f02a2bbd180"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f02a2bbd310"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f02a2bbd4a0"/>
        <function-ref name="get" scoped="" ref="0x7f02a2bbd630"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f02a2bbd7c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f02a2bbd950"/>
        <function-ref name="getMode" scoped="" ref="0x7f02a2bbdae0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f02a2bbdc70"/>
        <function-ref name="overflow" scoped="" ref="0x7f02a2bbde00"/>
        <function-ref name="setMode" scoped="" ref="0x7f02a2bbc020"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f02a2bbc1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f02a2bc2bf0" loc="46:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f02a2bc2bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f02a45ab7d0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f02a45abb40"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f02a51f8520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f02a2bbf4e0"/>
        <function-ref name="fired" scoped="" ref="0x7f02a2bc04e0"/>
        <function-ref name="startAt" scoped="" ref="0x7f02a2bc0e60"/>
        <function-ref name="isRunning" scoped="" ref="0x7f02a2bc09a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f02a2bbf9a0"/>
        <function-ref name="start" scoped="" ref="0x7f02a2bc1a80"/>
        <function-ref name="stop" scoped="" ref="0x7f02a2bc0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f02a2bc2360" loc="45:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f02a2bc2360"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f02a2bc26e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x7f02a2bbc440" loc="48:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f02a2bbc440"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f02a2bbc7c0"/>
        <function-ref name="getControl" scoped="" ref="0x7f02a2bbc950"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f02a2bbcae0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f02a2bbcc70"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f02a2bbce00"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f02a2bbb020"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f02a2bbb1b0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f02a2bbb340"/>
        <function-ref name="setControl" scoped="" ref="0x7f02a2bbb4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f02a39ec080" loc="43:/home/hades/tinyos-new/tos/chips/msp430/timer/CounterMilli32C.nc">
      <component-ref qname="CounterMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f02a39ec080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f02a45ab020"/>
            <typename><typedef-ref name="TMilli" ref="0x7f02a45ab390"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f02a51f8920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f02a39eb020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f02a39eb9a0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f02a39eb4e0"/>
        <function-ref name="overflow" scoped="" ref="0x7f02a39ebe60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x7f02a39e30f0" loc="63:/home/hades/tinyos-new/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CounterFrom" scoped="" ref="0x7f02a39e30f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f02a45ab7d0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f02a45abb40"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f02a51f8520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f02a39e2020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f02a39e29a0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f02a39e24e0"/>
        <function-ref name="overflow" scoped="" ref="0x7f02a39e2e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f02a39e7cd0" loc="62:/home/hades/tinyos-new/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f02a39e7cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f02a45ab020"/>
            <typename><typedef-ref name="TMilli" ref="0x7f02a45ab390"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f02a51f8920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f02a39e6b60"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f02a39e5550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f02a39e5090"/>
        <function-ref name="overflow" scoped="" ref="0x7f02a39e5a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f02a2bfb5f0" loc="61:/home/hades/tinyos-new/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f02a2bfb5f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f02a45ab020"/>
            <typename><typedef-ref name="TMilli" ref="0x7f02a45ab390"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f02a51f8920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f02a2bf9e50"/>
        <function-ref name="fired" scoped="" ref="0x7f02a2bfae00"/>
        <function-ref name="startAt" scoped="" ref="0x7f02a2bf9800"/>
        <function-ref name="isRunning" scoped="" ref="0x7f02a2bf9340"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f02a2bf7340"/>
        <function-ref name="start" scoped="" ref="0x7f02a2bfa430"/>
        <function-ref name="stop" scoped="" ref="0x7f02a2bfa940"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x7f02a2bf5d20" loc="73:/home/hades/tinyos-new/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AlarmFrom" scoped="" ref="0x7f02a2bf5d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f02a45ab7d0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f02a45abb40"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f02a51f8520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f02a2bf1670"/>
        <function-ref name="fired" scoped="" ref="0x7f02a2bf3550"/>
        <function-ref name="startAt" scoped="" ref="0x7f02a2bf1020"/>
        <function-ref name="isRunning" scoped="" ref="0x7f02a2bf3a10"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f02a2bf1b30"/>
        <function-ref name="start" scoped="" ref="0x7f02a2bf4b60"/>
        <function-ref name="stop" scoped="" ref="0x7f02a2bf3090"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f02a2bf79b0" loc="68:/home/hades/tinyos-new/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f02a2bf79b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f02a45ab020"/>
            <typename><typedef-ref name="TMilli" ref="0x7f02a45ab390"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f02a51f8920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f02a2bf67e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f02a2bf51b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f02a2bf6ca0"/>
        <function-ref name="overflow" scoped="" ref="0x7f02a2bf5670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x7f02a399a020" loc="74:/home/hades/tinyos-new/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="fired" scoped="" ref="0x7f02a399a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f02a399a3a0"/>
        <function-ref name="runTask" scoped="" ref="0x7f02a399a530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x7f02a399fcd0" loc="49:/home/hades/tinyos-new/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f02a399fcd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f02a45ab020"/>
            <typename><typedef-ref name="TMilli" ref="0x7f02a45ab390"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f02a51f8920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f02a399b670"/>
        <function-ref name="fired" scoped="" ref="0x7f02a399c550"/>
        <function-ref name="startAt" scoped="" ref="0x7f02a399b020"/>
        <function-ref name="isRunning" scoped="" ref="0x7f02a399ca10"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f02a399bb30"/>
        <function-ref name="start" scoped="" ref="0x7f02a399eb60"/>
        <function-ref name="stop" scoped="" ref="0x7f02a399c090"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f02a39a4830" loc="48:/home/hades/tinyos-new/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f02a39a4830"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f02a45ab020"/>
            <typename><typedef-ref name="TMilli" ref="0x7f02a45ab390"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f02a39a0cf0"/>
        <function-ref name="fired" scoped="" ref="0x7f02a39a1300"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f02a39a00d0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f02a39a1c00"/>
        <function-ref name="getdt" scoped="" ref="0x7f02a399f660"/>
        <function-ref name="gett0" scoped="" ref="0x7f02a399f1e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f02a39a1780"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f02a39a3480"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f02a39a06e0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f02a39a3950"/>
        <function-ref name="stop" scoped="" ref="0x7f02a39a3e20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x7f02a394aa00" loc="71:/home/hades/tinyos-new/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="updateFromTimer" scoped="" ref="0x7f02a394aa00"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f02a394ad80"/>
        <function-ref name="runTask" scoped="" ref="0x7f02a3948020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x7f02a394f640" loc="49:/home/hades/tinyos-new/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerFrom" scoped="" ref="0x7f02a394f640"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f02a45ab020"/>
            <typename><typedef-ref name="TMilli" ref="0x7f02a45ab390"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f02a394bc40"/>
        <function-ref name="fired" scoped="" ref="0x7f02a394c1e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f02a394b020"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f02a394cae0"/>
        <function-ref name="getdt" scoped="" ref="0x7f02a394a590"/>
        <function-ref name="gett0" scoped="" ref="0x7f02a394a110"/>
        <function-ref name="isRunning" scoped="" ref="0x7f02a394c660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f02a394d390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f02a394b630"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f02a394d860"/>
        <function-ref name="stop" scoped="" ref="0x7f02a394dd30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f02a3955150" loc="48:/home/hades/tinyos-new/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f02a3955150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f02a45ab020"/>
            <typename><typedef-ref name="TMilli" ref="0x7f02a45ab390"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f02a51f8160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f02a3950700"/>
        <function-ref name="fired" scoped="" ref="0x7f02a3953c30"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f02a3952a50"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f02a39525b0"/>
        <function-ref name="getdt" scoped="" ref="0x7f02a394f090"/>
        <function-ref name="gett0" scoped="" ref="0x7f02a3950ba0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f02a3952110"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f02a3955d60"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f02a39500d0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f02a39532a0"/>
        <function-ref name="stop" scoped="" ref="0x7f02a3953790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7f02a39462b0" loc="48:/home/hades/tinyos-new/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x7f02a39462b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f02a45ab020"/>
            <typename><typedef-ref name="TMilli" ref="0x7f02a45ab390"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f02a3945020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f02a3945690" loc="49:/home/hades/tinyos-new/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f02a3945690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f02a45ab020"/>
            <typename><typedef-ref name="TMilli" ref="0x7f02a45ab390"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f02a51f8920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f02a39445b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f02a3943020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f02a3944a70"/>
        <function-ref name="overflow" scoped="" ref="0x7f02a39434e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f02a393c8c0" loc="45:/home/hades/tinyos-new/tos/system/TimerMilliC.nc">
      <component-ref qname="CC2420PacketC.DummyTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f02a393c8c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f02a45ab020"/>
            <typename><typedef-ref name="TMilli" ref="0x7f02a45ab390"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f02a3928cf0"/>
        <function-ref name="fired" scoped="" ref="0x7f02a392a320"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f02a39280d0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f02a392ac20"/>
        <function-ref name="getdt" scoped="" ref="0x7f02a3927660"/>
        <function-ref name="gett0" scoped="" ref="0x7f02a39271e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f02a392a7a0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f02a392b4e0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f02a39286e0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f02a392b9b0"/>
        <function-ref name="stop" scoped="" ref="0x7f02a392be80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x7f02a39332c0" loc="49:/home/hades/tinyos-new/tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerMilli" scoped="" ref="0x7f02a39332c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f02a45ab020"/>
            <typename><typedef-ref name="TMilli" ref="0x7f02a45ab390"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f02a51f8160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f02a392f870"/>
        <function-ref name="fired" scoped="" ref="0x7f02a3932e40"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f02a3931c00"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f02a3931780"/>
        <function-ref name="getdt" scoped="" ref="0x7f02a392e1e0"/>
        <function-ref name="gett0" scoped="" ref="0x7f02a392fcf0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f02a3931300"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f02a3932020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f02a392f260"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f02a39324f0"/>
        <function-ref name="stop" scoped="" ref="0x7f02a39329c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7f02a3917c60" loc="69:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7f02a3917c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f02a3916210"/>
        <function-ref name="write" scoped="" ref="0x7f02a39163a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7f02a3920020" loc="47:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7f02a3920020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f02a39203a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7f02a391ac70" loc="63:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7f02a391ac70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f02a3919020"/>
        <function-ref name="write" scoped="" ref="0x7f02a39191b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7f02a3914670" loc="72:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7f02a3914670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f02a39149f0"/>
        <function-ref name="write" scoped="" ref="0x7f02a3914b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7f02a390de50" loc="86:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7f02a390de50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f02a390c210"/>
        <function-ref name="write" scoped="" ref="0x7f02a390c3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7f02a3914e50" loc="73:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7f02a3914e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f02a3913210"/>
        <function-ref name="write" scoped="" ref="0x7f02a39133a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7f02a39012f0" loc="108:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7f02a39012f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f02a3901670"/>
        <function-ref name="write" scoped="" ref="0x7f02a3901800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7f02a39032f0" loc="104:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7f02a39032f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f02a3903670"/>
        <function-ref name="write" scoped="" ref="0x7f02a3903800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7f02a391f370" loc="50:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7f02a391f370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f02a391f6f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7f02a3909670" loc="93:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7f02a3909670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f02a39099f0"/>
        <function-ref name="write" scoped="" ref="0x7f02a3909b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7f02a39042f0" loc="102:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f02a39042f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f02a3904670"/>
        <function-ref name="write" scoped="" ref="0x7f02a3904800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7f02a3919c60" loc="65:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7f02a3919c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f02a3918020"/>
        <function-ref name="write" scoped="" ref="0x7f02a39181b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7f02a3918c60" loc="67:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7f02a3918c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f02a3917020"/>
        <function-ref name="write" scoped="" ref="0x7f02a39171b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7f02a390f670" loc="83:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7f02a390f670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f02a390f9f0"/>
        <function-ref name="write" scoped="" ref="0x7f02a390fb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7f02a3911e50" loc="79:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7f02a3911e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f02a3910210"/>
        <function-ref name="write" scoped="" ref="0x7f02a39103a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7f02a3913670" loc="74:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7f02a3913670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f02a39139f0"/>
        <function-ref name="write" scoped="" ref="0x7f02a3913b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f02a3923970" loc="42:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f02a3923970"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f02a3923cf0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f02a3923e80"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f02a3922030"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7f02a391ed00" loc="54:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7f02a391ed00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f02a391d0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7f02a391d370" loc="55:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7f02a391d370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f02a391d7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7f02a3908a70" loc="95:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f02a3908a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f02a3908df0"/>
        <function-ref name="write" scoped="" ref="0x7f02a3906020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7f02a391dac0" loc="56:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7f02a391dac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f02a391de40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7f02a3904ad0" loc="103:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f02a3904ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f02a3904e50"/>
        <function-ref name="write" scoped="" ref="0x7f02a3903020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7f02a391e060" loc="52:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7f02a391e060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f02a391e3e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7f02a390ae50" loc="92:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7f02a390ae50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f02a3909210"/>
        <function-ref name="write" scoped="" ref="0x7f02a39093a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7f02a3918480" loc="66:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7f02a3918480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f02a3918800"/>
        <function-ref name="write" scoped="" ref="0x7f02a3918990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7f02a3919480" loc="64:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f02a3919480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f02a3919800"/>
        <function-ref name="write" scoped="" ref="0x7f02a3919990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7f02a3922950" loc="46:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7f02a3922950"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f02a3922cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7f02a390be50" loc="90:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7f02a390be50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f02a390a210"/>
        <function-ref name="write" scoped="" ref="0x7f02a390a3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7f02a390c670" loc="87:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7f02a390c670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f02a390c9f0"/>
        <function-ref name="write" scoped="" ref="0x7f02a390cb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7f02a390a670" loc="91:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7f02a390a670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f02a390a9f0"/>
        <function-ref name="write" scoped="" ref="0x7f02a390ab80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7f02a3902ad0" loc="107:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7f02a3902ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f02a3902e50"/>
        <function-ref name="write" scoped="" ref="0x7f02a3901020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7f02a3903ad0" loc="105:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7f02a3903ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f02a3903e50"/>
        <function-ref name="write" scoped="" ref="0x7f02a3902020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7f02a3910670" loc="80:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7f02a3910670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f02a39109f0"/>
        <function-ref name="write" scoped="" ref="0x7f02a3910b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7f02a390ce50" loc="88:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7f02a390ce50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f02a390b210"/>
        <function-ref name="write" scoped="" ref="0x7f02a390b3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7f02a3905ad0" loc="101:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7f02a3905ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f02a3905e50"/>
        <function-ref name="write" scoped="" ref="0x7f02a3904020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7f02a3912670" loc="76:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7f02a3912670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f02a39129f0"/>
        <function-ref name="write" scoped="" ref="0x7f02a3912b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7f02a3901ad0" loc="111:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7f02a3901ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f02a3901e50"/>
        <function-ref name="writeDone" scoped="" ref="0x7f02a38ff020"/>
        <function-ref name="write" scoped="" ref="0x7f02a38ff1b0"/>
        <function-ref name="beginRead" scoped="" ref="0x7f02a38ff340"/>
        <function-ref name="readDone" scoped="" ref="0x7f02a38ff4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7f02a3922300" loc="45:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7f02a3922300"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f02a3922680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7f02a391a490" loc="62:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7f02a391a490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f02a391a810"/>
        <function-ref name="write" scoped="" ref="0x7f02a391a9a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7f02a3917480" loc="68:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7f02a3917480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f02a3917800"/>
        <function-ref name="write" scoped="" ref="0x7f02a3917990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7f02a390fe50" loc="84:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7f02a390fe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f02a390d210"/>
        <function-ref name="write" scoped="" ref="0x7f02a390d3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7f02a3913e50" loc="75:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7f02a3913e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f02a3912210"/>
        <function-ref name="write" scoped="" ref="0x7f02a39123a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7f02a390d670" loc="85:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7f02a390d670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f02a390d9f0"/>
        <function-ref name="write" scoped="" ref="0x7f02a390db80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7f02a3916670" loc="70:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7f02a3916670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f02a39169f0"/>
        <function-ref name="write" scoped="" ref="0x7f02a3916b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7f02a3920670" loc="48:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7f02a3920670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f02a39209f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7f02a3916e50" loc="71:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7f02a3916e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f02a3914210"/>
        <function-ref name="write" scoped="" ref="0x7f02a39143a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f02a3924d00" loc="41:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f02a3924d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f02a39230a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f02a3923230"/>
        <function-ref name="request" scoped="" ref="0x7f02a39233c0"/>
        <function-ref name="granted" scoped="" ref="0x7f02a3923550"/>
        <function-ref name="isOwner" scoped="" ref="0x7f02a39236e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7f02a391c160" loc="57:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7f02a391c160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f02a391c4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7f02a391ce00" loc="59:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7f02a391ce00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f02a391a1c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7f02a39052f0" loc="100:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7f02a39052f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f02a3905670"/>
        <function-ref name="write" scoped="" ref="0x7f02a3905800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7f02a3906ad0" loc="99:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7f02a3906ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f02a3906e50"/>
        <function-ref name="write" scoped="" ref="0x7f02a3905020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7f02a391e6b0" loc="53:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7f02a391e6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f02a391ea30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7f02a39062f0" loc="96:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f02a39062f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f02a3906670"/>
        <function-ref name="write" scoped="" ref="0x7f02a3906800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7f02a39022f0" loc="106:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7f02a39022f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f02a3902670"/>
        <function-ref name="write" scoped="" ref="0x7f02a3902800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7f02a3910e50" loc="81:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7f02a3910e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f02a390f210"/>
        <function-ref name="write" scoped="" ref="0x7f02a390f3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7f02a390b670" loc="89:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7f02a390b670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f02a390b9f0"/>
        <function-ref name="write" scoped="" ref="0x7f02a390bb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7f02a3920cc0" loc="49:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7f02a3920cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f02a391f0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7f02a391f9c0" loc="51:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7f02a391f9c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f02a391fd40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7f02a3912e50" loc="77:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7f02a3912e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f02a3911210"/>
        <function-ref name="write" scoped="" ref="0x7f02a39113a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7f02a391c7b0" loc="58:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7f02a391c7b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f02a391cb30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7f02a3911670" loc="78:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7f02a3911670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f02a39119f0"/>
        <function-ref name="write" scoped="" ref="0x7f02a3911b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7f02a3909e50" loc="94:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7f02a3909e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f02a3908610"/>
        <function-ref name="write" scoped="" ref="0x7f02a39087a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7f02a38ff7a0" loc="112:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7f02a38ff7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f02a38ffb20"/>
        <function-ref name="writeDone" scoped="" ref="0x7f02a38ffcb0"/>
        <function-ref name="write" scoped="" ref="0x7f02a38ffe40"/>
        <function-ref name="beginRead" scoped="" ref="0x7f02a38fe020"/>
        <function-ref name="readDone" scoped="" ref="0x7f02a38fe1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x7f02a38d4a20" loc="46:/home/hades/tinyos-new/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x7f02a38d4a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7f02a38d4da0"/>
        <function-ref name="rand32" scoped="" ref="0x7f02a38d1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x7f02a38d2920" loc="45:/home/hades/tinyos-new/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SeedInit" scoped="" ref="0x7f02a38d2920"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f02a51f8520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f02a38d4560"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f02a38d89a0" loc="44:/home/hades/tinyos-new/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f02a38d89a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f02a38d8d20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x7f02a38cda20" loc="48:/home/hades/tinyos-new/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x7f02a38cda20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7f02a38cdda0"/>
        <function-ref name="rand32" scoped="" ref="0x7f02a38cc020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x7f02a38ce940" loc="47:/home/hades/tinyos-new/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SeedInit" scoped="" ref="0x7f02a38ce940"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f02a51f8520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f02a38cd560"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f02a38ce080" loc="46:/home/hades/tinyos-new/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f02a38ce080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f02a38ce400"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7f02a38d6aa0" loc="67:/home/hades/tinyos-new/tos/system/StateC.nc">
      <component-ref qname="CC2420CsmaC.StateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7f02a38d6aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f02a38d6e20"/>
        <function-ref name="toIdle" scoped="" ref="0x7f02a38cf020"/>
        <function-ref name="isState" scoped="" ref="0x7f02a38cf1b0"/>
        <function-ref name="isIdle" scoped="" ref="0x7f02a38cf340"/>
        <function-ref name="requestState" scoped="" ref="0x7f02a38cf4d0"/>
        <function-ref name="forceState" scoped="" ref="0x7f02a38cf660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f02a38b6020" loc="44:/home/hades/tinyos-new/tos/chips/cc2420/unique/UniqueSendC.nc">
      <component-ref qname="UniqueSendC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f02a38b6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f02a38b63a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f02a38b6530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f02a38b66c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f02a38b6850"/>
        <function-ref name="sendDone" scoped="" ref="0x7f02a38b69e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f02a38b7220" loc="40:/home/hades/tinyos-new/tos/chips/cc2420/unique/UniqueSendC.nc">
      <component-ref qname="UniqueSendC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f02a38b7220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f02a38b75a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f02a38b7730"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f02a38b78c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f02a38b7a50"/>
        <function-ref name="sendDone" scoped="" ref="0x7f02a38b7be0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f02a38b1e60" loc="45:/home/hades/tinyos-new/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f02a38b1e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f02a38b0210"/>
        <function-ref name="getPayload" scoped="" ref="0x7f02a38b03a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f02a38b0530"/>
        <function-ref name="cancel" scoped="" ref="0x7f02a38b06c0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f02a38b0850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f02a38b5a20" loc="40:/home/hades/tinyos-new/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f02a38b5a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f02a38b5da0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f02a38b1020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f02a38b11b0"/>
        <function-ref name="cancel" scoped="" ref="0x7f02a38b1340"/>
        <function-ref name="sendDone" scoped="" ref="0x7f02a38b14d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x7f02a38af8f0" loc="47:/home/hades/tinyos-new/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x7f02a38af8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7f02a38afc70"/>
        <function-ref name="rand32" scoped="" ref="0x7f02a38afe00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f02a38b1750" loc="41:/home/hades/tinyos-new/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f02a38b1750"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f02a38b1ad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f02a38ac170" loc="48:/home/hades/tinyos-new/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f02a38ac170"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f02a38ac4f0"/>
        <function-ref name="getHeader" scoped="" ref="0x7f02a38ac680"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f02a38ac810"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="State" ref="0x7f02a38b0ae0" loc="46:/home/hades/tinyos-new/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7f02a38b0ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f02a38b0e60"/>
        <function-ref name="toIdle" scoped="" ref="0x7f02a38af020"/>
        <function-ref name="isState" scoped="" ref="0x7f02a38af1b0"/>
        <function-ref name="isIdle" scoped="" ref="0x7f02a38af340"/>
        <function-ref name="requestState" scoped="" ref="0x7f02a38af4d0"/>
        <function-ref name="forceState" scoped="" ref="0x7f02a38af660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7f02a38b3690" loc="67:/home/hades/tinyos-new/tos/system/StateC.nc">
      <component-ref qname="UniqueSendC.StateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7f02a38b3690"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f02a38b3a10"/>
        <function-ref name="toIdle" scoped="" ref="0x7f02a38b3ba0"/>
        <function-ref name="isState" scoped="" ref="0x7f02a38b3d30"/>
        <function-ref name="isIdle" scoped="" ref="0x7f02a389b020"/>
        <function-ref name="requestState" scoped="" ref="0x7f02a389b1b0"/>
        <function-ref name="forceState" scoped="" ref="0x7f02a389b340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f02a3895950" loc="47:/home/hades/tinyos-new/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7f02a3895950"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f02a3895cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f02a3898ab0" loc="42:/home/hades/tinyos-new/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f02a3898ab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f02a3898e30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DuplicateReceive" ref="0x7f02a3895200" loc="43:/home/hades/tinyos-new/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DuplicateReceive" scoped="" ref="0x7f02a3895200"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f02a3895580"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f02a388f3f0" loc="49:/home/hades/tinyos-new/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7f02a388f3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f02a388f770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f02a3890b70" loc="45:/home/hades/tinyos-new/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f02a3890b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f02a388f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f02a3894e40" loc="43:/home/hades/tinyos-new/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f02a3894e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f02a38901e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f02a388fa70" loc="50:/home/hades/tinyos-new/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f02a388fa70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f02a388fdf0"/>
        <function-ref name="getHeader" scoped="" ref="0x7f02a388e020"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f02a388e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DuplicateReceive" ref="0x7f02a3890570" loc="44:/home/hades/tinyos-new/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DuplicateReceive" scoped="" ref="0x7f02a3890570"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f02a38908f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f02a3860020" loc="75:/home/hades/tinyos-new/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7f02a3860020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f02a38603a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f02a38606b0" loc="76:/home/hades/tinyos-new/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f02a38606b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f02a3860a30"/>
        <function-ref name="getPayload" scoped="" ref="0x7f02a3860bc0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f02a3860d50"/>
        <function-ref name="cancel" scoped="" ref="0x7f02a385f020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f02a385f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f02a3865960" loc="65:/home/hades/tinyos-new/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f02a3865960"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f02a3865ce0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f02a3865e70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f02a3863030"/>
        <function-ref name="cancel" scoped="" ref="0x7f02a38631c0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f02a3863350"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x7f02a3863ca0" loc="68:/home/hades/tinyos-new/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveSend" scoped="" ref="0x7f02a3863ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f02a38620a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f02a3862230"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f02a38623c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f02a3862550"/>
        <function-ref name="sendDone" scoped="" ref="0x7f02a38626e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f02a38635f0" loc="66:/home/hades/tinyos-new/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f02a38635f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f02a3863970"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f02a3866cb0" loc="64:/home/hades/tinyos-new/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f02a3866cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f02a51f8160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f02a38650a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f02a3865230"/>
        <function-ref name="request" scoped="" ref="0x7f02a38653c0"/>
        <function-ref name="granted" scoped="" ref="0x7f02a3865550"/>
        <function-ref name="isOwner" scoped="" ref="0x7f02a38656e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x7f02a3862a50" loc="69:/home/hades/tinyos-new/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveReceive" scoped="" ref="0x7f02a3862a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f02a3862dd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x7f02a3861170" loc="71:/home/hades/tinyos-new/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BarePacket" scoped="" ref="0x7f02a3861170"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f02a38614f0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f02a3861680"/>
        <function-ref name="getPayload" scoped="" ref="0x7f02a3861810"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f02a38619a0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f02a3861b30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f02a3856d70" loc="58:/home/hades/tinyos-new/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f02a3856d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f02a3855180"/>
        <function-ref name="getPayload" scoped="" ref="0x7f02a3855310"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f02a38554a0"/>
        <function-ref name="cancel" scoped="" ref="0x7f02a3855630"/>
        <function-ref name="sendDone" scoped="" ref="0x7f02a38557c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f02a3855b10" loc="59:/home/hades/tinyos-new/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7f02a3855b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f02a3854020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantTask" ref="0x7f02a3827db0" loc="184:/home/hades/tinyos-new/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantTask" scoped="" ref="0x7f02a3827db0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f02a3826180"/>
        <function-ref name="runTask" scoped="" ref="0x7f02a3826310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7f02a38542f0" loc="60:/home/hades/tinyos-new/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f02a38542f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f02a3854670"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f02a3854800"/>
        <function-ref name="getRssi" scoped="" ref="0x7f02a3854990"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f02a3854b20"/>
        <function-ref name="getPower" scoped="" ref="0x7f02a3854cb0"/>
        <function-ref name="getLqi" scoped="" ref="0x7f02a3854e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x7f02a3859a20" loc="51:/home/hades/tinyos-new/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveSend" scoped="" ref="0x7f02a3859a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f02a3859da0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f02a3858020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f02a38581b0"/>
        <function-ref name="cancel" scoped="" ref="0x7f02a3858340"/>
        <function-ref name="sendDone" scoped="" ref="0x7f02a38584d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7f02a3853b70" loc="62:/home/hades/tinyos-new/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x7f02a3853b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f02a3852020"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f02a38521b0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f02a3852340"/>
        <function-ref name="dequeue" scoped="" ref="0x7f02a38524d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f02a3853170" loc="61:/home/hades/tinyos-new/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f02a3853170"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f02a38534f0"/>
        <function-ref name="getHeader" scoped="" ref="0x7f02a3853680"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f02a3853810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x7f02a3859370" loc="49:/home/hades/tinyos-new/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareReceive" scoped="" ref="0x7f02a3859370"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f02a38596f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f02a385b7b0" loc="46:/home/hades/tinyos-new/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f02a385b7b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f02a51f8160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f02a385bb30"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f02a385bcc0"/>
        <function-ref name="request" scoped="" ref="0x7f02a385be50"/>
        <function-ref name="granted" scoped="" ref="0x7f02a385a020"/>
        <function-ref name="isOwner" scoped="" ref="0x7f02a385a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x7f02a385a4d0" loc="48:/home/hades/tinyos-new/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareSend" scoped="" ref="0x7f02a385a4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f02a385a850"/>
        <function-ref name="getPayload" scoped="" ref="0x7f02a385a9e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f02a385ab70"/>
        <function-ref name="cancel" scoped="" ref="0x7f02a385ad00"/>
        <function-ref name="sendDone" scoped="" ref="0x7f02a3859020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x7f02a3858840" loc="52:/home/hades/tinyos-new/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveReceive" scoped="" ref="0x7f02a3858840"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f02a3858bc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x7f02a3856020" loc="54:/home/hades/tinyos-new/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BarePacket" scoped="" ref="0x7f02a3856020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f02a38563a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f02a3856530"/>
        <function-ref name="getPayload" scoped="" ref="0x7f02a38566c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f02a3856850"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f02a38569e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f02a3807dd0" loc="44:/home/hades/tinyos-new/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="CC2420TinyosNetworkC.FcfsResourceQueueC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f02a3807dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f02a3806180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7f02a3806410" loc="45:/home/hades/tinyos-new/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="CC2420TinyosNetworkC.FcfsResourceQueueC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FcfsQueue" scoped="" ref="0x7f02a3806410"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f02a3806790"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f02a3806920"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f02a3806ab0"/>
        <function-ref name="dequeue" scoped="" ref="0x7f02a3806c40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f02a37fbb80" loc="46:/home/hades/tinyos-new/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f02a37fbb80"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f02a37f9020"/>
        <function-ref name="stopDone" scoped="" ref="0x7f02a37f91b0"/>
        <function-ref name="start" scoped="" ref="0x7f02a37f9340"/>
        <function-ref name="stop" scoped="" ref="0x7f02a37f94d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f02a37f8860" loc="51:/home/hades/tinyos-new/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f02a37f8860"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f02a37f8be0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f02a37f8d70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f02a37f7020"/>
        <function-ref name="cancel" scoped="" ref="0x7f02a37f71b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f02a37f7340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f02a37f7690" loc="52:/home/hades/tinyos-new/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7f02a37f7690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f02a37f7a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f02a37ffcf0" loc="43:/home/hades/tinyos-new/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f02a37ffcf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f02a37fc0a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f02a37fc230"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f02a37fc3c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f02a37fc550"/>
        <function-ref name="sendDone" scoped="" ref="0x7f02a37fc6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7f02a37fb080" loc="45:/home/hades/tinyos-new/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7f02a37fb080"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f02a37fb400"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f02a37fb590"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f02a37fb720"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f02a37fb8b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendState" ref="0x7f02a37f9800" loc="47:/home/hades/tinyos-new/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendState" scoped="" ref="0x7f02a37f9800"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f02a37f9b80"/>
        <function-ref name="toIdle" scoped="" ref="0x7f02a37f9d10"/>
        <function-ref name="isState" scoped="" ref="0x7f02a37f8020"/>
        <function-ref name="isIdle" scoped="" ref="0x7f02a37f81b0"/>
        <function-ref name="requestState" scoped="" ref="0x7f02a37f8340"/>
        <function-ref name="forceState" scoped="" ref="0x7f02a37f84d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x7f02a37f7d90" loc="53:/home/hades/tinyos-new/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubControl" scoped="" ref="0x7f02a37f7d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f02a37f6180"/>
        <function-ref name="stopDone" scoped="" ref="0x7f02a37f6310"/>
        <function-ref name="start" scoped="" ref="0x7f02a37f64a0"/>
        <function-ref name="stop" scoped="" ref="0x7f02a37f6630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f02a37fc980" loc="44:/home/hades/tinyos-new/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f02a37fc980"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f02a37fcd00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7f02a37f32d0" loc="41:/home/hades/tinyos-new/tos/chips/cc2420/lpl/DummyLplP.nc">
      <component-ref qname="DummyLplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7f02a37f32d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f02a37f3650"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f02a37f37e0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f02a37f3970"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f02a37f3b00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7f02a37f5580" loc="67:/home/hades/tinyos-new/tos/system/StateC.nc">
      <component-ref qname="DummyLplC.StateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7f02a37f5580"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f02a37f5900"/>
        <function-ref name="toIdle" scoped="" ref="0x7f02a37f5a90"/>
        <function-ref name="isState" scoped="" ref="0x7f02a37f5c20"/>
        <function-ref name="isIdle" scoped="" ref="0x7f02a37f5db0"/>
        <function-ref name="requestState" scoped="" ref="0x7f02a37f4020"/>
        <function-ref name="forceState" scoped="" ref="0x7f02a37f41b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f02a37e6d70" loc="45:/home/hades/tinyos-new/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f02a37e6d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f02a37e5180"/>
        <function-ref name="getPayload" scoped="" ref="0x7f02a37e5310"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f02a37e54a0"/>
        <function-ref name="cancel" scoped="" ref="0x7f02a37e5630"/>
        <function-ref name="sendDone" scoped="" ref="0x7f02a37e57c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f02a37e9360" loc="40:/home/hades/tinyos-new/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f02a37e9360"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f02a37e96e0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f02a37e9870"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f02a37e9a00"/>
        <function-ref name="cancel" scoped="" ref="0x7f02a37e9b90"/>
        <function-ref name="sendDone" scoped="" ref="0x7f02a37e9d20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7f02a37e6020" loc="41:/home/hades/tinyos-new/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x7f02a37e6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7f02a37e63a0"/>
        <function-ref name="setRetries" scoped="" ref="0x7f02a37e6530"/>
        <function-ref name="getRetries" scoped="" ref="0x7f02a37e66c0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7f02a37e6850"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7f02a37e69e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAcknowledgements" ref="0x7f02a37e11c0" loc="44:/home/hades/tinyos-new/tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <component-ref qname="PacketLinkDummyP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f02a37e11c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f02a37e1540"/>
        <function-ref name="noAck" scoped="" ref="0x7f02a37e16d0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f02a37e1860"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7f02a37e4420" loc="40:/home/hades/tinyos-new/tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <component-ref qname="PacketLinkDummyP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x7f02a37e4420"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7f02a37e47a0"/>
        <function-ref name="setRetries" scoped="" ref="0x7f02a37e4930"/>
        <function-ref name="getRetries" scoped="" ref="0x7f02a37e4ac0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7f02a37e4c50"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7f02a37e4de0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f02a37c1690" loc="59:/home/hades/tinyos-new/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7f02a37c1690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f02a37c1a10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f02a37c2860" loc="58:/home/hades/tinyos-new/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f02a37c2860"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f02a37c2be0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f02a37c2d70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f02a37c1020"/>
        <function-ref name="cancel" scoped="" ref="0x7f02a37c11b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f02a37c1340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Config" ref="0x7f02a37bf610" loc="62:/home/hades/tinyos-new/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x7f02a37bf610"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7f02a37bf990"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7f02a37bfb20"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7f02a37bfcb0"/>
        <function-ref name="syncDone" scoped="" ref="0x7f02a37bfe40"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x7f02a37be020"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7f02a37be1b0"/>
        <function-ref name="setChannel" scoped="" ref="0x7f02a37be340"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7f02a37be4d0"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7f02a37be660"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7f02a37be7f0"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7f02a37be980"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7f02a37beb10"/>
        <function-ref name="sync" scoped="" ref="0x7f02a37beca0"/>
        <function-ref name="getChannel" scoped="" ref="0x7f02a37bd020"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7f02a37bd1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7f02a37c48b0" loc="54:/home/hades/tinyos-new/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7f02a37c48b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f02a48fb1f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f02a37c4c30"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f02a37c4dc0"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f02a37c2020"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f02a37c21b0"/>
        <function-ref name="setCca" scoped="" ref="0x7f02a37c2340"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f02a37c24d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x7f02a37c5ce0" loc="53:/home/hades/tinyos-new/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendNotifier" scoped="" ref="0x7f02a37c5ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f02a48fb1f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x7f02a37c40a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBackoff" ref="0x7f02a37bc1f0" loc="64:/home/hades/tinyos-new/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubBackoff" scoped="" ref="0x7f02a37bc1f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f02a37bc570"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f02a37bc700"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f02a37bc890"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f02a37bca20"/>
        <function-ref name="setCca" scoped="" ref="0x7f02a37bcbb0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f02a37bcd40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f02a37c6a80" loc="52:/home/hades/tinyos-new/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f02a37c6a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f02a37c6e00"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f02a37c5020"/>
        <function-ref name="getPayload" scoped="" ref="0x7f02a37c51b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f02a37c5340"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f02a37c54d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f02a37c9020" loc="48:/home/hades/tinyos-new/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f02a37c9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f02a48fb1f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f02a37c93a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f02a37c9530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f02a37c96c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f02a37c9850"/>
        <function-ref name="sendDone" scoped="" ref="0x7f02a37c99e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7f02a37c8df0" loc="50:/home/hades/tinyos-new/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0x7f02a37c8df0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f02a48fb1f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f02a37c71c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7f02a37c1ce0" loc="60:/home/hades/tinyos-new/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f02a37c1ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f02a37c00a0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f02a37c0230"/>
        <function-ref name="getRssi" scoped="" ref="0x7f02a37c03c0"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f02a37c0550"/>
        <function-ref name="getPower" scoped="" ref="0x7f02a37c06e0"/>
        <function-ref name="getLqi" scoped="" ref="0x7f02a37c0870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x7f02a37bd4d0" loc="63:/home/hades/tinyos-new/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f02a37bd4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x7f02a37bd950"/>
        <function-ref name="changed" scoped="" ref="0x7f02a37bdae0"/>
        <function-ref name="amGroup" scoped="" ref="0x7f02a37bdc70"/>
        <function-ref name="setAddress" scoped="" ref="0x7f02a37bde00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f02a37c0b70" loc="61:/home/hades/tinyos-new/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f02a37c0b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f02a37bf020"/>
        <function-ref name="getHeader" scoped="" ref="0x7f02a37bf1b0"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f02a37bf340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f02a37c8210" loc="49:/home/hades/tinyos-new/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f02a37c8210"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f02a48fb1f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f02a37c8590"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f02a37bbd30" loc="67:/home/hades/tinyos-new/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f02a37bbd30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f02a37ba0e0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f02a37ba270"/>
        <function-ref name="led1On" scoped="" ref="0x7f02a37ba400"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f02a37ba590"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f02a37ba720"/>
        <function-ref name="get" scoped="" ref="0x7f02a37ba8b0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f02a37baa40"/>
        <function-ref name="led2Off" scoped="" ref="0x7f02a37b91b0"/>
        <function-ref name="set" scoped="" ref="0x7f02a37babd0"/>
        <function-ref name="led0On" scoped="" ref="0x7f02a37bad60"/>
        <function-ref name="led2On" scoped="" ref="0x7f02a37b9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f02a37c7470" loc="51:/home/hades/tinyos-new/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f02a37c7470"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f02a37c77f0"/>
        <function-ref name="source" scoped="" ref="0x7f02a37c7980"/>
        <function-ref name="address" scoped="" ref="0x7f02a37c7b10"/>
        <function-ref name="destination" scoped="" ref="0x7f02a37c7ca0"/>
        <function-ref name="setSource" scoped="" ref="0x7f02a37c7e30"/>
        <function-ref name="setDestination" scoped="" ref="0x7f02a37c6020"/>
        <function-ref name="type" scoped="" ref="0x7f02a37c61b0"/>
        <function-ref name="setType" scoped="" ref="0x7f02a37c6340"/>
        <function-ref name="isForMe" scoped="" ref="0x7f02a37c64d0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f02a37c6660"/>
        <function-ref name="localGroup" scoped="" ref="0x7f02a37c67f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioResource" ref="0x7f02a37bb0f0" loc="66:/home/hades/tinyos-new/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioResource" scoped="" ref="0x7f02a37bb0f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f02a37bb470"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f02a37bb600"/>
        <function-ref name="request" scoped="" ref="0x7f02a37bb790"/>
        <function-ref name="granted" scoped="" ref="0x7f02a37bb920"/>
        <function-ref name="isOwner" scoped="" ref="0x7f02a37bbab0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f02a37315d0" loc="46:/home/hades/tinyos-new/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f02a37315d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f02a3731950"/>
        <function-ref name="stopDone" scoped="" ref="0x7f02a3731ae0"/>
        <function-ref name="start" scoped="" ref="0x7f02a3731c70"/>
        <function-ref name="stop" scoped="" ref="0x7f02a3731e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f02a372e600" loc="47:/home/hades/tinyos-new/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f02a372e600"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f02a48fb1f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f02a372e980"/>
        <function-ref name="getPayload" scoped="" ref="0x7f02a372eb10"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f02a372eca0"/>
        <function-ref name="cancel" scoped="" ref="0x7f02a372ee30"/>
        <function-ref name="sendDone" scoped="" ref="0x7f02a372d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f02a372de10" loc="49:/home/hades/tinyos-new/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f02a372de10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f02a372c1c0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f02a372c350"/>
        <function-ref name="getPayload" scoped="" ref="0x7f02a372c4e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f02a372c670"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f02a372c800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f02a372d800" loc="48:/home/hades/tinyos-new/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f02a372d800"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f02a48fb1f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f02a372db80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f02a3729b20" loc="53:/home/hades/tinyos-new/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f02a3729b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f02a3728020"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f02a37281b0"/>
        <function-ref name="led1On" scoped="" ref="0x7f02a3728340"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f02a37284d0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f02a3728660"/>
        <function-ref name="get" scoped="" ref="0x7f02a37287f0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f02a3728980"/>
        <function-ref name="led2Off" scoped="" ref="0x7f02a3727020"/>
        <function-ref name="set" scoped="" ref="0x7f02a3728b10"/>
        <function-ref name="led0On" scoped="" ref="0x7f02a3728ca0"/>
        <function-ref name="led2On" scoped="" ref="0x7f02a3728e30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7f02a37291a0" loc="51:/home/hades/tinyos-new/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f02a37291a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f02a3729520"/>
        <function-ref name="noAck" scoped="" ref="0x7f02a37296b0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f02a3729840"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f02a372cab0" loc="50:/home/hades/tinyos-new/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f02a372cab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f02a372ce30"/>
        <function-ref name="source" scoped="" ref="0x7f02a372b020"/>
        <function-ref name="address" scoped="" ref="0x7f02a372b1b0"/>
        <function-ref name="destination" scoped="" ref="0x7f02a372b340"/>
        <function-ref name="setSource" scoped="" ref="0x7f02a372b4d0"/>
        <function-ref name="setDestination" scoped="" ref="0x7f02a372b660"/>
        <function-ref name="type" scoped="" ref="0x7f02a372b7f0"/>
        <function-ref name="setType" scoped="" ref="0x7f02a372b980"/>
        <function-ref name="isForMe" scoped="" ref="0x7f02a372bb10"/>
        <function-ref name="setGroup" scoped="" ref="0x7f02a372bca0"/>
        <function-ref name="localGroup" scoped="" ref="0x7f02a372be30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f02a36ccd90" loc="54:/home/hades/tinyos-new/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f02a36ccd90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f02a36cb180"/>
        <function-ref name="getPayload" scoped="" ref="0x7f02a36cb310"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f02a36cb4a0"/>
        <function-ref name="cancel" scoped="" ref="0x7f02a36cb630"/>
        <function-ref name="sendDone" scoped="" ref="0x7f02a36cb7c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f02a36cba50" loc="55:/home/hades/tinyos-new/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7f02a36cba50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f02a36cbdd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f02a3725b40" loc="47:/home/hades/tinyos-new/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f02a3725b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f02a48fb1f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f02a36cf020"/>
        <function-ref name="getPayload" scoped="" ref="0x7f02a36cf1b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f02a36cf340"/>
        <function-ref name="cancel" scoped="" ref="0x7f02a36cf4d0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f02a36cf660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f02a36cd720" loc="50:/home/hades/tinyos-new/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f02a36cd720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f02a36cdaa0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f02a36cdc30"/>
        <function-ref name="getPayload" scoped="" ref="0x7f02a36cddc0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f02a36cc020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f02a36cc1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f02a36cf9e0" loc="48:/home/hades/tinyos-new/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f02a36cf9e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f02a48fb1f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f02a36cfd80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7f02a36cc400" loc="51:/home/hades/tinyos-new/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f02a36cc400"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f02a36cc780"/>
        <function-ref name="noAck" scoped="" ref="0x7f02a36cc910"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f02a36ccaa0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f02a36ce020" loc="49:/home/hades/tinyos-new/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f02a36ce020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f02a36ce3a0"/>
        <function-ref name="source" scoped="" ref="0x7f02a36ce530"/>
        <function-ref name="address" scoped="" ref="0x7f02a36ce6c0"/>
        <function-ref name="destination" scoped="" ref="0x7f02a36ce850"/>
        <function-ref name="setSource" scoped="" ref="0x7f02a36ce9e0"/>
        <function-ref name="setDestination" scoped="" ref="0x7f02a36ceb70"/>
        <function-ref name="type" scoped="" ref="0x7f02a36ced00"/>
        <function-ref name="setType" scoped="" ref="0x7f02a36cd020"/>
        <function-ref name="isForMe" scoped="" ref="0x7f02a36cd1b0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f02a36cd340"/>
        <function-ref name="localGroup" scoped="" ref="0x7f02a36cd4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f02a36c64e0" loc="50:/home/hades/tinyos-new/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f02a36c64e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f02a36c6860"/>
        <function-ref name="stopDone" scoped="" ref="0x7f02a36c69f0"/>
        <function-ref name="start" scoped="" ref="0x7f02a36c6b80"/>
        <function-ref name="stop" scoped="" ref="0x7f02a36c6d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f02a36c4020" loc="52:/home/hades/tinyos-new/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f02a36c4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7f02a48fadf0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f02a36c43a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f02a36c4530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f02a36c46c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f02a36c4850"/>
        <function-ref name="sendDone" scoped="" ref="0x7f02a36c49e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f02a36c9e60" loc="49:/home/hades/tinyos-new/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f02a36c9e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f02a36c6210"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f02a36c54c0" loc="51:/home/hades/tinyos-new/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f02a36c54c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7f02a48fadf0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f02a36c5840"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f02a36c2940" loc="56:/home/hades/tinyos-new/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f02a36c2940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f02a36c2cc0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f02a36c2e50"/>
        <function-ref name="led1On" scoped="" ref="0x7f02a36bd020"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f02a36bd1b0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f02a36bd340"/>
        <function-ref name="get" scoped="" ref="0x7f02a36bd4d0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f02a36bd660"/>
        <function-ref name="led2Off" scoped="" ref="0x7f02a36bdca0"/>
        <function-ref name="set" scoped="" ref="0x7f02a36bd7f0"/>
        <function-ref name="led0On" scoped="" ref="0x7f02a36bd980"/>
        <function-ref name="led2On" scoped="" ref="0x7f02a36bdb10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialPacketInfo" ref="0x7f02a36c2020" loc="55:/home/hades/tinyos-new/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialPacketInfo" scoped="" ref="0x7f02a36c2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7f02a48fadf0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x7f02a36c23a0"/>
        <function-ref name="offset" scoped="" ref="0x7f02a36c2530"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x7f02a36c26c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f02a36bce10" loc="66:/home/hades/tinyos-new/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f02a36bce10"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f02a36b91c0"/>
        <function-ref name="stopDone" scoped="" ref="0x7f02a36b9350"/>
        <function-ref name="start" scoped="" ref="0x7f02a36b94e0"/>
        <function-ref name="stop" scoped="" ref="0x7f02a36b9670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDoneTask" ref="0x7f02a3654e40" loc="332:/home/hades/tinyos-new/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="stopDoneTask" scoped="" ref="0x7f02a3654e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f02a36531e0"/>
        <function-ref name="runTask" scoped="" ref="0x7f02a3653370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0x7f02a36a8020" loc="74:/home/hades/tinyos-new/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialControl" scoped="" ref="0x7f02a36a8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f02a36a83a0"/>
        <function-ref name="stop" scoped="" ref="0x7f02a36a8530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RunTx" ref="0x7f02a368cd10" loc="191:/home/hades/tinyos-new/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RunTx" scoped="" ref="0x7f02a368cd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f02a368a0e0"/>
        <function-ref name="runTask" scoped="" ref="0x7f02a368a270"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f02a36bc7c0" loc="65:/home/hades/tinyos-new/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f02a36bc7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f02a36bcb40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialFlush" ref="0x7f02a36a5bf0" loc="75:/home/hades/tinyos-new/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialFlush" scoped="" ref="0x7f02a36a5bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFlush"/>
      </instance>
      <interface-functions>
        <function-ref name="flushDone" scoped="" ref="0x7f02a36a7020"/>
        <function-ref name="flush" scoped="" ref="0x7f02a36a71b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startDoneTask" ref="0x7f02a3657400" loc="322:/home/hades/tinyos-new/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="startDoneTask" scoped="" ref="0x7f02a3657400"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f02a3657780"/>
        <function-ref name="runTask" scoped="" ref="0x7f02a3657910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialFrameComm" ref="0x7f02a36a9680" loc="72:/home/hades/tinyos-new/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialFrameComm" scoped="" ref="0x7f02a36a9680"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0x7f02a36a9a00"/>
        <function-ref name="resetSend" scoped="" ref="0x7f02a36a9b90"/>
        <function-ref name="dataReceived" scoped="" ref="0x7f02a36a9d20"/>
        <function-ref name="resetReceive" scoped="" ref="0x7f02a36b7020"/>
        <function-ref name="putData" scoped="" ref="0x7f02a36b71b0"/>
        <function-ref name="putDone" scoped="" ref="0x7f02a36b7340"/>
        <function-ref name="delimiterReceived" scoped="" ref="0x7f02a36b74d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f02a36b7750" loc="73:/home/hades/tinyos-new/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f02a36b7750"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f02a36b7ad0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f02a36b7c60"/>
        <function-ref name="led1On" scoped="" ref="0x7f02a36b7df0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f02a36b3020"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f02a36b31b0"/>
        <function-ref name="get" scoped="" ref="0x7f02a36b3340"/>
        <function-ref name="led1Off" scoped="" ref="0x7f02a36b34d0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f02a36b3b10"/>
        <function-ref name="set" scoped="" ref="0x7f02a36b3660"/>
        <function-ref name="led0On" scoped="" ref="0x7f02a36b37f0"/>
        <function-ref name="led2On" scoped="" ref="0x7f02a36b3980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="defaultSerialFlushTask" ref="0x7f02a36500c0" loc="341:/home/hades/tinyos-new/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="defaultSerialFlushTask" scoped="" ref="0x7f02a36500c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f02a3650440"/>
        <function-ref name="runTask" scoped="" ref="0x7f02a36505d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendBytePacket" ref="0x7f02a36b4e50" loc="67:/home/hades/tinyos-new/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendBytePacket" scoped="" ref="0x7f02a36b4e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0x7f02a36b8210"/>
        <function-ref name="nextByte" scoped="" ref="0x7f02a36b83a0"/>
        <function-ref name="startSend" scoped="" ref="0x7f02a36b8530"/>
        <function-ref name="sendCompleted" scoped="" ref="0x7f02a36b86c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveBytePacket" ref="0x7f02a36af340" loc="68:/home/hades/tinyos-new/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReceiveBytePacket" scoped="" ref="0x7f02a36af340"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0x7f02a36af6c0"/>
        <function-ref name="byteReceived" scoped="" ref="0x7f02a36af850"/>
        <function-ref name="endPacket" scoped="" ref="0x7f02a36af9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveTask" ref="0x7f02a3586c50" loc="275:/home/hades/tinyos-new/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="receiveTask" scoped="" ref="0x7f02a3586c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f02a3585020"/>
        <function-ref name="runTask" scoped="" ref="0x7f02a35851b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f02a358a830" loc="51:/home/hades/tinyos-new/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f02a358a830"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7f02a48fadf0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f02a358abd0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f02a358ad60"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f02a3589020"/>
        <function-ref name="cancel" scoped="" ref="0x7f02a35891b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f02a3589340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalSendDone" ref="0x7f02a3585480" loc="158:/home/hades/tinyos-new/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="signalSendDone" scoped="" ref="0x7f02a3585480"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f02a3585800"/>
        <function-ref name="runTask" scoped="" ref="0x7f02a3585990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f02a358a110" loc="50:/home/hades/tinyos-new/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f02a358a110"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7f02a48fadf0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f02a358a4b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketInfo" ref="0x7f02a3589760" loc="54:/home/hades/tinyos-new/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketInfo" scoped="" ref="0x7f02a3589760"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7f02a48fadf0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x7f02a3589b00"/>
        <function-ref name="offset" scoped="" ref="0x7f02a3589c90"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x7f02a3589e20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f02a3587590" loc="57:/home/hades/tinyos-new/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f02a3587590"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f02a3587910"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f02a3587aa0"/>
        <function-ref name="led1On" scoped="" ref="0x7f02a3587c30"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f02a3587dc0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f02a3586020"/>
        <function-ref name="get" scoped="" ref="0x7f02a35861b0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f02a3586340"/>
        <function-ref name="led2On" scoped="" ref="0x7f02a3586980"/>
        <function-ref name="set" scoped="" ref="0x7f02a3586660"/>
        <function-ref name="led2Off" scoped="" ref="0x7f02a35864d0"/>
        <function-ref name="led0On" scoped="" ref="0x7f02a35867f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendBytePacket" ref="0x7f02a35889d0" loc="56:/home/hades/tinyos-new/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendBytePacket" scoped="" ref="0x7f02a35889d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0x7f02a3588d50"/>
        <function-ref name="nextByte" scoped="" ref="0x7f02a3587020"/>
        <function-ref name="startSend" scoped="" ref="0x7f02a35871b0"/>
        <function-ref name="sendCompleted" scoped="" ref="0x7f02a3587340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReceiveBytePacket" ref="0x7f02a35880e0" loc="55:/home/hades/tinyos-new/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReceiveBytePacket" scoped="" ref="0x7f02a35880e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0x7f02a3588460"/>
        <function-ref name="byteReceived" scoped="" ref="0x7f02a35885f0"/>
        <function-ref name="endPacket" scoped="" ref="0x7f02a3588780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartStream" ref="0x7f02a3570d20" loc="50:/home/hades/tinyos-new/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x7f02a3570d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f02a357d0e0"/>
        <function-ref name="receivedByte" scoped="" ref="0x7f02a357d270"/>
        <function-ref name="receive" scoped="" ref="0x7f02a357d400"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7f02a357d590"/>
        <function-ref name="receiveDone" scoped="" ref="0x7f02a357d720"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7f02a357d8b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f02a357da40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SerialFrameComm" ref="0x7f02a3583b70" loc="48:/home/hades/tinyos-new/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialFrameComm" scoped="" ref="0x7f02a3583b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0x7f02a357e020"/>
        <function-ref name="resetSend" scoped="" ref="0x7f02a357e1b0"/>
        <function-ref name="dataReceived" scoped="" ref="0x7f02a357e340"/>
        <function-ref name="resetReceive" scoped="" ref="0x7f02a357e4d0"/>
        <function-ref name="putData" scoped="" ref="0x7f02a357e660"/>
        <function-ref name="putDone" scoped="" ref="0x7f02a357e7f0"/>
        <function-ref name="delimiterReceived" scoped="" ref="0x7f02a357e980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f02a357dcc0" loc="51:/home/hades/tinyos-new/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f02a357dcc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f02a357a0a0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f02a357a230"/>
        <function-ref name="led1On" scoped="" ref="0x7f02a357a3c0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f02a357a550"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f02a357a6e0"/>
        <function-ref name="get" scoped="" ref="0x7f02a357a870"/>
        <function-ref name="led1Off" scoped="" ref="0x7f02a357aa00"/>
        <function-ref name="led2Off" scoped="" ref="0x7f02a356f1b0"/>
        <function-ref name="set" scoped="" ref="0x7f02a357ab90"/>
        <function-ref name="led0On" scoped="" ref="0x7f02a357ad20"/>
        <function-ref name="led2On" scoped="" ref="0x7f02a356f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x7f02a3553020" loc="6:/home/hades/tinyos-new/tos/platforms/telosa/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x7f02a3553020"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f02a35533a0"/>
        <function-ref name="sendAvail" scoped="" ref="0x7f02a3553530"/>
        <function-ref name="receive" scoped="" ref="0x7f02a35536c0"/>
        <function-ref name="receiveAvail" scoped="" ref="0x7f02a3553850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x7f02a3555890" loc="5:/home/hades/tinyos-new/tos/platforms/telosa/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x7f02a3555890"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f02a3555c10"/>
        <function-ref name="receivedByte" scoped="" ref="0x7f02a3555da0"/>
        <function-ref name="receive" scoped="" ref="0x7f02a3554020"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7f02a35541b0"/>
        <function-ref name="receiveDone" scoped="" ref="0x7f02a3554340"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7f02a35544d0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f02a3554660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f02a3555080" loc="4:/home/hades/tinyos-new/tos/platforms/telosa/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f02a3555080"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f02a3555400"/>
        <function-ref name="stop" scoped="" ref="0x7f02a3555590"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f02a33c6c70" loc="45:/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f02a33c6c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f02a33c4020"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f02a33c41b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x7f02a33c3440" loc="47:/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x7f02a33c3440"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f02a33c37c0"/>
        <function-ref name="sendAvail" scoped="" ref="0x7f02a33c3950"/>
        <function-ref name="receive" scoped="" ref="0x7f02a33c3ae0"/>
        <function-ref name="receiveAvail" scoped="" ref="0x7f02a33c3c70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430UartConfigure" ref="0x7f02a33c2020" loc="49:/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f02a33c2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7f02a33c23a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x7f02a33c4440" loc="46:/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x7f02a33c4440"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f02a33c47c0"/>
        <function-ref name="receivedByte" scoped="" ref="0x7f02a33c4950"/>
        <function-ref name="receive" scoped="" ref="0x7f02a33c4ae0"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7f02a33c4c70"/>
        <function-ref name="receiveDone" scoped="" ref="0x7f02a33c4e00"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7f02a33c3020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f02a33c31b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f02a33c6020" loc="44:/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f02a33c6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f02a33c63a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f02a33c6530"/>
        <function-ref name="request" scoped="" ref="0x7f02a33c66c0"/>
        <function-ref name="granted" scoped="" ref="0x7f02a33c6850"/>
        <function-ref name="isOwner" scoped="" ref="0x7f02a33c69e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x7f02a3543a30" loc="42:/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f02a3543a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f02a51f8160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f02a3543db0"/>
        <function-ref name="configure" scoped="" ref="0x7f02a3541020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x7f02a353f020" loc="44:/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x7f02a353f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f02a51f8160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f02a353f3a0"/>
        <function-ref name="sendAvail" scoped="" ref="0x7f02a353f530"/>
        <function-ref name="receive" scoped="" ref="0x7f02a353f6c0"/>
        <function-ref name="receiveAvail" scoped="" ref="0x7f02a353f850"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430UartConfigure" ref="0x7f02a353c450" loc="47:/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f02a353c450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f02a51f8160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7f02a353c7d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x7f02a3541860" loc="43:/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x7f02a3541860"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f02a51f8160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f02a3541be0"/>
        <function-ref name="receivedByte" scoped="" ref="0x7f02a3541d70"/>
        <function-ref name="receive" scoped="" ref="0x7f02a3540020"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7f02a35401b0"/>
        <function-ref name="receiveDone" scoped="" ref="0x7f02a3540340"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7f02a35404d0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f02a3540660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x7f02a353d1d0" loc="46:/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x7f02a353d1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f02a51f8160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f02a353d550"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f02a353d6e0"/>
        <function-ref name="request" scoped="" ref="0x7f02a353d870"/>
        <function-ref name="granted" scoped="" ref="0x7f02a353da00"/>
        <function-ref name="isOwner" scoped="" ref="0x7f02a353db90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f02a35447a0" loc="41:/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f02a35447a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f02a51f8160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f02a3544b20"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f02a3544cb0"/>
        <function-ref name="request" scoped="" ref="0x7f02a3544e40"/>
        <function-ref name="granted" scoped="" ref="0x7f02a3543020"/>
        <function-ref name="isOwner" scoped="" ref="0x7f02a35431b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x7f02a353b1d0" loc="48:/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x7f02a353b1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f02a51f8160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f02a353b550"/>
        <function-ref name="txDone" scoped="" ref="0x7f02a353b6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x7f02a34d0dc0" loc="44:/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f02a34d0dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f02a51f8160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f02a34cf180"/>
        <function-ref name="configure" scoped="" ref="0x7f02a34cf310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x7f02a34ce890" loc="46:/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x7f02a34ce890"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f02a51f8160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f02a34cec30"/>
        <function-ref name="sendAvail" scoped="" ref="0x7f02a34cedc0"/>
        <function-ref name="receive" scoped="" ref="0x7f02a34cd020"/>
        <function-ref name="receiveAvail" scoped="" ref="0x7f02a34cd1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430UartConfigure" ref="0x7f02a34cc3e0" loc="49:/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f02a34cc3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f02a51f8160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7f02a34cc780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Usart" ref="0x7f02a34cca50" loc="50:/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x7f02a34cca50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f02a34ccdd0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f02a34ca020"/>
        <function-ref name="setUctl" scoped="" ref="0x7f02a34ca1b0"/>
        <function-ref name="enableUart" scoped="" ref="0x7f02a34ca340"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f02a34ca4d0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f02a34ca660"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f02a34ca7f0"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f02a34ca980"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f02a34cab10"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f02a34caca0"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f02a34cae30"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f02a34c9020"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f02a34c91b0"/>
        <function-ref name="getUbr" scoped="" ref="0x7f02a34c9440"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f02a34c95d0"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f02a34c9760"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f02a34c98f0"/>
        <function-ref name="isUart" scoped="" ref="0x7f02a34c9a80"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f02a34c9c10"/>
        <function-ref name="isSpi" scoped="" ref="0x7f02a34c9da0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f02a34c8020"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f02a34c81b0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f02a34c8340"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f02a34c84d0"/>
        <function-ref name="getMode" scoped="" ref="0x7f02a34c8660"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f02a34c89f0"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f02a34c8b80"/>
        <function-ref name="setUbr" scoped="" ref="0x7f02a34c8d10"/>
        <function-ref name="tx" scoped="" ref="0x7f02a34c7020"/>
        <function-ref name="getUctl" scoped="" ref="0x7f02a34c71b0"/>
        <function-ref name="disableUart" scoped="" ref="0x7f02a34c7340"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f02a34c74d0"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f02a34c7660"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f02a34c77f0"/>
        <function-ref name="rx" scoped="" ref="0x7f02a34c7980"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f02a34c7b10"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f02a34c7ca0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f02a34c7e30"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f02a34c6020"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f02a34c61b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x7f02a34cf6d0" loc="45:/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x7f02a34cf6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f02a51f8160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f02a34cfa70"/>
        <function-ref name="receivedByte" scoped="" ref="0x7f02a34cfc00"/>
        <function-ref name="receive" scoped="" ref="0x7f02a34cfd90"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7f02a34ce020"/>
        <function-ref name="receiveDone" scoped="" ref="0x7f02a34ce1b0"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7f02a34ce340"/>
        <function-ref name="sendDone" scoped="" ref="0x7f02a34ce4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f02a34c5020" loc="52:/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f02a34c5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f02a45ab7d0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f02a45abb40"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f02a51f8520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f02a34c5e30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f02a34c4800"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f02a34c4340"/>
        <function-ref name="overflow" scoped="" ref="0x7f02a34c4cc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x7f02a34cd5b0" loc="48:/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x7f02a34cd5b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f02a51f8160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f02a34cd950"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f02a34cdae0"/>
        <function-ref name="request" scoped="" ref="0x7f02a34cdc70"/>
        <function-ref name="granted" scoped="" ref="0x7f02a34cde00"/>
        <function-ref name="isOwner" scoped="" ref="0x7f02a34cc020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f02a34d0020" loc="43:/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f02a34d0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f02a51f8160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f02a34d03c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f02a34d0550"/>
        <function-ref name="request" scoped="" ref="0x7f02a34d06e0"/>
        <function-ref name="granted" scoped="" ref="0x7f02a34d0870"/>
        <function-ref name="isOwner" scoped="" ref="0x7f02a34d0a00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x7f02a34c65b0" loc="51:/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x7f02a34c65b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f02a51f8160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f02a34c6950"/>
        <function-ref name="txDone" scoped="" ref="0x7f02a34c6ae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f02a34c3120" loc="53:/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f02a34c3120"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f02a34c34a0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f02a34c3630"/>
        <function-ref name="led1On" scoped="" ref="0x7f02a34c37c0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f02a34c3950"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f02a34c3ae0"/>
        <function-ref name="get" scoped="" ref="0x7f02a34c3c70"/>
        <function-ref name="led1Off" scoped="" ref="0x7f02a34c3e00"/>
        <function-ref name="led2On" scoped="" ref="0x7f02a34c24d0"/>
        <function-ref name="set" scoped="" ref="0x7f02a34c21b0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f02a34c2020"/>
        <function-ref name="led0On" scoped="" ref="0x7f02a34c2340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x7f02a34b3860" loc="78:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <component-ref qname="HplMsp430Usart1C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f02a34b3860"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f02a34b3be0"/>
        <function-ref name="txDone" scoped="" ref="0x7f02a34b3d70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x7f02a34b7500" loc="76:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <component-ref qname="HplMsp430Usart1C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x7f02a34b7500"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f02a34b7880"/>
        <function-ref name="stop" scoped="" ref="0x7f02a34b7a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x7f02a34b7d30" loc="77:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <component-ref qname="HplMsp430Usart1C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f02a34b7d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f02a34ba0e0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f02a34ba270"/>
        <function-ref name="setUctl" scoped="" ref="0x7f02a34ba400"/>
        <function-ref name="enableUart" scoped="" ref="0x7f02a34ba590"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f02a34ba720"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f02a34ba8b0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f02a34baa40"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f02a34babd0"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f02a34bad60"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f02a34b9020"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f02a34b91b0"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f02a34b9340"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f02a34b94d0"/>
        <function-ref name="getUbr" scoped="" ref="0x7f02a34b9760"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f02a34b98f0"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f02a34b9a80"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f02a34b9c10"/>
        <function-ref name="isUart" scoped="" ref="0x7f02a34b9da0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f02a34b5020"/>
        <function-ref name="isSpi" scoped="" ref="0x7f02a34b51b0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f02a34b5340"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f02a34b54d0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f02a34b5660"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f02a34b57f0"/>
        <function-ref name="getMode" scoped="" ref="0x7f02a34b5980"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f02a34b5d10"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f02a34b4020"/>
        <function-ref name="setUbr" scoped="" ref="0x7f02a34b41b0"/>
        <function-ref name="tx" scoped="" ref="0x7f02a34b4340"/>
        <function-ref name="getUctl" scoped="" ref="0x7f02a34b44d0"/>
        <function-ref name="disableUart" scoped="" ref="0x7f02a34b4660"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f02a34b47f0"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f02a34b4980"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f02a34b4b10"/>
        <function-ref name="rx" scoped="" ref="0x7f02a34b4ca0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f02a34b4e30"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f02a34b3020"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f02a34b31b0"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f02a34b3340"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f02a34b34d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UCLK" ref="0x7f02a34a6990" loc="80:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK" scoped="" ref="0x7f02a34a6990"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f02a34a6d10"/>
        <function-ref name="isInput" scoped="" ref="0x7f02a34a5020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f02a34a51b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f02a34a5340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f02a34a54d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f02a34a5660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f02a34a57f0"/>
        <function-ref name="get" scoped="" ref="0x7f02a34a5980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f02a34a5b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f02a34a5ca0"/>
        <function-ref name="set" scoped="" ref="0x7f02a34a5e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f02a34a4020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f02a34a41b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f02a34a4440"/>
        <function-ref name="clr" scoped="" ref="0x7f02a34a45d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7f02a34aa130" loc="76:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7f02a34aa130"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f02a34aa4b0"/>
        <function-ref name="txDone" scoped="" ref="0x7f02a34aa640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="URXD" ref="0x7f02a34a4990" loc="81:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD" scoped="" ref="0x7f02a34a4990"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f02a34a4d10"/>
        <function-ref name="isInput" scoped="" ref="0x7f02a34a3020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f02a34a31b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f02a34a3340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f02a34a34d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f02a34a3660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f02a34a37f0"/>
        <function-ref name="get" scoped="" ref="0x7f02a34a3980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f02a34a3b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f02a34a3ca0"/>
        <function-ref name="set" scoped="" ref="0x7f02a34a3e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f02a34a2020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f02a34a21b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f02a34a2440"/>
        <function-ref name="clr" scoped="" ref="0x7f02a34a25d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UTXD" ref="0x7f02a34a2990" loc="82:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD" scoped="" ref="0x7f02a34a2990"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f02a34a2d10"/>
        <function-ref name="isInput" scoped="" ref="0x7f02a34a1020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f02a34a11b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f02a34a1340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f02a34a14d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f02a34a1660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f02a34a17f0"/>
        <function-ref name="get" scoped="" ref="0x7f02a34a1980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f02a34a1b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f02a34a1ca0"/>
        <function-ref name="set" scoped="" ref="0x7f02a34a1e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f02a34a0020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f02a34a01b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f02a34a0440"/>
        <function-ref name="clr" scoped="" ref="0x7f02a34a05d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Usart" ref="0x7f02a34af550" loc="75:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x7f02a34af550"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f02a34af8d0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f02a34afa60"/>
        <function-ref name="setUctl" scoped="" ref="0x7f02a34afbf0"/>
        <function-ref name="enableUart" scoped="" ref="0x7f02a34afd80"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f02a34ae020"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f02a34ae1b0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f02a34ae340"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f02a34ae4d0"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f02a34ae660"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f02a34ae7f0"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f02a34ae980"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f02a34aeb10"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f02a34aeca0"/>
        <function-ref name="getUbr" scoped="" ref="0x7f02a34ad020"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f02a34ad1b0"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f02a34ad340"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f02a34ad4d0"/>
        <function-ref name="isUart" scoped="" ref="0x7f02a34ad660"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f02a34ad7f0"/>
        <function-ref name="isSpi" scoped="" ref="0x7f02a34ad980"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f02a34adb10"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f02a34adca0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f02a34ade30"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f02a34ac020"/>
        <function-ref name="getMode" scoped="" ref="0x7f02a34ac1b0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f02a34ac540"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f02a34ac6d0"/>
        <function-ref name="setUbr" scoped="" ref="0x7f02a34ac860"/>
        <function-ref name="tx" scoped="" ref="0x7f02a34ac9f0"/>
        <function-ref name="getUctl" scoped="" ref="0x7f02a34acb80"/>
        <function-ref name="disableUart" scoped="" ref="0x7f02a34acd10"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f02a34ab020"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f02a34ab1b0"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f02a34ab340"/>
        <function-ref name="rx" scoped="" ref="0x7f02a34ab4d0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f02a34ab660"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f02a34ab7f0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f02a34ab980"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f02a34abb10"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f02a34abca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x7f02a34b2bd0" loc="74:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x7f02a34b2bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f02a34af020"/>
        <function-ref name="stop" scoped="" ref="0x7f02a34af1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SOMI" ref="0x7f02a34a8990" loc="79:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI" scoped="" ref="0x7f02a34a8990"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f02a34a8d10"/>
        <function-ref name="isInput" scoped="" ref="0x7f02a34a7020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f02a34a71b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f02a34a7340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f02a34a74d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f02a34a7660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f02a34a77f0"/>
        <function-ref name="get" scoped="" ref="0x7f02a34a7980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f02a34a7b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f02a34a7ca0"/>
        <function-ref name="set" scoped="" ref="0x7f02a34a7e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f02a34a6020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f02a34a61b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f02a34a6440"/>
        <function-ref name="clr" scoped="" ref="0x7f02a34a65d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SIMO" ref="0x7f02a34aaa00" loc="78:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO" scoped="" ref="0x7f02a34aaa00"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f02a34aad80"/>
        <function-ref name="isInput" scoped="" ref="0x7f02a34a9020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f02a34a91b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f02a34a9340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f02a34a94d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f02a34a9660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f02a34a97f0"/>
        <function-ref name="get" scoped="" ref="0x7f02a34a9980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f02a34a9b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f02a34a9ca0"/>
        <function-ref name="set" scoped="" ref="0x7f02a34a9e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f02a34a8020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f02a34a81b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f02a34a8440"/>
        <function-ref name="clr" scoped="" ref="0x7f02a34a85d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f02a3423110" loc="43:/home/hades/tinyos-new/tos/chips/msp430/timer/Counter32khz16C.nc">
      <component-ref qname="Counter32khz16C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f02a3423110"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f02a45ab7d0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f02a45abb40"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f02a51f8520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f02a3422020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f02a34229a0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f02a34224e0"/>
        <function-ref name="overflow" scoped="" ref="0x7f02a3422e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f02a2a8ba90" loc="43:/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f02a2a8ba90"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f02a2a8be10"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f02a2a8a020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f02a2a85be0" loc="48:/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f02a2a85be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f02a2a84020"/>
        <function-ref name="configure" scoped="" ref="0x7f02a2a841b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x7f02a2a85440" loc="46:/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f02a2a85440"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f02a2a857c0"/>
        <function-ref name="txDone" scoped="" ref="0x7f02a2a85950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f02a2a8ce00" loc="42:/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f02a2a8ce00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f02a2a8b1c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f02a2a8b350"/>
        <function-ref name="request" scoped="" ref="0x7f02a2a8b4e0"/>
        <function-ref name="granted" scoped="" ref="0x7f02a2a8b670"/>
        <function-ref name="isOwner" scoped="" ref="0x7f02a2a8b800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x7f02a2a8aa50" loc="45:/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f02a2a8aa50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f02a2a8add0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f02a2a89020"/>
        <function-ref name="setUctl" scoped="" ref="0x7f02a2a891b0"/>
        <function-ref name="enableUart" scoped="" ref="0x7f02a2a89340"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f02a2a894d0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f02a2a89660"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f02a2a897f0"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f02a2a89980"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f02a2a89b10"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f02a2a89ca0"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f02a2a89e30"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f02a2a88020"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f02a2a881b0"/>
        <function-ref name="getUbr" scoped="" ref="0x7f02a2a88440"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f02a2a885d0"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f02a2a88760"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f02a2a888f0"/>
        <function-ref name="isUart" scoped="" ref="0x7f02a2a88a80"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f02a2a88c10"/>
        <function-ref name="isSpi" scoped="" ref="0x7f02a2a88da0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f02a2a87020"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f02a2a871b0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f02a2a87340"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f02a2a874d0"/>
        <function-ref name="getMode" scoped="" ref="0x7f02a2a87660"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f02a2a879f0"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f02a2a87b80"/>
        <function-ref name="setUbr" scoped="" ref="0x7f02a2a87d10"/>
        <function-ref name="tx" scoped="" ref="0x7f02a2a86020"/>
        <function-ref name="getUctl" scoped="" ref="0x7f02a2a861b0"/>
        <function-ref name="disableUart" scoped="" ref="0x7f02a2a86340"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f02a2a864d0"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f02a2a86660"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f02a2a867f0"/>
        <function-ref name="rx" scoped="" ref="0x7f02a2a86980"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f02a2a86b10"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f02a2a86ca0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f02a2a86e30"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f02a2a85020"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f02a2a851b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f02a2a8a2b0" loc="44:/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f02a2a8a2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f02a2a8a630"/>
        <function-ref name="userId" scoped="" ref="0x7f02a2a8a7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f02a3406510" loc="42:/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f02a3406510"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f02a51f8160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f02a3406890"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f02a3406a20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f02a3404af0" loc="45:/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f02a3404af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f02a51f8160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f02a3404e70"/>
        <function-ref name="configure" scoped="" ref="0x7f02a3403030"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7f02a3408510" loc="40:/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7f02a3408510"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f02a51f8160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f02a3408890"/>
        <function-ref name="txDone" scoped="" ref="0x7f02a3408a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f02a3407280" loc="41:/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f02a3407280"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f02a51f8160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f02a3407600"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f02a3407790"/>
        <function-ref name="request" scoped="" ref="0x7f02a3407920"/>
        <function-ref name="granted" scoped="" ref="0x7f02a3407ab0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f02a3407c40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f02a3406d20" loc="43:/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f02a3406d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f02a34040e0"/>
        <function-ref name="userId" scoped="" ref="0x7f02a3404270"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7f02a3400120" loc="43:/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f02a3400120"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f02a34004a0"/>
        <function-ref name="userId" scoped="" ref="0x7f02a3400630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7f02a3402230" loc="39:/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7f02a3402230"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f02a51f8160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f02a34025d0"/>
        <function-ref name="txDone" scoped="" ref="0x7f02a3402760"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawI2CInterrupts" ref="0x7f02a3401ad0" loc="42:/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawI2CInterrupts" scoped="" ref="0x7f02a3401ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f02a3401e50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x7f02a3402b60" loc="40:/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x7f02a3402b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f02a51f8160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f02a3401020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawInterrupts" ref="0x7f02a34012f0" loc="41:/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawInterrupts" scoped="" ref="0x7f02a34012f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f02a3401670"/>
        <function-ref name="txDone" scoped="" ref="0x7f02a3401800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f02a33fcbd0" loc="92:/home/hades/tinyos-new/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f02a33fcbd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f02a51f8160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f02a33fb020"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f02a33fb1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f02a33fa930" loc="96:/home/hades/tinyos-new/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f02a33fa930"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f02a51f8160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f02a33facd0"/>
        <function-ref name="configure" scoped="" ref="0x7f02a33fae60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7f02a33fb400" loc="93:/home/hades/tinyos-new/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f02a33fb400"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f02a33fb780"/>
        <function-ref name="requested" scoped="" ref="0x7f02a33fb910"/>
        <function-ref name="granted" scoped="" ref="0x7f02a33fbaa0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f02a33fbc30"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f02a33fbdc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f02a33fee30" loc="91:/home/hades/tinyos-new/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f02a33fee30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f02a51f8160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f02a33fc210"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f02a33fc3a0"/>
        <function-ref name="request" scoped="" ref="0x7f02a33fc530"/>
        <function-ref name="granted" scoped="" ref="0x7f02a33fc6c0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f02a33fc850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f02a33fa060" loc="94:/home/hades/tinyos-new/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f02a33fa060"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f02a33fa3e0"/>
        <function-ref name="userId" scoped="" ref="0x7f02a33fa570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f02a2a18ca0" loc="44:/home/hades/tinyos-new/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f02a2a18ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f02a2a170a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7f02a2a17330" loc="45:/home/hades/tinyos-new/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FcfsQueue" scoped="" ref="0x7f02a2a17330"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f02a2a176b0"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f02a2a17840"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f02a2a179d0"/>
        <function-ref name="dequeue" scoped="" ref="0x7f02a2a17b60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f02a2a143a0" loc="55:/home/hades/tinyos-new/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f02a2a143a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f02a51f8160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f02a2a14740"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f02a2a148d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f02a2a11210" loc="60:/home/hades/tinyos-new/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f02a2a11210"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f02a51f8160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f02a2a115b0"/>
        <function-ref name="configure" scoped="" ref="0x7f02a2a11740"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7f02a2a119d0" loc="61:/home/hades/tinyos-new/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x7f02a2a119d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f02a2a11d50"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f02a2a10020"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f02a2a101b0"/>
        <function-ref name="dequeue" scoped="" ref="0x7f02a2a10340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7f02a2a14b20" loc="56:/home/hades/tinyos-new/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f02a2a14b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f02a2a12020"/>
        <function-ref name="requested" scoped="" ref="0x7f02a2a121b0"/>
        <function-ref name="granted" scoped="" ref="0x7f02a2a12340"/>
        <function-ref name="isOwner" scoped="" ref="0x7f02a2a124d0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f02a2a12660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f02a2a10590" loc="62:/home/hades/tinyos-new/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f02a2a10590"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f02a2a10910"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f02a2a10aa0"/>
        <function-ref name="led1On" scoped="" ref="0x7f02a2a10c30"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f02a2a10dc0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f02a2a0f020"/>
        <function-ref name="get" scoped="" ref="0x7f02a2a0f1b0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f02a2a0f340"/>
        <function-ref name="led0On" scoped="" ref="0x7f02a2a0f980"/>
        <function-ref name="set" scoped="" ref="0x7f02a2a0f660"/>
        <function-ref name="led2On" scoped="" ref="0x7f02a2a0f4d0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f02a2a0f7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f02a2a15540" loc="54:/home/hades/tinyos-new/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f02a2a15540"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f02a51f8160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f02a2a158e0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f02a2a15a70"/>
        <function-ref name="request" scoped="" ref="0x7f02a2a15c00"/>
        <function-ref name="granted" scoped="" ref="0x7f02a2a15d90"/>
        <function-ref name="isOwner" scoped="" ref="0x7f02a2a14020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f02a2a128b0" loc="57:/home/hades/tinyos-new/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f02a2a128b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f02a2a12c30"/>
        <function-ref name="userId" scoped="" ref="0x7f02a2a12dc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7f02a2a0fc50" loc="75:/home/hades/tinyos-new/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantedTask" scoped="" ref="0x7f02a2a0fc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f02a2a0e020"/>
        <function-ref name="runTask" scoped="" ref="0x7f02a2a0e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7f02a33e0400" loc="72:/home/hades/tinyos-new/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f02a33e0400"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7f02a33e0780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x7f02a33e09d0" loc="73:/home/hades/tinyos-new/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f02a33e09d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f02a33e0d50"/>
        <function-ref name="requested" scoped="" ref="0x7f02a33de020"/>
        <function-ref name="granted" scoped="" ref="0x7f02a33de1b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f02a33de340"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f02a33de4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x7f02a33f5b20" loc="70:/home/hades/tinyos-new/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x7f02a33f5b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f02a33e0020"/>
        <function-ref name="stop" scoped="" ref="0x7f02a33e01b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7f02a33de720" loc="74:/home/hades/tinyos-new/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f02a33de720"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f02a33deaa0"/>
        <function-ref name="userId" scoped="" ref="0x7f02a33dec30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7f02a29dfb00" loc="62:/home/hades/tinyos-new/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f02a29dfb00"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7f02a29dfe80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x7f02a29dd0f0" loc="63:/home/hades/tinyos-new/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f02a29dd0f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f02a29dd470"/>
        <function-ref name="requested" scoped="" ref="0x7f02a29dd600"/>
        <function-ref name="granted" scoped="" ref="0x7f02a29dd790"/>
        <function-ref name="isOwner" scoped="" ref="0x7f02a29dd920"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f02a29ddab0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x7f02a29df3a0" loc="60:/home/hades/tinyos-new/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x7f02a29df3a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f02a29df720"/>
        <function-ref name="stop" scoped="" ref="0x7f02a29df8b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7f02a29ddd00" loc="64:/home/hades/tinyos-new/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f02a29ddd00"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f02a29dc0a0"/>
        <function-ref name="userId" scoped="" ref="0x7f02a29dc230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430UartConfigure" ref="0x7f02a33be920" loc="3:/home/hades/tinyos-new/tos/platforms/telosa/TelosSerialP.nc">
      <component-ref qname="TelosSerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f02a33be920"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7f02a33beca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7f02a33bd020" loc="4:/home/hades/tinyos-new/tos/platforms/telosa/TelosSerialP.nc">
      <component-ref qname="TelosSerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f02a33bd020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f02a33bd3a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f02a33bd530"/>
        <function-ref name="request" scoped="" ref="0x7f02a33bd6c0"/>
        <function-ref name="granted" scoped="" ref="0x7f02a33bd850"/>
        <function-ref name="isOwner" scoped="" ref="0x7f02a33bd9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f02a33be0c0" loc="2:/home/hades/tinyos-new/tos/platforms/telosa/TelosSerialP.nc">
      <component-ref qname="TelosSerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f02a33be0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f02a33be440"/>
        <function-ref name="stop" scoped="" ref="0x7f02a33be5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Info" ref="0x7f02a33ac8d0" loc="47:/home/hades/tinyos-new/tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
      <component-ref qname="SerialPacketInfoActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Info" scoped="" ref="0x7f02a33ac8d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x7f02a33acc50"/>
        <function-ref name="offset" scoped="" ref="0x7f02a33acde0"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x7f02a33a9020"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="Init" loc="51:/home/hades/tinyos-new/tos/interfaces/Init.nc">
      <documentation loc="34:/home/hades/tinyos-new/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7f02a4ad1270" loc="62:/home/hades/tinyos-new/tos/interfaces/Init.nc">
        <documentation loc="53:/home/hades/tinyos-new/tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f02a4f62cb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="50:/home/hades/tinyos-new/tos/interfaces/Boot.nc">
      <documentation loc="42:/home/hades/tinyos-new/tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x7f02a4ad8e70" loc="60:/home/hades/tinyos-new/tos/interfaces/Boot.nc">
        <documentation loc="51:/home/hades/tinyos-new/tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430ClockInit" loc="38:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430ClockInit.nc">
      <documentation loc="33:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="defaultInitTimerB" ref="0x7f02a4aa4420" loc="48:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initTimerB" ref="0x7f02a4aa6700" loc="43:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultInitTimerA" ref="0x7f02a4aa5ce0" loc="47:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initTimerA" ref="0x7f02a4aa6020" loc="42:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultSetupDcoCalibrate" ref="0x7f02a4aa6e70" loc="45:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="setupDcoCalibrate" ref="0x7f02a4aa80e0" loc="40:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initClocks" ref="0x7f02a4aa87c0" loc="41:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultInitClocks" ref="0x7f02a4aa55c0" loc="46:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="50:/home/hades/tinyos-new/tos/interfaces/McuPowerOverride.nc">
      <documentation loc="35:/home/hades/tinyos-new/tos/interfaces/McuPowerOverride.nc">
        <short>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state.</short>
        <long>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state. This is sometimes necessary,&#10; e.g., if a very low power state has a long wakeup latency that will&#10; violate application timing requirements. TEP 112 describes how&#10; TinyOS incorporates this information when the Scheduler tells&#10; the MCU to enter a low power state.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microconroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x7f02a4be9020" loc="62:/home/hades/tinyos-new/tos/interfaces/McuPowerOverride.nc">
        <documentation loc="52:/home/hades/tinyos-new/tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x7f02a4eaedd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430TimerControl" loc="40:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerControl.nc">
      <documentation loc="33:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="setControlAsCapture" ref="0x7f02a4a525a0" loc="55:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <documentation loc="49:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerControl.nc">
          <short> &#10; Sets the timer in capture mode.</short>
          <long> &#10; Sets the timer in capture mode.&#10; @param cm configures the capture to occur on none, rising, falling or rising_and_falling edges&#10; Msp430Timer.h has convenience definitions:&#10; MSP430TIMER_CM_NONE, MSP430TIMER_CM_RISING, MSP430TIMER_CM_FALLING, MSP430TIMER_CM_BOTH&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f02a51f8160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cm" ref="0x7f02a4a52320" loc="55:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f02a51f8160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getControl" ref="0x7f02a4a609d0" loc="42:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f02a4a9dec0"/>
            <typename><typedef-ref name="msp430_compare_control_t" ref="0x7f02a4a9cd40"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableEvents" ref="0x7f02a4a52e10" loc="57:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="areEventsEnabled" ref="0x7f02a4a51d20" loc="59:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f02a4f6b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlAsCompare" ref="0x7f02a4a54b90" loc="47:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableEvents" ref="0x7f02a4a51590" loc="58:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0x7f02a4a551f0" loc="43:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f02a4f6b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearPendingInterrupt" ref="0x7f02a4a55980" loc="44:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControl" ref="0x7f02a4a54420" loc="46:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f02a4a9dec0"/>
              <typename><typedef-ref name="msp430_compare_control_t" ref="0x7f02a4a9cd40"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f02a4a541a0" loc="46:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerControl.nc">
            <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f02a4a9dec0"/>
              <typename><typedef-ref name="msp430_compare_control_t" ref="0x7f02a4a9cd40"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Capture" loc="39:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430Capture.nc">
      <documentation loc="33:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430Capture.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="getEvent" ref="0x7f02a4a45560" loc="44:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="41:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Reads the value of the last capture event in TxCCRx&#10;</short>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f02a51f8520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setSynchronous" ref="0x7f02a4a42ca0" loc="84:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="75:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Set whether the capture should occur synchronously or asynchronously.</short>
          <long>&#10; Set whether the capture should occur synchronously or asynchronously.&#10; TinyOS default is synchronous captures.&#10; WARNING: if the capture signal is asynchronous to the timer clock,&#10;          it could case a race condition (see Timer documentation&#10;          in MSP430F1xx user guide)&#10; @param synchronous TRUE to synchronize the timer capture with the&#10;        next timer clock instead of occurring asynchronously.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f02a4f6b090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="synchronous" ref="0x7f02a4a42a20" loc="84:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f02a4f6b090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x7f02a4a419d0" loc="91:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="86:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Signalled when an event is captured.</short>
          <long>&#10; Signalled when an event is captured.&#10;&#10; @param time The time of the capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f02a51f8520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7f02a4a41750" loc="91:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f02a51f8520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7f02a4a42270" loc="73:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="70:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Clear the capture overflow flag for when multiple captures occur&#10;</short>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7f02a4a43940" loc="68:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="58:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Determine if a capture overflow is pending.</short>
          <long>&#10; Determine if a capture overflow is pending.&#10;&#10; TI calls this overflow but it is actually an overrun.&#10; If COV is set it says that another capture has occurred&#10; prior to reading a previous capture.  The previous value&#10; of a capture has been lost.&#10;&#10; @return TRUE if the capture register has overflowed&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f02a4f6b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setEdge" ref="0x7f02a4a43020" loc="56:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="46:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Set the edge that the capture should occur&#10;&#10; </short>
          <long>&#10; Set the edge that the capture should occur&#10;&#10; @param cm Capture Mode for edge capture.&#10; enums exist for:&#10;   MSP430TIMER_CM_NONE is no capture.&#10;   MSP430TIMER_CM_RISING is rising edge capture.&#10;   MSP430TIMER_CM_FALLING is a falling edge capture.&#10;   MSP430TIMER_CM_BOTH captures on both rising and falling edges.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f02a51f8160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cm" ref="0x7f02a4a45c90" loc="56:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f02a51f8160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Compare" loc="38:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430Compare.nc">
      <documentation loc="33:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430Compare.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getEvent" ref="0x7f02a4a4e890" loc="40:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f02a51f8520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setEvent" ref="0x7f02a4a4a2a0" loc="41:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f02a51f8520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7f02a4a4a020" loc="41:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f02a51f8520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEventFromPrev" ref="0x7f02a4a4ac80" loc="42:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f02a51f8520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="delta" ref="0x7f02a4a4aa00" loc="42:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f02a51f8520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEventFromNow" ref="0x7f02a4a496a0" loc="43:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f02a51f8520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="delta" ref="0x7f02a4a49420" loc="43:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f02a51f8520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f02a4a49d90" loc="45:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Timer" loc="43:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430Timer.nc">
      <documentation loc="33:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430Timer.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7f02a4a5b120" loc="52:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockSource" ref="0x7f02a4a59a10" loc="55:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f02a51f8520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="clockSource" ref="0x7f02a4a59790" loc="55:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f02a51f8520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableEvents" ref="0x7f02a4a5b850" loc="53:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f02a4a5f350" loc="45:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f02a51f8520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableEvents" ref="0x7f02a4a59020" loc="54:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7f02a4a5d270" loc="47:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x7f02a4a5c9e0" loc="51:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7f02a4a5fae0" loc="46:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f02a4f6b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x7f02a4a5d980" loc="48:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMode" ref="0x7f02a4a5c2e0" loc="50:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7f02a4a5c060" loc="50:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInputDivider" ref="0x7f02a4a58450" loc="56:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f02a51f8520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="inputDivider" ref="0x7f02a4a581d0" loc="56:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f02a51f8520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430TimerEvent" loc="37:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerEvent.nc">
      <documentation loc="33:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerEvent.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7f02a4a1b1f0" loc="39:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerEvent.nc">
        <interfacedef-ref qname="Msp430TimerEvent"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="77:/home/hades/tinyos-new/tos/interfaces/McuSleep.nc">
      <documentation loc="65:/home/hades/tinyos-new/tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @date   Oct 25, 2016&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="irq_preamble" ref="0x7f02a4b0ca80" loc="85:/home/hades/tinyos-new/tos/interfaces/McuSleep.nc">
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="irq_postamble" ref="0x7f02a4b0b1f0" loc="86:/home/hades/tinyos-new/tos/interfaces/McuSleep.nc">
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sleep" ref="0x7f02a4b0c2b0" loc="79:/home/hades/tinyos-new/tos/interfaces/McuSleep.nc">
        <documentation loc="78:/home/hades/tinyos-new/tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="46:/home/hades/tinyos-new/tos/interfaces/McuPowerState.nc">
      <documentation loc="35:/home/hades/tinyos-new/tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x7f02a4d25830" loc="52:/home/hades/tinyos-new/tos/interfaces/McuPowerState.nc">
        <documentation loc="47:/home/hades/tinyos-new/tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:/home/hades/tinyos-new/tos/interfaces/Scheduler.nc">
      <documentation loc="42:/home/hades/tinyos-new/tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7f02a4f67020" loc="57:/home/hades/tinyos-new/tos/interfaces/Scheduler.nc">
        <documentation loc="54:/home/hades/tinyos-new/tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x7f02a4f66020" loc="72:/home/hades/tinyos-new/tos/interfaces/Scheduler.nc">
        <documentation loc="67:/home/hades/tinyos-new/tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x7f02a4f67790" loc="65:/home/hades/tinyos-new/tos/interfaces/Scheduler.nc">
        <documentation loc="59:/home/hades/tinyos-new/tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f02a4f6b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:/home/hades/tinyos-new/tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x7f02a4f5b350" loc="67:/home/hades/tinyos-new/tos/interfaces/TaskBasic.nc">
        <documentation loc="57:/home/hades/tinyos-new/tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f02a4f62cb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x7f02a4f5bba0" loc="75:/home/hades/tinyos-new/tos/interfaces/TaskBasic.nc">
        <documentation loc="69:/home/hades/tinyos-new/tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SplitControl" loc="87:/home/hades/tinyos-new/tos/interfaces/SplitControl.nc">
      <documentation loc="72:/home/hades/tinyos-new/tos/interfaces/SplitControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  For each &#60;code>start()&#60;/code> or&#10; &#60;code>stop()&#60;/code> command, if the command returns SUCCESS, then a&#10; corresponding  &#60;code>startDone()&#60;/code> or &#60;code>stopDone()&#60;/code> event&#10; must be signalled.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function event="" provided="0" name="startDone" ref="0x7f02a48eb5c0" loc="113:/home/hades/tinyos-new/tos/interfaces/SplitControl.nc">
        <documentation loc="106:/home/hades/tinyos-new/tos/interfaces/SplitControl.nc">
          <short> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.</short>
          <long> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned on, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f02a4f62cb0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f02a48eb340" loc="113:/home/hades/tinyos-new/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f02a4f62cb0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stopDone" ref="0x7f02a48eaab0" loc="138:/home/hades/tinyos-new/tos/interfaces/SplitControl.nc">
        <documentation loc="132:/home/hades/tinyos-new/tos/interfaces/SplitControl.nc">
          <short>&#10; Notify caller that the component has been stopped.</short>
          <long>&#10; Notify caller that the component has been stopped.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned off, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f02a4f62cb0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f02a48ea830" loc="138:/home/hades/tinyos-new/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f02a4f62cb0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7f02a48ec920" loc="104:/home/hades/tinyos-new/tos/interfaces/SplitControl.nc">
        <documentation loc="89:/home/hades/tinyos-new/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         starting or the device was off and the device is now ready to turn &#10;         on.  After receiving this return value, you should expect a &#10;         &#60;code>startDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering down&#10;               i.e. a &#60;code>stop()&#60;/code> command has been called,&#10;               and a &#60;code>stopDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already on &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f02a4f62cb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f02a48ebe10" loc="130:/home/hades/tinyos-new/tos/interfaces/SplitControl.nc">
        <documentation loc="115:/home/hades/tinyos-new/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         stopping or the device was on and the device is now ready to turn &#10;         off.  After receiving this return value, you should expect a &#10;         &#60;code>stopDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering up&#10;               i.e. a &#60;code>start()&#60;/code> command has been called,&#10;               and a &#60;code>startDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already off &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f02a4f62cb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Receive" loc="56:/home/hades/tinyos-new/tos/interfaces/Receive.nc">
      <documentation loc="34:/home/hades/tinyos-new/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x7f02a489b060" loc="78:/home/hades/tinyos-new/tos/interfaces/Receive.nc">
        <documentation loc="58:/home/hades/tinyos-new/tos/interfaces/Receive.nc">
          <short>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception.</short>
          <long>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception. The return value&#10; can be the same as &#60;tt>msg&#60;/tt>, as long as the handling&#10; component copies out the data it needs.&#10;&#10; &#60;b>Note&#60;/b> that misuse of this interface is one of the most&#10; common bugs in TinyOS code. For example, if a component both calls a&#10; send on the passed message and returns it, then it is possible&#10; the buffer will be reused before the send occurs, overwriting&#10; the component's data. This would cause the mote to possibly&#10; instead send a packet it most recently received.&#10;&#10; @param  'message_t* ONE msg'        the receied packet&#10; @param  'void* COUNT(len) payload'  a pointer to the packet's payload&#10; @param  len      the length of the data region pointed to by payload&#10; @return 'message_t* ONE'              a packet buffer for the stack to use for the next&#10;                  received packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f02a48a9880"/>
              <typename><typedef-ref name="message_t" ref="0x7f02a48a6020"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f02a48a9880"/>
                <typename><typedef-ref name="message_t" ref="0x7f02a48a6020"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f02a51f8160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f02a489c6e0" loc="78:/home/hades/tinyos-new/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f02a48a9880"/>
                <typename><typedef-ref name="message_t" ref="0x7f02a48a6020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x7f02a489ca30" loc="78:/home/hades/tinyos-new/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f02a489cd60" loc="78:/home/hades/tinyos-new/tos/interfaces/Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f02a51f8160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMPacket" loc="61:/home/hades/tinyos-new/tos/interfaces/AMPacket.nc">
      <documentation loc="42:/home/hades/tinyos-new/tos/interfaces/AMPacket.nc">
        <short>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets.</short>
        <long>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets. Active Messages are a single-hop&#10; communication protocol. Therefore, fields such as source and destination&#10; represent the single-hop source and destination. Multihop sources and&#10; destinations are defined by the corresponding multihop protocol (if any).&#10; Also see the Packet interface.&#10;&#10; @author Philip Levis &#10; @date   January 18 2005&#10; @see    Packet&#10; @see    AMSend&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="group" ref="0x7f02a48822a0" loc="177:/home/hades/tinyos-new/tos/interfaces/AMPacket.nc">
        <documentation loc="164:/home/hades/tinyos-new/tos/interfaces/AMPacket.nc">
          <short>&#10; Get the AM group of the AM packet.</short>
          <long>&#10; Get the AM group of the AM packet. The AM group is a logical&#10; identifier that distinguishes sets of nodes which may share&#10; a physical communication medium but wish to not communicate.&#10; The AM group logically separates the sets of nodes. When&#10; a node sends a packet, it fills in its AM group, and typically&#10; nodes only receive packets whose AM group field matches their&#10; own.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @return the AM group of this packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7f02a48fb5d0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f02a48a9880"/>
                <typename><typedef-ref name="message_t" ref="0x7f02a48a6020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f02a4882020" loc="177:/home/hades/tinyos-new/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f02a48a9880"/>
                <typename><typedef-ref name="message_t" ref="0x7f02a48a6020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x7f02a488bd60" loc="88:/home/hades/tinyos-new/tos/interfaces/AMPacket.nc">
        <documentation loc="80:/home/hades/tinyos-new/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the source of the AM packet.</short>
          <long>&#10; Return the AM address of the source of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'  the packet&#10; @return      the source address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7f02a48fb9b0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f02a48a9880"/>
                <typename><typedef-ref name="message_t" ref="0x7f02a48a6020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f02a488bae0" loc="88:/home/hades/tinyos-new/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f02a48a9880"/>
                <typename><typedef-ref name="message_t" ref="0x7f02a48a6020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x7f02a488e1f0" loc="68:/home/hades/tinyos-new/tos/interfaces/AMPacket.nc">
        <documentation loc="63:/home/hades/tinyos-new/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the node's active message address associated with this AM stack.</short>
          <long>&#10; Return the node's active message address associated with this AM stack.&#10; @return The address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7f02a48fb9b0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x7f02a488ecb0" loc="78:/home/hades/tinyos-new/tos/interfaces/AMPacket.nc">
        <documentation loc="70:/home/hades/tinyos-new/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the destination of the AM packet.</short>
          <long>&#10; Return the AM address of the destination of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'    the packet&#10; @return        the destination address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7f02a48fb9b0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f02a48a9880"/>
                <typename><typedef-ref name="message_t" ref="0x7f02a48a6020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f02a488ea30" loc="78:/home/hades/tinyos-new/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f02a48a9880"/>
                <typename><typedef-ref name="message_t" ref="0x7f02a48a6020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x7f02a48897a0" loc="121:/home/hades/tinyos-new/tos/interfaces/AMPacket.nc">
        <documentation loc="105:/home/hades/tinyos-new/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the source field of the AM packet.</short>
          <long>&#10; Set the AM address of the source field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the source address&#10; and then recover it when actually sending. As an AM layer generally&#10; sets the source address to be the local address, this interface&#10; is not commonly used except when a system is bypassing the AM&#10; layer (e.g., a protocol bridge). If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f02a48a9880"/>
                <typename><typedef-ref name="message_t" ref="0x7f02a48a6020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f02a48fb9b0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f02a48891c0" loc="121:/home/hades/tinyos-new/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f02a48a9880"/>
                <typename><typedef-ref name="message_t" ref="0x7f02a48a6020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7f02a4889510" loc="121:/home/hades/tinyos-new/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f02a48fb9b0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x7f02a488a2b0" loc="103:/home/hades/tinyos-new/tos/interfaces/AMPacket.nc">
        <documentation loc="90:/home/hades/tinyos-new/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the destination field of the AM packet.</short>
          <long>&#10; Set the AM address of the destination field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the destination address&#10; and then recover it when actually sending. If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f02a48a9880"/>
                <typename><typedef-ref name="message_t" ref="0x7f02a48a6020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f02a48fb9b0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f02a488cc40" loc="103:/home/hades/tinyos-new/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f02a48a9880"/>
                <typename><typedef-ref name="message_t" ref="0x7f02a48a6020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7f02a488a020" loc="103:/home/hades/tinyos-new/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f02a48fb9b0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="type" ref="0x7f02a4885bf0" loc="147:/home/hades/tinyos-new/tos/interfaces/AMPacket.nc">
        <documentation loc="138:/home/hades/tinyos-new/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM type of the AM packet.</short>
          <long>&#10; Return the AM type of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f02a48fb1f0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f02a48a9880"/>
                <typename><typedef-ref name="message_t" ref="0x7f02a48a6020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f02a4885970" loc="147:/home/hades/tinyos-new/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f02a48a9880"/>
                <typename><typedef-ref name="message_t" ref="0x7f02a48a6020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x7f02a4884020" loc="162:/home/hades/tinyos-new/tos/interfaces/AMPacket.nc">
        <documentation loc="149:/home/hades/tinyos-new/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM type of the AM packet.</short>
          <long>&#10; Set the AM type of the AM packet.  As the AM type is set as part&#10; of sending with the AMSend interface, this command is not used&#10; for sending packets. Instead, it is used when a component, such&#10; as a queue, needs to buffer a request to send. The component can&#10; save the AM type in the packet then recover it when actually&#10; sending. If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of&#10; this command are undefined.&#10; &#10; @param  'message_t* ONE amsg'    the packet&#10; @param  t       the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f02a48a9880"/>
                <typename><typedef-ref name="message_t" ref="0x7f02a48a6020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7f02a48fb1f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f02a48839a0" loc="162:/home/hades/tinyos-new/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f02a48a9880"/>
                <typename><typedef-ref name="message_t" ref="0x7f02a48a6020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="t" ref="0x7f02a4883cc0" loc="162:/home/hades/tinyos-new/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7f02a48fb1f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x7f02a48869f0" loc="136:/home/hades/tinyos-new/tos/interfaces/AMPacket.nc">
        <documentation loc="123:/home/hades/tinyos-new/tos/interfaces/AMPacket.nc">
          <short>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote.</short>
          <long>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote. This is&#10; partially a shortcut for testing whether the return value of&#10; &#60;tt>destination&#60;/tt> and &#60;tt>address&#60;/tt> are the same. It&#10; may, however, include additional logic. For example, there&#10; may be an AM broadcast address: &#60;tt>destination&#60;/tt> will return&#10; the broadcast address, but &#60;tt>address&#60;/tt> will still be&#10; the mote's local address. If &#60;tt>amsg&#60;/tt> is not an AM packet,&#10; the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        whether the packet is addressed to this AM stack&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f02a4f6b090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f02a48a9880"/>
                <typename><typedef-ref name="message_t" ref="0x7f02a48a6020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f02a4886770" loc="136:/home/hades/tinyos-new/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f02a48a9880"/>
                <typename><typedef-ref name="message_t" ref="0x7f02a48a6020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x7f02a4880730" loc="187:/home/hades/tinyos-new/tos/interfaces/AMPacket.nc">
        <documentation loc="179:/home/hades/tinyos-new/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM group field of a packet.</short>
          <long>&#10; Set the AM group field of a packet. Note that most data link&#10; stacks will set this field automatically on a send request, which&#10; may overwrite changes made with this command.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @param group the packet's new AM group value&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f02a48a9880"/>
                <typename><typedef-ref name="message_t" ref="0x7f02a48a6020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7f02a48fb5d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f02a4880150" loc="187:/home/hades/tinyos-new/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f02a48a9880"/>
                <typename><typedef-ref name="message_t" ref="0x7f02a48a6020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x7f02a48804a0" loc="187:/home/hades/tinyos-new/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7f02a48fb5d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localGroup" ref="0x7f02a487e580" loc="195:/home/hades/tinyos-new/tos/interfaces/AMPacket.nc">
        <documentation loc="189:/home/hades/tinyos-new/tos/interfaces/AMPacket.nc">
          <short>&#10; Provides the current AM group of this communication interface.</short>
          <long>&#10; Provides the current AM group of this communication interface.&#10;&#10; @return The AM group.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7f02a48fb5d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Packet" loc="55:/home/hades/tinyos-new/tos/interfaces/Packet.nc">
      <documentation loc="42:/home/hades/tinyos-new/tos/interfaces/Packet.nc">
        <short> &#10; The basic message data type accessors.</short>
        <long> &#10; The basic message data type accessors. Protocols may use&#10; additional packet interfaces for their protocol specific&#10; data/metadata.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7f02a4897110" loc="65:/home/hades/tinyos-new/tos/interfaces/Packet.nc">
        <documentation loc="58:/home/hades/tinyos-new/tos/interfaces/Packet.nc">
          <short>&#10; Clear out this packet.</short>
          <long>&#10; Clear out this packet.  Note that this is a deep operation and&#10; total operation: calling clear() on any layer will completely&#10; clear the packet for reuse.&#10; @param  'message_t* ONE msg'    the packet to clear&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f02a48a9880"/>
                <typename><typedef-ref name="message_t" ref="0x7f02a48a6020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f02a48e8e20" loc="65:/home/hades/tinyos-new/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f02a48a9880"/>
                <typename><typedef-ref name="message_t" ref="0x7f02a48a6020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x7f02a48962a0" loc="78:/home/hades/tinyos-new/tos/interfaces/Packet.nc">
        <documentation loc="67:/home/hades/tinyos-new/tos/interfaces/Packet.nc">
          <short>&#10; Return the length of the payload of msg.</short>
          <long>&#10; Return the length of the payload of msg. This value may be less&#10; than what maxPayloadLength() returns, if the packet is smaller than&#10; the MTU. If a communication component does not support variably&#10; sized data regions, then payloadLength() will always return&#10; the same value as maxPayloadLength(). &#10;&#10; @param  'message_t* ONE msg'    the packet to examine&#10; @return        the length of its current payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f02a51f8160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f02a48a9880"/>
                <typename><typedef-ref name="message_t" ref="0x7f02a48a6020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f02a4896020" loc="78:/home/hades/tinyos-new/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f02a48a9880"/>
                <typename><typedef-ref name="message_t" ref="0x7f02a48a6020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7f02a4891620" loc="126:/home/hades/tinyos-new/tos/interfaces/Packet.nc">
        <documentation loc="109:/home/hades/tinyos-new/tos/interfaces/Packet.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; If the caller intends to write to the payload region then&#10; the &#60;tt>len&#60;/tt> parameter must reflect the maximum required&#10; length. If the caller (only) wants to read from the payload&#10; region, then &#60;tt>len&#60;/tt> may be set to the value of&#10; payloadLength(). If the payload region is smaller than &#10; &#60;tt>len&#60;/tt> this command returns NULL. The offset where&#10; the payload region starts within a packet is fixed, i.e. for&#10; a given &#60;tt>msg&#60;/tt> this command will always return the same&#10; pointer or NULL.&#10;&#10; @param 'message_t* ONE msg'   the packet &#10; @param len   the length of payload required&#10; @return 'void* COUNT_NOK(len)'     a pointer to the packet's data payload for this layer&#10;              or NULL if &#60;tt>len&#60;/tt> is too big&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f02a48a9880"/>
                <typename><typedef-ref name="message_t" ref="0x7f02a48a6020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f02a51f8160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f02a4891020" loc="126:/home/hades/tinyos-new/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f02a48a9880"/>
                <typename><typedef-ref name="message_t" ref="0x7f02a48a6020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f02a4891350" loc="126:/home/hades/tinyos-new/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f02a51f8160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7f02a48926d0" loc="106:/home/hades/tinyos-new/tos/interfaces/Packet.nc">
        <documentation loc="96:/home/hades/tinyos-new/tos/interfaces/Packet.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. Note that, depending on protocol fields, a given&#10; request to send a packet may not be able to send the maximum&#10; payload length (e.g., if there are variable length&#10; fields). Protocols may provide specialized interfaces for these&#10; circumstances.&#10;&#10; @return   the maximum size payload allowed by this layer&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f02a51f8160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x7f02a4894730" loc="94:/home/hades/tinyos-new/tos/interfaces/Packet.nc">
        <documentation loc="80:/home/hades/tinyos-new/tos/interfaces/Packet.nc">
          <short>&#10; Set the length field of the packet.</short>
          <long>&#10; Set the length field of the packet. This value is not checked&#10; for validity (e.g., if it is larger than the maximum payload&#10; size). This command is not used when sending packets, as calls&#10; to send include a length parameter. Rather, it is used by&#10; components, such as queues, that need to buffer requests to&#10; send.  This command allows the component to store the length&#10; specified in the request and later recover it when actually&#10; sending.&#10;&#10; @param 'message_t* ONE msg'   the packet&#10; @param len   the value to set its length field to&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f02a48a9880"/>
                <typename><typedef-ref name="message_t" ref="0x7f02a48a6020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f02a51f8160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f02a4894170" loc="94:/home/hades/tinyos-new/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f02a48a9880"/>
                <typename><typedef-ref name="message_t" ref="0x7f02a48a6020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f02a48944a0" loc="94:/home/hades/tinyos-new/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f02a51f8160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="51:/home/hades/tinyos-new/tos/interfaces/Leds.nc">
      <documentation loc="33:/home/hades/tinyos-new/tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x7f02a4872020" loc="61:/home/hades/tinyos-new/tos/interfaces/Leds.nc">
        <documentation loc="58:/home/hades/tinyos-new/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x7f02a48727d0" loc="67:/home/hades/tinyos-new/tos/interfaces/Leds.nc">
        <documentation loc="63:/home/hades/tinyos-new/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0x7f02a4871020" loc="72:/home/hades/tinyos-new/tos/interfaces/Leds.nc">
        <documentation loc="69:/home/hades/tinyos-new/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x7f02a486f020" loc="83:/home/hades/tinyos-new/tos/interfaces/Leds.nc">
        <documentation loc="79:/home/hades/tinyos-new/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x7f02a486e7d0" loc="100:/home/hades/tinyos-new/tos/interfaces/Leds.nc">
        <documentation loc="96:/home/hades/tinyos-new/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f02a486d020" loc="117:/home/hades/tinyos-new/tos/interfaces/Leds.nc">
        <documentation loc="103:/home/hades/tinyos-new/tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f02a51f8160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x7f02a48717b0" loc="77:/home/hades/tinyos-new/tos/interfaces/Leds.nc">
        <documentation loc="74:/home/hades/tinyos-new/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f02a486db90" loc="134:/home/hades/tinyos-new/tos/interfaces/Leds.nc">
        <documentation loc="120:/home/hades/tinyos-new/tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f02a51f8160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x7f02a486d910" loc="134:/home/hades/tinyos-new/tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f02a51f8160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x7f02a4873850" loc="56:/home/hades/tinyos-new/tos/interfaces/Leds.nc">
        <documentation loc="53:/home/hades/tinyos-new/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0x7f02a486f800" loc="89:/home/hades/tinyos-new/tos/interfaces/Leds.nc">
        <documentation loc="86:/home/hades/tinyos-new/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x7f02a486e020" loc="94:/home/hades/tinyos-new/tos/interfaces/Leds.nc">
        <documentation loc="91:/home/hades/tinyos-new/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMSend" loc="58:/home/hades/tinyos-new/tos/interfaces/AMSend.nc">
      <function command="" provided="0" name="send" ref="0x7f02a48a52c0" loc="80:/home/hades/tinyos-new/tos/interfaces/AMSend.nc">
        <documentation loc="60:/home/hades/tinyos-new/tos/interfaces/AMSend.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param 'message_t* ONE msg'    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f02a4f62cb0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f02a48fb9b0"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f02a48a9880"/>
                <typename><typedef-ref name="message_t" ref="0x7f02a48a6020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f02a51f8160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7f02a48a67e0" loc="80:/home/hades/tinyos-new/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f02a48fb9b0"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x7f02a48a6b60" loc="80:/home/hades/tinyos-new/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f02a48a9880"/>
                <typename><typedef-ref name="message_t" ref="0x7f02a48a6020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f02a48a5020" loc="80:/home/hades/tinyos-new/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f02a51f8160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7f02a48a1970" loc="135:/home/hades/tinyos-new/tos/interfaces/AMSend.nc">
        <documentation loc="126:/home/hades/tinyos-new/tos/interfaces/AMSend.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  'message_t* ONE msg'    the packet&#10; @return 'void* COUNT(len)'      the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f02a48a9880"/>
                <typename><typedef-ref name="message_t" ref="0x7f02a48a6020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f02a51f8160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f02a48a1370" loc="135:/home/hades/tinyos-new/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f02a48a9880"/>
                <typename><typedef-ref name="message_t" ref="0x7f02a48a6020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f02a48a16a0" loc="135:/home/hades/tinyos-new/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f02a51f8160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7f02a48a0a60" loc="123:/home/hades/tinyos-new/tos/interfaces/AMSend.nc">
        <documentation loc="113:/home/hades/tinyos-new/tos/interfaces/AMSend.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f02a51f8160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f02a48a4630" loc="96:/home/hades/tinyos-new/tos/interfaces/AMSend.nc">
        <documentation loc="82:/home/hades/tinyos-new/tos/interfaces/AMSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  'message_t* ONE msg'    the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f02a4f62cb0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f02a48a9880"/>
                <typename><typedef-ref name="message_t" ref="0x7f02a48a6020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f02a48a43b0" loc="96:/home/hades/tinyos-new/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f02a48a9880"/>
                <typename><typedef-ref name="message_t" ref="0x7f02a48a6020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f02a48a3b80" loc="110:/home/hades/tinyos-new/tos/interfaces/AMSend.nc">
        <documentation loc="98:/home/hades/tinyos-new/tos/interfaces/AMSend.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  'message_t* ONE msg'   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f02a48a9880"/>
                <typename><typedef-ref name="message_t" ref="0x7f02a48a6020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f02a4f62cb0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f02a48a35a0" loc="110:/home/hades/tinyos-new/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f02a48a9880"/>
                <typename><typedef-ref name="message_t" ref="0x7f02a48a6020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7f02a48a38f0" loc="110:/home/hades/tinyos-new/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f02a4f62cb0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="38:/home/hades/tinyos-new/tos/interfaces/GeneralIO.nc">
      <documentation loc="34:/home/hades/tinyos-new/tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x7f02a480f730" loc="44:/home/hades/tinyos-new/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x7f02a480fe60" loc="45:/home/hades/tinyos-new/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f02a4f6b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x7f02a48108e0" loc="42:/home/hades/tinyos-new/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x7f02a480ecf0" loc="47:/home/hades/tinyos-new/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f02a4f6b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f02a480f020" loc="43:/home/hades/tinyos-new/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f02a4f6b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x7f02a480e5b0" loc="46:/home/hades/tinyos-new/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f02a4813aa0" loc="40:/home/hades/tinyos-new/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x7f02a48101f0" loc="41:/home/hades/tinyos-new/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430GeneralIO" loc="43:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
      <documentation loc="34:/home/hades/tinyos-new/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x7f02a47e47c0" loc="78:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="75:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin direction to input.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x7f02a47e3020" loc="80:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f02a4f6b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setResistor" ref="0x7f02a47dfb10" loc="110:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="103:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin pullup / pull down resistor mode.</short>
          <long>&#10; Set pin pullup / pull down resistor mode.&#10; @param mode One of the MSP430_PORT_RESISTOR_* values&#10; @return EINVAL if invalid mode or pin does not support resistor configuration;&#10; FAIL if pin is not an input;&#10; SUCCESS if pin supports resistor configuration, is an input, and mode is valid&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f02a4f62cb0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f02a51f8160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7f02a47df890" loc="110:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f02a51f8160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x7f02a47e5020" loc="58:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="55:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Toggle pin status.</short>
          <long>&#10; Toggle pin status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x7f02a47e1020" loc="87:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f02a4f6b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getResistor" ref="0x7f02a47de490" loc="117:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="112:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Get the pin pullup / pulldown resistor mode.</short>
          <long>&#10; Get the pin pullup / pulldown resistor mode.&#10;&#10; @return one of the MSP430_PORT_RESISTOR_* values&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f02a51f8160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x7f02a47e3760" loc="85:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="82:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin direction to output.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f02a47e4020" loc="73:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="68:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Read pin value.</short>
          <long>&#10; Read pin value.&#10;&#10; @return TRUE if pin is high, FALSE otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f02a4f6b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="selectIOFunc" ref="0x7f02a47e0770" loc="99:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="96:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin for I/O functionality.</short>
          <long>&#10; Set pin for I/O functionality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getRaw" ref="0x7f02a47e57c0" loc="66:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="60:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Get the port status that contains the pin.</short>
          <long>&#10; Get the port status that contains the pin.&#10;&#10; @return Status of the port that contains the given pin. The x'th&#10; pin on the port will be represented in the x'th bit.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f02a51f8160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f02a47e6020" loc="48:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="45:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin to high.</short>
          <long>&#10; Set pin to high.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="selectModuleFunc" ref="0x7f02a47e17a0" loc="92:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="89:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin for module specific functionality.</short>
          <long>&#10; Set pin for module specific functionality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isIOFunc" ref="0x7f02a47df020" loc="101:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f02a4f6b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isModuleFunc" ref="0x7f02a47e0020" loc="94:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f02a4f6b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x7f02a47e6750" loc="53:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="50:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin to low.</short>
          <long>&#10; Set pin to low.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeStamp" loc="35:/home/hades/tinyos-new/tos/interfaces/PacketTimeStamp.nc">
      <parameters>
        <typedef name="precision_tag" ref="0x7f02a459b020" loc="35:/home/hades/tinyos-new/tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f02a459b020"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f02a459b260" loc="35:/home/hades/tinyos-new/tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f02a459b260"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="timestamp" ref="0x7f02a45980b0" loc="63:/home/hades/tinyos-new/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="51:/home/hades/tinyos-new/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to get timestamp from.&#10;&#10; Return the time stamp for the given message. Please check with the&#10; isValid command if this value can be relied upon. If this command is&#10; called after transmission, then the transmit time of the packet&#10; is returned (the time when the frame synchronization byte was&#10; transmitted). If this command is called after the message is received,&#10; the tne receive time of the message is returned. It is recommended that&#10; the timestamp command be called only from the receive or sendDone event&#10; handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f02a459b260"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f02a48a9880"/>
                <typename><typedef-ref name="message_t" ref="0x7f02a48a6020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f02a4599e00" loc="63:/home/hades/tinyos-new/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f02a48a9880"/>
                <typename><typedef-ref name="message_t" ref="0x7f02a48a6020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clear" ref="0x7f02a45972a0" loc="70:/home/hades/tinyos-new/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="65:/home/hades/tinyos-new/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to FALSE.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f02a48a9880"/>
                <typename><typedef-ref name="message_t" ref="0x7f02a48a6020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f02a4597020" loc="70:/home/hades/tinyos-new/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f02a48a9880"/>
                <typename><typedef-ref name="message_t" ref="0x7f02a48a6020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isValid" ref="0x7f02a459be20" loc="49:/home/hades/tinyos-new/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="37:/home/hades/tinyos-new/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to examine.&#10;&#10; Returns TRUE if the time stamp of the message is valid. Under special&#10; circumstances the radio chip might not be able to correctly assign a&#10; precise time value to an incoming packet (e.g. under very heavy traffic&#10; multiple interrupts can occur before they could be serviced, and even&#10; if capture registers are used, it is not possible to get the time stamp&#10; for the first or last unserviced event), in which case the time stamp&#10; value should not be used. It is recommended that the isValid command be&#10; called from the receive or sendDone event handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f02a4f6b090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f02a48a9880"/>
                <typename><typedef-ref name="message_t" ref="0x7f02a48a6020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f02a459bba0" loc="49:/home/hades/tinyos-new/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f02a48a9880"/>
                <typename><typedef-ref name="message_t" ref="0x7f02a48a6020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f02a4595610" loc="78:/home/hades/tinyos-new/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="72:/home/hades/tinyos-new/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to TRUE and the time stamp value to the&#10; specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f02a48a9880"/>
                <typename><typedef-ref name="message_t" ref="0x7f02a48a6020"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f02a459b260"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f02a4595020" loc="78:/home/hades/tinyos-new/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f02a48a9880"/>
                <typename><typedef-ref name="message_t" ref="0x7f02a48a6020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x7f02a4595380" loc="78:/home/hades/tinyos-new/tos/interfaces/PacketTimeStamp.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f02a459b260"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LowPowerListening" loc="41:/home/hades/tinyos-new/tos/interfaces/LowPowerListening.nc">
      <documentation loc="32:/home/hades/tinyos-new/tos/interfaces/LowPowerListening.nc">
        <short>&#10; Low Power Listening interface&#10;&#10; </short>
        <long>&#10; Low Power Listening interface&#10;&#10; @author Jonathan Hui&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="setRemoteWakeupInterval" ref="0x7f02a458ab50" loc="65:/home/hades/tinyos-new/tos/interfaces/LowPowerListening.nc">
        <documentation loc="59:/home/hades/tinyos-new/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.</short>
          <long>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.&#10; @param 'message_t* ONE msg' Pointer to the message that will be sent&#10; @param intervalMs The receiving node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f02a48a9880"/>
                <typename><typedef-ref name="message_t" ref="0x7f02a48a6020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f02a51f8520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f02a458a530" loc="65:/home/hades/tinyos-new/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f02a48a9880"/>
                <typename><typedef-ref name="message_t" ref="0x7f02a48a6020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="intervalMs" ref="0x7f02a458a8c0" loc="65:/home/hades/tinyos-new/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f02a51f8520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRemoteWakeupInterval" ref="0x7f02a4587d00" loc="71:/home/hades/tinyos-new/tos/interfaces/LowPowerListening.nc">
        <documentation loc="67:/home/hades/tinyos-new/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the destination node's wakeup interval configured in this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f02a51f8520"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f02a48a9880"/>
                <typename><typedef-ref name="message_t" ref="0x7f02a48a6020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f02a4587a80" loc="71:/home/hades/tinyos-new/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f02a48a9880"/>
                <typename><typedef-ref name="message_t" ref="0x7f02a48a6020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLocalWakeupInterval" ref="0x7f02a458bc60" loc="57:/home/hades/tinyos-new/tos/interfaces/LowPowerListening.nc">
        <documentation loc="54:/home/hades/tinyos-new/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @return the local node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f02a51f8520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setLocalWakeupInterval" ref="0x7f02a458b2a0" loc="52:/home/hades/tinyos-new/tos/interfaces/LowPowerListening.nc">
        <documentation loc="42:/home/hades/tinyos-new/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Set this this node's radio wakeup interval, in milliseconds.</short>
          <long>&#10; Set this this node's radio wakeup interval, in milliseconds. After&#10; each interval, the node will wakeup and check for radio activity.&#10;&#10; Note: The wakeup interval can be set to 0 to indicate that the radio&#10; should stay on all the time but in order to get a startDone this&#10; should only be done when the duty-cycling is off (after a stopDone).&#10;&#10; @param intervalMs the length of this node's Rx check interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f02a51f8520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="intervalMs" ref="0x7f02a458b020" loc="52:/home/hades/tinyos-new/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f02a51f8520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketAcknowledgements" loc="44:/home/hades/tinyos-new/tos/interfaces/PacketAcknowledgements.nc">
      <documentation loc="34:/home/hades/tinyos-new/tos/interfaces/PacketAcknowledgements.nc">
        <short>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.</short>
        <long>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.&#10;&#10; @author Jonathan Hui&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   June 21 2006&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestAck" ref="0x7f02a45a02e0" loc="59:/home/hades/tinyos-new/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="46:/home/hades/tinyos-new/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.&#10; The acknowledgment is synchronous as the caller can check whether the&#10; ack was received through the wasAcked() command as soon as a send operation&#10; completes.&#10;&#10; @param 'message_t* ONE msg' - A message which should be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are enabled, EBUSY&#10; if the communication layer cannot enable them at this time, FAIL&#10; if it does not support them.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f02a4f62cb0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f02a48a9880"/>
                <typename><typedef-ref name="message_t" ref="0x7f02a48a6020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f02a45a0060" loc="59:/home/hades/tinyos-new/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f02a48a9880"/>
                <typename><typedef-ref name="message_t" ref="0x7f02a48a6020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="noAck" ref="0x7f02a459f510" loc="71:/home/hades/tinyos-new/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="61:/home/hades/tinyos-new/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.&#10;&#10; @param 'message_t* ONE msg' - A message which should not be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are disabled, EBUSY&#10; if the communication layer cannot disable them at this time, FAIL&#10; if it cannot support unacknowledged communication.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f02a4f62cb0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f02a48a9880"/>
                <typename><typedef-ref name="message_t" ref="0x7f02a48a6020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f02a459f290" loc="71:/home/hades/tinyos-new/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f02a48a9880"/>
                <typename><typedef-ref name="message_t" ref="0x7f02a48a6020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasAcked" ref="0x7f02a459d680" loc="85:/home/hades/tinyos-new/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="73:/home/hades/tinyos-new/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a caller whether or not a transmitted packet was acknowledged.</short>
          <long>&#10; Tell a caller whether or not a transmitted packet was acknowledged.&#10; If acknowledgments on the packet had been disabled through noAck(),&#10; then the return value is undefined. If a packet&#10; layer does not support acknowledgements, this command must return always&#10; return FALSE.&#10;&#10; @param 'message_t* ONE msg' - A transmitted message.&#10; @return Whether the packet was acknowledged.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f02a4f6b090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f02a48a9880"/>
                <typename><typedef-ref name="message_t" ref="0x7f02a48a6020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f02a459d400" loc="85:/home/hades/tinyos-new/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f02a48a9880"/>
                <typename><typedef-ref name="message_t" ref="0x7f02a48a6020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioBackoff" loc="54:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/RadioBackoff.nc">
      <documentation loc="32:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <short>&#10; Interface to request and specify backoff periods for messages&#10; &#10; We use a call back method for setting the backoff as opposed to &#10; events that return backoff values.</short>
        <long>&#10; Interface to request and specify backoff periods for messages&#10; &#10; We use a call back method for setting the backoff as opposed to &#10; events that return backoff values.  &#10; &#10; This is because of fan-out issues with multiple components wanting to&#10; affect backoffs for whatever they're interested in:&#10; If you signal out an *event* to request an initial backoff and&#10; several components happen to be listening, then those components&#10; would be required to return a backoff value.  We don't want that&#10; behavior.&#10; With this strategy, components can listen for the requests and then&#10; decide if they want to affect the behavior.  If the component wants to&#10; affect the behavior, it calls back using the setXYZBackoff(..) command.&#10; If several components call back, then the last component to get its &#10; word in has the final say. &#10;&#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="requestCca" ref="0x7f02a4561980" loc="95:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="90:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Request for input on whether or not to use CCA on the outbound packet.</short>
          <long>&#10; Request for input on whether or not to use CCA on the outbound packet.&#10; Replies should come in the form of setCca(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f02a48a9880"/>
                <typename><typedef-ref name="message_t" ref="0x7f02a48a6020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f02a4561700" loc="95:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f02a48a9880"/>
                <typename><typedef-ref name="message_t" ref="0x7f02a48a6020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="requestInitialBackoff" ref="0x7f02a4563c30" loc="81:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="76:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>  &#10; Request for input on the initial backoff&#10; Reply using setInitialBackoff(..)&#10; </short>
          <long>  &#10; Request for input on the initial backoff&#10; Reply using setInitialBackoff(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f02a48a9880"/>
                <typename><typedef-ref name="message_t" ref="0x7f02a48a6020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f02a45639b0" loc="81:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f02a48a9880"/>
                <typename><typedef-ref name="message_t" ref="0x7f02a48a6020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCongestionBackoff" ref="0x7f02a4565350" loc="66:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="62:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Must be called within a requestCongestionBackoff event&#10; </short>
          <long>&#10; Must be called within a requestCongestionBackoff event&#10; @param backoffTime the amount of time in some unspecified units to backoff&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f02a51f8520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="backoffTime" ref="0x7f02a45650d0" loc="66:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f02a51f8520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInitialBackoff" ref="0x7f02a4567800" loc="60:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="56:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Must be called within a requestInitialBackoff event&#10; </short>
          <long>&#10; Must be called within a requestInitialBackoff event&#10; @param backoffTime the amount of time in some unspecified units to backoff&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f02a51f8520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="backoffTime" ref="0x7f02a4567580" loc="60:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f02a51f8520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCca" ref="0x7f02a4565d80" loc="73:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="68:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Enable CCA for the outbound packet.</short>
          <long>&#10; Enable CCA for the outbound packet.  Must be called within a requestCca&#10; event&#10; @param ccaOn TRUE to enable CCA, which is the default.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f02a4f6b090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ccaOn" ref="0x7f02a4565b00" loc="73:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f02a4f6b090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="requestCongestionBackoff" ref="0x7f02a4562b10" loc="88:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="83:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Request for input on the congestion backoff&#10; Reply using setCongestionBackoff(..)&#10; </short>
          <long>&#10; Request for input on the congestion backoff&#10; Reply using setCongestionBackoff(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f02a48a9880"/>
                <typename><typedef-ref name="message_t" ref="0x7f02a48a6020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f02a4562890" loc="88:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f02a48a9880"/>
                <typename><typedef-ref name="message_t" ref="0x7f02a48a6020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendNotifier" loc="50:/home/hades/tinyos-new/tos/interfaces/SendNotifier.nc">
      <documentation loc="32:/home/hades/tinyos-new/tos/interfaces/SendNotifier.nc">
        <short> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.</short>
        <long> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.  Other modules in the system can call back within this event&#10; to modify the packet's metadata. For example, we can setup a module&#10; in the system to make every CTP data packet send with low power listening&#10; enabled:&#10;&#10;   event void SendNotifier.aboutToSend[AM_COLLECTION_DATA](uint8_t dest,&#10;       message_t *msg) {&#10;     call LowPowerListening.setRxSleepInterval(msg, 512);&#10;   }&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="aboutToSend" ref="0x7f02a45542b0" loc="59:/home/hades/tinyos-new/tos/interfaces/SendNotifier.nc">
        <documentation loc="52:/home/hades/tinyos-new/tos/interfaces/SendNotifier.nc">
          <short>&#10; The system is about to send this message.</short>
          <long>&#10; The system is about to send this message. Fill in any last modifications&#10; and the message will be sent.&#10; &#10; @param dest The destination address of the messsage&#10; @param 'message_t* ONE msg' The message about to be transmitted&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendNotifier"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f02a48fb9b0"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f02a48a9880"/>
                <typename><typedef-ref name="message_t" ref="0x7f02a48a6020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dest" ref="0x7f02a455fc60" loc="59:/home/hades/tinyos-new/tos/interfaces/SendNotifier.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f02a48fb9b0"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x7f02a4554020" loc="59:/home/hades/tinyos-new/tos/interfaces/SendNotifier.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f02a48a9880"/>
                <typename><typedef-ref name="message_t" ref="0x7f02a48a6020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Packet" loc="40:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Packet.nc">
      <documentation loc="32:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <function command="" provided="0" name="setPower" ref="0x7f02a4570810" loc="56:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="49:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Set transmission power for a given packet.</short>
          <long>&#10; Set transmission power for a given packet. Valid ranges are&#10; between 0 and 31.&#10;&#10; @param p_msg the message.&#10; @param power transmission power.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f02a48a9880"/>
                <typename><typedef-ref name="message_t" ref="0x7f02a48a6020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f02a51f8160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f02a4570230" loc="56:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f02a48a9880"/>
                <typename><typedef-ref name="message_t" ref="0x7f02a48a6020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="power" ref="0x7f02a4570580" loc="56:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f02a51f8160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setNetwork" ref="0x7f02a456ce20" loc="77:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f02a48a9880"/>
                <typename><typedef-ref name="message_t" ref="0x7f02a48a6020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f02a51f8160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f02a456c820" loc="77:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f02a48a9880"/>
                <typename><typedef-ref name="message_t" ref="0x7f02a48a6020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="networkId" ref="0x7f02a456cb90" loc="77:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f02a51f8160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRssi" ref="0x7f02a456f350" loc="64:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="58:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get rssi value for a given packet.</short>
          <long>&#10; Get rssi value for a given packet. For received packets, it is&#10; the received signal strength when receiving that packet. For sent&#10; packets, it is the received signal strength of the ack if an ack&#10; was received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="signed char" size="I:1" alignment="I:1">
            <typename><typedef-ref name="int8_t" ref="0x7f02a51f9110"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f02a48a9880"/>
                <typename><typedef-ref name="message_t" ref="0x7f02a48a6020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f02a456f0d0" loc="64:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f02a48a9880"/>
                <typename><typedef-ref name="message_t" ref="0x7f02a48a6020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getNetwork" ref="0x7f02a456dd30" loc="75:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f02a51f8160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f02a48a9880"/>
                <typename><typedef-ref name="message_t" ref="0x7f02a48a6020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f02a456dab0" loc="75:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f02a48a9880"/>
                <typename><typedef-ref name="message_t" ref="0x7f02a48a6020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPower" ref="0x7f02a45719c0" loc="47:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="42:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get transmission power setting for current packet.</short>
          <long>&#10; Get transmission power setting for current packet.&#10;&#10; @param the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f02a51f8160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f02a48a9880"/>
                <typename><typedef-ref name="message_t" ref="0x7f02a48a6020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f02a4571740" loc="47:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f02a48a9880"/>
                <typename><typedef-ref name="message_t" ref="0x7f02a48a6020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLqi" ref="0x7f02a456fe80" loc="72:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="66:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get lqi value for a given packet.</short>
          <long>&#10; Get lqi value for a given packet. For received packets, it is the&#10; link quality indicator value when receiving that packet. For sent&#10; packets, it is the link quality indicator value of the ack if an&#10; ack was received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f02a51f8160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f02a48a9880"/>
                <typename><typedef-ref name="message_t" ref="0x7f02a48a6020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f02a456fc00" loc="72:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f02a48a9880"/>
                <typename><typedef-ref name="message_t" ref="0x7f02a48a6020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketLink" loc="37:/home/hades/tinyos-new/tos/interfaces/PacketLink.nc">
      <documentation loc="32:/home/hades/tinyos-new/tos/interfaces/PacketLink.nc">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <function command="" provided="0" name="getRetryDelay" ref="0x7f02a4558b30" loc="65:/home/hades/tinyos-new/tos/interfaces/PacketLink.nc">
        <documentation loc="61:/home/hades/tinyos-new/tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the delay between retry attempts in ms for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f02a51f8520"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f02a48a9880"/>
                <typename><typedef-ref name="message_t" ref="0x7f02a48a6020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f02a45588b0" loc="65:/home/hades/tinyos-new/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f02a48a9880"/>
                <typename><typedef-ref name="message_t" ref="0x7f02a48a6020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetries" ref="0x7f02a455dc10" loc="46:/home/hades/tinyos-new/tos/interfaces/PacketLink.nc">
        <documentation loc="39:/home/hades/tinyos-new/tos/interfaces/PacketLink.nc">
          <short>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; </short>
          <long>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; @param 'message_t* ONE msg'&#10; @param maxRetries the maximum number of attempts to deliver&#10;     the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f02a48a9880"/>
                <typename><typedef-ref name="message_t" ref="0x7f02a48a6020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f02a51f8520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f02a455d5f0" loc="46:/home/hades/tinyos-new/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f02a48a9880"/>
                <typename><typedef-ref name="message_t" ref="0x7f02a48a6020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="maxRetries" ref="0x7f02a455d980" loc="46:/home/hades/tinyos-new/tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f02a51f8520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRetries" ref="0x7f02a455ab00" loc="59:/home/hades/tinyos-new/tos/interfaces/PacketLink.nc">
        <documentation loc="55:/home/hades/tinyos-new/tos/interfaces/PacketLink.nc">
          <short> &#10; </short>
          <long> &#10; @param 'message_t* ONE msg'&#10; @return the maximum number of retry attempts for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f02a51f8520"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f02a48a9880"/>
                <typename><typedef-ref name="message_t" ref="0x7f02a48a6020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f02a455a880" loc="59:/home/hades/tinyos-new/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f02a48a9880"/>
                <typename><typedef-ref name="message_t" ref="0x7f02a48a6020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetryDelay" ref="0x7f02a455a050" loc="53:/home/hades/tinyos-new/tos/interfaces/PacketLink.nc">
        <documentation loc="48:/home/hades/tinyos-new/tos/interfaces/PacketLink.nc">
          <short>&#10; Set a delay between each retry attempt&#10; </short>
          <long>&#10; Set a delay between each retry attempt&#10; @param msg&#10; @param retryDelay the delay betweeen retry attempts, in milliseconds&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f02a48a9880"/>
                <typename><typedef-ref name="message_t" ref="0x7f02a48a6020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f02a51f8520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f02a455ba10" loc="53:/home/hades/tinyos-new/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f02a48a9880"/>
                <typename><typedef-ref name="message_t" ref="0x7f02a48a6020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="retryDelay" ref="0x7f02a455bda0" loc="53:/home/hades/tinyos-new/tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f02a51f8520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasDelivered" ref="0x7f02a4557b70" loc="71:/home/hades/tinyos-new/tos/interfaces/PacketLink.nc">
        <documentation loc="67:/home/hades/tinyos-new/tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return TRUE if the message was delivered.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f02a4f6b090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f02a48a9880"/>
                <typename><typedef-ref name="message_t" ref="0x7f02a48a6020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f02a45578f0" loc="71:/home/hades/tinyos-new/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f02a48a9880"/>
                <typename><typedef-ref name="message_t" ref="0x7f02a48a6020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LinkPacketMetadata" loc="37:/home/hades/tinyos-new/tos/interfaces/LinkPacketMetadata.nc">
      <documentation loc="32:/home/hades/tinyos-new/tos/interfaces/LinkPacketMetadata.nc">
        <short>&#10; This interface provides metadata associated with a link layer packet.</short>
        <long>&#10; This interface provides metadata associated with a link layer packet.&#10; @author Philip Levis&#10;</long>
      </documentation>
      <function command="" provided="0" name="highChannelQuality" ref="0x7f02a4568780" loc="47:/home/hades/tinyos-new/tos/interfaces/LinkPacketMetadata.nc">
        <documentation loc="39:/home/hades/tinyos-new/tos/interfaces/LinkPacketMetadata.nc">
          <short>&#10; Return true if the channel during this packet had high quality (few bit errors).</short>
          <long>&#10; Return true if the channel during this packet had high quality (few bit errors).&#10; A good rule of thumb for &#34;high quality&#34; is that the channel quality&#10; would enable MTU packets to have a reception rate of 90% or greater.&#10;&#10; @param 'message_t* ONE msg' A received packet during which the channel was measured.&#10; @return Whether the channel had high quality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LinkPacketMetadata"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f02a4f6b090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f02a48a9880"/>
                <typename><typedef-ref name="message_t" ref="0x7f02a48a6020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f02a4568500" loc="47:/home/hades/tinyos-new/tos/interfaces/LinkPacketMetadata.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f02a48a9880"/>
                <typename><typedef-ref name="message_t" ref="0x7f02a48a6020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Send" loc="55:/home/hades/tinyos-new/tos/interfaces/Send.nc">
      <documentation loc="34:/home/hades/tinyos-new/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f02a45472b0" loc="75:/home/hades/tinyos-new/tos/interfaces/Send.nc">
        <documentation loc="57:/home/hades/tinyos-new/tos/interfaces/Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>. To determine&#10; the maximum available size, use the Packet interface of the&#10; component providing Send. If send returns SUCCESS, then the&#10; component will signal the sendDone event in the future; if send&#10; returns an error, it will not signal sendDone.  Note that a&#10; component may accept a send request which it later finds it&#10; cannot satisfy; in this case, it will signal sendDone with an&#10; appropriate error code.&#10;&#10; @param   'message_t* ONE msg'     the packet to send&#10; @param   len     the length of the packet payload&#10; @return          SUCCESS if the request was accepted and will issue&#10;                  a sendDone event, EBUSY if the component cannot accept&#10;                  the request now but will be able to later, FAIL&#10;                  if the stack is in a state that cannot accept requests&#10;                  (e.g., it's off).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f02a4f62cb0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f02a48a9880"/>
                <typename><typedef-ref name="message_t" ref="0x7f02a48a6020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f02a51f8160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f02a454ec50" loc="75:/home/hades/tinyos-new/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f02a48a9880"/>
                <typename><typedef-ref name="message_t" ref="0x7f02a48a6020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f02a4547020" loc="75:/home/hades/tinyos-new/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f02a51f8160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7f02a4543890" loc="125:/home/hades/tinyos-new/tos/interfaces/Send.nc">
        <documentation loc="115:/home/hades/tinyos-new/tos/interfaces/Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.  If the payload region is smaller than&#10; the len parameter, then getPayload returns NULL. This command&#10; behaves identicallt to &#60;tt>Packet.getPayload&#60;/tt> and is&#10; included in this interface as a convenience.&#10;&#10; @param   'message_t* ONE msg'    the packet&#10; @return  'void* COUNT_NOK(len)'  a pointer to the packet's payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f02a48a9880"/>
                <typename><typedef-ref name="message_t" ref="0x7f02a48a6020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f02a51f8160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f02a4543290" loc="125:/home/hades/tinyos-new/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f02a48a9880"/>
                <typename><typedef-ref name="message_t" ref="0x7f02a48a6020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f02a45435c0" loc="125:/home/hades/tinyos-new/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f02a51f8160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7f02a45429b0" loc="112:/home/hades/tinyos-new/tos/interfaces/Send.nc">
        <documentation loc="102:/home/hades/tinyos-new/tos/interfaces/Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return  the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f02a51f8160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f02a45465f0" loc="89:/home/hades/tinyos-new/tos/interfaces/Send.nc">
        <documentation loc="77:/home/hades/tinyos-new/tos/interfaces/Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;&#10; @param   'message_t* ONE msg'    the packet whose transmission should be cancelled&#10; @return         SUCCESS if the packet was successfully cancelled, FAIL&#10;                 otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f02a4f62cb0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f02a48a9880"/>
                <typename><typedef-ref name="message_t" ref="0x7f02a48a6020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f02a4546370" loc="89:/home/hades/tinyos-new/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f02a48a9880"/>
                <typename><typedef-ref name="message_t" ref="0x7f02a48a6020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f02a4545ac0" loc="100:/home/hades/tinyos-new/tos/interfaces/Send.nc">
        <documentation loc="91:/home/hades/tinyos-new/tos/interfaces/Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt>&#10; is the sent buffer, and &#60;tt>error&#60;/tt> indicates whether the&#10; send was succesful, and if not, the cause of the failure.&#10; &#10; @param 'message_t* ONE msg'   the message which was requested to send&#10; @param error SUCCESS if it was transmitted successfully, FAIL if&#10;              it was not, ECANCEL if it was cancelled via &#60;tt>cancel&#60;/tt>&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f02a48a9880"/>
                <typename><typedef-ref name="message_t" ref="0x7f02a48a6020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f02a4f62cb0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f02a45454e0" loc="100:/home/hades/tinyos-new/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f02a48a9880"/>
                <typename><typedef-ref name="message_t" ref="0x7f02a48a6020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7f02a4545830" loc="100:/home/hades/tinyos-new/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f02a4f62cb0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Resource" loc="77:/home/hades/tinyos-new/tos/interfaces/Resource.nc">
      <documentation loc="63:/home/hades/tinyos-new/tos/interfaces/Resource.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.  It is always offered as a parameterized&#10; interface, and its users gain access to the resource through some&#10; predefined arbitration policy.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.6 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x7f02a454b120" loc="120:/home/hades/tinyos-new/tos/interfaces/Resource.nc">
        <documentation loc="104:/home/hades/tinyos-new/tos/interfaces/Resource.nc">
          <short>&#10; Release a shared resource you previously acquired.</short>
          <long>&#10; Release a shared resource you previously acquired.  &#10;&#10; @return SUCCESS The resource has been released &#60;br>&#10;         FAIL You tried to release but you are not the&#10;              owner of the resource &#10;&#10; @note This command should never be called between putting in a request &#9;  &#10;       and waiting for a granted event.  Doing so will result in a&#10;       potential race condition.  There are ways to guarantee that no&#10;       race will occur, but they are clumsy and overly complicated.&#10;       Since it doesn't logically make since to be calling&#10;       &#60;code>release&#60;/code> before receiving a &#60;code>granted&#60;/code> event, &#10;       we have opted to keep thing simple and warn you about the potential &#10;       race.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f02a4f62cb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="immediateRequest" ref="0x7f02a454c120" loc="97:/home/hades/tinyos-new/tos/interfaces/Resource.nc">
        <documentation loc="90:/home/hades/tinyos-new/tos/interfaces/Resource.nc">
          <short>&#10; Request immediate access to a shared resource.</short>
          <long>&#10; Request immediate access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. &#60;br>&#10;            FAIL The request cannot be fulfilled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f02a4f62cb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x7f02a454d770" loc="88:/home/hades/tinyos-new/tos/interfaces/Resource.nc">
        <documentation loc="78:/home/hades/tinyos-new/tos/interfaces/Resource.nc">
          <short>&#10; Request access to a shared resource.</short>
          <long>&#10; Request access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. The granted()&#10;                 event will be signaled once you have control of the&#10;                 resource.&#60;br>&#10;         EBUSY You have already requested this resource and a&#10;               granted event is pending&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f02a4f62cb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x7f02a454c910" loc="102:/home/hades/tinyos-new/tos/interfaces/Resource.nc">
        <documentation loc="99:/home/hades/tinyos-new/tos/interfaces/Resource.nc">
          <short>&#10; You are now in control of the resource.</short>
          <long>&#10; You are now in control of the resource.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x7f02a454bb80" loc="128:/home/hades/tinyos-new/tos/interfaces/Resource.nc">
        <documentation loc="122:/home/hades/tinyos-new/tos/interfaces/Resource.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  @return TRUE  It is the owner &#60;br>&#10;             FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f02a4f6b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Transmit" loc="42:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
      <documentation loc="32:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <short>&#10; Low-level abstraction for the transmit path implementaiton of the&#10; ChipCon CC2420 radio.</short>
        <long>&#10; Low-level abstraction for the transmit path implementaiton of the&#10; ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f02a4522460" loc="51:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="44:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Send a message&#10;&#10; </short>
          <long>&#10; Send a message&#10;&#10; @param p_msg message to send.&#10; @param useCca TRUE if this Tx should use clear channel assessments&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f02a4f62cb0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f02a48a9880"/>
                <typename><typedef-ref name="message_t" ref="0x7f02a48a6020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f02a4f6b090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f02a4527e80" loc="51:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f02a48a9880"/>
                <typename><typedef-ref name="message_t" ref="0x7f02a48a6020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="useCca" ref="0x7f02a45221d0" loc="51:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f02a4f6b090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f02a4521860" loc="65:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="60:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Cancel sending of the message.</short>
          <long>&#10; Cancel sending of the message.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f02a4f62cb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="modify" ref="0x7f02a451d0d0" loc="84:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="75:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Modify the contents of a packet.</short>
          <long>&#10; Modify the contents of a packet. This command can only be used&#10; when an SFD capture event for the sending packet is signalled.&#10;&#10; @param offset in the message to start modifying.&#10; @param buf to data to write&#10; @param len of bytes to write&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f02a4f62cb0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f02a51f8160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f02a51f8160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f02a51f8160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x7f02a451e260" loc="84:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f02a51f8160"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0x7f02a451eaa0" loc="84:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f02a51f8160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f02a451edd0" loc="84:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f02a51f8160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f02a4520a10" loc="73:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="67:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Signal that a message has been sent&#10;&#10; </short>
          <long>&#10; Signal that a message has been sent&#10;&#10; @param p_msg message to send.&#10; @param error notifaction of how the operation went.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f02a48a9880"/>
                <typename><typedef-ref name="message_t" ref="0x7f02a48a6020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f02a4f62cb0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f02a4520430" loc="73:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f02a48a9880"/>
                <typename><typedef-ref name="message_t" ref="0x7f02a48a6020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7f02a4520780" loc="73:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f02a4f62cb0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resend" ref="0x7f02a4521020" loc="58:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="53:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Send the previous message again&#10; </short>
          <long>&#10; Send the previous message again&#10; @param useCca TRUE if this re-Tx should use clear channel assessments&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f02a4f62cb0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f02a4f6b090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="useCca" ref="0x7f02a4522c70" loc="58:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f02a4f6b090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Random" loc="40:/home/hades/tinyos-new/tos/interfaces/Random.nc">
      <documentation loc="34:/home/hades/tinyos-new/tos/interfaces/Random.nc">
        <short> &#10; Interface for generating 16-bit and 32-bit random numbers.</short>
        <long> &#10; Interface for generating 16-bit and 32-bit random numbers.&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005 &#10;</long>
      </documentation>
      <function command="" provided="0" name="rand16" ref="0x7f02a451a500" loc="52:/home/hades/tinyos-new/tos/interfaces/Random.nc">
        <documentation loc="48:/home/hades/tinyos-new/tos/interfaces/Random.nc">
          <short> &#10; Produces a 16-bit pseudorandom number.</short>
          <long> &#10; Produces a 16-bit pseudorandom number. &#10; @return Returns low 16 bits of the pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f02a51f8520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rand32" ref="0x7f02a4523cc0" loc="46:/home/hades/tinyos-new/tos/interfaces/Random.nc">
        <documentation loc="42:/home/hades/tinyos-new/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns the 32-bit pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f02a51f8920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="StdControl" loc="86:/home/hades/tinyos-new/tos/interfaces/StdControl.nc">
      <documentation loc="72:/home/hades/tinyos-new/tos/interfaces/StdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.  A call to the&#10; &#60;code>start()&#60;/code> command is a request to switch a component into the&#10; on state, and a call to the &#60;code>stop()&#60;/code> is a request to switch a&#10; component into the off state.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x7f02a452da50" loc="95:/home/hades/tinyos-new/tos/interfaces/StdControl.nc">
        <documentation loc="88:/home/hades/tinyos-new/tos/interfaces/StdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f02a4f62cb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f02a45242b0" loc="105:/home/hades/tinyos-new/tos/interfaces/StdControl.nc">
        <documentation loc="97:/home/hades/tinyos-new/tos/interfaces/StdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f02a4f62cb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420PacketBody" loc="37:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
      <documentation loc="32:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <short>&#10; Internal interface for the CC2420 to get portions of a packet.</short>
        <long>&#10; Internal interface for the CC2420 to get portions of a packet.&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="getPayload" ref="0x7f02a4514700" loc="49:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="45:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the payload region of the message, after any headers&#10;    works with extended addressing mode&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f02a51f8160"/></typename>
            </type-int>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f02a48a9880"/>
                <typename><typedef-ref name="message_t" ref="0x7f02a48a6020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f02a4514440" loc="49:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f02a48a9880"/>
                <typename><typedef-ref name="message_t" ref="0x7f02a48a6020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getHeader" ref="0x7f02a4515be0" loc="42:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="39:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the cc2420_header_t of the given message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:12" alignment="I:1"><nx_struct-ref name="cc2420_header_t" ref="0x7f02a48e6b30"/>
              <typename><typedef-ref name="cc2420_header_t" ref="0x7f02a48e34f0"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f02a48a9880"/>
                <typename><typedef-ref name="message_t" ref="0x7f02a48a6020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f02a45158e0" loc="42:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f02a48a9880"/>
                <typename><typedef-ref name="message_t" ref="0x7f02a48a6020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getMetadata" ref="0x7f02a4513a00" loc="53:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="50:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the cc2420_metadata_t of the given message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:12" alignment="I:1"><nx_struct-ref name="cc2420_metadata_t" ref="0x7f02a48e2020"/>
              <typename><typedef-ref name="cc2420_metadata_t" ref="0x7f02a48e18c0"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f02a48a9880"/>
                <typename><typedef-ref name="message_t" ref="0x7f02a48a6020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f02a4513700" loc="53:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f02a48a9880"/>
                <typename><typedef-ref name="message_t" ref="0x7f02a48a6020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Power" loc="42:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Power.nc">
      <documentation loc="32:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <short>&#10; An HAL abstraction of the ChipCon CC2420 radio.</short>
        <long>&#10; An HAL abstraction of the ChipCon CC2420 radio. This abstraction&#10; deals specifically with radio power operations (e.g. voltage&#10; regulator, oscillator, etc). However, it does not include&#10; transmission power, see the CC2420Config interface.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:14 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="startOscillator" ref="0x7f02a452a6e0" loc="71:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="65:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Start the oscillator.</short>
          <long>&#10; Start the oscillator. On SUCCESS, &#60;code>startOscillator&#60;/code>&#10; will be signalled when the oscillator has been started.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f02a4f62cb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rfOff" ref="0x7f02a4528840" loc="97:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="92:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Disable RX.</short>
          <long>&#10; Disable RX.&#10;&#10; @return SUCCESS if receive mode has been disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f02a4f62cb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rxOn" ref="0x7f02a4528070" loc="90:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="85:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Enable RX.</short>
          <long>&#10; Enable RX.&#10;&#10; @return SUCCESS if receive mode has been enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f02a4f62cb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startVReg" ref="0x7f02a452fe30" loc="51:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="44:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Start the voltage regulator on the CC2420.</short>
          <long>&#10; Start the voltage regulator on the CC2420. On SUCCESS,&#10; &#60;code>startVReg()&#60;/code> will be signalled when the voltage&#10; regulator is fully on.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f02a4f62cb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopVReg" ref="0x7f02a452be80" loc="63:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="58:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Stop the voltage regulator immediately.</short>
          <long>&#10; Stop the voltage regulator immediately.&#10;&#10; @return SUCCESS always&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f02a4f62cb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="startOscillatorDone" ref="0x7f02a4529020" loc="76:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="73:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Signals that the oscillator has been started.</short>
          <long>&#10; Signals that the oscillator has been started.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopOscillator" ref="0x7f02a4529840" loc="83:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="78:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Stop the oscillator.</short>
          <long>&#10; Stop the oscillator.&#10;&#10; @return SUCCESS if the oscillator was stopped, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f02a4f62cb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="startVRegDone" ref="0x7f02a452b6c0" loc="56:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="53:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Signals that the voltage regulator has been started.</short>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="State" loc="38:/home/hades/tinyos-new/tos/interfaces/State.nc">
      <documentation loc="33:/home/hades/tinyos-new/tos/interfaces/State.nc">
        <short>&#10; State machine interface&#10; </short>
        <long>&#10; State machine interface&#10; @author David Moss - dmm@rincon.com&#10;</long>
      </documentation>
      <function command="" provided="0" name="getState" ref="0x7f02a450c020" loc="71:/home/hades/tinyos-new/tos/interfaces/State.nc">
        <documentation loc="68:/home/hades/tinyos-new/tos/interfaces/State.nc">
          <short>&#10; Get the current state&#10;</short>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f02a51f8160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toIdle" ref="0x7f02a450f5a0" loc="56:/home/hades/tinyos-new/tos/interfaces/State.nc">
        <documentation loc="53:/home/hades/tinyos-new/tos/interfaces/State.nc">
          <short>&#10; Set the current state back to S_IDLE&#10;</short>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isState" ref="0x7f02a450e760" loc="66:/home/hades/tinyos-new/tos/interfaces/State.nc">
        <documentation loc="63:/home/hades/tinyos-new/tos/interfaces/State.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the state machine is in the given state&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f02a4f6b090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f02a51f8160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="myState" ref="0x7f02a450e4e0" loc="66:/home/hades/tinyos-new/tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f02a51f8160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isIdle" ref="0x7f02a450fd10" loc="61:/home/hades/tinyos-new/tos/interfaces/State.nc">
        <documentation loc="58:/home/hades/tinyos-new/tos/interfaces/State.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the state machine is in S_IDLE&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f02a4f6b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="requestState" ref="0x7f02a45102e0" loc="45:/home/hades/tinyos-new/tos/interfaces/State.nc">
        <documentation loc="40:/home/hades/tinyos-new/tos/interfaces/State.nc">
          <short>&#10; This will allow a state change so long as the current&#10; state is S_IDLE.</short>
          <long>&#10; This will allow a state change so long as the current&#10; state is S_IDLE.&#10; @return SUCCESS if the state is change, FAIL if it isn't&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f02a4f62cb0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f02a51f8160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reqState" ref="0x7f02a4510060" loc="45:/home/hades/tinyos-new/tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f02a51f8160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="forceState" ref="0x7f02a4510d90" loc="51:/home/hades/tinyos-new/tos/interfaces/State.nc">
        <documentation loc="47:/home/hades/tinyos-new/tos/interfaces/State.nc">
          <short>&#10; Force the state machine to go into a certain state,&#10; regardless of the current state it's in.</short>
          <long>&#10; Force the state machine to go into a certain state,&#10; regardless of the current state it's in.&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f02a51f8160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reqState" ref="0x7f02a4510b10" loc="51:/home/hades/tinyos-new/tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f02a51f8160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Config" loc="46:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Config.nc">
      <documentation loc="32:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <short>&#10; An HAL abstraction of the ChipCon CC2420 radio.</short>
        <long>&#10; An HAL abstraction of the ChipCon CC2420 radio. This abstraction&#10; deals specifically with radio configurations. All get() and set()&#10; commands are single-phase. After setting some values, a call to&#10; sync() is required for the changes to propagate to the cc2420&#10; hardware chip. This interface allows setting multiple parameters&#10; before calling sync().&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008/06/16 15:33:32 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="setAutoAck" ref="0x7f02a44b1870" loc="106:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="100:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Sync must be called for acknowledgement changes to take effect&#10; </short>
          <long>&#10; Sync must be called for acknowledgement changes to take effect&#10; @param enableAutoAck TRUE to enable auto acknowledgements&#10; @param hwAutoAck TRUE to default to hardware auto acks, FALSE to&#10;     default to software auto acknowledgements&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f02a4f6b090"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f02a4f6b090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enableAutoAck" ref="0x7f02a44b1290" loc="106:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f02a4f6b090"/></typename>
            </type-int>
          </variable>
          <variable name="hwAutoAck" ref="0x7f02a44b15e0" loc="106:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f02a4f6b090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAddressRecognitionEnabled" ref="0x7f02a44b31f0" loc="93:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="90:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if address recognition is enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f02a4f6b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddressRecognition" ref="0x7f02a44b4880" loc="87:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="81:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @param enableAddressRecognition TRUE to turn address recognition on&#10; @param useHwAddressRecognition TRUE to perform address recognition first&#10;     in hardware. This doesn't affect software address recognition. The&#10;     driver must sync with the chip after changing this value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f02a4f6b090"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f02a4f6b090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enableAddressRecognition" ref="0x7f02a44b4210" loc="87:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f02a4f6b090"/></typename>
            </type-int>
          </variable>
          <variable name="useHwAddressRecognition" ref="0x7f02a44b45f0" loc="87:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f02a4f6b090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="syncDone" ref="0x7f02a44bac10" loc="55:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f02a4f62cb0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f02a44ba990" loc="55:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f02a4f62cb0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isHwAddressRecognitionDefault" ref="0x7f02a44b3a70" loc="98:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="95:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if address recognition is performed first in hardware.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f02a4f6b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setShortAddr" ref="0x7f02a44b6730" loc="72:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f02a51f8520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="address" ref="0x7f02a44b64b0" loc="72:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f02a51f8520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0x7f02a44b9d30" loc="61:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f02a51f8160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x7f02a44b9ab0" loc="61:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f02a51f8160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAutoAckEnabled" ref="0x7f02a44b0ae0" loc="117:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="114:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if auto acks are enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f02a4f6b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPanAddr" ref="0x7f02a44b59c0" loc="78:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f02a51f8520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="address" ref="0x7f02a44b5740" loc="78:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f02a51f8520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isHwAutoAckDefault" ref="0x7f02a44b02b0" loc="112:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="108:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if hardware auto acks are the default, FALSE if software&#10;     acks are the default&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f02a4f6b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getExtAddr" ref="0x7f02a44b74d0" loc="66:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="63:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Get the long address of the radio: set in hardware&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:8" alignment="I:1"><struct-ref name="ieee_eui64" ref="0x7f02a4585020"/>
            <typename><typedef-ref name="ieee_eui64_t" ref="0x7f02a4585780"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getShortAddr" ref="0x7f02a44b7cc0" loc="71:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="68:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the short address of the radio.</short>
          <long>&#10; Change the short address of the radio.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f02a51f8520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sync" ref="0x7f02a44ba1f0" loc="54:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="48:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Sync configuration changes with the radio hardware.</short>
          <long>&#10; Sync configuration changes with the radio hardware. This only&#10; applies to set commands below.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f02a4f62cb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x7f02a44b9390" loc="60:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="57:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the channel of the radio, between 11 and 26&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f02a51f8160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getPanAddr" ref="0x7f02a44b5020" loc="77:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="74:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the PAN address of the radio.</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f02a51f8520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Read" loc="49:/home/hades/tinyos-new/tos/interfaces/Read.nc">
      <documentation loc="33:/home/hades/tinyos-new/tos/interfaces/Read.nc">
        <short>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values.</short>
        <long>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values. The type of the value is&#10; given as a template argument. Because this interface is&#10; split-phase, these values may be backed by hardware, or a&#10; long-running computation.&#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:14 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x7f02a44ae4b0" loc="49:/home/hades/tinyos-new/tos/interfaces/Read.nc">
          <interfacedef-ref qname="Read"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f02a44ae4b0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x7f02a44aed70" loc="55:/home/hades/tinyos-new/tos/interfaces/Read.nc">
        <documentation loc="50:/home/hades/tinyos-new/tos/interfaces/Read.nc">
          <short>&#10; Initiates a read of the value.</short>
          <long>&#10; Initiates a read of the value.&#10; &#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f02a4f62cb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x7f02a44abae0" loc="63:/home/hades/tinyos-new/tos/interfaces/Read.nc">
        <documentation loc="57:/home/hades/tinyos-new/tos/interfaces/Read.nc">
          <short>&#10; Signals the completion of the read().</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f02a4f62cb0"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f02a44ae4b0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7f02a44ab530" loc="63:/home/hades/tinyos-new/tos/interfaces/Read.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f02a4f62cb0"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x7f02a44ab850" loc="63:/home/hades/tinyos-new/tos/interfaces/Read.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f02a44ae4b0"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Register" loc="47:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Register.nc">
      <documentation loc="33:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Register.nc">
        <short>&#10; Interface representing one of the Read/Write registers on the&#10; CC2420 radio.</short>
        <long>&#10; Interface representing one of the Read/Write registers on the&#10; CC2420 radio. The return values (when appropriate) refer to the&#10; status byte returned on the CC2420 SO pin. A full list of RW&#10; registers can be found on page 61 of the CC2420 datasheet (rev&#10; 1.2). Page 25 of the same document describes the protocol for&#10; interacting with these registers over the CC2420 SPI bus.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.3 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x7f02a4481c10" loc="55:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Register.nc">
        <documentation loc="49:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Register.nc">
          <short>&#10; Read a 16-bit data word from the register.</short>
          <long>&#10; Read a 16-bit data word from the register.&#10;&#10; @param data pointer to place the register value.&#10; @return status byte from the read.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Register"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f02a48edd20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7f02a51f8520"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f02a4481990" loc="55:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Register.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7f02a51f8520"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f02a4480710" loc="63:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Register.nc">
        <documentation loc="57:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Register.nc">
          <short>&#10; Write a 16-bit data word to the register.</short>
          <long>&#10; Write a 16-bit data word to the register.&#10; &#10; @param data value to write to register.&#10; @return status byte from the write.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Register"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f02a48edd20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f02a51f8520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f02a4480490" loc="63:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Register.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f02a51f8520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalIeeeEui64" loc="43:/home/hades/tinyos-new/tos/interfaces/LocalIeeeEui64.nc">
      <documentation loc="39:/home/hades/tinyos-new/tos/interfaces/LocalIeeeEui64.nc">
        <short>&#10; Interface to read the 64-bit IEEE EUI.</short>
        <long>&#10; Interface to read the 64-bit IEEE EUI.&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="getId" ref="0x7f02a44a0c60" loc="48:/home/hades/tinyos-new/tos/interfaces/LocalIeeeEui64.nc">
        <documentation loc="44:/home/hades/tinyos-new/tos/interfaces/LocalIeeeEui64.nc">
          <short>&#10; Get the 64-bit IEEE EUI.</short>
          <long>&#10; Get the 64-bit IEEE EUI.&#10; @returns the 64-bit IEEE EUI type, defined in tos/types/IeeeEui64.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalIeeeEui64"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:8" alignment="I:1"><struct-ref name="ieee_eui64" ref="0x7f02a4585020"/>
            <typename><typedef-ref name="ieee_eui64_t" ref="0x7f02a4585780"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="56:/home/hades/tinyos-new/tos/lib/timer/Alarm.nc">
      <documentation loc="36:/home/hades/tinyos-new/tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f02a449c020" loc="56:/home/hades/tinyos-new/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f02a449c020"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f02a449c260" loc="56:/home/hades/tinyos-new/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f02a449c260"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x7f02a4499e00" loc="109:/home/hades/tinyos-new/tos/lib/timer/Alarm.nc">
        <documentation loc="105:/home/hades/tinyos-new/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f02a449c260"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f02a449be40" loc="78:/home/hades/tinyos-new/tos/lib/timer/Alarm.nc">
        <documentation loc="75:/home/hades/tinyos-new/tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
          <long>&#10; Signaled when the alarm expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x7f02a4499460" loc="103:/home/hades/tinyos-new/tos/lib/timer/Alarm.nc">
        <documentation loc="90:/home/hades/tinyos-new/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f02a449c260"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f02a449c260"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7f02a449ae60" loc="103:/home/hades/tinyos-new/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f02a449c260"/></type-var>
          </variable>
          <variable name="dt" ref="0x7f02a44991d0" loc="103:/home/hades/tinyos-new/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f02a449c260"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x7f02a449a640" loc="88:/home/hades/tinyos-new/tos/lib/timer/Alarm.nc">
        <documentation loc="81:/home/hades/tinyos-new/tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f02a4f6b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x7f02a4497620" loc="116:/home/hades/tinyos-new/tos/lib/timer/Alarm.nc">
        <documentation loc="111:/home/hades/tinyos-new/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f02a449c260"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7f02a449cdc0" loc="66:/home/hades/tinyos-new/tos/lib/timer/Alarm.nc">
        <documentation loc="59:/home/hades/tinyos-new/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f02a449c260"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f02a449cb40" loc="66:/home/hades/tinyos-new/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f02a449c260"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f02a449b680" loc="73:/home/hades/tinyos-new/tos/lib/timer/Alarm.nc">
        <documentation loc="68:/home/hades/tinyos-new/tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageAddress" loc="38:/home/hades/tinyos-new/tos/interfaces/ActiveMessageAddress.nc">
      <documentation loc="34:/home/hades/tinyos-new/tos/interfaces/ActiveMessageAddress.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="amAddress" ref="0x7f02a4489560" loc="50:/home/hades/tinyos-new/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="47:/home/hades/tinyos-new/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the active message address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7f02a48fb9b0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="changed" ref="0x7f02a44884f0" loc="60:/home/hades/tinyos-new/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="57:/home/hades/tinyos-new/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Notification that the address or group settings changed.</short>
          <long>&#10; Notification that the address or group settings changed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="amGroup" ref="0x7f02a4489d40" loc="55:/home/hades/tinyos-new/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="52:/home/hades/tinyos-new/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the group address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7f02a48fb5d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddress" ref="0x7f02a448acd0" loc="45:/home/hades/tinyos-new/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="40:/home/hades/tinyos-new/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Set the active message address of this node&#10; </short>
          <long>&#10; Set the active message address of this node&#10; @param group The node's group ID&#10; @param addr The node's active message address&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7f02a48fb5d0"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f02a48fb9b0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="group" ref="0x7f02a448a6f0" loc="45:/home/hades/tinyos-new/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7f02a48fb5d0"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x7f02a448aa40" loc="45:/home/hades/tinyos-new/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f02a48fb9b0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Strobe" loc="44:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Strobe.nc">
      <documentation loc="33:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Strobe.nc">
        <short>&#10; Interface representing one of the CC2420 command strobe registers.</short>
        <long>&#10; Interface representing one of the CC2420 command strobe registers.&#10; Writing to one of these registers enacts a command on the CC2420,&#10; such as power-up, transmission, or clear a FIFO.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.3 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="strobe" ref="0x7f02a447ce50" loc="53:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Strobe.nc">
        <documentation loc="46:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Strobe.nc">
          <short>&#10; Send a command strobe to the register.</short>
          <long>&#10; Send a command strobe to the register. The return value is the&#10; CC2420 status register. Table 5 on page 27 of the CC2420&#10; datasheet (v1.2) describes the contents of this register.&#10; &#10; @return Status byte from the CC2420.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Strobe"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f02a48edd20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Ram" loc="41:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Ram.nc">
      <documentation loc="32:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <short>&#10; HAL abstraction for accessing theRAM of a ChipCon CC2420 radio.</short>
        <long>&#10; HAL abstraction for accessing theRAM of a ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x7f02a4486e80" loc="52:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <documentation loc="43:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Ram.nc">
          <short>&#10; Read data from a RAM.</short>
          <long>&#10; Read data from a RAM. This operation is sychronous.&#10;&#10; @param offset within the field.&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return status byte returned when sending the last byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Ram"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f02a48edd20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f02a51f8160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f02a51f8160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f02a51f8160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x7f02a4486020" loc="52:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f02a51f8160"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7f02a4486890" loc="52:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f02a51f8160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f02a4486be0" loc="52:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f02a51f8160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f02a4483610" loc="63:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <documentation loc="54:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Ram.nc">
          <short>&#10; Write data to RAM.</short>
          <long>&#10; Write data to RAM. This operation is sychronous.&#10;&#10; @param offset within the field.&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes to write.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Ram"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f02a48edd20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f02a51f8160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f02a51f8160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f02a51f8160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x7f02a4484770" loc="63:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f02a51f8160"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7f02a4483020" loc="63:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f02a51f8160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f02a4483370" loc="63:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f02a51f8160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioInterrupt" loc="43:/home/hades/tinyos-new/tos/interfaces/GpioInterrupt.nc">
      <documentation loc="34:/home/hades/tinyos-new/tos/interfaces/GpioInterrupt.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.5 $&#10;&#10; Provides a microcontroller-independent presentation of interrupts&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7f02a448dc30" loc="68:/home/hades/tinyos-new/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="63:/home/hades/tinyos-new/tos/interfaces/GpioInterrupt.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; NOTE: Interrupts keep running until &#34;disable()&#34; is called&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x7f02a448d470" loc="61:/home/hades/tinyos-new/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="56:/home/hades/tinyos-new/tos/interfaces/GpioInterrupt.nc">
          <short>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; </short>
          <long>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; @return SUCCESS if the interrupt has been disabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f02a4f62cb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableFallingEdge" ref="0x7f02a448ece0" loc="54:/home/hades/tinyos-new/tos/interfaces/GpioInterrupt.nc">
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f02a4f62cb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRisingEdge" ref="0x7f02a448e420" loc="53:/home/hades/tinyos-new/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="45:/home/hades/tinyos-new/tos/interfaces/GpioInterrupt.nc">
          <short> &#10; Enable an edge based interrupt.</short>
          <long> &#10; Enable an edge based interrupt. Calls to these functions are&#10; not cumulative: only the transition type of the last called function&#10; will be monitored for.&#10;&#10;&#10; @return SUCCESS if the interrupt has been enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f02a4f62cb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="57:/home/hades/tinyos-new/tos/lib/timer/Counter.nc">
      <documentation loc="36:/home/hades/tinyos-new/tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f02a43774f0" loc="57:/home/hades/tinyos-new/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f02a43774f0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f02a4377730" loc="57:/home/hades/tinyos-new/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f02a4377730"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7f02a4376070" loc="64:/home/hades/tinyos-new/tos/lib/timer/Counter.nc">
        <documentation loc="59:/home/hades/tinyos-new/tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f02a4377730"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7f02a4375190" loc="76:/home/hades/tinyos-new/tos/lib/timer/Counter.nc">
        <documentation loc="73:/home/hades/tinyos-new/tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7f02a43768f0" loc="71:/home/hades/tinyos-new/tos/lib/timer/Counter.nc">
        <documentation loc="66:/home/hades/tinyos-new/tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f02a4f6b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x7f02a43758f0" loc="82:/home/hades/tinyos-new/tos/lib/timer/Counter.nc">
        <documentation loc="78:/home/hades/tinyos-new/tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioCapture" loc="46:/home/hades/tinyos-new/tos/interfaces/GpioCapture.nc">
      <documentation loc="34:/home/hades/tinyos-new/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="captureFallingEdge" ref="0x7f02a42b0bb0" loc="54:/home/hades/tinyos-new/tos/interfaces/GpioCapture.nc">
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f02a4f62cb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x7f02a42afd70" loc="66:/home/hades/tinyos-new/tos/interfaces/GpioCapture.nc">
        <documentation loc="63:/home/hades/tinyos-new/tos/interfaces/GpioCapture.nc">
          <short>&#10; Disable further captures.</short>
          <long>&#10; Disable further captures.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x7f02a42af5c0" loc="61:/home/hades/tinyos-new/tos/interfaces/GpioCapture.nc">
        <documentation loc="56:/home/hades/tinyos-new/tos/interfaces/GpioCapture.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; @param val The value of the 32kHz timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f02a51f8520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7f02a42af340" loc="61:/home/hades/tinyos-new/tos/interfaces/GpioCapture.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f02a51f8520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="captureRisingEdge" ref="0x7f02a42b0350" loc="53:/home/hades/tinyos-new/tos/interfaces/GpioCapture.nc">
        <documentation loc="48:/home/hades/tinyos-new/tos/interfaces/GpioCapture.nc">
          <short> &#10; Enable an edge based timer capture event.</short>
          <long> &#10; Enable an edge based timer capture event.&#10;&#10; @return Whether the timer capture has been enabled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f02a4f62cb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430Interrupt" loc="37:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
      <documentation loc="33:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7f02a428bae0" loc="52:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="49:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Clears the MSP430 Interrupt Pending Flag for a particular port.</short>
          <long> &#10; Clears the MSP430 Interrupt Pending Flag for a particular port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f02a4288670" loc="72:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="69:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short>&#10; Signalled when an interrupt occurs on a port.</short>
          <long>&#10; Signalled when an interrupt occurs on a port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x7f02a428b350" loc="47:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="44:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Disables MSP430 hardware interrupt on a particular port.</short>
          <long> &#10; Disables MSP430 hardware interrupt on a particular port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="edge" ref="0x7f02a4289d90" loc="67:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="61:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Sets whether the edge should be high to low or low to high.</short>
          <long> &#10; Sets whether the edge should be high to low or low to high.&#10;&#10; @param TRUE if the interrupt should be triggered on a low to high&#10;        edge transition, false for interrupts on a high to low transition.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f02a4f6b090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="low_to_high" ref="0x7f02a4289b10" loc="67:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f02a4f6b090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enable" ref="0x7f02a428eb10" loc="42:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="39:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Enables MSP430 hardware interrupt on a particular port.</short>
          <long> &#10; Enables MSP430 hardware interrupt on a particular port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getValue" ref="0x7f02a4289350" loc="59:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="54:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Gets the current value of the input voltage of a port.</short>
          <long> &#10; Gets the current value of the input voltage of a port.&#10;&#10; @return TRUE if the pin is set high, FALSE if it is set low.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f02a4f6b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ChipSpiResource" loc="17:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
      <documentation loc="2:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <short>&#10; Interface for the SPI resource for an entire chip.</short>
        <long>&#10; Interface for the SPI resource for an entire chip.  The chip accesses&#10; the platform SPI resource one time, but can have multiple clients &#10; using the SPI bus on top.  When all of the clients are released, the&#10; chip will normally try to release itself from the platforms SPI bus.&#10; In some cases, this isn't desirable - so even though upper components&#10; aren't actively using the SPI bus, they can tell the chip to hold onto&#10; it so they can have immediate access when they need. &#10;&#10; Any component that aborts a release MUST attempt the release at a later&#10; time if they don't acquire and release the SPI bus naturally after the&#10; abort.&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="releasing" ref="0x7f02a4178bc0" loc="24:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="19:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; The SPI bus is about to be automatically released.</short>
          <long>&#10; The SPI bus is about to be automatically released.  Modules that aren't&#10; using the SPI bus but still want the SPI bus to stick around must call&#10; abortRelease() within the event.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="abortRelease" ref="0x7f02a41754a0" loc="31:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="27:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; Abort the release of the SPI bus.</short>
          <long>&#10; Abort the release of the SPI bus.  This must be called only with the&#10; releasing() event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="attemptRelease" ref="0x7f02a4175ce0" loc="39:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="33:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; Release the SPI bus if there are no objections&#10; </short>
          <long>&#10; Release the SPI bus if there are no objections&#10; @return SUCCESS if the SPI bus is released from the chip.&#10;      FAIL if the SPI bus is already in use.&#10;      EBUSY if some component aborted the release.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f02a4f62cb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Fifo" loc="40:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
      <documentation loc="32:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <short>&#10; HAL abstraction for accessing the FIFO registers of a ChipCon&#10; CC2420 radio.</short>
        <long>&#10; HAL abstraction for accessing the FIFO registers of a ChipCon&#10; CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="continueRead" ref="0x7f02a414eb60" loc="62:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="53:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Continue reading from the FIFO without having to send the address&#10; byte again.</short>
          <long>&#10; Continue reading from the FIFO without having to send the address&#10; byte again. The &#60;code>readDone&#60;/code> event will be signalled&#10; upon completion.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f02a4f62cb0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f02a51f8160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f02a51f8160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f02a414e580" loc="62:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f02a51f8160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f02a414e8d0" loc="62:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f02a51f8160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="writeDone" ref="0x7f02a4149dd0" loc="91:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="84:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Signals the completion of a write operation.</short>
          <long>&#10; Signals the completion of a write operation.&#10;&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes written.&#10; @param error notification of how the operation went&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f02a51f8160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f02a51f8160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f02a4f62cb0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f02a4149490" loc="91:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f02a51f8160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f02a41497e0" loc="91:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f02a51f8160"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7f02a4149b30" loc="91:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f02a4f62cb0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f02a414a6b0" loc="82:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="73:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Start writing the FIFO.</short>
          <long>&#10; Start writing the FIFO. The &#60;code>writeDone&#60;/code> event will be&#10; signalled upon completion.&#10;&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes to write.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f02a48edd20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f02a51f8160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f02a51f8160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f02a414a0d0" loc="82:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f02a51f8160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f02a414a420" loc="82:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f02a51f8160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="beginRead" ref="0x7f02a414f730" loc="51:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="42:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Start reading from the FIFO.</short>
          <long>&#10; Start reading from the FIFO. The &#60;code>readDone&#60;/code> event will&#10; be signalled upon completion.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f02a48edd20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f02a51f8160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f02a51f8160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f02a414f150" loc="51:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f02a51f8160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f02a414f4a0" loc="51:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f02a51f8160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x7f02a414c2c0" loc="71:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="64:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Signals the completion of a read operation.</short>
          <long>&#10; Signals the completion of a read operation.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes read.&#10; @param error notification of how the operation went&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f02a51f8160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f02a51f8160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f02a4f62cb0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f02a414d930" loc="71:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f02a51f8160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f02a414dc80" loc="71:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f02a51f8160"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7f02a414c020" loc="71:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f02a4f62cb0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiPacket" loc="60:/home/hades/tinyos-new/tos/interfaces/SpiPacket.nc">
      <documentation loc="34:/home/hades/tinyos-new/tos/interfaces/SpiPacket.nc">
        <short>&#10; SPI Packet/buffer interface for sending data over an SPI bus.</short>
        <long>&#10; SPI Packet/buffer interface for sending data over an SPI bus.  This&#10; interface provides a split-phase send command which can be used for&#10; sending, receiving or both.&#10;&#10; The SPI bus both sends and receives at the same time.  So this interface&#10; can be used to send, receive, or both.  The send call allows NULL&#10; parameters for receive or send only operations. This interface is&#10; for buffer based transfers where the microcontroller is the master&#10; (clocking) device.&#10;&#10; This is split phase and typically is implemented using interrupts.  However&#10; as the SPI clock is increased the interrupt overhead become more onerous&#10; wrt each byte time being transfered.  See SpiBLock for a single phase&#10; transfer mechanism that doesn't have interrupt overhead issues.&#10;&#10; Often, an SPI bus must first be acquired using a Resource interface&#10; before sending commands with SPIPacket. In the case of multiple&#10; devices attached to a single SPI bus, chip select pins are often also&#10; used.&#10;&#10; @author Philip Levis&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @author Eric B. Decker&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f02a412fdf0" loc="76:/home/hades/tinyos-new/tos/interfaces/SpiPacket.nc">
        <documentation loc="62:/home/hades/tinyos-new/tos/interfaces/SpiPacket.nc">
          <short>&#10; Send a message over the SPI bus.</short>
          <long>&#10; Send a message over the SPI bus.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' A pointer to the buffer to send over the bus. If this&#10;              parameter is NULL, then the SPI will send zeroes.&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' A pointer to the buffer where received data should&#10;              be stored. If this parameter is NULL, then the SPI will&#10;              discard incoming bytes.&#10; @param len   Length of the message.  Note that non-NULL rxBuf and txBuf&#10;              parameters must be AT LEAST as large as len, or the SPI&#10;              will overflow a buffer.&#10;&#10; @return SUCCESS if the request was accepted for transfer&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f02a4f62cb0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f02a51f8160"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f02a51f8160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f02a51f8520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x7f02a412f480" loc="76:/home/hades/tinyos-new/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f02a51f8160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x7f02a412f810" loc="76:/home/hades/tinyos-new/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f02a51f8160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f02a412fb50" loc="76:/home/hades/tinyos-new/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f02a51f8520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f02a412c3c0" loc="88:/home/hades/tinyos-new/tos/interfaces/SpiPacket.nc">
        <documentation loc="78:/home/hades/tinyos-new/tos/interfaces/SpiPacket.nc">
          <short>&#10; Notification that the send command has completed.</short>
          <long>&#10; Notification that the send command has completed.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' The buffer used for transmission&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' The buffer used for reception&#10; @param len    The request length of the transfer, but not necessarily&#10;               the number of bytes that were actually transferred&#10; @param error  SUCCESS if the operation completed successfully, FAIL&#10;               otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f02a51f8160"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f02a51f8160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f02a51f8520"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f02a4f62cb0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x7f02a412b6a0" loc="88:/home/hades/tinyos-new/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f02a51f8160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x7f02a412ba30" loc="88:/home/hades/tinyos-new/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f02a51f8160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f02a412bd70" loc="88:/home/hades/tinyos-new/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f02a51f8520"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7f02a412c110" loc="89:/home/hades/tinyos-new/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f02a4f62cb0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiByte" loc="38:/home/hades/tinyos-new/tos/interfaces/SpiByte.nc">
      <documentation loc="34:/home/hades/tinyos-new/tos/interfaces/SpiByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="write" ref="0x7f02a4133ca0" loc="45:/home/hades/tinyos-new/tos/interfaces/SpiByte.nc">
        <documentation loc="40:/home/hades/tinyos-new/tos/interfaces/SpiByte.nc">
          <short>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; </short>
          <long>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; @param tx Byte to transmit&#10; @param rx Received byte is stored here.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f02a51f8160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f02a51f8160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="tx" ref="0x7f02a4133a20" loc="45:/home/hades/tinyos-new/tos/interfaces/SpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f02a51f8160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceRequested" loc="46:/home/hades/tinyos-new/tos/interfaces/ResourceRequested.nc">
      <documentation loc="33:/home/hades/tinyos-new/tos/interfaces/ResourceRequested.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.5 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="requested" ref="0x7f02a404e6f0" loc="53:/home/hades/tinyos-new/tos/interfaces/ResourceRequested.nc">
        <documentation loc="47:/home/hades/tinyos-new/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x7f02a404d070" loc="61:/home/hades/tinyos-new/tos/interfaces/ResourceRequested.nc">
        <documentation loc="55:/home/hades/tinyos-new/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430SpiConfigure" loc="38:/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430SpiConfigure.nc">
      <documentation loc="31:/home/hades/tinyos-new/tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getConfig" ref="0x7f02a4046710" loc="39:/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430SpiConfigure.nc">
        <interfacedef-ref qname="Msp430SpiConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:4" alignment="I:2"><union-ref ref="0x7f02a4081020"/>
              <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x7f02a4081440"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="FastSpiByte" loc="55:/home/hades/tinyos-new/tos/interfaces/FastSpiByte.nc">
      <documentation loc="35:/home/hades/tinyos-new/tos/interfaces/FastSpiByte.nc">
        <short>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface.</short>
        <long>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface. You may want to&#10; use the following code sequence to write a buffer as fast as possible&#10;&#10;&#9;uint8_t *data;&#10;&#9;uint8_t *response;&#10;&#10;&#9;// start the first byte&#10;&#9;call FastSpiByte.splitWrite(data[0]);&#10;&#9;for(i = 1; i &#60; length; ++i) {&#10;&#9;   // finish the previous one and write the next one&#10;&#9;  response[i-1] = call FastSpiByte.splitReadWrite(data[i]);&#10;&#9;}&#10;&#9;// finish the last byte&#10;&#9;response[length-1] = call FastSpiByte.splitRead();&#10;&#10; You can also do some useful computation (like calculate a CRC) while the&#10; hardware is sending the byte.&#10;</long>
      </documentation>
      <function command="" provided="0" name="splitWrite" ref="0x7f02a404b2a0" loc="62:/home/hades/tinyos-new/tos/interfaces/FastSpiByte.nc">
        <documentation loc="57:/home/hades/tinyos-new/tos/interfaces/FastSpiByte.nc">
          <short>&#10; Starts a split-phase SPI data transfer with the given data.</short>
          <long>&#10; Starts a split-phase SPI data transfer with the given data.&#10; A splitRead/splitReadWrite command must follow this command even &#10; if the result is unimportant.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f02a51f8160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f02a404b020" loc="62:/home/hades/tinyos-new/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f02a51f8160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitReadWrite" ref="0x7f02a404a680" loc="74:/home/hades/tinyos-new/tos/interfaces/FastSpiByte.nc">
        <documentation loc="70:/home/hades/tinyos-new/tos/interfaces/FastSpiByte.nc">
          <short>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns.</short>
          <long>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns. &#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f02a51f8160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f02a51f8160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f02a404a400" loc="74:/home/hades/tinyos-new/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f02a51f8160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitRead" ref="0x7f02a404bb10" loc="68:/home/hades/tinyos-new/tos/interfaces/FastSpiByte.nc">
        <documentation loc="64:/home/hades/tinyos-new/tos/interfaces/FastSpiByte.nc">
          <short>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.</short>
          <long>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f02a51f8160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f02a40492a0" loc="81:/home/hades/tinyos-new/tos/interfaces/FastSpiByte.nc">
        <documentation loc="76:/home/hades/tinyos-new/tos/interfaces/FastSpiByte.nc">
          <short>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.</short>
          <long>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.&#10; (To be consistent, this command could have be named splitWriteRead).&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f02a51f8160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f02a51f8160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f02a4049020" loc="81:/home/hades/tinyos-new/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f02a51f8160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceConfigure" loc="54:/home/hades/tinyos-new/tos/interfaces/ResourceConfigure.nc">
      <documentation loc="41:/home/hades/tinyos-new/tos/interfaces/ResourceConfigure.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.  It will always be parameterized along side &#10; a parameterized Resource interface, with the ids from one mapping directly&#10; onto the ids of the other.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="unconfigure" ref="0x7f02a4040ca0" loc="65:/home/hades/tinyos-new/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="61:/home/hades/tinyos-new/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to unconfigure a resource just before releasing it.</short>
          <long>&#10; Used to unconfigure a resource just before releasing it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0x7f02a4040480" loc="59:/home/hades/tinyos-new/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="55:/home/hades/tinyos-new/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to configure a resource just before being granted access to it.</short>
          <long>&#10; Used to configure a resource just before being granted access to it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430UsartInterrupts" loc="43:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
      <documentation loc="31:/home/hades/tinyos-new/tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function event="" provided="0" name="rxDone" ref="0x7f02a40372a0" loc="54:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
        <documentation loc="51:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
          <short>&#10; A byte of data has been received.</short>
          <long>&#10; A byte of data has been received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f02a51f8160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f02a4037020" loc="54:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f02a51f8160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="txDone" ref="0x7f02a4039780" loc="49:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
        <documentation loc="45:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
          <short>&#10; A byte of data is about to be transmitted, ie.</short>
          <long>&#10; A byte of data is about to be transmitted, ie. the TXBuffer is&#10; empty and ready to accept next byte.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430Usart" loc="45:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430Usart.nc">
      <documentation loc="31:/home/hades/tinyos-new/tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="isTxEmpty" ref="0x7f02a4014af0" loc="213:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="209:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; SUCCESS if the TX buffer is empty and all of the bits have been&#10; shifted out&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f02a4f6b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUartRx" ref="0x7f02a401f790" loc="143:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="140:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the Uart RX functionality of the USART module.</short>
          <long>&#10; Enables the Uart RX functionality of the USART module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUctl" ref="0x7f02a402c610" loc="50:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="47:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxCTL Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f02a409d080"/>
              <typename><typedef-ref name="msp430_uctl_t" ref="0x7f02a409d8c0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f02a402c390" loc="50:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f02a409d080"/>
              <typename><typedef-ref name="msp430_uctl_t" ref="0x7f02a409d8c0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUart" ref="0x7f02a4022870" loc="123:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="120:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables both the Rx and the Tx Uart modules.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUrctl" ref="0x7f02a402aa90" loc="70:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="67:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxRCTL Receive Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f02a4099080"/>
              <typename><typedef-ref name="msp430_urctl_t" ref="0x7f02a40998c0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f02a402a810" loc="70:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f02a4099080"/>
              <typename><typedef-ref name="msp430_urctl_t" ref="0x7f02a40998c0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRxIntr" ref="0x7f02a4019e70" loc="180:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrRxIntr" ref="0x7f02a4015480" loc="197:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="194:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears RX interrupt pending flag&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getUtctl" ref="0x7f02a402a070" loc="65:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="62:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxTCTL Transmit Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f02a409b020"/>
            <typename><typedef-ref name="msp430_utctl_t" ref="0x7f02a409b7b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getUrctl" ref="0x7f02a40282b0" loc="75:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="72:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxRCTL Receive Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f02a4099080"/>
            <typename><typedef-ref name="msp430_urctl_t" ref="0x7f02a40998c0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetUsart" ref="0x7f02a4024020" loc="97:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f02a4f6b090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reset" ref="0x7f02a4026d30" loc="97:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f02a4f6b090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUmctl" ref="0x7f02a4026610" loc="95:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="92:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxMCTL Modulation Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f02a51f8160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableIntr" ref="0x7f02a4019740" loc="179:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUtctl" ref="0x7f02a402b840" loc="60:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="57:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxTCTL Transmit Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f02a409b020"/>
              <typename><typedef-ref name="msp430_utctl_t" ref="0x7f02a409b7b0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f02a402b5c0" loc="60:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f02a409b020"/>
              <typename><typedef-ref name="msp430_utctl_t" ref="0x7f02a409b7b0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUbr" ref="0x7f02a4027420" loc="85:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="82:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxBR0 and UxBR1 Baud Rate Control Registers&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f02a51f8520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableTxIntr" ref="0x7f02a40185d0" loc="181:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUmctl" ref="0x7f02a4027e00" loc="90:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="87:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxMCTL Modulation Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f02a51f8160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="umctl" ref="0x7f02a4027b80" loc="90:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f02a51f8160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isUartRx" ref="0x7f02a4023910" loc="113:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="110:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART has Uart RX mode enabled&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f02a4f6b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isUart" ref="0x7f02a40220e0" loc="118:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="115:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART is set to Uart mode (both RX and TX)&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f02a4f6b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableRxIntr" ref="0x7f02a401a840" loc="177:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isSpi" ref="0x7f02a401d790" loc="163:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="160:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART is set to Spi mode&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f02a4f6b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUartTx" ref="0x7f02a40217e0" loc="133:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="130:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the Uart TX functionality of the USART module.</short>
          <long>&#10; Enables the Uart TX functionality of the USART module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableTxIntr" ref="0x7f02a4019020" loc="178:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUartRx" ref="0x7f02a401e020" loc="148:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="145:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the Uart RX module.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableIntr" ref="0x7f02a4018cf0" loc="182:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x7f02a4024800" loc="103:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="99:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns an enum value corresponding to the current mode of the&#10; USART module.</short>
          <long>&#10; Returns an enum value corresponding to the current mode of the&#10; USART module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref ref="0x7f02a40a4df0"/>
            <typename><typedef-ref name="msp430_usartmode_t" ref="0x7f02a40a0680"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isTxIntrPending" ref="0x7f02a40164c0" loc="187:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="184:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; TRUE if TX interrupt pending, flag must be cleared explicitly&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f02a4f6b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrIntr" ref="0x7f02a4014350" loc="207:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="204:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears both TX and RX interrupt pending flags&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUbr" ref="0x7f02a4028c50" loc="80:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="77:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxBR0 and UxBR1 Baud Rate Control Registers&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f02a51f8520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ubr" ref="0x7f02a40289d0" loc="80:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f02a51f8520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="tx" ref="0x7f02a40134d0" loc="224:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="215:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Transmit a byte of data.</short>
          <long>&#10; Transmit a byte of data. When the transmission is completed,&#10; &#60;code>txDone&#60;/done> is generated. Only then a new byte may be&#10; transmitted, otherwise the previous byte will be overwritten.&#10; The mode of transmission (Uart or Spi) depends on the current&#10; state of the USART, which must be managed by a higher layer.&#10;&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f02a51f8160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f02a4013250" loc="224:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f02a51f8160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUctl" ref="0x7f02a402cdf0" loc="55:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="52:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxCTL Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f02a409d080"/>
            <typename><typedef-ref name="msp430_uctl_t" ref="0x7f02a409d8c0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUart" ref="0x7f02a4021020" loc="128:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="125:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables both the Rx and the Tx Uart modules.</short>
          <long>&#10; Disables both the Rx and the Tx Uart modules.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableSpi" ref="0x7f02a401e770" loc="153:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="150:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the USART when in Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeUart" ref="0x7f02a401a020" loc="174:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="170:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Switches USART to Uart mode (RX and TX enabled)&#10; Interrupts disabled by default.</short>
          <long>&#10; Switches USART to Uart mode (RX and TX enabled)&#10; Interrupts disabled by default.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7f02a406fe70"/>
                <typename><typedef-ref name="msp430_uart_union_config_t" ref="0x7f02a406e2b0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7f02a401ccf0" loc="174:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7f02a406fe70"/>
                <typename><typedef-ref name="msp430_uart_union_config_t" ref="0x7f02a406e2b0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeSpi" ref="0x7f02a401c2a0" loc="168:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="165:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Switches USART to Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:4" alignment="I:2"><union-ref ref="0x7f02a4081020"/>
                <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x7f02a4081440"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7f02a401c020" loc="168:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:4" alignment="I:2"><union-ref ref="0x7f02a4081020"/>
                <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x7f02a4081440"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="rx" ref="0x7f02a4013d90" loc="231:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="226:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Get current value from RX-buffer.</short>
          <long>&#10; Get current value from RX-buffer.&#10;&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f02a51f8160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRxIntrPending" ref="0x7f02a4016cb0" loc="192:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="189:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; TRUE if RX interrupt pending, flag must be cleared explicitly&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f02a4f6b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isUartTx" ref="0x7f02a4023070" loc="108:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="105:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART has Uart TX mode enabled&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f02a4f6b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrTxIntr" ref="0x7f02a4015be0" loc="202:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="199:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears TX interrupt pending flag&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableSpi" ref="0x7f02a401d020" loc="158:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="155:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the USART when in Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUartTx" ref="0x7f02a401f020" loc="138:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="135:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the Uart TX module.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430I2CInterrupts" loc="37:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
      <documentation loc="32:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:11 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7f02a3fac6e0" loc="39:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430I2C" loc="4:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430I2C.nc">
      <documentation loc="31:/home/hades/tinyos-new/tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="disableOwnAddress" ref="0x7f02a3f83070" loc="80:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getStartByte" ref="0x7f02a3f96b10" loc="31:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f02a4f6b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setSlaveAddress" ref="0x7f02a3f8bd50" loc="62:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f02a51f8520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7f02a3f8bad0" loc="62:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f02a51f8520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterMode" ref="0x7f02a3f9e270" loc="11:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableTransmitReady" ref="0x7f02a3f87350" loc="71:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPrescaler" ref="0x7f02a3f90cf0" loc="49:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f02a51f8160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTransmitMode" ref="0x7f02a3f97c50" loc="28:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getStopBit" ref="0x7f02a3f959c0" loc="34:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f02a4f6b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockSource" ref="0x7f02a3f99c00" loc="25:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f02a51f8160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="src" ref="0x7f02a3f99980" loc="25:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f02a51f8160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRepeatMode" ref="0x7f02a3f9a120" loc="21:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f02a4f6b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getData" ref="0x7f02a3f92790" loc="41:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f02a51f8160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableStartDetect" ref="0x7f02a3f89c80" loc="66:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableAccessReady" ref="0x7f02a3f848f0" loc="78:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getSlaveAddress" ref="0x7f02a3f8b390" loc="61:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f02a51f8520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isGeneralCallPending" ref="0x7f02a3f7fb60" loc="91:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f02a4f6b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getIV" ref="0x7f02a3f7a270" loc="100:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f02a51f8160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableI2C" ref="0x7f02a3f9d0e0" loc="14:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setStartBit" ref="0x7f02a3f92020" loc="38:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransferByteCount" ref="0x7f02a3f91910" loc="45:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f02a51f8160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransmitReceiveMode" ref="0x7f02a3f97500" loc="27:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f02a4f6b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearModeI2C" ref="0x7f02a3f9f020" loc="7:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setOwnAddress" ref="0x7f02a3f8cba0" loc="58:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f02a51f8520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7f02a3f8c920" loc="58:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f02a51f8520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isI2C" ref="0x7f02a3fa27e0" loc="6:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f02a4f6b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableGeneralCall" ref="0x7f02a3f88b80" loc="69:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableOwnAddress" ref="0x7f02a3f837d0" loc="81:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isAccessReadyPending" ref="0x7f02a3f7d350" loc="94:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f02a4f6b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isArbitrationLostPending" ref="0x7f02a3f7ca90" loc="97:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f02a4f6b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableReceiveReady" ref="0x7f02a3f86270" loc="74:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableNoAck" ref="0x7f02a3f82020" loc="83:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableStartDetect" ref="0x7f02a3f89520" loc="65:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableArbitrationLost" ref="0x7f02a3f80bb0" loc="87:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableI2C" ref="0x7f02a3f9d800" loc="15:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getShiftClock" ref="0x7f02a3f8d020" loc="53:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f02a51f8520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableArbitrationLost" ref="0x7f02a3f80020" loc="86:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableAccessReady" ref="0x7f02a3f84190" loc="77:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTransferByteCount" ref="0x7f02a3f90520" loc="46:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f02a51f8160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="count" ref="0x7f02a3f902a0" loc="46:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f02a51f8160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwnAddressPending" ref="0x7f02a3f7daf0" loc="95:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f02a4f6b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getOwnAddress" ref="0x7f02a3f8c1f0" loc="57:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f02a51f8520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableTransmitReady" ref="0x7f02a3f87ac0" loc="72:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeI2C" ref="0x7f02a3f9faa0" loc="8:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7f02a405bb90"/>
                <typename><typedef-ref name="msp430_i2c_union_config_t" ref="0x7f02a405a020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7f02a3f9f820" loc="8:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7f02a405bb90"/>
                <typename><typedef-ref name="msp430_i2c_union_config_t" ref="0x7f02a405a020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getStartBit" ref="0x7f02a3f94870" loc="37:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f02a4f6b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setWordMode" ref="0x7f02a3f9b980" loc="19:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f02a4f6b090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7f02a3f9b700" loc="19:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f02a4f6b090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setData" ref="0x7f02a3f91120" loc="42:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f02a51f8160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f02a3f92e70" loc="42:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f02a51f8160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isStartDetectPending" ref="0x7f02a3f7f3b0" loc="90:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f02a4f6b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockSource" ref="0x7f02a3f99270" loc="24:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f02a51f8160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getWordMode" ref="0x7f02a3f9b020" loc="18:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f02a4f6b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setShiftClock" ref="0x7f02a3f8d9e0" loc="54:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f02a51f8520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="shift" ref="0x7f02a3f8d760" loc="54:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f02a51f8520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSlaveMode" ref="0x7f02a3f9e9a0" loc="12:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableNoAck" ref="0x7f02a3f82740" loc="84:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableReceiveReady" ref="0x7f02a3f869e0" loc="75:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableGeneralCall" ref="0x7f02a3f88420" loc="68:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPrescaler" ref="0x7f02a3f8f740" loc="50:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f02a51f8160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scaler" ref="0x7f02a3f8f4c0" loc="50:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f02a51f8160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setStopBit" ref="0x7f02a3f94120" loc="35:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setReceiveMode" ref="0x7f02a3f963b0" loc="29:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isNoAckPending" ref="0x7f02a3f7c2b0" loc="96:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f02a4f6b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setRepeatMode" ref="0x7f02a3f9aaa0" loc="22:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f02a4f6b090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7f02a3f9a820" loc="22:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f02a4f6b090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isTransmitReadyPending" ref="0x7f02a3f7e350" loc="92:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f02a4f6b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setStartByte" ref="0x7f02a3f95270" loc="32:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isReceiveReadyPending" ref="0x7f02a3f7eb10" loc="93:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f02a4f6b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ArbiterInfo" loc="82:/home/hades/tinyos-new/tos/interfaces/ArbiterInfo.nc">
      <documentation loc="69:/home/hades/tinyos-new/tos/interfaces/ArbiterInfo.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.  It must be provided by ALL arbiter implementations,&#10; and can be used for a variety of different purposes.  Normally it will be&#10; used in conjunction with the Resource interface for performing run time&#10; checks on access rights to a particular shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="inUse" ref="0x7f02a3ee0780" loc="90:/home/hades/tinyos-new/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="83:/home/hades/tinyos-new/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Check whether a resource is currently allocated.</short>
          <long>&#10; Check whether a resource is currently allocated.&#10;&#10; @return TRUE If the resource being arbitrated is currently allocated&#10;              to any of its users&#60;br>&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f02a4f6b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="userId" ref="0x7f02a3edf020" loc="98:/home/hades/tinyos-new/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="92:/home/hades/tinyos-new/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Get the id of the client currently using a resource.</short>
          <long>&#10; Get the id of the client currently using a resource.&#10; &#10; @return Id of the current owner of the resource&#60;br>&#10;         0xFF if no one currently owns the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f02a51f8160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceDefaultOwner" loc="40:/home/hades/tinyos-new/tos/interfaces/ResourceDefaultOwner.nc">
      <documentation loc="31:/home/hades/tinyos-new/tos/interfaces/ResourceDefaultOwner.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; </short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.edu)&#10; @version $ $&#10; @date $Date: 2007-02-04 20:06:42 $ &#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x7f02a3ea8900" loc="56:/home/hades/tinyos-new/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="48:/home/hades/tinyos-new/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Release control of the resource&#10;&#10; </short>
          <long>&#10; Release control of the resource&#10;&#10; @return SUCCESS The resource has been released and pending requests&#10;                 can resume. &#60;br>&#10;             FAIL You tried to release but you are not the&#10;                  owner of the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f02a4f62cb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="requested" ref="0x7f02a3ea6a20" loc="73:/home/hades/tinyos-new/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="67:/home/hades/tinyos-new/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x7f02a3ea8070" loc="46:/home/hades/tinyos-new/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="41:/home/hades/tinyos-new/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle.</short>
          <long>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle. That is to say, whenever no one currently owns the resource,&#10; and there are no more pending requests&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x7f02a3ea61f0" loc="65:/home/hades/tinyos-new/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="58:/home/hades/tinyos-new/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  @return TRUE  It is the owner &#60;br>&#10;          FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f02a4f6b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x7f02a3ea5390" loc="81:/home/hades/tinyos-new/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="75:/home/hades/tinyos-new/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceQueue" loc="45:/home/hades/tinyos-new/tos/interfaces/ResourceQueue.nc">
      <documentation loc="33:/home/hades/tinyos-new/tos/interfaces/ResourceQueue.nc">
        <short>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration.</short>
        <long>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration. A single slot in the queue is guaranteed to each resource&#10;  client, with the actual queing policy determined by the implementation&#10;  of the interface.&#10;&#10;  @author Kevin Klues &#60;klueska@cs.wustl.edu>&#10;  @date   $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="enqueue" ref="0x7f02a3e9bb60" loc="79:/home/hades/tinyos-new/tos/interfaces/ResourceQueue.nc">
        <documentation loc="72:/home/hades/tinyos-new/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Enqueue a client id&#10;&#10; </short>
          <long>&#10; Enqueue a client id&#10;&#10; @param clientId - the client id to enqueue&#10; @return SUCCESS if the client id was enqueued successfully &#60;br>&#10;         EBUSY   if it has already been enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f02a4f62cb0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f02a3ea4b40"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7f02a3e9b8e0" loc="79:/home/hades/tinyos-new/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f02a3ea4b40"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0x7f02a3e9fb90" loc="53:/home/hades/tinyos-new/tos/interfaces/ResourceQueue.nc">
        <documentation loc="47:/home/hades/tinyos-new/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if the queue is empty.</short>
          <long>&#10; Check to see if the queue is empty.&#10;&#10; @return TRUE  if the queue is empty. &#60;br>&#10;         FALSE if there is at least one entry in the queue&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f02a4f6b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnqueued" ref="0x7f02a3e9c6f0" loc="62:/home/hades/tinyos-new/tos/interfaces/ResourceQueue.nc">
        <documentation loc="55:/home/hades/tinyos-new/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.</short>
          <long>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.&#10;&#10; @return TRUE  if the client id is in the queue. &#60;br>&#10;         FALSE if it does not&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f02a4f6b090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f02a3ea4b40"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7f02a3e9c470" loc="62:/home/hades/tinyos-new/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f02a3ea4b40"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x7f02a3e9b030" loc="70:/home/hades/tinyos-new/tos/interfaces/ResourceQueue.nc">
        <documentation loc="64:/home/hades/tinyos-new/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Retreive the client id of the next resource in the queue.</short>
          <long>&#10; Retreive the client id of the next resource in the queue. &#10; If the queue is empty, the return value is undefined.&#10;&#10; @return The client id at the head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="resource_client_id_t" ref="0x7f02a3ea4b40"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReadId48" loc="8:/home/hades/tinyos-new/tos/chips/ds2411/ReadId48.nc">
      <documentation loc="4:/home/hades/tinyos-new/tos/chips/ds2411/ReadId48.nc">
        <short>&#10; </short>
        <long>&#10; @author: Andreas Koepke (koepke@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x7f02a3c97620" loc="13:/home/hades/tinyos-new/tos/chips/ds2411/ReadId48.nc">
        <interfacedef-ref qname="ReadId48"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f02a4f62cb0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f02a51f8160"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7f02a3c973a0" loc="13:/home/hades/tinyos-new/tos/chips/ds2411/ReadId48.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f02a51f8160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="OneWireReadWrite" loc="9:/home/hades/tinyos-new/tos/lib/onewire/OneWireReadWrite.nc">
      <documentation loc="5:/home/hades/tinyos-new/tos/lib/onewire/OneWireReadWrite.nc">
        <short>&#10; </short>
        <long>&#10; @author: Andreas Koepke (koepke@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x7f02a3c84bc0" loc="10:/home/hades/tinyos-new/tos/lib/onewire/OneWireReadWrite.nc">
        <interfacedef-ref qname="OneWireReadWrite"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f02a4f62cb0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f02a51f8160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f02a51f8160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f02a51f8160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cmd" ref="0x7f02a3c84280" loc="10:/home/hades/tinyos-new/tos/lib/onewire/OneWireReadWrite.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f02a51f8160"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0x7f02a3c845f0" loc="10:/home/hades/tinyos-new/tos/lib/onewire/OneWireReadWrite.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f02a51f8160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f02a3c84920" loc="10:/home/hades/tinyos-new/tos/lib/onewire/OneWireReadWrite.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f02a51f8160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f02a3c83960" loc="11:/home/hades/tinyos-new/tos/lib/onewire/OneWireReadWrite.nc">
        <interfacedef-ref qname="OneWireReadWrite"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f02a4f62cb0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x7f02a51f8160"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f02a51f8160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7f02a3c833a0" loc="11:/home/hades/tinyos-new/tos/lib/onewire/OneWireReadWrite.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x7f02a51f8160"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f02a3c836d0" loc="11:/home/hades/tinyos-new/tos/lib/onewire/OneWireReadWrite.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f02a51f8160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BusyWait" loc="59:/home/hades/tinyos-new/tos/lib/timer/BusyWait.nc">
      <documentation loc="36:/home/hades/tinyos-new/tos/lib/timer/BusyWait.nc">
        <short>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.</short>
        <long>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.&#10;&#10; &#60;p>BusyWait is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>BusyWait's second parameter is its &#34;width&#34;, i.e., the number of bits&#10; used to represent time values. Width is indicated by including the&#10; appropriate size integer type as a BusyWait parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for this &#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f02a3c6b740" loc="59:/home/hades/tinyos-new/tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f02a3c6b740"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f02a3c6b980" loc="59:/home/hades/tinyos-new/tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f02a3c6b980"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="wait" ref="0x7f02a3c684d0" loc="66:/home/hades/tinyos-new/tos/lib/timer/BusyWait.nc">
        <documentation loc="61:/home/hades/tinyos-new/tos/lib/timer/BusyWait.nc">
          <short>&#10; Busy wait for (at least) dt time units.</short>
          <long>&#10; Busy wait for (at least) dt time units. Use sparingly, when the&#10; cost of using an Alarm or Timer would be too high.&#10; @param dt Time to busy wait for.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BusyWait"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f02a3c6b980"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f02a3c68250" loc="66:/home/hades/tinyos-new/tos/lib/timer/BusyWait.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f02a3c6b980"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReceiveIndicator" loc="37:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
      <documentation loc="32:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
        <short>&#10; Interface to obtain energy, byte, and packet receive check readings&#10; </short>
        <long>&#10; Interface to obtain energy, byte, and packet receive check readings&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="isReceiving" ref="0x7f02a3c045e0" loc="43:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
        <documentation loc="39:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the indicator is showing we are actively receiving at this&#10; level&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveIndicator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f02a4f6b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Receive" loc="42:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Receive.nc">
      <documentation loc="32:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <short>&#10; Low-level abstraction of the receive path implementation for the&#10; ChipCon CC2420 radio.</short>
        <long>&#10; Low-level abstraction of the receive path implementation for the&#10; ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2008-06-17 07:28:24 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x7f02a3bd49e0" loc="63:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="57:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Signals that a message has been received.</short>
          <long>&#10; Signals that a message has been received.&#10;&#10; @param type of the message received.&#10; @param message pointer to message received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f02a51f8160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f02a48a9880"/>
                <typename><typedef-ref name="message_t" ref="0x7f02a48a6020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="type" ref="0x7f02a3bd4020" loc="63:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f02a51f8160"/></typename>
            </type-int>
          </variable>
          <variable name="message" ref="0x7f02a3bd4750" loc="63:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f02a48a9880"/>
                <typename><typedef-ref name="message_t" ref="0x7f02a48a6020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="sfd_dropped" ref="0x7f02a3bd57f0" loc="55:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="51:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Notification that the packet has been dropped by the radio&#10; (e.g.</short>
          <long>&#10; Notification that the packet has been dropped by the radio&#10; (e.g. due to address rejection).&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sfd" ref="0x7f02a3bd5020" loc="49:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="44:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Notification that an SFD capture has occured.</short>
          <long>&#10; Notification that an SFD capture has occured.&#10;&#10; @param time at which the capture happened.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f02a51f8920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7f02a3bd9d40" loc="49:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f02a51f8920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeSyncOffset" loc="43:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
      <function command="" provided="0" name="get" ref="0x7f02a3bea3d0" loc="58:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="52:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to examine.&#10;&#10; Returns the offset of where the timesync timestamp is sotred in a&#10; CC2420 packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f02a51f8160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f02a48a9880"/>
                <typename><typedef-ref name="message_t" ref="0x7f02a48a6020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f02a3bea150" loc="58:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f02a48a9880"/>
                <typename><typedef-ref name="message_t" ref="0x7f02a48a6020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isSet" ref="0x7f02a3beb3d0" loc="50:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="45:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to examine.&#10;&#10; Returns TRUE if the current message should be timestamped.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f02a4f6b090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f02a48a9880"/>
                <typename><typedef-ref name="message_t" ref="0x7f02a48a6020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f02a3beb150" loc="50:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f02a48a9880"/>
                <typename><typedef-ref name="message_t" ref="0x7f02a48a6020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f02a3be7350" loc="72:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="67:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to modify.&#10;&#10; Cancels any pending requests to timestamp the message in MAC.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f02a48a9880"/>
                <typename><typedef-ref name="message_t" ref="0x7f02a48a6020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f02a3be70d0" loc="72:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f02a48a9880"/>
                <typename><typedef-ref name="message_t" ref="0x7f02a48a6020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f02a3be9390" loc="65:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="60:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to modify.&#10;&#10;  Sets the current message to be timestamped in the MAC layer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f02a48a9880"/>
                <typename><typedef-ref name="message_t" ref="0x7f02a48a6020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f02a3be9110" loc="65:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f02a48a9880"/>
                <typename><typedef-ref name="message_t" ref="0x7f02a48a6020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="53:/home/hades/tinyos-new/tos/lib/timer/LocalTime.nc">
      <documentation loc="36:/home/hades/tinyos-new/tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f02a3a71920" loc="53:/home/hades/tinyos-new/tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f02a3a71920"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7f02a3a6e270" loc="61:/home/hades/tinyos-new/tos/lib/timer/LocalTime.nc">
        <documentation loc="55:/home/hades/tinyos-new/tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f02a51f8920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="53:/home/hades/tinyos-new/tos/lib/timer/Timer.nc">
      <documentation loc="36:/home/hades/tinyos-new/tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f02a3a0b020" loc="53:/home/hades/tinyos-new/tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f02a3a0b020"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x7f02a3a05c50" loc="136:/home/hades/tinyos-new/tos/lib/timer/Timer.nc">
        <documentation loc="132:/home/hades/tinyos-new/tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f02a51f8920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f02a3a085b0" loc="83:/home/hades/tinyos-new/tos/lib/timer/Timer.nc">
        <documentation loc="80:/home/hades/tinyos-new/tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x7f02a3a06360" loc="114:/home/hades/tinyos-new/tos/lib/timer/Timer.nc">
        <documentation loc="100:/home/hades/tinyos-new/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f02a51f8920"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f02a51f8920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7f02a3a07d60" loc="114:/home/hades/tinyos-new/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f02a51f8920"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x7f02a3a060d0" loc="114:/home/hades/tinyos-new/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f02a51f8920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x7f02a3a075b0" loc="98:/home/hades/tinyos-new/tos/lib/timer/Timer.nc">
        <documentation loc="94:/home/hades/tinyos-new/tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f02a4f6b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x7f02a3a03ca0" loc="151:/home/hades/tinyos-new/tos/lib/timer/Timer.nc">
        <documentation loc="146:/home/hades/tinyos-new/tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f02a51f8920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x7f02a3a03420" loc="144:/home/hades/tinyos-new/tos/lib/timer/Timer.nc">
        <documentation loc="138:/home/hades/tinyos-new/tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f02a51f8920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x7f02a3a08d90" loc="92:/home/hades/tinyos-new/tos/lib/timer/Timer.nc">
        <documentation loc="86:/home/hades/tinyos-new/tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f02a4f6b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x7f02a3a0bb90" loc="64:/home/hades/tinyos-new/tos/lib/timer/Timer.nc">
        <documentation loc="56:/home/hades/tinyos-new/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f02a51f8920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f02a3a0b910" loc="64:/home/hades/tinyos-new/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f02a51f8920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x7f02a3a052f0" loc="129:/home/hades/tinyos-new/tos/lib/timer/Timer.nc">
        <documentation loc="116:/home/hades/tinyos-new/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f02a51f8920"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f02a51f8920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7f02a3a06d00" loc="129:/home/hades/tinyos-new/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f02a51f8920"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x7f02a3a05060" loc="129:/home/hades/tinyos-new/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f02a51f8920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x7f02a3a0a680" loc="73:/home/hades/tinyos-new/tos/lib/timer/Timer.nc">
        <documentation loc="66:/home/hades/tinyos-new/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f02a51f8920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f02a3a0a400" loc="73:/home/hades/tinyos-new/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f02a51f8920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f02a3a0ae80" loc="78:/home/hades/tinyos-new/tos/lib/timer/Timer.nc">
        <documentation loc="75:/home/hades/tinyos-new/tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
          <long>&#10; Cancel a timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ParameterInit" loc="53:/home/hades/tinyos-new/tos/interfaces/ParameterInit.nc">
      <documentation loc="34:/home/hades/tinyos-new/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="parameter" ref="0x7f02a38d55f0" loc="53:/home/hades/tinyos-new/tos/interfaces/ParameterInit.nc">
          <interfacedef-ref qname="ParameterInit"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7f02a38d55f0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="init" ref="0x7f02a38d22a0" loc="64:/home/hades/tinyos-new/tos/interfaces/ParameterInit.nc">
        <documentation loc="55:/home/hades/tinyos-new/tos/interfaces/ParameterInit.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components. This command behaves&#10; identically to Init.init, except that it takes a parameter.&#10;&#10; @param   param   the initialization parameter&#10; @return          SUCCESS if initialized properly, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ParameterInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f02a4f62cb0"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7f02a38d55f0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="param" ref="0x7f02a38d2020" loc="64:/home/hades/tinyos-new/tos/interfaces/ParameterInit.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7f02a38d55f0"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialPacketInfo" loc="10:/home/hades/tinyos-new/tos/lib/serial/SerialPacketInfo.nc">
      <documentation loc="1:/home/hades/tinyos-new/tos/lib/serial/SerialPacketInfo.nc">
        <short>&#10; Accessor methods used by a serial dispatcher to communicate with various&#10; message_t link formats over a serial port.</short>
        <long>&#10; Accessor methods used by a serial dispatcher to communicate with various&#10; message_t link formats over a serial port.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="upperLength" ref="0x7f02a36be670" loc="31:/home/hades/tinyos-new/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="24:/home/hades/tinyos-new/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the size of the payload (in bytes) given the size of the datalink&#10; packet (dataLinkLen) embedded in the message_t.</short>
          <long>&#10; Get the size of the payload (in bytes) given the size of the datalink&#10; packet (dataLinkLen) embedded in the message_t.&#10; @param msg A pointer to the message_t to interrogate. (unused)&#10; @param dataLinkLength The size of the datalink packet.&#10; @return Returns the size of the payload.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f02a51f8160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f02a48a9880"/>
                <typename><typedef-ref name="message_t" ref="0x7f02a48a6020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f02a51f8160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f02a36be060" loc="31:/home/hades/tinyos-new/tos/lib/serial/SerialPacketInfo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f02a48a9880"/>
                <typename><typedef-ref name="message_t" ref="0x7f02a48a6020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="dataLinkLen" ref="0x7f02a36be3e0" loc="31:/home/hades/tinyos-new/tos/lib/serial/SerialPacketInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f02a51f8160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="offset" ref="0x7f02a36c0820" loc="15:/home/hades/tinyos-new/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="11:/home/hades/tinyos-new/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the offset into a message_t where the header information begins.</short>
          <long>&#10; Get the offset into a message_t where the header information begins.&#10; @return Returns the offset.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f02a51f8160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="dataLinkLength" ref="0x7f02a36bf6d0" loc="23:/home/hades/tinyos-new/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="16:/home/hades/tinyos-new/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the size of the datalink packet embedded in the message_t, in bytes.</short>
          <long>&#10; Get the size of the datalink packet embedded in the message_t, in bytes. &#10; This is the sum of the payload (upperLen) and the size of the link header.&#10; @param msg A pointer to the message_t to interrogate. (unused)&#10; @param upperLen The size of the payload.&#10; @return Returns the size of the datalink packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f02a51f8160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f02a48a9880"/>
                <typename><typedef-ref name="message_t" ref="0x7f02a48a6020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f02a51f8160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f02a36bf0d0" loc="23:/home/hades/tinyos-new/tos/lib/serial/SerialPacketInfo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f02a48a9880"/>
                <typename><typedef-ref name="message_t" ref="0x7f02a48a6020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="upperLen" ref="0x7f02a36bf440" loc="23:/home/hades/tinyos-new/tos/lib/serial/SerialPacketInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f02a51f8160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialFlush" loc="43:/home/hades/tinyos-new/tos/lib/serial/SerialFlush.nc">
      <documentation loc="34:/home/hades/tinyos-new/tos/lib/serial/SerialFlush.nc">
        <short>&#10; A basic interface to flush the serial port.</short>
        <long>&#10; A basic interface to flush the serial port.&#10;&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date January 23 2006&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="flushDone" ref="0x7f02a36a5900" loc="54:/home/hades/tinyos-new/tos/lib/serial/SerialFlush.nc">
        <documentation loc="51:/home/hades/tinyos-new/tos/lib/serial/SerialFlush.nc">
          <short> &#10; Split phase event to indicate that the serial hardware is now idle.</short>
        </documentation>
        <interfacedef-ref qname="SerialFlush"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="flush" ref="0x7f02a36a5190" loc="49:/home/hades/tinyos-new/tos/lib/serial/SerialFlush.nc">
        <documentation loc="45:/home/hades/tinyos-new/tos/lib/serial/SerialFlush.nc">
          <short> &#10; Request that the serial device signal when no more transmissions&#10; are pending (i.e., when the device is idle)&#10;</short>
        </documentation>
        <interfacedef-ref qname="SerialFlush"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialFrameComm" loc="47:/home/hades/tinyos-new/tos/lib/serial/SerialFrameComm.nc">
      <documentation loc="34:/home/hades/tinyos-new/tos/lib/serial/SerialFrameComm.nc">
        <short>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component.</short>
        <long>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component. It is to be used with framing protocols&#10; that place delimiters between frames. This interface separates the tasks&#10; of interpreting and coding delimiters and escape bytes from the rest of&#10; the wire protocol.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="putDelimiter" ref="0x7f02a36ae940" loc="56:/home/hades/tinyos-new/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="48:/home/hades/tinyos-new/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent.</short>
          <long>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent. The lower layer is responsible for the determining the&#10; actual byte(s) that must be sent to delimit the frame.&#10; @return Returns a error_t code that indicates if the lower layer&#10; was able to put an interframe delimiter to serial (SUCCESS) or&#10; not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f02a4f62cb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetSend" ref="0x7f02a36add60" loc="72:/home/hades/tinyos-new/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="67:/home/hades/tinyos-new/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset. Used to initialize the lower&#10; layer's send path and/or cancel a frame mid-transmission.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReceived" ref="0x7f02a36aaab0" loc="94:/home/hades/tinyos-new/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="87:/home/hades/tinyos-new/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection.</short>
          <long>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection. It passes this byte as a function&#10; parameter.  &#10; @param data The byte of data that has been received&#10; from the serial connection&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f02a51f8160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f02a36aa830" loc="94:/home/hades/tinyos-new/tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f02a51f8160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resetReceive" ref="0x7f02a36ac6a0" loc="79:/home/hades/tinyos-new/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="74:/home/hades/tinyos-new/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset. Used to initialize the lower layer's&#10; receive path and/or cancel a frame mid-reception when sync is lost.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="putData" ref="0x7f02a36ad4d0" loc="65:/home/hades/tinyos-new/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="58:/home/hades/tinyos-new/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.</short>
          <long>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.&#10;  @param data The byte to be sent&#10;  @return Returns an error_t code that indicates if the lower layer&#10;  has accepted the byte for sending (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f02a4f62cb0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f02a51f8160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f02a36ad250" loc="65:/home/hades/tinyos-new/tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f02a51f8160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="putDone" ref="0x7f02a36a9350" loc="100:/home/hades/tinyos-new/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="96:/home/hades/tinyos-new/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Split-phase event to signal when the lower layer has finished writing&#10; the last request (either putDelimiter or putData) to serial.</short>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="delimiterReceived" ref="0x7f02a36aa020" loc="85:/home/hades/tinyos-new/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="81:/home/hades/tinyos-new/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that an inter-frame delimiter has been &#10; received from the serial connection.</short>
          <long>&#10; Signals the upper layer that an inter-frame delimiter has been &#10; received from the serial connection.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendBytePacket" loc="53:/home/hades/tinyos-new/tos/lib/serial/SendBytePacket.nc">
      <documentation loc="34:/home/hades/tinyos-new/tos/lib/serial/SendBytePacket.nc">
        <short>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses.</short>
        <long>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses. The call sequence should be as follows:&#10; The dispatcher should call startSend, specifying the first byte to&#10; send. The framing protocol can then signal as many nextBytes as it&#10; wants/needs, to spool in the bytes. It continues to do so until it receives&#10; a sendComplete call, which will almost certainly happen within a nextByte&#10; signal (i.e., re-entrant to the framing protocol).&#10; This allows the framing protocol to buffer as many bytes as it needs to to meet&#10; timing requirements, jitter, etc. &#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="completeSend" ref="0x7f02a36b54a0" loc="71:/home/hades/tinyos-new/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="64:/home/hades/tinyos-new/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend.</short>
          <long>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend. The function may be called from within the&#10; implementation of a nextByte event.&#10; @return Returns an error_t code indicating whether the framer accepts&#10; this notification (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f02a4f62cb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="nextByte" ref="0x7f02a36b5dd0" loc="81:/home/hades/tinyos-new/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="73:/home/hades/tinyos-new/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; Used by the framer to request the next byte to transmit.</short>
          <long>&#10; Used by the framer to request the next byte to transmit. The&#10; framer may allocate a buffer to pre-spool some or all of a&#10; packet; or it may request and transmit a byte at a time. If there&#10; are no more bytes to send, the dispatcher must call completeSend&#10; before returning from this function.&#10; @return The dispatcher must return the next byte to transmit&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f02a51f8160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startSend" ref="0x7f02a36b6b10" loc="62:/home/hades/tinyos-new/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="54:/home/hades/tinyos-new/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.</short>
          <long>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.&#10; @param first_byte The first byte to be transmitted.&#10; @return Returns an error_t code indicating either that the framer&#10; has the resources available to transmit the frame (SUCCESS) or&#10; not (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f02a4f62cb0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f02a51f8160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="first_byte" ref="0x7f02a36b6890" loc="62:/home/hades/tinyos-new/tos/lib/serial/SendBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f02a51f8160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendCompleted" ref="0x7f02a36b49d0" loc="91:/home/hades/tinyos-new/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="83:/home/hades/tinyos-new/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf.</short>
          <long>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf. A non-SUCCESS error_t code indicates that&#10; there was a problem in transmission.&#10; @param error The framer indicates whether it has successfully&#10; accepted the entirety of the packet from the dispatcher (SUCCESS)&#10; or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f02a4f62cb0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f02a36b4750" loc="91:/home/hades/tinyos-new/tos/lib/serial/SendBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f02a4f62cb0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReceiveBytePacket" loc="48:/home/hades/tinyos-new/tos/lib/serial/ReceiveBytePacket.nc">
      <documentation loc="34:/home/hades/tinyos-new/tos/lib/serial/ReceiveBytePacket.nc">
        <short>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses.</short>
        <long>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses. The dispatcher expects the following pattern&#10; of calls: ((startPacket)+ (byteReceived)* (endPacket)+)*&#10; It should ignore any signals that do not follow this pattern.&#10; The interface is used to separate the state machine of the wire protocol&#10; from the complexities of dispatch.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="startPacket" ref="0x7f02a36b25e0" loc="62:/home/hades/tinyos-new/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="51:/home/hades/tinyos-new/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer to indicate that reception of a frame has begun.</short>
          <long>&#10; Signals the upper layer to indicate that reception of a frame has begun.&#10; Used by the upper layer to prepare for packet reception. If the upper&#10; layer does not want to receive a packet (or isn't ready) it may&#10; return a non-SUCCESS code  such as EBUSY to the lower layer to discard&#10; the frame. The underlying layer may signal endPacket in response to&#10; such a discard request.&#10; @return Returns an error_t code indicating whether the&#10; dispatcher would like to receive a packet (SUCCESS), or not&#10; perhaps because it isn't ready (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f02a4f62cb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="byteReceived" ref="0x7f02a36b02a0" loc="69:/home/hades/tinyos-new/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="64:/home/hades/tinyos-new/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received.</short>
          <long>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received. Passes this byte as a parameter to the function.&#10; @param data A byte of the encapsulated packet that has been received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f02a51f8160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f02a36b0020" loc="69:/home/hades/tinyos-new/tos/lib/serial/ReceiveBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f02a51f8160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="endPacket" ref="0x7f02a36b0d70" loc="80:/home/hades/tinyos-new/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="70:/home/hades/tinyos-new/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received.</short>
          <long>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received. SUCCESS should be passed by the lower layer&#10; following verification that the packet has been received correctly.&#10; A value of error_t indicating an error should be passed when the lower&#10; layer's verification test fails or when the lower layer loses sync.&#10; @param result An error_t code indicating whether the framer has&#10; passed all bytes of an encapsulated packet it receives from&#10; serial to the dispatcher (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f02a4f62cb0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7f02a36b0af0" loc="80:/home/hades/tinyos-new/tos/lib/serial/ReceiveBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f02a4f62cb0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartStream" loc="37:/home/hades/tinyos-new/tos/interfaces/UartStream.nc">
      <documentation loc="32:/home/hades/tinyos-new/tos/interfaces/UartStream.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-04 03:00:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f02a3579c40" loc="48:/home/hades/tinyos-new/tos/interfaces/UartStream.nc">
        <documentation loc="39:/home/hades/tinyos-new/tos/interfaces/UartStream.nc">
          <short>&#10; Begin transmission of a UART stream.</short>
          <long>&#10; Begin transmission of a UART stream. If SUCCESS is returned,&#10; &#60;code>sendDone&#60;/code> will be signalled when transmission is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes to send.&#10; @param len Number of bytes to send.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f02a4f62cb0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f02a51f8160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f02a51f8520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7f02a3579670" loc="48:/home/hades/tinyos-new/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f02a51f8160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f02a35799b0" loc="48:/home/hades/tinyos-new/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f02a51f8520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="receivedByte" ref="0x7f02a3574a70" loc="79:/home/hades/tinyos-new/tos/interfaces/UartStream.nc">
        <documentation loc="74:/home/hades/tinyos-new/tos/interfaces/UartStream.nc">
          <short>&#10; Signals the receipt of a byte.</short>
          <long>&#10; Signals the receipt of a byte.&#10;&#10; @param byte The byte received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f02a51f8160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x7f02a35747f0" loc="79:/home/hades/tinyos-new/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f02a51f8160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x7f02a3573890" loc="90:/home/hades/tinyos-new/tos/interfaces/UartStream.nc">
        <documentation loc="81:/home/hades/tinyos-new/tos/interfaces/UartStream.nc">
          <short>&#10; Begin reception of a UART stream.</short>
          <long>&#10; Begin reception of a UART stream. If SUCCESS is returned,&#10; &#60;code>receiveDone&#60;/code> will be signalled when reception is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for received bytes.&#10; @param len Number of bytes to receive.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f02a4f62cb0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f02a51f8160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f02a51f8520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7f02a35732c0" loc="90:/home/hades/tinyos-new/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f02a51f8160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f02a3573600" loc="90:/home/hades/tinyos-new/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f02a51f8520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableReceiveInterrupt" ref="0x7f02a3576610" loc="65:/home/hades/tinyos-new/tos/interfaces/UartStream.nc">
        <documentation loc="59:/home/hades/tinyos-new/tos/interfaces/UartStream.nc">
          <short>&#10; Enable the receive byte interrupt.</short>
          <long>&#10; Enable the receive byte interrupt. The &#60;code>receive&#60;/code> event&#10; is signalled each time a byte is received.&#10;&#10; @return SUCCESS if interrupt was enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f02a4f62cb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="receiveDone" ref="0x7f02a35702c0" loc="99:/home/hades/tinyos-new/tos/interfaces/UartStream.nc">
        <documentation loc="92:/home/hades/tinyos-new/tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of receiving a stream.</short>
          <long>&#10; Signal completion of receiving a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes received.&#10; @param len Number of bytes received.&#10; @param error SUCCESS if the reception was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f02a51f8160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f02a51f8520"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f02a4f62cb0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7f02a3571820" loc="99:/home/hades/tinyos-new/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f02a51f8160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f02a3571b60" loc="99:/home/hades/tinyos-new/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f02a51f8520"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7f02a3570020" loc="99:/home/hades/tinyos-new/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f02a4f62cb0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="disableReceiveInterrupt" ref="0x7f02a3574020" loc="72:/home/hades/tinyos-new/tos/interfaces/UartStream.nc">
        <documentation loc="67:/home/hades/tinyos-new/tos/interfaces/UartStream.nc">
          <short>&#10; Disable the receive byte interrupt.</short>
          <long>&#10; Disable the receive byte interrupt.&#10;&#10; @return SUCCESS if interrupt was disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f02a4f62cb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f02a3578610" loc="57:/home/hades/tinyos-new/tos/interfaces/UartStream.nc">
        <documentation loc="50:/home/hades/tinyos-new/tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of sending a stream.</short>
          <long>&#10; Signal completion of sending a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Bytes sent.&#10; @param len Number of bytes sent.&#10; @param error SUCCESS if the transmission was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f02a51f8160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f02a51f8520"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f02a4f62cb0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7f02a3577bd0" loc="57:/home/hades/tinyos-new/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f02a51f8160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f02a3578020" loc="57:/home/hades/tinyos-new/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f02a51f8520"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7f02a3578370" loc="57:/home/hades/tinyos-new/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f02a4f62cb0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartByte" loc="41:/home/hades/tinyos-new/tos/interfaces/UartByte.nc">
      <documentation loc="36:/home/hades/tinyos-new/tos/interfaces/UartByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f02a35515b0" loc="50:/home/hades/tinyos-new/tos/interfaces/UartByte.nc">
        <documentation loc="43:/home/hades/tinyos-new/tos/interfaces/UartByte.nc">
          <short>&#10; Send a single uart byte.</short>
          <long>&#10; Send a single uart byte. The call blocks until it is ready to&#10; accept another byte for sending.&#10;&#10; @param byte The byte to send.&#10; @return SUCCESS if byte was sent, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f02a4f62cb0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f02a51f8160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x7f02a3551330" loc="50:/home/hades/tinyos-new/tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f02a51f8160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="sendAvail" ref="0x7f02a3551df0" loc="59:/home/hades/tinyos-new/tos/interfaces/UartByte.nc">
        <documentation loc="52:/home/hades/tinyos-new/tos/interfaces/UartByte.nc">
          <short>&#10; sendAvail: is space available for another TX byte.</short>
          <long>&#10; sendAvail: is space available for another TX byte.&#10;&#10; @return TRUE&#9;the TX subsystem can take another byte.  ie.&#10;&#9;&#9;&#9;UartByte.send() would not block if called.&#10;&#9;     FALSE&#9;TX pipeline is full, UartByte.send() would block.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f02a4f6b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x7f02a3550cf0" loc="69:/home/hades/tinyos-new/tos/interfaces/UartByte.nc">
        <documentation loc="61:/home/hades/tinyos-new/tos/interfaces/UartByte.nc">
          <short>&#10; Receive a single uart byte.</short>
          <long>&#10; Receive a single uart byte. The call blocks until a byte is&#10; received or the timeout occurs.&#10;&#10; @param 'uint8_t* ONE byte' Where to place received byte.&#10; @param timeout How long in byte times to wait.&#10; @return SUCCESS if a byte was received, FAIL if timed out.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f02a4f62cb0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f02a51f8160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f02a51f8160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x7f02a3550700" loc="69:/home/hades/tinyos-new/tos/interfaces/UartByte.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f02a51f8160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="timeout" ref="0x7f02a3550a60" loc="69:/home/hades/tinyos-new/tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f02a51f8160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receiveAvail" ref="0x7f02a354eb50" loc="79:/home/hades/tinyos-new/tos/interfaces/UartByte.nc">
        <documentation loc="71:/home/hades/tinyos-new/tos/interfaces/UartByte.nc">
          <short>&#10; receiveAvail: incoming has another byte available.</short>
          <long>&#10; receiveAvail: incoming has another byte available.&#10;&#10; @return TRUE&#9;the RX subsystem has another byte to receive.  ie.&#10;&#9;&#9;&#9;UartByte.receive() would not block if called.&#10;&#9;     FALSE&#9;RX pipeline is empty, UartByte.receive() would block&#10;&#9;&#9;&#9;waiting for a byte and/or the timeout.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f02a4f6b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430UartConfigure" loc="38:/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430UartConfigure.nc">
      <documentation loc="31:/home/hades/tinyos-new/tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getConfig" ref="0x7f02a3546420" loc="39:/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430UartConfigure.nc">
        <interfacedef-ref qname="Msp430UartConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7f02a406fe70"/>
              <typename><typedef-ref name="msp430_uart_union_config_t" ref="0x7f02a406e2b0"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AsyncStdControl" loc="86:/home/hades/tinyos-new/tos/interfaces/AsyncStdControl.nc">
      <documentation loc="72:/home/hades/tinyos-new/tos/interfaces/AsyncStdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  This interface differs from the&#10; StdControl interface only in the fact that any of its commands can&#10; be called from asynchronous context.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x7f02a34b8860" loc="95:/home/hades/tinyos-new/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="88:/home/hades/tinyos-new/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f02a4f62cb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f02a34b70e0" loc="105:/home/hades/tinyos-new/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="97:/home/hades/tinyos-new/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f02a4f62cb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PowerDownCleanup" loc="55:/home/hades/tinyos-new/tos/lib/power/PowerDownCleanup.nc">
      <documentation loc="41:/home/hades/tinyos-new/tos/lib/power/PowerDownCleanup.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.  It should be provided&#10; by the user of a shared Resource, and used by the&#10; power managment component for that Resource.  The &#60;code>cleanup()&#60;/code>&#10; command will be called by the power manager just before powering down&#10; the shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="cleanup" ref="0x7f02a33f14b0" loc="62:/home/hades/tinyos-new/tos/lib/power/PowerDownCleanup.nc">
        <documentation loc="56:/home/hades/tinyos-new/tos/lib/power/PowerDownCleanup.nc">
          <short>&#10; This command will be called by the power management component of&#10; a shared Resource.</short>
          <long>&#10; This command will be called by the power management component of&#10; a shared Resource.  The implementation of this command defines&#10; what must be done just before that shared Resource is shut off.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PowerDownCleanup"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
