<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="7:TestCM5000C.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7f1d74136a00"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7f1d74312c10"/></to>
    </wire>
    <wire loc="72:/home/hades/tinyos-new/tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7f1d74312c10"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7f1d74150590"/></to>
    </wire>
    <wire loc="8:TestCM5000C.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f1d7412ab50"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f1d74082dd0"/></to>
    </wire>
    <wire loc="51:/home/hades/tinyos-new/tos/system/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f1d74082dd0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f1d7407a710"/></to>
    </wire>
    <wire loc="12:TestCM5000C.nc">
      <from><interface-ref name="RadioControl" scoped="" ref="0x7f1d74124710"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f1d73e10360"/></to>
    </wire>
    <wire loc="78:/home/hades/tinyos-new/tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f1d73e10360"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f1d73dcec10"/></to>
    </wire>
    <wire loc="15:TestCM5000C.nc">
      <from><interface-ref name="ThlSend" scoped="" ref="0x7f1d740cc9a0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f1d72f08020"/></to>
    </wire>
    <wire loc="64:/home/hades/tinyos-new/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f1d72f08020"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f1d72084b60"/></to>
    </wire>
    <wire loc="16:TestCM5000C.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f1d740c3910"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f1d72f08c30"/></to>
    </wire>
    <wire loc="65:/home/hades/tinyos-new/tos/system/AMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f1d72f08c30"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f1d720838b0"/></to>
    </wire>
    <wire loc="20:TestCM5000C.nc">
      <from><interface-ref name="SampleTimer" scoped="" ref="0x7f1d740cd250"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f1d72f03d80"/></to>
    </wire>
    <wire loc="52:/home/hades/tinyos-new/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f1d72f03d80"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f1d731922c0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="24:TestCM5000C.nc">
      <from><interface-ref name="Vref" scoped="" ref="0x7f1d740af690"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7f1d72add020"/></to>
    </wire>
    <wire loc="52:/home/hades/tinyos-new/tos/chips/msp430/sensors/Msp430InternalVoltageC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x7f1d72add020"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7f1d72028650"/></to>
    </wire>
    <wire loc="27:TestCM5000C.nc">
      <from><interface-ref name="Temperature" scoped="" ref="0x7f1d740b1020"/></from>
      <to><interface-ref name="Temperature" scoped="" ref="0x7f1d7296a310"/></to>
    </wire>
    <wire loc="54:/home/hades/tinyos-new/tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
      <from><interface-ref name="Temperature" scoped="" ref="0x7f1d7296a310"/></from>
      <to><interface-ref name="Temperature" scoped="" ref="0x7f1d71f07220"/></to>
    </wire>
    <wire loc="28:TestCM5000C.nc">
      <from><interface-ref name="Humidity" scoped="" ref="0x7f1d740ad8a0"/></from>
      <to><interface-ref name="Humidity" scoped="" ref="0x7f1d72968240"/></to>
    </wire>
    <wire loc="56:/home/hades/tinyos-new/tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
      <from><interface-ref name="Humidity" scoped="" ref="0x7f1d72968240"/></from>
      <to><interface-ref name="Humidity" scoped="" ref="0x7f1d71f050a0"/></to>
    </wire>
    <wire loc="31:TestCM5000C.nc">
      <from><interface-ref name="Photo" scoped="" ref="0x7f1d740aa190"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7f1d72963750"/></to>
    </wire>
    <wire loc="47:/home/hades/tinyos-new/tos/platforms/telosa/chips/s1087/HamamatsuS1087ParC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x7f1d72963750"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7f1d71e23bd0"/></to>
    </wire>
    <wire loc="34:TestCM5000C.nc">
      <from><interface-ref name="Radiation" scoped="" ref="0x7f1d740a9a30"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7f1d7293d990"/></to>
    </wire>
    <wire loc="47:/home/hades/tinyos-new/tos/platforms/telosa/chips/s10871/HamamatsuS10871TsrC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x7f1d7293d990"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7f1d71ddd200"/></to>
    </wire>
    <wire loc="103:/home/hades/tinyos-new/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f1d7430f160"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f1d71e761b0"/></to>
    </wire>
    <wire loc="37:/home/hades/tinyos-new/tos/chips/msp430/adc12/WireAdcStreamP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f1d7430f160"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f1d72bb8150"/></to>
    </wire>
    <wire loc="96:/home/hades/tinyos-new/tos/system/SimpleRoundRobinArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f1d7430f160"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f1d71fedca0"/></to>
    </wire>
    <wire loc="56:/home/hades/tinyos-new/tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f1d7430f160"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f1d72e3c680"/></to>
    </wire>
    <wire loc="104:/home/hades/tinyos-new/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f1d7430f160"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f1d73066dd0"/></to>
    </wire>
    <wire loc="60:/home/hades/tinyos-new/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f1d7430f160"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f1d730f0b70"/></to>
    </wire>
    <wire loc="58:/home/hades/tinyos-new/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f1d7430f160"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f1d7310f750"/></to>
    </wire>
    <wire loc="52:/home/hades/tinyos-new/tos/system/RandomC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f1d7430f160"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f1d7312f080"/></to>
    </wire>
    <wire loc="53:/home/hades/tinyos-new/tos/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f1d7430f160"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f1d73264130"/></to>
    </wire>
    <wire loc="66:/home/hades/tinyos-new/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f1d7430f160"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f1d73366620"/></to>
    </wire>
    <wire loc="62:/home/hades/tinyos-new/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f1d7430f160"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f1d73455c60"/></to>
    </wire>
    <wire loc="63:/home/hades/tinyos-new/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f1d7430f160"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f1d73c4c7f0"/></to>
    </wire>
    <wire loc="103:/home/hades/tinyos-new/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f1d7430f160"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f1d7229c140"/></to>
    </wire>
    <wire loc="74:/home/hades/tinyos-new/tos/system/StateImplC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f1d7430f160"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f1d73916020"/></to>
    </wire>
    <wire loc="60:/home/hades/tinyos-new/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f1d7430f160"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f1d73cfc4a0"/></to>
    </wire>
    <wire loc="67:/home/hades/tinyos-new/tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x7f1d74150c00"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x7f1d747a23a0"/></to>
    </wire>
    <wire loc="53:/home/hades/tinyos-new/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x7f1d747a23a0"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x7f1d7434d140"/></to>
    </wire>
    <wire loc="68:/home/hades/tinyos-new/tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x7f1d741436c0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f1d7430c130"/></to>
    </wire>
    <wire loc="48:/home/hades/tinyos-new/tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f1d7430c130"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f1d74309360"/></to>
    </wire>
    <wire loc="71:/home/hades/tinyos-new/tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f1d74143dc0"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x7f1d7430f160"/></to>
    </wire>
    <wire loc="49:/home/hades/tinyos-new/tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="MoteClockInit" scoped="" ref="0x7f1d74309a70"/></from>
      <to><interface-ref name="MoteClockInit" scoped="" ref="0x7f1d7430a910"/></to>
    </wire>
    <wire loc="46:/home/hades/tinyos-new/tos/platforms/telosb/MoteClockC.nc">
      <from><interface-ref name="MoteClockInit" scoped="" ref="0x7f1d7430a910"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f1d742ea850"/></to>
    </wire>
    <wire loc="50:/home/hades/tinyos-new/tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x7f1d74308190"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f1d743024a0"/></to>
    </wire>
    <wire loc="56:/home/hades/tinyos-new/tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="LedsInit" scoped="" ref="0x7f1d74308870"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f1d74051020"/></to>
    </wire>
    <wire loc="46:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f1d742ea850"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f1d742d17e0"/></to>
    </wire>
    <wire loc="47:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="Msp430ClockInit" scoped="" ref="0x7f1d742e1de0"/></from>
      <to><interface-ref name="Msp430ClockInit" scoped="" ref="0x7f1d742d0020"/></to>
    </wire>
    <wire loc="48:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x7f1d744254c0"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x7f1d742cf360"/></to>
    </wire>
    <wire loc="113:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA2" scoped="" ref="0x7f1d7428c5a0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f1d741c86d0"/></to>
    </wire>
    <wire loc="126:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB0" scoped="" ref="0x7f1d7427a020"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f1d741c1b30"/></to>
    </wire>
    <wire loc="108:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA1" scoped="" ref="0x7f1d74283700"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f1d741ce160"/></to>
    </wire>
    <wire loc="149:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB3" scoped="" ref="0x7f1d74267a20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f1d741a7cb0"/></to>
    </wire>
    <wire loc="107:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA1" scoped="" ref="0x7f1d7428aaa0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f1d741cf480"/></to>
    </wire>
    <wire loc="148:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB3" scoped="" ref="0x7f1d7426d020"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f1d741a7020"/></to>
    </wire>
    <wire loc="170:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB6" scoped="" ref="0x7f1d74264a20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f1d74190cb0"/></to>
    </wire>
    <wire loc="154:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB4" scoped="" ref="0x7f1d742755a0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f1d741a1220"/></to>
    </wire>
    <wire loc="99:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA0" scoped="" ref="0x7f1d7428db10"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f1d7421f9d0"/></to>
    </wire>
    <wire loc="135:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB1" scoped="" ref="0x7f1d74269a20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f1d741b62f0"/></to>
    </wire>
    <wire loc="134:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB1" scoped="" ref="0x7f1d7426f3e0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f1d741b7610"/></to>
    </wire>
    <wire loc="133:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB1" scoped="" ref="0x7f1d742795a0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f1d741b8220"/></to>
    </wire>
    <wire loc="115:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA2" scoped="" ref="0x7f1d74282700"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f1d741c67a0"/></to>
    </wire>
    <wire loc="156:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB4" scoped="" ref="0x7f1d74266a20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f1d7419f2f0"/></to>
    </wire>
    <wire loc="140:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB2" scoped="" ref="0x7f1d74278be0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f1d741b16d0"/></to>
    </wire>
    <wire loc="114:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA2" scoped="" ref="0x7f1d74289890"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f1d741c7ac0"/></to>
    </wire>
    <wire loc="93:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="TimerA" scoped="" ref="0x7f1d7429d060"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f1d7422d540"/></to>
    </wire>
    <wire loc="155:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB4" scoped="" ref="0x7f1d7426dda0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f1d741a0610"/></to>
    </wire>
    <wire loc="106:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA1" scoped="" ref="0x7f1d742930c0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f1d741d0020"/></to>
    </wire>
    <wire loc="161:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB5" scoped="" ref="0x7f1d74273a50"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f1d7419a6d0"/></to>
    </wire>
    <wire loc="101:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA0" scoped="" ref="0x7f1d7427d6d0"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f1d741d6a90"/></to>
    </wire>
    <wire loc="142:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB2" scoped="" ref="0x7f1d74268a20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f1d741af7a0"/></to>
    </wire>
    <wire loc="100:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA0" scoped="" ref="0x7f1d74285cf0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f1d741d7de0"/></to>
    </wire>
    <wire loc="141:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB2" scoped="" ref="0x7f1d7426e1f0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f1d741b0ac0"/></to>
    </wire>
    <wire loc="163:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB5" scoped="" ref="0x7f1d74265a20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f1d741977a0"/></to>
    </wire>
    <wire loc="147:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB3" scoped="" ref="0x7f1d742760c0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f1d741a9b30"/></to>
    </wire>
    <wire loc="120:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="TimerB" scoped="" ref="0x7f1d7427c6c0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f1d742253e0"/></to>
    </wire>
    <wire loc="162:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB5" scoped="" ref="0x7f1d7426cb80"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f1d74198ac0"/></to>
    </wire>
    <wire loc="128:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB0" scoped="" ref="0x7f1d7426aa20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f1d741bfcb0"/></to>
    </wire>
    <wire loc="169:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB6" scoped="" ref="0x7f1d7426ba20"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f1d74190020"/></to>
    </wire>
    <wire loc="127:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB0" scoped="" ref="0x7f1d74270570"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f1d741bf020"/></to>
    </wire>
    <wire loc="168:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB6" scoped="" ref="0x7f1d74271020"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f1d74192b30"/></to>
    </wire>
    <wire loc="94:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Overflow" scoped="" ref="0x7f1d7422b450"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f1d7422cd80"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="95:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX0" scoped="" ref="0x7f1d7422baa0"/></from>
      <to><interface-ref name="VectorTimerA0" scoped="" ref="0x7f1d7418baa0"/></to>
    </wire>
    <wire loc="96:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX1" scoped="" ref="0x7f1d7422a120"/></from>
      <to><interface-ref name="VectorTimerA1" scoped="" ref="0x7f1d74187260"/></to>
    </wire>
    <wire loc="102:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f1d741d5930"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f1d7422d540"/></to>
    </wire>
    <wire loc="103:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f1d741d3020"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f1d7422cd80"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="109:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f1d741cd020"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f1d7422d540"/></to>
    </wire>
    <wire loc="110:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f1d741cc7a0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f1d7422cd80"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="116:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f1d741c5610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f1d7422d540"/></to>
    </wire>
    <wire loc="117:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f1d741c4c50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f1d7422cd80"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="121:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Overflow" scoped="" ref="0x7f1d742232f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f1d74224bf0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="122:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX0" scoped="" ref="0x7f1d74223940"/></from>
      <to><interface-ref name="VectorTimerB0" scoped="" ref="0x7f1d741879f0"/></to>
    </wire>
    <wire loc="123:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX1" scoped="" ref="0x7f1d74222020"/></from>
      <to><interface-ref name="VectorTimerB1" scoped="" ref="0x7f1d74186240"/></to>
    </wire>
    <wire loc="129:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f1d741beb40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f1d742253e0"/></to>
    </wire>
    <wire loc="130:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f1d741bc2f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f1d74224bf0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f1d741b5160"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f1d742253e0"/></to>
    </wire>
    <wire loc="137:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f1d741b47a0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f1d74224bf0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f1d741ae610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f1d742253e0"/></to>
    </wire>
    <wire loc="144:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f1d741adc50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f1d74224bf0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f1d741a6b40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f1d742253e0"/></to>
    </wire>
    <wire loc="151:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f1d741a42f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f1d74224bf0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f1d7419e160"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f1d742253e0"/></to>
    </wire>
    <wire loc="158:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f1d7419d7a0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f1d74224bf0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f1d74196610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f1d742253e0"/></to>
    </wire>
    <wire loc="165:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f1d74195c50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f1d74224bf0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f1d7418fb40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f1d742253e0"/></to>
    </wire>
    <wire loc="172:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f1d7418d2f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f1d74224bf0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/home/hades/tinyos-new/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x7f1d748114f0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f1d7434b040"/></to>
    </wire>
    <wire loc="55:/home/hades/tinyos-new/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x7f1d74347490"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x7f1d747393b0"/></to>
    </wire>
    <wire loc="42:TestCM5000P.nc">
      <from><interface-ref name="sendThlMsg" scoped="" ref="0x7f1d740a6610"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f1d748114f0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="53:/home/hades/tinyos-new/tos/system/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f1d74051020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f1d7407a110"/></to>
    </wire>
    <wire loc="54:/home/hades/tinyos-new/tos/system/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x7f1d74072ce0"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x7f1d7407b970"/></to>
    </wire>
    <wire loc="58:/home/hades/tinyos-new/tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x7f1d7407b970"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f1d73e3a020"/></to>
    </wire>
    <wire loc="55:/home/hades/tinyos-new/tos/system/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x7f1d74071020"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x7f1d74054b60"/></to>
    </wire>
    <wire loc="61:/home/hades/tinyos-new/tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x7f1d74054b60"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f1d73e26b90"/></to>
    </wire>
    <wire loc="56:/home/hades/tinyos-new/tos/system/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x7f1d74070340"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x7f1d74053e70"/></to>
    </wire>
    <wire loc="64:/home/hades/tinyos-new/tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x7f1d74053e70"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f1d73e21710"/></to>
    </wire>
    <wire loc="59:/home/hades/tinyos-new/tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f1d73e292f0"/></from>
      <to><interface-ref name="Port54" scoped="" ref="0x7f1d73ffa200"/></to>
    </wire>
    <wire loc="486:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port54" scoped="" ref="0x7f1d73ffa200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1d73ed7740"/></to>
    </wire>
    <wire loc="62:/home/hades/tinyos-new/tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f1d73e25de0"/></from>
      <to><interface-ref name="Port55" scoped="" ref="0x7f1d73ff8200"/></to>
    </wire>
    <wire loc="487:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port55" scoped="" ref="0x7f1d73ff8200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1d73ed2100"/></to>
    </wire>
    <wire loc="65:/home/hades/tinyos-new/tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f1d73e20930"/></from>
      <to><interface-ref name="Port56" scoped="" ref="0x7f1d73ff6200"/></to>
    </wire>
    <wire loc="488:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port56" scoped="" ref="0x7f1d73ff6200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1d73ecdd10"/></to>
    </wire>
    <wire loc="442:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port14" scoped="" ref="0x7f1d7403b020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1d73f70100"/></to>
    </wire>
    <wire loc="455:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port26" scoped="" ref="0x7f1d74027020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1d73f41d10"/></to>
    </wire>
    <wire loc="531:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SDA" scoped="" ref="0x7f1d73fde560"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1d73f32d10"/></to>
    </wire>
    <wire loc="551:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC6" scoped="" ref="0x7f1d73fb9570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1d73ea6100"/></to>
    </wire>
    <wire loc="532:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SOMI0" scoped="" ref="0x7f1d73fdb580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1d73f2d740"/></to>
    </wire>
    <wire loc="460:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port30" scoped="" ref="0x7f1d74023020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1d73f36100"/></to>
    </wire>
    <wire loc="473:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port42" scoped="" ref="0x7f1d7400f200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1d73f07e00"/></to>
    </wire>
    <wire loc="497:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port64" scoped="" ref="0x7f1d73fea200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1d73eb1d10"/></to>
    </wire>
    <wire loc="535:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UTXD0" scoped="" ref="0x7f1d73fd5580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1d73f24d10"/></to>
    </wire>
    <wire loc="545:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC0" scoped="" ref="0x7f1d73fc5570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1d73ec3100"/></to>
    </wire>
    <wire loc="557:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SVSIN" scoped="" ref="0x7f1d73fb1580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1d73ea2d10"/></to>
    </wire>
    <wire loc="445:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port17" scoped="" ref="0x7f1d74035020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1d73f61100"/></to>
    </wire>
    <wire loc="536:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="URXD0" scoped="" ref="0x7f1d73fd3580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1d73f1f740"/></to>
    </wire>
    <wire loc="450:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port21" scoped="" ref="0x7f1d74031020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1d73f58740"/></to>
    </wire>
    <wire loc="463:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port33" scoped="" ref="0x7f1d7401d020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1d73f28100"/></to>
    </wire>
    <wire loc="476:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port45" scoped="" ref="0x7f1d74008200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1d73ef9d10"/></to>
    </wire>
    <wire loc="489:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port57" scoped="" ref="0x7f1d73ff4200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1d73ec8740"/></to>
    </wire>
    <wire loc="500:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port67" scoped="" ref="0x7f1d73fe4200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1d73ea2d10"/></to>
    </wire>
    <wire loc="440:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port12" scoped="" ref="0x7f1d74040020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1d73f7ad10"/></to>
    </wire>
    <wire loc="453:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port24" scoped="" ref="0x7f1d7402b020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1d73f4a860"/></to>
    </wire>
    <wire loc="466:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port36" scoped="" ref="0x7f1d74017020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1d73f19100"/></to>
    </wire>
    <wire loc="530:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SIMO0" scoped="" ref="0x7f1d73fe0580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1d73f32d10"/></to>
    </wire>
    <wire loc="548:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC3" scoped="" ref="0x7f1d73fbf570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1d73eb5100"/></to>
    </wire>
    <wire loc="555:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="DAC1" scoped="" ref="0x7f1d73fb3570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1d73ea2d10"/></to>
    </wire>
    <wire loc="541:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UCLK1" scoped="" ref="0x7f1d73fcb580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1d73edcd10"/></to>
    </wire>
    <wire loc="471:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port40" scoped="" ref="0x7f1d74013020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1d73f10a60"/></to>
    </wire>
    <wire loc="484:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port52" scoped="" ref="0x7f1d73ffe200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1d73ee0100"/></to>
    </wire>
    <wire loc="495:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port62" scoped="" ref="0x7f1d73fee200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1d73eba740"/></to>
    </wire>
    <wire loc="549:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC4" scoped="" ref="0x7f1d73fbd570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1d73eb1d10"/></to>
    </wire>
    <wire loc="538:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="STE1" scoped="" ref="0x7f1d73fd1570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1d73eead10"/></to>
    </wire>
    <wire loc="443:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port15" scoped="" ref="0x7f1d74039020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1d73f6cd10"/></to>
    </wire>
    <wire loc="456:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port27" scoped="" ref="0x7f1d74025020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1d73f3b740"/></to>
    </wire>
    <wire loc="493:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port60" scoped="" ref="0x7f1d73ff2200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1d73ec3100"/></to>
    </wire>
    <wire loc="461:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port31" scoped="" ref="0x7f1d74021020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1d73f32d10"/></to>
    </wire>
    <wire loc="474:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port43" scoped="" ref="0x7f1d7400c200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1d73f02740"/></to>
    </wire>
    <wire loc="498:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port65" scoped="" ref="0x7f1d73fe8200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1d73eab740"/></to>
    </wire>
    <wire loc="540:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SOMI1" scoped="" ref="0x7f1d73fcd580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1d73ee0100"/></to>
    </wire>
    <wire loc="438:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port10" scoped="" ref="0x7f1d7404d0a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1d73f836d0"/></to>
    </wire>
    <wire loc="451:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port22" scoped="" ref="0x7f1d7402f020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1d73f53100"/></to>
    </wire>
    <wire loc="464:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port34" scoped="" ref="0x7f1d7401b020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1d73f24d10"/></to>
    </wire>
    <wire loc="477:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port46" scoped="" ref="0x7f1d74006200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1d73ef3740"/></to>
    </wire>
    <wire loc="542:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UTXD1" scoped="" ref="0x7f1d73fc9580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1d73f19100"/></to>
    </wire>
    <wire loc="546:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC1" scoped="" ref="0x7f1d73fc3570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1d73ebfd10"/></to>
    </wire>
    <wire loc="552:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC7" scoped="" ref="0x7f1d73fb7570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1d73ea2d10"/></to>
    </wire>
    <wire loc="482:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port50" scoped="" ref="0x7f1d74002200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1d73eead10"/></to>
    </wire>
    <wire loc="543:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="URXD1" scoped="" ref="0x7f1d73fc7580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1d73f15d10"/></to>
    </wire>
    <wire loc="441:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port13" scoped="" ref="0x7f1d7403e020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1d73f75740"/></to>
    </wire>
    <wire loc="454:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port25" scoped="" ref="0x7f1d74029020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1d73f45270"/></to>
    </wire>
    <wire loc="467:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port37" scoped="" ref="0x7f1d74015020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1d73f15d10"/></to>
    </wire>
    <wire loc="539:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SIMO1" scoped="" ref="0x7f1d73fcf580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1d73ee5740"/></to>
    </wire>
    <wire loc="550:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC5" scoped="" ref="0x7f1d73fbb570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1d73eab740"/></to>
    </wire>
    <wire loc="472:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port41" scoped="" ref="0x7f1d74011200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1d73f0b460"/></to>
    </wire>
    <wire loc="485:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port53" scoped="" ref="0x7f1d73ffc200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1d73edcd10"/></to>
    </wire>
    <wire loc="496:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port63" scoped="" ref="0x7f1d73fec200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1d73eb5100"/></to>
    </wire>
    <wire loc="444:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port16" scoped="" ref="0x7f1d74037020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1d73f67740"/></to>
    </wire>
    <wire loc="494:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port61" scoped="" ref="0x7f1d73ff0200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1d73ebfd10"/></to>
    </wire>
    <wire loc="449:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port20" scoped="" ref="0x7f1d74033020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1d73f5dd10"/></to>
    </wire>
    <wire loc="462:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port32" scoped="" ref="0x7f1d7401f020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1d73f2d740"/></to>
    </wire>
    <wire loc="475:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port44" scoped="" ref="0x7f1d7400a200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1d73efd100"/></to>
    </wire>
    <wire loc="499:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port66" scoped="" ref="0x7f1d73fe6200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1d73ea6100"/></to>
    </wire>
    <wire loc="439:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port11" scoped="" ref="0x7f1d74042020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1d73f7e100"/></to>
    </wire>
    <wire loc="452:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port23" scoped="" ref="0x7f1d7402d020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1d73f4fd10"/></to>
    </wire>
    <wire loc="465:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port35" scoped="" ref="0x7f1d74019020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1d73f1f740"/></to>
    </wire>
    <wire loc="478:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port47" scoped="" ref="0x7f1d74004200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1d73eee100"/></to>
    </wire>
    <wire loc="534:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SCL" scoped="" ref="0x7f1d73fd7560"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1d73f28100"/></to>
    </wire>
    <wire loc="547:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC2" scoped="" ref="0x7f1d73fc1570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1d73eba740"/></to>
    </wire>
    <wire loc="533:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UCLK0" scoped="" ref="0x7f1d73fd9580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1d73f28100"/></to>
    </wire>
    <wire loc="483:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port51" scoped="" ref="0x7f1d74000200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1d73ee5740"/></to>
    </wire>
    <wire loc="554:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="DAC0" scoped="" ref="0x7f1d73fb5570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1d73ea6100"/></to>
    </wire>
    <wire loc="558:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SVSOUT" scoped="" ref="0x7f1d73faf580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1d73ec8740"/></to>
    </wire>
    <wire loc="529:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="STE0" scoped="" ref="0x7f1d73fe21f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1d73f36100"/></to>
    </wire>
    <wire loc="82:/home/hades/tinyos-new/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f1d73dcec10"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f1d73da6b80"/></to>
    </wire>
    <wire loc="80:/home/hades/tinyos-new/tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f1d73e0f3f0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f1d73dcdca0"/></to>
    </wire>
    <wire loc="85:/home/hades/tinyos-new/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f1d73dcdca0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f1d73028020"/></to>
    </wire>
    <wire loc="82:/home/hades/tinyos-new/tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x7f1d73e0ddb0"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x7f1d73dcac00"/></to>
    </wire>
    <wire loc="88:/home/hades/tinyos-new/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x7f1d73dcac00"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x7f1d73027df0"/></to>
    </wire>
    <wire loc="83:/home/hades/tinyos-new/tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f1d73e0c410"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f1d73dc88f0"/></to>
    </wire>
    <wire loc="84:/home/hades/tinyos-new/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f1d73dc88f0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f1d73025a80"/></to>
    </wire>
    <wire loc="89:/home/hades/tinyos-new/tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f1d73df4060"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f1d732e0550"/></to>
    </wire>
    <wire loc="59:/home/hades/tinyos-new/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f1d732e0550"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f1d732d2a80"/></to>
    </wire>
    <wire loc="86:/home/hades/tinyos-new/tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7f1d73ddbd90"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7f1d73dbccb0"/></to>
    </wire>
    <wire loc="91:/home/hades/tinyos-new/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7f1d73dbccb0"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7f1d73d8f080"/></to>
    </wire>
    <wire loc="81:/home/hades/tinyos-new/tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f1d73e0d1d0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f1d73dca020"/></to>
    </wire>
    <wire loc="87:/home/hades/tinyos-new/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f1d73dca020"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f1d73027210"/></to>
    </wire>
    <wire loc="85:/home/hades/tinyos-new/tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f1d73df0e00"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f1d73dc6990"/></to>
    </wire>
    <wire loc="93:/home/hades/tinyos-new/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f1d73dc6990"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f1d73d90020"/></to>
    </wire>
    <wire loc="84:/home/hades/tinyos-new/tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f1d73df6370"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f1d73dc92d0"/></to>
    </wire>
    <wire loc="89:/home/hades/tinyos-new/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f1d73dc92d0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f1d73026470"/></to>
    </wire>
    <wire loc="90:/home/hades/tinyos-new/tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f1d73de5130"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f1d732dc660"/></to>
    </wire>
    <wire loc="60:/home/hades/tinyos-new/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f1d732dc660"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f1d732ceaf0"/></to>
    </wire>
    <wire loc="97:/home/hades/tinyos-new/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f1d73da6b80"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f1d7305ab80"/></to>
    </wire>
    <wire loc="83:/home/hades/tinyos-new/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x7f1d73db4e30"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7f1d730238b0"/></to>
    </wire>
    <wire loc="86:/home/hades/tinyos-new/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x7f1d73da7d20"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x7f1d73024ce0"/></to>
    </wire>
    <wire loc="92:/home/hades/tinyos-new/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f1d73dbf9b0"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f1d73d91020"/></to>
    </wire>
    <wire loc="84:/home/hades/tinyos-new/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f1d73d91020"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f1d732e6670"/></to>
    </wire>
    <wire loc="83:/home/hades/tinyos-new/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7f1d73d8f080"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7f1d7305a080"/></to>
    </wire>
    <wire loc="85:/home/hades/tinyos-new/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f1d73d90020"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x7f1d732e26e0"/></to>
    </wire>
    <wire loc="90:/home/hades/tinyos-new/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7f1d73db2020"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7f1d73d8fb70"/></to>
    </wire>
    <wire loc="82:/home/hades/tinyos-new/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7f1d73d8fb70"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7f1d73045020"/></to>
    </wire>
    <wire loc="94:/home/hades/tinyos-new/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f1d73dbbc70"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f1d73d909d0"/></to>
    </wire>
    <wire loc="86:/home/hades/tinyos-new/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f1d73d909d0"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f1d732e1a70"/></to>
    </wire>
    <wire loc="97:/home/hades/tinyos-new/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="RadioResource" scoped="" ref="0x7f1d7301a0f0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f1d73da2210"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="98:/home/hades/tinyos-new/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f1d73022860"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x7f1d73d9b990"/></to>
    </wire>
    <wire loc="93:/home/hades/tinyos-new/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="ActiveSend" scoped="" ref="0x7f1d73d9b990"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x7f1d730c3ca0"/></to>
    </wire>
    <wire loc="99:/home/hades/tinyos-new/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f1d73020690"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x7f1d73d94840"/></to>
    </wire>
    <wire loc="94:/home/hades/tinyos-new/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="ActiveReceive" scoped="" ref="0x7f1d73d94840"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x7f1d730c1a50"/></to>
    </wire>
    <wire loc="101:/home/hades/tinyos-new/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f1d7301c4d0"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f1d7350cb30"/></to>
    </wire>
    <wire loc="102:/home/hades/tinyos-new/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f1d73020ce0"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f1d732e6670"/></to>
    </wire>
    <wire loc="55:/home/hades/tinyos-new/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f1d732e6670"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f1d732d7d20"/></to>
    </wire>
    <wire loc="103:/home/hades/tinyos-new/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f1d7301fb70"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f1d732e10c0"/></to>
    </wire>
    <wire loc="57:/home/hades/tinyos-new/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f1d732e10c0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f1d732d3640"/></to>
    </wire>
    <wire loc="104:/home/hades/tinyos-new/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x7f1d7301e610"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x7f1d73d03dc0"/></to>
    </wire>
    <wire loc="55:/home/hades/tinyos-new/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x7f1d73d03dc0"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x7f1d73cfb970"/></to>
    </wire>
    <wire loc="106:/home/hades/tinyos-new/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubBackoff" scoped="" ref="0x7f1d7301b1f0"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7f1d73d89330"/></to>
    </wire>
    <wire loc="54:/home/hades/tinyos-new/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x7f1d73d89330"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7f1d73d847e0"/></to>
    </wire>
    <wire loc="109:/home/hades/tinyos-new/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f1d7301ad30"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f1d74082dd0"/></to>
    </wire>
    <wire loc="63:/home/hades/tinyos-new/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f1d7305ab80"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x7f1d73057d90"/></to>
    </wire>
    <wire loc="58:/home/hades/tinyos-new/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f1d732e1a70"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f1d732d2020"/></to>
    </wire>
    <wire loc="53:/home/hades/tinyos-new/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7f1d73045020"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7f1d73043420"/></to>
    </wire>
    <wire loc="97:/home/hades/tinyos-new/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="ActiveSend" scoped="" ref="0x7f1d730c3ca0"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x7f1d730b8a20"/></to>
    </wire>
    <wire loc="64:/home/hades/tinyos-new/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7f1d7305a080"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7f1d730522d0"/></to>
    </wire>
    <wire loc="90:/home/hades/tinyos-new/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BareReceive" scoped="" ref="0x7f1d73d9c500"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f1d730c35f0"/></to>
    </wire>
    <wire loc="92:/home/hades/tinyos-new/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f1d730c35f0"/></from>
      <to><interface-ref name="BareReceive" scoped="" ref="0x7f1d730b8370"/></to>
    </wire>
    <wire loc="56:/home/hades/tinyos-new/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7f1d732e26e0"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x7f1d732d4c50"/></to>
    </wire>
    <wire loc="88:/home/hades/tinyos-new/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f1d73da2210"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f1d730c5cb0"/></to>
    </wire>
    <wire loc="96:/home/hades/tinyos-new/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f1d730c5cb0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f1d730ba7b0"/></to>
    </wire>
    <wire loc="89:/home/hades/tinyos-new/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BareSend" scoped="" ref="0x7f1d73d936f0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f1d730c4960"/></to>
    </wire>
    <wire loc="91:/home/hades/tinyos-new/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f1d730c4960"/></from>
      <to><interface-ref name="BareSend" scoped="" ref="0x7f1d730b94d0"/></to>
    </wire>
    <wire loc="91:/home/hades/tinyos-new/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BarePacket" scoped="" ref="0x7f1d73d9cbc0"/></from>
      <to><interface-ref name="BarePacket" scoped="" ref="0x7f1d730c0170"/></to>
    </wire>
    <wire loc="93:/home/hades/tinyos-new/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="BarePacket" scoped="" ref="0x7f1d730c0170"/></from>
      <to><interface-ref name="BarePacket" scoped="" ref="0x7f1d730b6020"/></to>
    </wire>
    <wire loc="98:/home/hades/tinyos-new/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="ActiveReceive" scoped="" ref="0x7f1d730c1a50"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x7f1d730b7840"/></to>
    </wire>
    <wire loc="98:/home/hades/tinyos-new/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x7f1d73057d90"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f1d73d8b390"/></to>
    </wire>
    <wire loc="55:/home/hades/tinyos-new/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f1d73d8b390"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f1d73d88e80"/></to>
    </wire>
    <wire loc="101:/home/hades/tinyos-new/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f1d730bf6b0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f1d73114220"/></to>
    </wire>
    <wire loc="55:/home/hades/tinyos-new/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f1d73114220"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f1d73112a20"/></to>
    </wire>
    <wire loc="102:/home/hades/tinyos-new/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f1d73113020"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f1d73048360"/></to>
    </wire>
    <wire loc="54:/home/hades/tinyos-new/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f1d73048360"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7f1d73045d70"/></to>
    </wire>
    <wire loc="103:/home/hades/tinyos-new/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f1d73045d70"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f1d7305ecf0"/></to>
    </wire>
    <wire loc="61:/home/hades/tinyos-new/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f1d7305ecf0"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7f1d73058860"/></to>
    </wire>
    <wire loc="104:/home/hades/tinyos-new/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f1d73058860"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f1d73d8be80"/></to>
    </wire>
    <wire loc="56:/home/hades/tinyos-new/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f1d73d8be80"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f1d73d85990"/></to>
    </wire>
    <wire loc="107:/home/hades/tinyos-new/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f1d730bf020"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f1d7305b980"/></to>
    </wire>
    <wire loc="62:/home/hades/tinyos-new/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f1d7305b980"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7f1d73057690"/></to>
    </wire>
    <wire loc="108:/home/hades/tinyos-new/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f1d73057690"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f1d730f7ab0"/></to>
    </wire>
    <wire loc="56:/home/hades/tinyos-new/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f1d730f7ab0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f1d730f3e40"/></to>
    </wire>
    <wire loc="109:/home/hades/tinyos-new/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f1d730f4950"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f1d73d8ab40"/></to>
    </wire>
    <wire loc="68:/home/hades/tinyos-new/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f1d73d8ab40"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f1d7336a7c0"/></to>
    </wire>
    <wire loc="63:/home/hades/tinyos-new/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f1d7336a7c0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f1d73364020"/></to>
    </wire>
    <wire loc="59:/home/hades/tinyos-new/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f1d73d83640"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f1d73d13960"/></to>
    </wire>
    <wire loc="54:/home/hades/tinyos-new/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f1d73d13960"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f1d73cfcb10"/></to>
    </wire>
    <wire loc="60:/home/hades/tinyos-new/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Power" scoped="" ref="0x7f1d73d7bb50"/></from>
      <to><interface-ref name="CC2420Power" scoped="" ref="0x7f1d73d0ebf0"/></to>
    </wire>
    <wire loc="56:/home/hades/tinyos-new/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CC2420Power" scoped="" ref="0x7f1d73d0ebf0"/></from>
      <to><interface-ref name="CC2420Power" scoped="" ref="0x7f1d73cf9740"/></to>
    </wire>
    <wire loc="63:/home/hades/tinyos-new/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x7f1d73d777a0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f1d734646d0"/></to>
    </wire>
    <wire loc="69:/home/hades/tinyos-new/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x7f1d73d777a0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f1d7336d5d0"/></to>
    </wire>
    <wire loc="61:/home/hades/tinyos-new/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7f1d7336d5d0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f1d73366ca0"/></to>
    </wire>
    <wire loc="55:/home/hades/tinyos-new/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7f1d734646d0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f1d73454320"/></to>
    </wire>
    <wire loc="64:/home/hades/tinyos-new/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Transmit" scoped="" ref="0x7f1d73d704d0"/></from>
      <to><interface-ref name="CC2420Transmit" scoped="" ref="0x7f1d73461020"/></to>
    </wire>
    <wire loc="56:/home/hades/tinyos-new/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Transmit" scoped="" ref="0x7f1d73461020"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f1d73454bc0"/></to>
    </wire>
    <wire loc="65:/home/hades/tinyos-new/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubBackoff" scoped="" ref="0x7f1d73d793e0"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7f1d73461cb0"/></to>
    </wire>
    <wire loc="57:/home/hades/tinyos-new/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x7f1d73461cb0"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7f1d73453970"/></to>
    </wire>
    <wire loc="72:/home/hades/tinyos-new/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f1d73d6e7e0"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f1d732e6670"/></to>
    </wire>
    <wire loc="73:/home/hades/tinyos-new/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f1d73d66d00"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f1d732e10c0"/></to>
    </wire>
    <wire loc="76:/home/hades/tinyos-new/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7f1d73d6d840"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7f1d73135a20"/></to>
    </wire>
    <wire loc="56:/home/hades/tinyos-new/tos/system/RandomC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7f1d73135a20"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7f1d7312ea20"/></to>
    </wire>
    <wire loc="79:/home/hades/tinyos-new/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SplitControlState" scoped="" ref="0x7f1d73d5e3f0"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f1d73137aa0"/></to>
    </wire>
    <wire loc="74:/home/hades/tinyos-new/tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7f1d73137aa0"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f1d7391a280"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/home/hades/tinyos-new/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f1d73d6f080"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f1d74082dd0"/></to>
    </wire>
    <wire loc="76:/home/hades/tinyos-new/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="sendDone_task" scoped="" ref="0x7f1d73d59020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f1d748114f0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/home/hades/tinyos-new/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="stopDone_task" scoped="" ref="0x7f1d73d5b020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f1d748114f0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:/home/hades/tinyos-new/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="startDone_task" scoped="" ref="0x7f1d73d5c020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f1d748114f0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="57:/home/hades/tinyos-new/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="ReadRssi" scoped="" ref="0x7f1d73d01020"/></from>
      <to><interface-ref name="ReadRssi" scoped="" ref="0x7f1d73cf8b40"/></to>
    </wire>
    <wire loc="63:/home/hades/tinyos-new/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="StartupTimer" scoped="" ref="0x7f1d73cedd90"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x7f1d73c49220"/></to>
    </wire>
    <wire loc="55:/home/hades/tinyos-new/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <from><interface-ref name="Alarm32khz32" scoped="" ref="0x7f1d73c49220"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x7f1d73c43d20"/></to>
    </wire>
    <wire loc="66:/home/hades/tinyos-new/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7f1d73ce9060"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x7f1d73b43060"/></to>
    </wire>
    <wire loc="72:/home/hades/tinyos-new/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7f1d73b43060"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f1d73b36020"/></to>
    </wire>
    <wire loc="67:/home/hades/tinyos-new/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x7f1d73ce8380"/></from>
      <to><interface-ref name="RSTN" scoped="" ref="0x7f1d73b409c0"/></to>
    </wire>
    <wire loc="75:/home/hades/tinyos-new/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x7f1d73b409c0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f1d73b271d0"/></to>
    </wire>
    <wire loc="68:/home/hades/tinyos-new/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="VREN" scoped="" ref="0x7f1d73ce76a0"/></from>
      <to><interface-ref name="VREN" scoped="" ref="0x7f1d73b3d020"/></to>
    </wire>
    <wire loc="77:/home/hades/tinyos-new/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="VREN" scoped="" ref="0x7f1d73b3d020"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f1d73b1eb70"/></to>
    </wire>
    <wire loc="71:/home/hades/tinyos-new/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="InterruptCCA" scoped="" ref="0x7f1d73ce50e0"/></from>
      <to><interface-ref name="InterruptCCA" scoped="" ref="0x7f1d73b06d60"/></to>
    </wire>
    <wire loc="64:/home/hades/tinyos-new/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="InterruptCCA" scoped="" ref="0x7f1d73b06d60"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x7f1d739e9a30"/></to>
    </wire>
    <wire loc="74:/home/hades/tinyos-new/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7f1d73ccf1d0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f1d73598e20"/></to>
    </wire>
    <wire loc="126:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f1d73598e20"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f1d7399d960"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/home/hades/tinyos-new/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7f1d73cce2e0"/></from>
      <to><interface-ref name="SRXON" scoped="" ref="0x7f1d735947b0"/></to>
    </wire>
    <wire loc="132:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7f1d735947b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1d73995510"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:/home/hades/tinyos-new/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7f1d73cce9f0"/></from>
      <to><interface-ref name="SRFOFF" scoped="" ref="0x7f1d73593ae0"/></to>
    </wire>
    <wire loc="135:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7f1d73593ae0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1d73995510"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="77:/home/hades/tinyos-new/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7f1d73cd0a80"/></from>
      <to><interface-ref name="SXOSCON" scoped="" ref="0x7f1d73595ad0"/></to>
    </wire>
    <wire loc="130:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7f1d73595ad0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1d73995510"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:/home/hades/tinyos-new/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7f1d73cd0160"/></from>
      <to><interface-ref name="SXOSCOFF" scoped="" ref="0x7f1d73592160"/></to>
    </wire>
    <wire loc="136:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7f1d73592160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1d73995510"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="79:/home/hades/tinyos-new/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7f1d73cd5b00"/></from>
      <to><interface-ref name="FSCTRL" scoped="" ref="0x7f1d73589870"/></to>
    </wire>
    <wire loc="154:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7f1d73589870"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1d739966f0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:/home/hades/tinyos-new/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7f1d73cdc3d0"/></from>
      <to><interface-ref name="IOCFG0" scoped="" ref="0x7f1d73587880"/></to>
    </wire>
    <wire loc="158:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7f1d73587880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1d739966f0"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="81:/home/hades/tinyos-new/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7f1d73cdcc80"/></from>
      <to><interface-ref name="IOCFG1" scoped="" ref="0x7f1d735860a0"/></to>
    </wire>
    <wire loc="159:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7f1d735860a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1d739966f0"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/home/hades/tinyos-new/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7f1d73cd75f0"/></from>
      <to><interface-ref name="MDMCTRL0" scoped="" ref="0x7f1d7358ee50"/></to>
    </wire>
    <wire loc="147:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7f1d7358ee50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1d739966f0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:/home/hades/tinyos-new/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f1d73cd4020"/></from>
      <to><interface-ref name="MDMCTRL1" scoped="" ref="0x7f1d7358d670"/></to>
    </wire>
    <wire loc="148:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f1d7358d670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1d739966f0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:/home/hades/tinyos-new/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7f1d73ce1520"/></from>
      <to><interface-ref name="PANID" scoped="" ref="0x7f1d73577500"/></to>
    </wire>
    <wire loc="184:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7f1d73577500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f1d739978c0"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:/home/hades/tinyos-new/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7f1d73cd8a90"/></from>
      <to><interface-ref name="IEEEADR" scoped="" ref="0x7f1d73578ce0"/></to>
    </wire>
    <wire loc="183:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7f1d73578ce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f1d739978c0"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:/home/hades/tinyos-new/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7f1d73cd48e0"/></from>
      <to><interface-ref name="RXCTRL1" scoped="" ref="0x7f1d7358be50"/></to>
    </wire>
    <wire loc="153:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7f1d7358be50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1d739966f0"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:/home/hades/tinyos-new/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7f1d73cd31c0"/></from>
      <to><interface-ref name="RSSI" scoped="" ref="0x7f1d7358de50"/></to>
    </wire>
    <wire loc="149:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7f1d7358de50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1d739966f0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:/home/hades/tinyos-new/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f1d73cd3a70"/></from>
      <to><interface-ref name="TXCTRL" scoped="" ref="0x7f1d7358ce50"/></to>
    </wire>
    <wire loc="151:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f1d7358ce50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1d739966f0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:/home/hades/tinyos-new/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SyncResource" scoped="" ref="0x7f1d73ccdd90"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f1d73565a80"/></to>
    </wire>
    <wire loc="126:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f1d73565a80"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f1d7399d960"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="94:/home/hades/tinyos-new/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RssiResource" scoped="" ref="0x7f1d73ccd020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f1d735389e0"/></to>
    </wire>
    <wire loc="126:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f1d735389e0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f1d7399d960"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="97:/home/hades/tinyos-new/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f1d73cdd810"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f1d7350cb30"/></to>
    </wire>
    <wire loc="100:/home/hades/tinyos-new/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f1d73cf5020"/></from>
      <to><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f1d7350bd30"/></to>
    </wire>
    <wire loc="23:/home/hades/tinyos-new/tos/chips/ds2411/LocalIeeeEui64C.nc">
      <from><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f1d7350bd30"/></from>
      <to><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f1d734f1310"/></to>
    </wire>
    <wire loc="126:/home/hades/tinyos-new/tos/chips/cc2420/control/CC2420ControlP.nc">
      <from><interface-ref name="syncDone" scoped="" ref="0x7f1d73cc2820"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f1d748114f0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:/home/hades/tinyos-new/tos/chips/cc2420/control/CC2420ControlP.nc">
      <from><interface-ref name="sync" scoped="" ref="0x7f1d73cc3940"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f1d748114f0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/home/hades/tinyos-new/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f1d73c4c7f0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f1d73c43490"/></to>
    </wire>
    <wire loc="51:/home/hades/tinyos-new/tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f1d73c43490"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f1d72436860"/></to>
    </wire>
    <wire loc="52:/home/hades/tinyos-new/tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <from><interface-ref name="Alarm32khz32" scoped="" ref="0x7f1d73c43d20"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f1d72435140"/></to>
    </wire>
    <wire loc="52:/home/hades/tinyos-new/tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f1d72436860"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f1d7241ba10"/></to>
    </wire>
    <wire loc="53:/home/hades/tinyos-new/tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f1d72435140"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f1d724145f0"/></to>
    </wire>
    <wire loc="51:/home/hades/tinyos-new/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f1d7241ba10"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f1d723fe510"/></to>
    </wire>
    <wire loc="55:/home/hades/tinyos-new/tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x7f1d7240ed20"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f1d7241a2a0"/></to>
    </wire>
    <wire loc="52:/home/hades/tinyos-new/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f1d7241a2a0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f1d723feda0"/></to>
    </wire>
    <wire loc="56:/home/hades/tinyos-new/tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f1d724109b0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f1d73bce020"/></to>
    </wire>
    <wire loc="50:/home/hades/tinyos-new/tos/chips/msp430/timer/Counter32khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f1d73bce020"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f1d73b920f0"/></to>
    </wire>
    <wire loc="54:/home/hades/tinyos-new/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f1d723f9020"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7f1d724031b0"/></to>
    </wire>
    <wire loc="49:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f1d724031b0"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7f1d73c234d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/home/hades/tinyos-new/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f1d723f8760"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f1d724028f0"/></to>
    </wire>
    <wire loc="50:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f1d724028f0"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f1d73c21280"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:/home/hades/tinyos-new/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f1d723f7a80"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7f1d72401c10"/></to>
    </wire>
    <wire loc="51:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f1d72401c10"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7f1d73c20ba0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="58:/home/hades/tinyos-new/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f1d73c234d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f1d7427c6c0"/></to>
    </wire>
    <wire loc="59:/home/hades/tinyos-new/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f1d73c21280"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB0" scoped="" ref="0x7f1d7427a020"/></to>
    </wire>
    <wire loc="60:/home/hades/tinyos-new/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f1d73c20ba0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB0" scoped="" ref="0x7f1d74270570"/></to>
    </wire>
    <wire loc="66:/home/hades/tinyos-new/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f1d73c234d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f1d7427c6c0"/></to>
    </wire>
    <wire loc="67:/home/hades/tinyos-new/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f1d73c21280"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB2" scoped="" ref="0x7f1d74278be0"/></to>
    </wire>
    <wire loc="68:/home/hades/tinyos-new/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f1d73c20ba0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB2" scoped="" ref="0x7f1d7426e1f0"/></to>
    </wire>
    <wire loc="70:/home/hades/tinyos-new/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f1d73c234d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f1d7427c6c0"/></to>
    </wire>
    <wire loc="71:/home/hades/tinyos-new/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f1d73c21280"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB3" scoped="" ref="0x7f1d742760c0"/></to>
    </wire>
    <wire loc="72:/home/hades/tinyos-new/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f1d73c20ba0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB3" scoped="" ref="0x7f1d7426d020"/></to>
    </wire>
    <wire loc="74:/home/hades/tinyos-new/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f1d73c234d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f1d7427c6c0"/></to>
    </wire>
    <wire loc="75:/home/hades/tinyos-new/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f1d73c21280"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB4" scoped="" ref="0x7f1d742755a0"/></to>
    </wire>
    <wire loc="76:/home/hades/tinyos-new/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f1d73c20ba0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB4" scoped="" ref="0x7f1d7426dda0"/></to>
    </wire>
    <wire loc="78:/home/hades/tinyos-new/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f1d73c234d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f1d7427c6c0"/></to>
    </wire>
    <wire loc="79:/home/hades/tinyos-new/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f1d73c21280"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB5" scoped="" ref="0x7f1d74273a50"/></to>
    </wire>
    <wire loc="80:/home/hades/tinyos-new/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f1d73c20ba0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB5" scoped="" ref="0x7f1d7426cb80"/></to>
    </wire>
    <wire loc="82:/home/hades/tinyos-new/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f1d73c234d0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f1d7427c6c0"/></to>
    </wire>
    <wire loc="83:/home/hades/tinyos-new/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f1d73c21280"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB6" scoped="" ref="0x7f1d74271020"/></to>
    </wire>
    <wire loc="84:/home/hades/tinyos-new/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f1d73c20ba0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB6" scoped="" ref="0x7f1d7426ba20"/></to>
    </wire>
    <wire loc="52:/home/hades/tinyos-new/tos/chips/msp430/timer/Counter32khz32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x7f1d73b90540"/></from>
      <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7f1d73bc5060"/></to>
    </wire>
    <wire loc="50:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <from><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7f1d73bc5060"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f1d73bc00a0"/></to>
    </wire>
    <wire loc="51:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f1d73bb22c0"/></from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f1d7427c6c0"/></to>
    </wire>
    <wire loc="73:/home/hades/tinyos-new/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="FIFO" scoped="" ref="0x7f1d73b42380"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f1d73b32b70"/></to>
    </wire>
    <wire loc="74:/home/hades/tinyos-new/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="FIFOP" scoped="" ref="0x7f1d73b416b0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f1d73b2c710"/></to>
    </wire>
    <wire loc="71:/home/hades/tinyos-new/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="CCA" scoped="" ref="0x7f1d73c4ae40"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f1d73b3b440"/></to>
    </wire>
    <wire loc="76:/home/hades/tinyos-new/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="SFD" scoped="" ref="0x7f1d73b3fcd0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f1d73b23d60"/></to>
    </wire>
    <wire loc="63:/home/hades/tinyos-new/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f1d73b3a610"/></from>
      <to><interface-ref name="Port14" scoped="" ref="0x7f1d7403b020"/></to>
    </wire>
    <wire loc="64:/home/hades/tinyos-new/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f1d73b352f0"/></from>
      <to><interface-ref name="Port42" scoped="" ref="0x7f1d7400f200"/></to>
    </wire>
    <wire loc="65:/home/hades/tinyos-new/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f1d73b31de0"/></from>
      <to><interface-ref name="Port13" scoped="" ref="0x7f1d7403e020"/></to>
    </wire>
    <wire loc="66:/home/hades/tinyos-new/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f1d73b2b930"/></from>
      <to><interface-ref name="Port10" scoped="" ref="0x7f1d7404d0a0"/></to>
    </wire>
    <wire loc="67:/home/hades/tinyos-new/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f1d73b26480"/></from>
      <to><interface-ref name="Port46" scoped="" ref="0x7f1d74006200"/></to>
    </wire>
    <wire loc="68:/home/hades/tinyos-new/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f1d73b21020"/></from>
      <to><interface-ref name="Port41" scoped="" ref="0x7f1d74011200"/></to>
    </wire>
    <wire loc="69:/home/hades/tinyos-new/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f1d73b1dde0"/></from>
      <to><interface-ref name="Port45" scoped="" ref="0x7f1d74008200"/></to>
    </wire>
    <wire loc="63:/home/hades/tinyos-new/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="CaptureSFD" scoped="" ref="0x7f1d73b06150"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f1d73afea20"/></to>
    </wire>
    <wire loc="65:/home/hades/tinyos-new/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="InterruptFIFOP" scoped="" ref="0x7f1d73b05a20"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x7f1d739daa70"/></to>
    </wire>
    <wire loc="53:/home/hades/tinyos-new/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f1d73aec5d0"/></from>
      <to><interface-ref name="ControlB1" scoped="" ref="0x7f1d742795a0"/></to>
    </wire>
    <wire loc="54:/home/hades/tinyos-new/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Msp430Capture" scoped="" ref="0x7f1d73aeb8f0"/></from>
      <to><interface-ref name="CaptureB1" scoped="" ref="0x7f1d74269a20"/></to>
    </wire>
    <wire loc="55:/home/hades/tinyos-new/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="GeneralIO" scoped="" ref="0x7f1d73aea7a0"/></from>
      <to><interface-ref name="Port41" scoped="" ref="0x7f1d74011200"/></to>
    </wire>
    <wire loc="60:/home/hades/tinyos-new/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="HplInterrupt" scoped="" ref="0x7f1d739e8610"/></from>
      <to><interface-ref name="Port14" scoped="" ref="0x7f1d73ada020"/></to>
    </wire>
    <wire loc="70:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port14" scoped="" ref="0x7f1d73ada020"/></from>
      <to><interface-ref name="Port14" scoped="" ref="0x7f1d73ac7bc0"/></to>
    </wire>
    <wire loc="61:/home/hades/tinyos-new/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="HplInterrupt" scoped="" ref="0x7f1d739d9610"/></from>
      <to><interface-ref name="Port10" scoped="" ref="0x7f1d73adc170"/></to>
    </wire>
    <wire loc="66:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port10" scoped="" ref="0x7f1d73adc170"/></from>
      <to><interface-ref name="Port10" scoped="" ref="0x7f1d73aced40"/></to>
    </wire>
    <wire loc="82:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port26" scoped="" ref="0x7f1d73ad0020"/></from>
      <to><interface-ref name="Port26" scoped="" ref="0x7f1d73abdbc0"/></to>
    </wire>
    <wire loc="73:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port17" scoped="" ref="0x7f1d73ad7020"/></from>
      <to><interface-ref name="Port17" scoped="" ref="0x7f1d73ac4bc0"/></to>
    </wire>
    <wire loc="77:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port21" scoped="" ref="0x7f1d73ad5020"/></from>
      <to><interface-ref name="Port21" scoped="" ref="0x7f1d73ac2bc0"/></to>
    </wire>
    <wire loc="68:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port12" scoped="" ref="0x7f1d73ae1060"/></from>
      <to><interface-ref name="Port12" scoped="" ref="0x7f1d73acac40"/></to>
    </wire>
    <wire loc="80:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port24" scoped="" ref="0x7f1d73ad2020"/></from>
      <to><interface-ref name="Port24" scoped="" ref="0x7f1d73abfbc0"/></to>
    </wire>
    <wire loc="71:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port15" scoped="" ref="0x7f1d73ad9020"/></from>
      <to><interface-ref name="Port15" scoped="" ref="0x7f1d73ac6bc0"/></to>
    </wire>
    <wire loc="83:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port27" scoped="" ref="0x7f1d73acf020"/></from>
      <to><interface-ref name="Port27" scoped="" ref="0x7f1d73abcbc0"/></to>
    </wire>
    <wire loc="78:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port22" scoped="" ref="0x7f1d73ad4020"/></from>
      <to><interface-ref name="Port22" scoped="" ref="0x7f1d73ac1bc0"/></to>
    </wire>
    <wire loc="69:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port13" scoped="" ref="0x7f1d73adb020"/></from>
      <to><interface-ref name="Port13" scoped="" ref="0x7f1d73ac8bc0"/></to>
    </wire>
    <wire loc="81:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port25" scoped="" ref="0x7f1d73ad1060"/></from>
      <to><interface-ref name="Port25" scoped="" ref="0x7f1d73abec40"/></to>
    </wire>
    <wire loc="72:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port16" scoped="" ref="0x7f1d73ad8020"/></from>
      <to><interface-ref name="Port16" scoped="" ref="0x7f1d73ac5bc0"/></to>
    </wire>
    <wire loc="76:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port20" scoped="" ref="0x7f1d73ad6020"/></from>
      <to><interface-ref name="Port20" scoped="" ref="0x7f1d73ac3bc0"/></to>
    </wire>
    <wire loc="67:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port11" scoped="" ref="0x7f1d73ae2100"/></from>
      <to><interface-ref name="Port11" scoped="" ref="0x7f1d73acbc80"/></to>
    </wire>
    <wire loc="79:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port23" scoped="" ref="0x7f1d73ad3020"/></from>
      <to><interface-ref name="Port23" scoped="" ref="0x7f1d73ac0bc0"/></to>
    </wire>
    <wire loc="131:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7f1d73594160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1d73995510"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f1d73588880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1d739966f0"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7f1d735800a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1d739966f0"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7f1d735870a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1d739966f0"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7f1d73572500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f1d739978c0"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="188:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f1d73575500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f1d739978c0"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7f1d73593490"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1d73995510"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7f1d7357d880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1d739966f0"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f1d73576500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f1d739978c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7f1d73582880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1d739966f0"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7f1d735840a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1d739966f0"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f1d73596a90"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f1d7399a680"/></to>
    </wire>
    <wire loc="56:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f1d7399a680"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f1d73994930"/></to>
    </wire>
    <wire loc="138:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7f1d73592e00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1d73995510"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7f1d73590490"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1d73995510"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f1d7357bc80"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1d739966f0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7f1d73590be0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1d73995510"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f1d73576ce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f1d739978c0"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7f1d7357d0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1d739966f0"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7f1d7358c670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1d739966f0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7f1d7357e0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1d739966f0"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7f1d73580880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1d739966f0"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7f1d7357e880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1d739966f0"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7f1d73573ce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f1d739978c0"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="189:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f1d73575ce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f1d739978c0"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7f1d73584880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1d739966f0"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7f1d7357f0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1d739966f0"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7f1d73577ce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f1d739978c0"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7f1d73586880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1d739966f0"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7f1d73572ce0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f1d73998630"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f1d73595480"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1d73995510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7f1d7358e670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1d739966f0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7f1d7358b670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1d739966f0"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7f1d735810a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1d739966f0"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7f1d73581880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1d739966f0"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f1d735880a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1d739966f0"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7f1d7358f2f0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1d73995510"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7f1d7358e020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1d73995510"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7f1d735927b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1d73995510"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f1d73578500"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1d739966f0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7f1d73573500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f1d739978c0"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7f1d735820a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1d739966f0"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7f1d7357f880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1d739966f0"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7f1d73594e00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1d73995510"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7f1d735850a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1d739966f0"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7f1d7358f940"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1d73995510"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7f1d73585880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1d739966f0"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7f1d7357b0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1d739966f0"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7f1d735719b0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f1d73998630"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Fifo" scoped="" ref="0x7f1d73998630"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f1d73990bb0"/></to>
    </wire>
    <wire loc="53:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Ram" scoped="" ref="0x7f1d739978c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f1d7398d020"/></to>
    </wire>
    <wire loc="54:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Reg" scoped="" ref="0x7f1d739966f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1d7398ddb0"/></to>
    </wire>
    <wire loc="51:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f1d7399d960"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f1d73991810"/></to>
    </wire>
    <wire loc="55:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Strobe" scoped="" ref="0x7f1d73995510"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1d7398cba0"/></to>
    </wire>
    <wire loc="59:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="WorkingState" scoped="" ref="0x7f1d73987020"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f1d7391f770"/></to>
    </wire>
    <wire loc="74:/home/hades/tinyos-new/tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7f1d7391f770"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f1d7391a280"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="62:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7f1d7398b400"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f1d738fdc40"/></to>
    </wire>
    <wire loc="52:/home/hades/tinyos-new/tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f1d738fdc40"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f1d7231cc30"/></to>
    </wire>
    <wire loc="63:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7f1d73988080"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7f1d735be8f0"/></to>
    </wire>
    <wire loc="53:/home/hades/tinyos-new/tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7f1d735be8f0"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7f1d723180c0"/></to>
    </wire>
    <wire loc="64:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7f1d7397f680"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7f1d735bd020"/></to>
    </wire>
    <wire loc="54:/home/hades/tinyos-new/tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7f1d735bd020"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7f1d723172b0"/></to>
    </wire>
    <wire loc="67:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f1d73987df0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f1d74082dd0"/></to>
    </wire>
    <wire loc="88:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <from><interface-ref name="grant" scoped="" ref="0x7f1d7397a120"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f1d748114f0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/home/hades/tinyos-new/tos/system/StateImplC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7f1d7391a280"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f1d73916b70"/></to>
    </wire>
    <wire loc="110:/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7f1d723172b0"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7f1d738953f0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="106:/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7f1d723180c0"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7f1d73898c40"/></to>
    </wire>
    <wire loc="105:/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f1d7231cc30"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f1d7389a7f0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="114:/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f1d7231a8f0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f1d7230f2c0"/></to>
    </wire>
    <wire loc="64:/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f1d7230f2c0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f1d737208a0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7f1d73898c40"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7f1d7381c440"/></to>
    </wire>
    <wire loc="108:/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x7f1d723186d0"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x7f1d73897320"/></to>
    </wire>
    <wire loc="92:/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x7f1d73897320"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x7f1d7381ca50"/></to>
    </wire>
    <wire loc="111:/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7f1d73892510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7f1d72317a50"/></to>
    </wire>
    <wire loc="115:/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f1d72301760"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f1d73898450"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="116:/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x7f1d73893280"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f1d72310640"/></to>
    </wire>
    <wire loc="63:/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f1d72310640"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f1d737215c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="117:/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x7f1d7388e6a0"/></from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f1d7230ac10"/></to>
    </wire>
    <wire loc="67:/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f1d7230ac10"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7f1d73726a90"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="89:/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f1d73898450"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f1d7381dc40"/></to>
    </wire>
    <wire loc="93:/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7f1d738953f0"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7f1d7381b700"/></to>
    </wire>
    <wire loc="88:/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f1d7389a7f0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f1d7381ee80"/></to>
    </wire>
    <wire loc="90:/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7f1d7381ae00"/></from>
      <to><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7f1d73892510"/></to>
    </wire>
    <wire loc="94:/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x7f1d7381a060"/></from>
      <to><interface-ref name="UsartResource" scoped="" ref="0x7f1d73893280"/></to>
    </wire>
    <wire loc="95:/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x7f1d73814de0"/></from>
      <to><interface-ref name="UsartInterrupts" scoped="" ref="0x7f1d7388e6a0"/></to>
    </wire>
    <wire loc="98:/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Usart" scoped="" ref="0x7f1d73819490"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f1d7380c870"/></to>
    </wire>
    <wire loc="85:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f1d7380c870"/></from>
      <to><interface-ref name="Usart" scoped="" ref="0x7f1d737ff060"/></to>
    </wire>
    <wire loc="101:/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f1d738135a0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f1d74082dd0"/></to>
    </wire>
    <wire loc="102:/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <from><interface-ref name="signalDone_task" scoped="" ref="0x7f1d73812c50"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f1d748114f0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7f1d73802980"/></from>
      <to><interface-ref name="I2CInterrupts" scoped="" ref="0x7f1d737fa750"/></to>
    </wire>
    <wire loc="86:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f1d738053b0"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7f1d737fbdc0"/></to>
    </wire>
    <wire loc="90:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="SIMO" scoped="" ref="0x7f1d737cc700"/></from>
      <to><interface-ref name="SIMO0" scoped="" ref="0x7f1d73fe0580"/></to>
    </wire>
    <wire loc="91:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="SOMI" scoped="" ref="0x7f1d737ca670"/></from>
      <to><interface-ref name="SOMI0" scoped="" ref="0x7f1d73fdb580"/></to>
    </wire>
    <wire loc="92:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="UCLK" scoped="" ref="0x7f1d737c7670"/></from>
      <to><interface-ref name="UCLK0" scoped="" ref="0x7f1d73fd9580"/></to>
    </wire>
    <wire loc="93:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="URXD" scoped="" ref="0x7f1d737c5670"/></from>
      <to><interface-ref name="URXD0" scoped="" ref="0x7f1d73fd3580"/></to>
    </wire>
    <wire loc="94:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="UTXD" scoped="" ref="0x7f1d737c3670"/></from>
      <to><interface-ref name="UTXD0" scoped="" ref="0x7f1d73fd5580"/></to>
    </wire>
    <wire loc="14:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="HplI2C" scoped="" ref="0x7f1d737d15b0"/></from>
      <to><interface-ref name="HplI2C" scoped="" ref="0x7f1d7367a430"/></to>
    </wire>
    <wire loc="68:/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7f1d72309440"/></from>
      <to><interface-ref name="I2CInterrupts" scoped="" ref="0x7f1d737239a0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430I2C" scoped="" ref="0x7f1d72309a50"/></from>
      <to><interface-ref name="HplMsp430I2C" scoped="" ref="0x7f1d73686880"/></to>
    </wire>
    <wire loc="11:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="HplMsp430I2C" scoped="" ref="0x7f1d73686880"/></from>
      <to><interface-ref name="HplI2C" scoped="" ref="0x7f1d7367a430"/></to>
    </wire>
    <wire loc="71:/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f1d7230e2b0"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f1d7380c870"/></to>
    </wire>
    <wire loc="66:/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f1d7230fa60"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f1d7371f130"/></to>
    </wire>
    <wire loc="58:/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f1d7371f130"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f1d7368d060"/></to>
    </wire>
    <wire loc="65:/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f1d7371e020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f1d72301760"/></to>
    </wire>
    <wire loc="56:/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f1d737208a0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f1d73690bf0"/></to>
    </wire>
    <wire loc="106:/home/hades/tinyos-new/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f1d73690bf0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f1d72298850"/></to>
    </wire>
    <wire loc="51:/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="Interrupts" scoped="" ref="0x7f1d73726a90"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7f1d7371c5c0"/></to>
    </wire>
    <wire loc="55:/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f1d737215c0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f1d73691e60"/></to>
    </wire>
    <wire loc="105:/home/hades/tinyos-new/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f1d73691e60"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f1d7229a970"/></to>
    </wire>
    <wire loc="52:/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="I2CInterrupts" scoped="" ref="0x7f1d737239a0"/></from>
      <to><interface-ref name="I2CInterrupts" scoped="" ref="0x7f1d7370a020"/></to>
    </wire>
    <wire loc="108:/home/hades/tinyos-new/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f1d7368d060"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f1d72297c30"/></to>
    </wire>
    <wire loc="57:/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f1d7368d930"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f1d7371e020"/></to>
    </wire>
    <wire loc="59:/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f1d737094b0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f1d7368d060"/></to>
    </wire>
    <wire loc="62:/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="RawInterrupts" scoped="" ref="0x7f1d7370a690"/></from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f1d738053b0"/></to>
    </wire>
    <wire loc="63:/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="RawI2CInterrupts" scoped="" ref="0x7f1d7370ae70"/></from>
      <to><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7f1d73802980"/></to>
    </wire>
    <wire loc="107:/home/hades/tinyos-new/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f1d7368f400"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f1d72297020"/></to>
    </wire>
    <wire loc="109:/home/hades/tinyos-new/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f1d72296590"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f1d7368d930"/></to>
    </wire>
    <wire loc="111:/home/hades/tinyos-new/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7f1d72296d50"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7f1d7229c750"/></to>
    </wire>
    <wire loc="75:/home/hades/tinyos-new/tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7f1d7228c020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f1d748114f0"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="15:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="HplUsart" scoped="" ref="0x7f1d73673250"/></from>
      <to><interface-ref name="Usart" scoped="" ref="0x7f1d737ff060"/></to>
    </wire>
    <wire loc="18:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="SIMO" scoped="" ref="0x7f1d7366fd40"/></from>
      <to><interface-ref name="SIMO0" scoped="" ref="0x7f1d73fe0580"/></to>
    </wire>
    <wire loc="19:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="UCLK" scoped="" ref="0x7f1d7366dcb0"/></from>
      <to><interface-ref name="UCLK0" scoped="" ref="0x7f1d73fd9580"/></to>
    </wire>
    <wire loc="153:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7f1d73558c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1d739966f0"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7f1d73563da0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1d73995510"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7f1d7355cb50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1d739966f0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f1d73556670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1d739966f0"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7f1d7354fe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1d739966f0"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7f1d73556e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1d739966f0"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7f1d735422f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f1d739978c0"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="188:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f1d735442f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f1d739978c0"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7f1d73560120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1d73995510"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7f1d7354a670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1d739966f0"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f1d735452f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f1d739978c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7f1d7355ac60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1d739966f0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f1d73559c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1d739966f0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7f1d73550670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1d739966f0"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7f1d73552e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1d739966f0"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7f1d73554670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1d739966f0"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f1d73564760"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f1d7399a680"/></to>
    </wire>
    <wire loc="138:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7f1d7355faa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1d73995510"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7f1d7355e120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1d73995510"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f1d73549a70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1d739966f0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7f1d7355e870"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1d73995510"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f1d73545ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f1d739978c0"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7f1d73560dc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1d73995510"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7f1d7354be50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1d739966f0"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7f1d73559480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1d739966f0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f1d7355a480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1d739966f0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7f1d73563750"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1d73995510"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7f1d7354ce50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1d739966f0"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7f1d7354d670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1d739966f0"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7f1d7354b670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1d739966f0"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7f1d73543ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f1d739978c0"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="189:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f1d73544ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f1d739978c0"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7f1d73551670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1d739966f0"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7f1d7354de50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1d739966f0"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7f1d73546ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f1d739978c0"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7f1d73553670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1d739966f0"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7f1d73542ad0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f1d73998630"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f1d73563100"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1d73995510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7f1d7355c370"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1d739966f0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7f1d73558480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1d739966f0"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7f1d73550e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1d739966f0"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7f1d73554e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1d739966f0"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7f1d7354f670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1d739966f0"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7f1d73557670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1d739966f0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7f1d73562450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1d73995510"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f1d73557e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1d739966f0"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7f1d7355d020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1d73995510"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7f1d7355dcc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1d73995510"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7f1d735462f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f1d739978c0"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7f1d73548ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f1d739978c0"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7f1d7355f450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1d73995510"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f1d735482f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1d739966f0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7f1d735432f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f1d739978c0"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7f1d73551e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1d739966f0"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7f1d7354c670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1d739966f0"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7f1d73562aa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1d73995510"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7f1d73560770"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1d73995510"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7f1d73553e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1d739966f0"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7f1d7355d670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1d73995510"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7f1d73552670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1d739966f0"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7f1d7354ae50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1d739966f0"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7f1d735417a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f1d73998630"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="153:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7f1d7352bc60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1d739966f0"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7f1d73536da0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1d73995510"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7f1d7352fb50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1d739966f0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f1d73529670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1d739966f0"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7f1d73522e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1d739966f0"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7f1d73529e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1d739966f0"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7f1d735152f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f1d739978c0"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="188:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f1d735182f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f1d739978c0"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7f1d73534120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1d73995510"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7f1d7351d670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1d739966f0"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f1d735192f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f1d739978c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7f1d7352ec60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1d739966f0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f1d7352dc60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1d739966f0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7f1d73523670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1d739966f0"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7f1d73526e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1d739966f0"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7f1d73528670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1d739966f0"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f1d73537760"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f1d7399a680"/></to>
    </wire>
    <wire loc="138:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7f1d73533aa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1d73995510"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7f1d73531120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1d73995510"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f1d7351ca70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1d739966f0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7f1d73531870"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1d73995510"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f1d73519ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f1d739978c0"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7f1d73534dc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1d73995510"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7f1d7351fe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1d739966f0"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7f1d7352d480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1d739966f0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f1d7352e480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1d739966f0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7f1d73536750"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1d73995510"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7f1d73520e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1d739966f0"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7f1d73521670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1d739966f0"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7f1d7351f670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1d739966f0"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7f1d73516ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f1d739978c0"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="189:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f1d73518ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f1d739978c0"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7f1d73524670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1d739966f0"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7f1d73521e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1d739966f0"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7f1d7351aad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f1d739978c0"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7f1d73527670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1d739966f0"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7f1d73515ad0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f1d73998630"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f1d73536100"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1d73995510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7f1d7352f370"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1d739966f0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7f1d7352b480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1d739966f0"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7f1d73523e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1d739966f0"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7f1d73528e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1d739966f0"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7f1d73522670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1d739966f0"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7f1d7352a670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1d739966f0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7f1d73535450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1d73995510"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f1d7352ae50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1d739966f0"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7f1d73530020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1d73995510"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7f1d73530cc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1d73995510"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7f1d7351a2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f1d739978c0"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7f1d7351bad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f1d739978c0"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7f1d73533450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1d73995510"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f1d7351b2f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1d739966f0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7f1d735162f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f1d739978c0"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7f1d73524e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1d739966f0"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7f1d73520670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1d739966f0"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7f1d73535aa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1d73995510"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7f1d73534770"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1d73995510"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7f1d73527e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1d739966f0"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7f1d73530670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1d73995510"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7f1d73526670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1d739966f0"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7f1d7351de50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1d739966f0"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7f1d735147a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f1d73998630"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="21:/home/hades/tinyos-new/tos/chips/ds2411/LocalIeeeEui64C.nc">
      <from><interface-ref name="ReadId48" scoped="" ref="0x7f1d734ee8c0"/></from>
      <to><interface-ref name="ReadId48" scoped="" ref="0x7f1d734e3020"/></to>
    </wire>
    <wire loc="20:/home/hades/tinyos-new/tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="ReadId48" scoped="" ref="0x7f1d734e3020"/></from>
      <to><interface-ref name="ReadId48" scoped="" ref="0x7f1d734dd210"/></to>
    </wire>
    <wire loc="16:/home/hades/tinyos-new/tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="OneWire" scoped="" ref="0x7f1d734d9cb0"/></from>
      <to><interface-ref name="OneWire" scoped="" ref="0x7f1d734c7020"/></to>
    </wire>
    <wire loc="21:/home/hades/tinyos-new/tos/lib/onewire/OneWireMasterC.nc">
      <from><interface-ref name="OneWire" scoped="" ref="0x7f1d734c7020"/></from>
      <to><interface-ref name="OneWire" scoped="" ref="0x7f1d734c5490"/></to>
    </wire>
    <wire loc="17:/home/hades/tinyos-new/tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="PowerControl" scoped="" ref="0x7f1d734dc5b0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f1d7347aa20"/></to>
    </wire>
    <wire loc="18:/home/hades/tinyos-new/tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="Pin" scoped="" ref="0x7f1d734c78c0"/></from>
      <to><interface-ref name="Gpio" scoped="" ref="0x7f1d734c85a0"/></to>
    </wire>
    <wire loc="11:/home/hades/tinyos-new/tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <from><interface-ref name="Gpio" scoped="" ref="0x7f1d734c85a0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f1d734789e0"/></to>
    </wire>
    <wire loc="18:/home/hades/tinyos-new/tos/lib/onewire/OneWireMasterC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x7f1d734beb40"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x7f1d7349e020"/></to>
    </wire>
    <wire loc="49:/home/hades/tinyos-new/tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x7f1d7349e020"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x7f1d7349bd20"/></to>
    </wire>
    <wire loc="19:/home/hades/tinyos-new/tos/lib/onewire/OneWireMasterC.nc">
      <from><interface-ref name="Pin" scoped="" ref="0x7f1d734c5d30"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x7f1d734c78c0"/></to>
    </wire>
    <wire loc="50:/home/hades/tinyos-new/tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f1d7348b260"/></from>
      <to><interface-ref name="Msp430CounterMicro" scoped="" ref="0x7f1d73488890"/></to>
    </wire>
    <wire loc="54:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430CounterMicroC.nc">
      <from><interface-ref name="Msp430CounterMicro" scoped="" ref="0x7f1d73488890"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f1d73481060"/></to>
    </wire>
    <wire loc="55:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430CounterMicroC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f1d7347e190"/></from>
      <to><interface-ref name="TimerA" scoped="" ref="0x7f1d7429d060"/></to>
    </wire>
    <wire loc="9:/home/hades/tinyos-new/tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f1d73477c50"/></from>
      <to><interface-ref name="Port24" scoped="" ref="0x7f1d7402b020"/></to>
    </wire>
    <wire loc="58:/home/hades/tinyos-new/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="EnergyIndicator" scoped="" ref="0x7f1d7345d9f0"/></from>
      <to><interface-ref name="EnergyIndicator" scoped="" ref="0x7f1d73452900"/></to>
    </wire>
    <wire loc="59:/home/hades/tinyos-new/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="ByteIndicator" scoped="" ref="0x7f1d7345f190"/></from>
      <to><interface-ref name="ByteIndicator" scoped="" ref="0x7f1d734510f0"/></to>
    </wire>
    <wire loc="66:/home/hades/tinyos-new/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="BackoffTimer" scoped="" ref="0x7f1d73451ae0"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x7f1d73c49220"/></to>
    </wire>
    <wire loc="69:/home/hades/tinyos-new/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CCA" scoped="" ref="0x7f1d73443500"/></from>
      <to><interface-ref name="CCA" scoped="" ref="0x7f1d73c4ae40"/></to>
    </wire>
    <wire loc="70:/home/hades/tinyos-new/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7f1d7343c820"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x7f1d73b43060"/></to>
    </wire>
    <wire loc="71:/home/hades/tinyos-new/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SFD" scoped="" ref="0x7f1d7343bb40"/></from>
      <to><interface-ref name="SFD" scoped="" ref="0x7f1d73b3fcd0"/></to>
    </wire>
    <wire loc="74:/home/hades/tinyos-new/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CaptureSFD" scoped="" ref="0x7f1d73444880"/></from>
      <to><interface-ref name="CaptureSFD" scoped="" ref="0x7f1d73b06150"/></to>
    </wire>
    <wire loc="77:/home/hades/tinyos-new/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7f1d73439020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f1d7339dc30"/></to>
    </wire>
    <wire loc="126:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f1d7339dc30"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f1d7399d960"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:/home/hades/tinyos-new/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f1d73439d10"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f1d7339c8f0"/></to>
    </wire>
    <wire loc="125:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f1d7339c8f0"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f1d7399a680"/></to>
    </wire>
    <wire loc="79:/home/hades/tinyos-new/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f1d734366d0"/></from>
      <to><interface-ref name="SNOP" scoped="" ref="0x7f1d7339b2f0"/></to>
    </wire>
    <wire loc="129:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f1d7339b2f0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1d73995510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:/home/hades/tinyos-new/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7f1d73436de0"/></from>
      <to><interface-ref name="STXON" scoped="" ref="0x7f1d7339acc0"/></to>
    </wire>
    <wire loc="133:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7f1d7339acc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1d73995510"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="81:/home/hades/tinyos-new/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7f1d73434530"/></from>
      <to><interface-ref name="STXONCCA" scoped="" ref="0x7f1d73399370"/></to>
    </wire>
    <wire loc="134:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7f1d73399370"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1d73995510"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/home/hades/tinyos-new/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7f1d73434c60"/></from>
      <to><interface-ref name="SFLUSHTX" scoped="" ref="0x7f1d73398d00"/></to>
    </wire>
    <wire loc="138:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7f1d73398d00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1d73995510"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:/home/hades/tinyos-new/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f1d73437e00"/></from>
      <to><interface-ref name="TXCTRL" scoped="" ref="0x7f1d73392c60"/></to>
    </wire>
    <wire loc="151:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f1d73392c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1d739966f0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:/home/hades/tinyos-new/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7f1d73438780"/></from>
      <to><interface-ref name="TXFIFO" scoped="" ref="0x7f1d733797a0"/></to>
    </wire>
    <wire loc="196:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7f1d733797a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f1d73998630"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:/home/hades/tinyos-new/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f1d73437550"/></from>
      <to><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f1d7337e2f0"/></to>
    </wire>
    <wire loc="186:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f1d7337e2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f1d739978c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:/home/hades/tinyos-new/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f1d734333e0"/></from>
      <to><interface-ref name="MDMCTRL1" scoped="" ref="0x7f1d73393480"/></to>
    </wire>
    <wire loc="148:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f1d73393480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1d739966f0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:/home/hades/tinyos-new/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f1d734325e0"/></from>
      <to><interface-ref name="SECCTRL0" scoped="" ref="0x7f1d7338fe50"/></to>
    </wire>
    <wire loc="155:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f1d7338fe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1d739966f0"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:/home/hades/tinyos-new/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f1d73431020"/></from>
      <to><interface-ref name="SECCTRL1" scoped="" ref="0x7f1d7338e670"/></to>
    </wire>
    <wire loc="156:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f1d7338e670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1d739966f0"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="89:/home/hades/tinyos-new/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7f1d73433e80"/></from>
      <to><interface-ref name="STXENC" scoped="" ref="0x7f1d733957b0"/></to>
    </wire>
    <wire loc="142:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7f1d733957b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1d73995510"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="90:/home/hades/tinyos-new/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7f1d734309c0"/></from>
      <to><interface-ref name="TXNONCE" scoped="" ref="0x7f1d7337bad0"/></to>
    </wire>
    <wire loc="191:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7f1d7337bad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f1d739978c0"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:/home/hades/tinyos-new/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f1d73431890"/></from>
      <to><interface-ref name="KEY0" scoped="" ref="0x7f1d7337d2f0"/></to>
    </wire>
    <wire loc="188:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f1d7337d2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f1d739978c0"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="92:/home/hades/tinyos-new/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f1d73430130"/></from>
      <to><interface-ref name="KEY1" scoped="" ref="0x7f1d7337dad0"/></to>
    </wire>
    <wire loc="189:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f1d7337dad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f1d739978c0"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="95:/home/hades/tinyos-new/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Receive" scoped="" ref="0x7f1d7342bd40"/></from>
      <to><interface-ref name="CC2420Receive" scoped="" ref="0x7f1d7336de00"/></to>
    </wire>
    <wire loc="62:/home/hades/tinyos-new/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Receive" scoped="" ref="0x7f1d7336de00"/></from>
      <to><interface-ref name="CC2420Receive" scoped="" ref="0x7f1d73365550"/></to>
    </wire>
    <wire loc="98:/home/hades/tinyos-new/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f1d7344dd00"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f1d732e6670"/></to>
    </wire>
    <wire loc="99:/home/hades/tinyos-new/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f1d7344cbb0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f1d732e10c0"/></to>
    </wire>
    <wire loc="100:/home/hades/tinyos-new/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x7f1d7344b950"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f1d732e0550"/></to>
    </wire>
    <wire loc="101:/home/hades/tinyos-new/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f1d7343ebe0"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f1d732d8480"/></to>
    </wire>
    <wire loc="61:/home/hades/tinyos-new/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f1d732d8480"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f1d732ca8b0"/></to>
    </wire>
    <wire loc="104:/home/hades/tinyos-new/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f1d7342e6c0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f1d74082dd0"/></to>
    </wire>
    <wire loc="153:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7f1d73390c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1d739966f0"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7f1d7339a020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1d73995510"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7f1d73394c70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1d739966f0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7f1d73387e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1d739966f0"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7f1d7338ee50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1d739966f0"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7f1d7337a2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f1d739978c0"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7f1d73382670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1d739966f0"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7f1d73393c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1d739966f0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7f1d73388670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1d739966f0"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7f1d7338be50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1d739966f0"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7f1d7338d670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1d739966f0"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7f1d73396370"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1d73995510"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f1d73381a70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1d739966f0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7f1d73396ac0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1d73995510"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f1d7337ead0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f1d739978c0"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7f1d73398060"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1d73995510"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7f1d73384e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1d739966f0"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7f1d73392480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1d739966f0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7f1d7339b940"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1d73995510"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7f1d73385e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1d739966f0"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7f1d73386670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1d739966f0"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7f1d73384670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1d739966f0"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7f1d73389670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1d739966f0"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7f1d73386e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1d739966f0"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7f1d7337fad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f1d739978c0"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7f1d7338c670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1d739966f0"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7f1d7337aad0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f1d73998630"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7f1d73394490"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1d739966f0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7f1d73390480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1d739966f0"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7f1d73388e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1d739966f0"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7f1d7338de50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1d739966f0"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7f1d73387670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1d739966f0"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7f1d7338f670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1d739966f0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7f1d7339a670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1d73995510"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7f1d73395160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1d73995510"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7f1d73395e00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1d73995510"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7f1d7337f2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f1d739978c0"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7f1d73380ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f1d739978c0"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7f1d733986b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1d73995510"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f1d733802f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1d739966f0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7f1d7337b2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f1d739978c0"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7f1d73389e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1d739966f0"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7f1d73385670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1d739966f0"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7f1d733999c0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1d73995510"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7f1d7338ce50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1d739966f0"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7f1d7338b670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1d739966f0"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7f1d73382e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1d739966f0"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:/home/hades/tinyos-new/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="PacketIndicator" scoped="" ref="0x7f1d73369020"/></from>
      <to><interface-ref name="PacketIndicator" scoped="" ref="0x7f1d733647c0"/></to>
    </wire>
    <wire loc="59:/home/hades/tinyos-new/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f1d7334f150"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f1d74082dd0"/></to>
    </wire>
    <wire loc="68:/home/hades/tinyos-new/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7f1d73362020"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x7f1d73b43060"/></to>
    </wire>
    <wire loc="69:/home/hades/tinyos-new/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="FIFO" scoped="" ref="0x7f1d73361380"/></from>
      <to><interface-ref name="FIFO" scoped="" ref="0x7f1d73b42380"/></to>
    </wire>
    <wire loc="70:/home/hades/tinyos-new/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="FIFOP" scoped="" ref="0x7f1d733606b0"/></from>
      <to><interface-ref name="FIFOP" scoped="" ref="0x7f1d73b416b0"/></to>
    </wire>
    <wire loc="71:/home/hades/tinyos-new/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="InterruptFIFOP" scoped="" ref="0x7f1d7335fa50"/></from>
      <to><interface-ref name="InterruptFIFOP" scoped="" ref="0x7f1d73b05a20"/></to>
    </wire>
    <wire loc="72:/home/hades/tinyos-new/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7f1d7335e6e0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f1d73183d00"/></to>
    </wire>
    <wire loc="126:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f1d73183d00"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f1d7399d960"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:/home/hades/tinyos-new/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7f1d7335d530"/></from>
      <to><interface-ref name="RXFIFO" scoped="" ref="0x7f1d73160ad0"/></to>
    </wire>
    <wire loc="195:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7f1d73160ad0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f1d73998630"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:/home/hades/tinyos-new/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7f1d7335cad0"/></from>
      <to><interface-ref name="SFLUSHRX" scoped="" ref="0x7f1d7317d6b0"/></to>
    </wire>
    <wire loc="137:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7f1d7317d6b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1d73995510"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/home/hades/tinyos-new/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7f1d7335c3a0"/></from>
      <to><interface-ref name="SACK" scoped="" ref="0x7f1d7317c370"/></to>
    </wire>
    <wire loc="139:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7f1d7317c370"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1d73995510"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:/home/hades/tinyos-new/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f1d7335b330"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f1d732e6670"/></to>
    </wire>
    <wire loc="77:/home/hades/tinyos-new/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f1d7335a1e0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f1d732e10c0"/></to>
    </wire>
    <wire loc="78:/home/hades/tinyos-new/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x7f1d73358d70"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f1d732e0550"/></to>
    </wire>
    <wire loc="79:/home/hades/tinyos-new/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x7f1d7335ab90"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x7f1d73d03dc0"/></to>
    </wire>
    <wire loc="81:/home/hades/tinyos-new/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f1d733533e0"/></from>
      <to><interface-ref name="SECCTRL0" scoped="" ref="0x7f1d73175e50"/></to>
    </wire>
    <wire loc="155:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f1d73175e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1d739966f0"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/home/hades/tinyos-new/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f1d73353cb0"/></from>
      <to><interface-ref name="SECCTRL1" scoped="" ref="0x7f1d73174670"/></to>
    </wire>
    <wire loc="156:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f1d73174670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1d739966f0"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:/home/hades/tinyos-new/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7f1d73354b10"/></from>
      <to><interface-ref name="SRXDEC" scoped="" ref="0x7f1d7317b160"/></to>
    </wire>
    <wire loc="141:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7f1d7317b160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1d73995510"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:/home/hades/tinyos-new/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7f1d733516d0"/></from>
      <to><interface-ref name="RXNONCE" scoped="" ref="0x7f1d731602f0"/></to>
    </wire>
    <wire loc="192:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7f1d731602f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f1d739978c0"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:/home/hades/tinyos-new/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f1d73352590"/></from>
      <to><interface-ref name="KEY0" scoped="" ref="0x7f1d731622f0"/></to>
    </wire>
    <wire loc="188:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f1d731622f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f1d739978c0"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:/home/hades/tinyos-new/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f1d73352e00"/></from>
      <to><interface-ref name="KEY1" scoped="" ref="0x7f1d73162ad0"/></to>
    </wire>
    <wire loc="189:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f1d73162ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f1d739978c0"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:/home/hades/tinyos-new/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f1d73350020"/></from>
      <to><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f1d73163ad0"/></to>
    </wire>
    <wire loc="187:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f1d73163ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f1d739978c0"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:/home/hades/tinyos-new/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f1d733508b0"/></from>
      <to><interface-ref name="SNOP" scoped="" ref="0x7f1d73181300"/></to>
    </wire>
    <wire loc="129:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f1d73181300"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1d73995510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:/home/hades/tinyos-new/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <from><interface-ref name="receiveDone_task" scoped="" ref="0x7f1d733439d0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f1d748114f0"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:/home/hades/tinyos-new/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f1d7326b7c0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f1d73bce020"/></to>
    </wire>
    <wire loc="65:/home/hades/tinyos-new/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LocalTime32khz" scoped="" ref="0x7f1d732c5820"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7f1d732744e0"/></to>
    </wire>
    <wire loc="69:/home/hades/tinyos-new/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LocalTimeMilli" scoped="" ref="0x7f1d732c7b80"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7f1d7325e610"/></to>
    </wire>
    <wire loc="59:/home/hades/tinyos-new/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x7f1d7325e610"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7f1d731a52b0"/></to>
    </wire>
    <wire loc="58:/home/hades/tinyos-new/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x7f1d73263020"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f1d731b4150"/></to>
    </wire>
    <wire loc="57:/home/hades/tinyos-new/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f1d73264130"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f1d7322f020"/></to>
    </wire>
    <wire loc="52:/home/hades/tinyos-new/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f1d7322f020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f1d721889d0"/></to>
    </wire>
    <wire loc="61:/home/hades/tinyos-new/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x7f1d731ae640"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f1d732032f0"/></to>
    </wire>
    <wire loc="62:/home/hades/tinyos-new/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f1d731fe850"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f1d7322f870"/></to>
    </wire>
    <wire loc="53:/home/hades/tinyos-new/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f1d7322f870"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f1d721815f0"/></to>
    </wire>
    <wire loc="63:/home/hades/tinyos-new/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f1d731a4690"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f1d7324eb80"/></to>
    </wire>
    <wire loc="50:/home/hades/tinyos-new/tos/chips/msp430/timer/CounterMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f1d7324eb80"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f1d73246610"/></to>
    </wire>
    <wire loc="51:/home/hades/tinyos-new/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f1d721889d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f1d7216c360"/></to>
    </wire>
    <wire loc="55:/home/hades/tinyos-new/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x7f1d7217bd20"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f1d72187260"/></to>
    </wire>
    <wire loc="52:/home/hades/tinyos-new/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f1d72187260"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f1d7216cbf0"/></to>
    </wire>
    <wire loc="56:/home/hades/tinyos-new/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f1d7217e9b0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f1d7324eb80"/></to>
    </wire>
    <wire loc="54:/home/hades/tinyos-new/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f1d72168dd0"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7f1d72171020"/></to>
    </wire>
    <wire loc="49:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f1d72171020"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7f1d73c234d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/home/hades/tinyos-new/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f1d72166440"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f1d72170760"/></to>
    </wire>
    <wire loc="50:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f1d72170760"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f1d73c21280"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:/home/hades/tinyos-new/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f1d72165760"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7f1d7216fa80"/></to>
    </wire>
    <wire loc="51:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f1d7216fa80"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7f1d73c20ba0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:/home/hades/tinyos-new/tos/chips/msp430/timer/CounterMilli32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x7f1d73244b90"/></from>
      <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7f1d73bc5060"/></to>
    </wire>
    <wire loc="74:/home/hades/tinyos-new/tos/lib/timer/AlarmToTimerC.nc">
      <from><interface-ref name="fired" scoped="" ref="0x7f1d731fa9c0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f1d748114f0"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:/home/hades/tinyos-new/tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x7f1d731a9a00"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f1d748114f0"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:/home/hades/tinyos-new/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f1d7319b8c0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f1d731922c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/home/hades/tinyos-new/tos/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x7f1d731922c0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f1d73263020"/></to>
    </wire>
    <wire loc="153:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7f1d73176c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1d739966f0"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7f1d73180020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1d73995510"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7f1d73179c70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1d739966f0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7f1d7316de50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1d739966f0"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7f1d73174e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1d739966f0"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7f1d7317e370"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1d73995510"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7f1d73168670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1d739966f0"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f1d731632f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f1d739978c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7f1d73178c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1d739966f0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f1d73177c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1d739966f0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7f1d7316e670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1d739966f0"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7f1d73170e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1d739966f0"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7f1d73172670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1d739966f0"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f1d73182970"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f1d7399a680"/></to>
    </wire>
    <wire loc="138:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7f1d7317dd00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1d73995510"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f1d73167a70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1d739966f0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7f1d7317cac0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1d73995510"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7f1d7317d060"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1d73995510"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7f1d73169e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1d739966f0"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7f1d73177480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1d739966f0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f1d73178480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1d739966f0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7f1d73181950"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1d73995510"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7f1d7316ae50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1d739966f0"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7f1d7316b670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1d739966f0"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7f1d73169670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1d739966f0"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7f1d73161ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f1d739978c0"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7f1d7316f670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1d739966f0"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7f1d7316be50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1d739966f0"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7f1d73164ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f1d739978c0"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7f1d73171670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1d739966f0"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7f1d73179490"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1d739966f0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7f1d73176480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1d739966f0"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7f1d7316ee50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1d739966f0"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7f1d73172e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1d739966f0"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7f1d7316d670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1d739966f0"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7f1d73175670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1d739966f0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7f1d73180670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1d73995510"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7f1d7317be00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1d73995510"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7f1d731642f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f1d739978c0"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7f1d73166ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f1d739978c0"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f1d731662f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1d739966f0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7f1d731612f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f1d739978c0"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7f1d7316fe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1d739966f0"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7f1d7316a670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1d739966f0"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7f1d73180cc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1d73995510"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7f1d7317e9c0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1d73995510"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7f1d73171e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1d739966f0"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7f1d7317b7b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f1d73995510"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7f1d73170670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1d739966f0"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7f1d73168e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f1d739966f0"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7f1d7315f7a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f1d73998630"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/home/hades/tinyos-new/tos/system/RandomC.nc">
      <from><interface-ref name="SeedInit" scoped="" ref="0x7f1d73133920"/></from>
      <to><interface-ref name="SeedInit" scoped="" ref="0x7f1d7312f940"/></to>
    </wire>
    <wire loc="54:/home/hades/tinyos-new/tos/system/RandomC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f1d731399a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f1d7312f080"/></to>
    </wire>
    <wire loc="56:/home/hades/tinyos-new/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f1d7310fe60"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7f1d73113020"/></to>
    </wire>
    <wire loc="60:/home/hades/tinyos-new/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7f1d7310eae0"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f1d73110690"/></to>
    </wire>
    <wire loc="74:/home/hades/tinyos-new/tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7f1d73110690"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f1d7391a280"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/home/hades/tinyos-new/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7f1d7310c8f0"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7f1d73135a20"/></to>
    </wire>
    <wire loc="62:/home/hades/tinyos-new/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f1d7310b170"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f1d732e10c0"/></to>
    </wire>
    <wire loc="57:/home/hades/tinyos-new/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="DuplicateReceive" scoped="" ref="0x7f1d730f4200"/></from>
      <to><interface-ref name="DuplicateReceive" scoped="" ref="0x7f1d730f0570"/></to>
    </wire>
    <wire loc="58:/home/hades/tinyos-new/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f1d730ef3f0"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7f1d730f4950"/></to>
    </wire>
    <wire loc="62:/home/hades/tinyos-new/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f1d730efa70"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f1d732e10c0"/></to>
    </wire>
    <wire loc="94:/home/hades/tinyos-new/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f1d730b6d70"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7f1d730bf6b0"/></to>
    </wire>
    <wire loc="95:/home/hades/tinyos-new/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f1d730b5b10"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7f1d730bf020"/></to>
    </wire>
    <wire loc="100:/home/hades/tinyos-new/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f1d730b32f0"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f1d732e6670"/></to>
    </wire>
    <wire loc="101:/home/hades/tinyos-new/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f1d730b2170"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f1d732e10c0"/></to>
    </wire>
    <wire loc="102:/home/hades/tinyos-new/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7f1d730b2b70"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7f1d73065410"/></to>
    </wire>
    <wire loc="184:/home/hades/tinyos-new/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <from><interface-ref name="grantTask" scoped="" ref="0x7f1d73086db0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f1d748114f0"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:/home/hades/tinyos-new/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="SendState" scoped="" ref="0x7f1d73059800"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f1d73054580"/></to>
    </wire>
    <wire loc="74:/home/hades/tinyos-new/tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7f1d73054580"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f1d7391a280"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:/home/hades/tinyos-new/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f1d730401c0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f1d73d90020"/></to>
    </wire>
    <wire loc="63:/home/hades/tinyos-new/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f1d72084b60"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f1d72075ba0"/></to>
    </wire>
    <wire loc="64:/home/hades/tinyos-new/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f1d720838b0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f1d73e0c410"/></to>
    </wire>
    <wire loc="66:/home/hades/tinyos-new/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f1d72f078b0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f1d72082590"/></to>
    </wire>
    <wire loc="65:/home/hades/tinyos-new/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f1d72082590"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f1d73df6370"/></to>
    </wire>
    <wire loc="67:/home/hades/tinyos-new/tos/system/AMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7f1d72f05020"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x7f1d72081c10"/></to>
    </wire>
    <wire loc="66:/home/hades/tinyos-new/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7f1d72081c10"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f1d73df0e00"/></to>
    </wire>
    <wire loc="60:/home/hades/tinyos-new/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f1d72074910"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f1d72f6a940"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/home/hades/tinyos-new/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f1d72073590"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f1d73df6370"/></to>
    </wire>
    <wire loc="53:/home/hades/tinyos-new/tos/system/AMQueueP.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f1d72f6a940"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f1d72f1e4b0"/></to>
    </wire>
    <wire loc="54:/home/hades/tinyos-new/tos/system/AMQueueP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f1d72f1d400"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f1d73e0f3f0"/></to>
    </wire>
    <wire loc="55:/home/hades/tinyos-new/tos/system/AMQueueP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f1d72f1b060"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f1d73df6370"/></to>
    </wire>
    <wire loc="56:/home/hades/tinyos-new/tos/system/AMQueueP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f1d72f1a720"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f1d73e0c410"/></to>
    </wire>
    <wire loc="169:/home/hades/tinyos-new/tos/system/AMQueueImplP.nc">
      <from><interface-ref name="errorTask" scoped="" ref="0x7f1d72f19480"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f1d748114f0"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:/home/hades/tinyos-new/tos/system/AMQueueImplP.nc">
      <from><interface-ref name="CancelTask" scoped="" ref="0x7f1d72f19c60"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f1d748114f0"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:/home/hades/tinyos-new/tos/chips/msp430/adc12/AdcReadClientC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x7f1d72028650"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7f1d72ebbb10"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="63:/home/hades/tinyos-new/tos/chips/msp430/sensors/Msp430InternalVoltageC.nc">
      <from><interface-ref name="ReadNow" scoped="" ref="0x7f1d72ad7140"/></from>
      <to><interface-ref name="ReadNow" scoped="" ref="0x7f1d7201c840"/></to>
    </wire>
    <wire loc="68:/home/hades/tinyos-new/tos/chips/msp430/adc12/AdcReadNowClientC.nc">
      <from><interface-ref name="ReadNow" scoped="" ref="0x7f1d7201c840"/></from>
      <to><interface-ref name="ReadNow" scoped="" ref="0x7f1d72eb8950"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/home/hades/tinyos-new/tos/chips/msp430/sensors/Msp430InternalVoltageC.nc">
      <from><interface-ref name="ReadStream" scoped="" ref="0x7f1d72adc7b0"/></from>
      <to><interface-ref name="ReadStream" scoped="" ref="0x7f1d72024380"/></to>
    </wire>
    <wire loc="66:/home/hades/tinyos-new/tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
      <from><interface-ref name="ReadStream" scoped="" ref="0x7f1d72024380"/></from>
      <to><interface-ref name="ReadStream" scoped="" ref="0x7f1d72bc41d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="62:/home/hades/tinyos-new/tos/chips/msp430/sensors/Msp430InternalVoltageC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f1d72ad8340"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f1d7201d9c0"/></to>
    </wire>
    <wire loc="71:/home/hades/tinyos-new/tos/chips/msp430/adc12/AdcReadNowClientC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f1d7201d9c0"/></from>
      <to><interface-ref name="ResourceReadNow" scoped="" ref="0x7f1d72eb66c0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="58:/home/hades/tinyos-new/tos/chips/msp430/sensors/Msp430InternalVoltageC.nc">
      <from><interface-ref name="AdcConfigure" scoped="" ref="0x7f1d72026020"/></from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0x7f1d72afca20"/></to>
    </wire>
    <wire loc="59:/home/hades/tinyos-new/tos/chips/msp430/sensors/Msp430InternalVoltageC.nc">
      <from><interface-ref name="AdcConfigure" scoped="" ref="0x7f1d720200e0"/></from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0x7f1d72afca20"/></to>
    </wire>
    <wire loc="65:/home/hades/tinyos-new/tos/chips/msp430/sensors/Msp430InternalVoltageC.nc">
      <from><interface-ref name="AdcConfigure" scoped="" ref="0x7f1d7201a130"/></from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0x7f1d72afca20"/></to>
    </wire>
    <wire loc="66:/home/hades/tinyos-new/tos/chips/msp430/adc12/AdcReadClientC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7f1d72eb15c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0x7f1d72026020"/></to>
    </wire>
    <wire loc="67:/home/hades/tinyos-new/tos/chips/msp430/adc12/AdcReadClientC.nc">
      <from><interface-ref name="SingleChannel" scoped="" ref="0x7f1d72e9fb10"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0x7f1d72013020"/></to>
    </wire>
    <wire loc="59:/home/hades/tinyos-new/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0x7f1d72013020"/></from>
      <to><interface-ref name="SingleChannel" scoped="" ref="0x7f1d72e451d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="68:/home/hades/tinyos-new/tos/chips/msp430/adc12/AdcReadClientC.nc">
      <from><interface-ref name="ResourceRead" scoped="" ref="0x7f1d72eb5b20"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f1d720143a0"/></to>
    </wire>
    <wire loc="58:/home/hades/tinyos-new/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f1d720143a0"/></from>
      <to><interface-ref name="ClientResource" scoped="" ref="0x7f1d72cacd30"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="70:/home/hades/tinyos-new/tos/chips/msp430/adc12/AdcReadClientC.nc">
      <from><interface-ref name="AdcConfigure" scoped="" ref="0x7f1d72011280"/></from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0x7f1d72026020"/></to>
    </wire>
    <wire loc="136:/home/hades/tinyos-new/tos/chips/msp430/adc12/AdcP.nc">
      <from><interface-ref name="readDone" scoped="" ref="0x7f1d72e805c0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f1d748114f0"/>
      <arguments>
        <value cst="I:15">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="60:/home/hades/tinyos-new/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Msp430Adc12MultiChannel" scoped="" ref="0x7f1d72012020"/></from>
      <to><interface-ref name="MultiChannel" scoped="" ref="0x7f1d72e44960"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/home/hades/tinyos-new/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Msp430Adc12Overflow" scoped="" ref="0x7f1d72012910"/></from>
      <to><interface-ref name="Overflow" scoped="" ref="0x7f1d72e43920"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="63:/home/hades/tinyos-new/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="AdcResource" scoped="" ref="0x7f1d72ca71d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f1d72e52cd0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="66:/home/hades/tinyos-new/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="ConfUp" scoped="" ref="0x7f1d72002cc0"/></from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0x7f1d72011280"/></to>
    </wire>
    <wire loc="67:/home/hades/tinyos-new/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7f1d72ca6740"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ConfSub" scoped="" ref="0x7f1d72003a40"/></to>
    </wire>
    <wire loc="52:/home/hades/tinyos-new/tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="MultiChannel" scoped="" ref="0x7f1d72e44960"/></from>
      <to><interface-ref name="MultiChannel" scoped="" ref="0x7f1d72e3aaf0"/></to>
    </wire>
    <wire loc="54:/home/hades/tinyos-new/tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="DMAExtension" scoped="" ref="0x7f1d72e411d0"/></from>
      <to><interface-ref name="DMAExtension" scoped="" ref="0x7f1d72e37910"/></to>
    </wire>
    <wire loc="53:/home/hades/tinyos-new/tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="Overflow" scoped="" ref="0x7f1d72e43920"/></from>
      <to><interface-ref name="Overflow" scoped="" ref="0x7f1d72e39ab0"/></to>
    </wire>
    <wire loc="51:/home/hades/tinyos-new/tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="SingleChannel" scoped="" ref="0x7f1d72e451d0"/></from>
      <to><interface-ref name="SingleChannel" scoped="" ref="0x7f1d72e3b3f0"/></to>
    </wire>
    <wire loc="50:/home/hades/tinyos-new/tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f1d72e52cd0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f1d72cc5520"/></to>
    </wire>
    <wire loc="98:/home/hades/tinyos-new/tos/system/SimpleRoundRobinArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f1d72cc5520"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f1d71fea270"/></to>
    </wire>
    <wire loc="57:/home/hades/tinyos-new/tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="ADCArbiterInfo" scoped="" ref="0x7f1d72e36280"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f1d72cc4b20"/></to>
    </wire>
    <wire loc="100:/home/hades/tinyos-new/tos/system/SimpleRoundRobinArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f1d72cc4b20"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f1d71fe97a0"/></to>
    </wire>
    <wire loc="58:/home/hades/tinyos-new/tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="HplAdc12" scoped="" ref="0x7f1d72e280d0"/></from>
      <to><interface-ref name="HplAdc12" scoped="" ref="0x7f1d72d55020"/></to>
    </wire>
    <wire loc="62:/home/hades/tinyos-new/tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="Port60" scoped="" ref="0x7f1d72e22be0"/></from>
      <to><interface-ref name="Port60" scoped="" ref="0x7f1d73ff2200"/></to>
    </wire>
    <wire loc="63:/home/hades/tinyos-new/tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="Port61" scoped="" ref="0x7f1d72e20c80"/></from>
      <to><interface-ref name="Port61" scoped="" ref="0x7f1d73ff0200"/></to>
    </wire>
    <wire loc="64:/home/hades/tinyos-new/tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="Port62" scoped="" ref="0x7f1d72e1ec80"/></from>
      <to><interface-ref name="Port62" scoped="" ref="0x7f1d73fee200"/></to>
    </wire>
    <wire loc="65:/home/hades/tinyos-new/tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="Port63" scoped="" ref="0x7f1d72e1cc80"/></from>
      <to><interface-ref name="Port63" scoped="" ref="0x7f1d73fec200"/></to>
    </wire>
    <wire loc="66:/home/hades/tinyos-new/tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="Port64" scoped="" ref="0x7f1d72e1ac80"/></from>
      <to><interface-ref name="Port64" scoped="" ref="0x7f1d73fea200"/></to>
    </wire>
    <wire loc="67:/home/hades/tinyos-new/tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="Port65" scoped="" ref="0x7f1d72e18c80"/></from>
      <to><interface-ref name="Port65" scoped="" ref="0x7f1d73fe8200"/></to>
    </wire>
    <wire loc="68:/home/hades/tinyos-new/tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="Port66" scoped="" ref="0x7f1d72e16c80"/></from>
      <to><interface-ref name="Port66" scoped="" ref="0x7f1d73fe6200"/></to>
    </wire>
    <wire loc="69:/home/hades/tinyos-new/tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="Port67" scoped="" ref="0x7f1d72e14c80"/></from>
      <to><interface-ref name="Port67" scoped="" ref="0x7f1d73fe4200"/></to>
    </wire>
    <wire loc="74:/home/hades/tinyos-new/tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="TimerA" scoped="" ref="0x7f1d72e34020"/></from>
      <to><interface-ref name="TimerA" scoped="" ref="0x7f1d7429d060"/></to>
    </wire>
    <wire loc="75:/home/hades/tinyos-new/tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="ControlA0" scoped="" ref="0x7f1d72e27880"/></from>
      <to><interface-ref name="ControlA0" scoped="" ref="0x7f1d7428db10"/></to>
    </wire>
    <wire loc="76:/home/hades/tinyos-new/tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="ControlA1" scoped="" ref="0x7f1d72e26d30"/></from>
      <to><interface-ref name="ControlA1" scoped="" ref="0x7f1d742930c0"/></to>
    </wire>
    <wire loc="77:/home/hades/tinyos-new/tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="CompareA0" scoped="" ref="0x7f1d72e24120"/></from>
      <to><interface-ref name="CompareA0" scoped="" ref="0x7f1d74285cf0"/></to>
    </wire>
    <wire loc="78:/home/hades/tinyos-new/tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="CompareA1" scoped="" ref="0x7f1d72e24e60"/></from>
      <to><interface-ref name="CompareA1" scoped="" ref="0x7f1d7428aaa0"/></to>
    </wire>
    <wire loc="99:/home/hades/tinyos-new/tos/system/SimpleRoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f1d72cc43a0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f1d71fe9020"/></to>
    </wire>
    <wire loc="101:/home/hades/tinyos-new/tos/system/SimpleRoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f1d71fe80d0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f1d72cc3570"/></to>
    </wire>
    <wire loc="103:/home/hades/tinyos-new/tos/system/SimpleRoundRobinArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7f1d71fe8890"/></from>
      <to><interface-ref name="RoundRobinQueue" scoped="" ref="0x7f1d71fec330"/></to>
    </wire>
    <wire loc="68:/home/hades/tinyos-new/tos/system/SimpleArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7f1d71fe6480"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f1d748114f0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:/home/hades/tinyos-new/tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <from><interface-ref name="ClientResource" scoped="" ref="0x7f1d72cacd30"/></from>
      <to><interface-ref name="ClientResource" scoped="" ref="0x7f1d72c42cb0"/></to>
    </wire>
    <wire loc="65:/home/hades/tinyos-new/tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <from><interface-ref name="AdcResource" scoped="" ref="0x7f1d72c3d030"/></from>
      <to><interface-ref name="AdcResource" scoped="" ref="0x7f1d72ca71d0"/></to>
    </wire>
    <wire loc="66:/home/hades/tinyos-new/tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7f1d72c3a020"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x7f1d72ca6740"/></to>
    </wire>
    <wire loc="68:/home/hades/tinyos-new/tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <from><interface-ref name="RefVolt_1_5V" scoped="" ref="0x7f1d72c3dd80"/></from>
      <to><interface-ref name="RefVolt_1_5V" scoped="" ref="0x7f1d72ca2280"/></to>
    </wire>
    <wire loc="69:/home/hades/tinyos-new/tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <from><interface-ref name="RefVolt_2_5V" scoped="" ref="0x7f1d72c3c9c0"/></from>
      <to><interface-ref name="RefVolt_2_5V" scoped="" ref="0x7f1d72ca2e40"/></to>
    </wire>
    <wire loc="70:/home/hades/tinyos-new/tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <from><interface-ref name="SwitchOnTimer" scoped="" ref="0x7f1d72c9fa90"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f1d72c084e0"/></to>
    </wire>
    <wire loc="52:/home/hades/tinyos-new/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f1d72c084e0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f1d731922c0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:/home/hades/tinyos-new/tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <from><interface-ref name="SwitchOffTimer" scoped="" ref="0x7f1d72c98020"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f1d72c01020"/></to>
    </wire>
    <wire loc="52:/home/hades/tinyos-new/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f1d72c01020"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f1d731922c0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="72:/home/hades/tinyos-new/tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <from><interface-ref name="SwitchOffSettleTimer" scoped="" ref="0x7f1d72c936c0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f1d72bfbb40"/></to>
    </wire>
    <wire loc="52:/home/hades/tinyos-new/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f1d72bfbb40"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f1d731922c0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:/home/hades/tinyos-new/tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <from><interface-ref name="HplAdc12" scoped="" ref="0x7f1d72ca19c0"/></from>
      <to><interface-ref name="HplAdc12" scoped="" ref="0x7f1d72d55020"/></to>
    </wire>
    <wire loc="52:/home/hades/tinyos-new/tos/chips/msp430/adc12/Msp430RefVoltArbiterImplP.nc">
      <from><interface-ref name="switchOff" scoped="" ref="0x7f1d72c377f0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f1d748114f0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="57:/home/hades/tinyos-new/tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
      <from><interface-ref name="AdcConfigure" scoped="" ref="0x7f1d71fa2060"/></from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0x7f1d720200e0"/></to>
    </wire>
    <wire loc="67:/home/hades/tinyos-new/tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
      <from><interface-ref name="AdcConfigure" scoped="" ref="0x7f1d72bc05e0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0x7f1d720200e0"/></to>
    </wire>
    <wire loc="68:/home/hades/tinyos-new/tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f1d72bbd280"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f1d71fa5200"/></to>
    </wire>
    <wire loc="58:/home/hades/tinyos-new/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f1d71fa5200"/></from>
      <to><interface-ref name="ClientResource" scoped="" ref="0x7f1d72cacd30"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="69:/home/hades/tinyos-new/tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
      <from><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0x7f1d72bbfc90"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0x7f1d71fa5e10"/></to>
    </wire>
    <wire loc="59:/home/hades/tinyos-new/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0x7f1d71fa5e10"/></from>
      <to><interface-ref name="SingleChannel" scoped="" ref="0x7f1d72e451d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="31:/home/hades/tinyos-new/tos/chips/msp430/adc12/WireAdcStreamP.nc">
      <from><interface-ref name="ReadStream" scoped="" ref="0x7f1d72bc41d0"/></from>
      <to><interface-ref name="ReadStream" scoped="" ref="0x7f1d72b42cb0"/></to>
    </wire>
    <wire loc="32:/home/hades/tinyos-new/tos/chips/msp430/adc12/WireAdcStreamP.nc">
      <from><interface-ref name="AdcConfigure" scoped="" ref="0x7f1d72bb2b10"/></from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0x7f1d72bc05e0"/></to>
    </wire>
    <wire loc="33:/home/hades/tinyos-new/tos/chips/msp430/adc12/WireAdcStreamP.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f1d72b138f0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f1d72bbd280"/></to>
    </wire>
    <wire loc="35:/home/hades/tinyos-new/tos/chips/msp430/adc12/WireAdcStreamP.nc">
      <from><interface-ref name="Service" scoped="" ref="0x7f1d72b17bf0"/></from>
      <to><interface-ref name="ReadStream" scoped="" ref="0x7f1d72bb8e70"/></to>
    </wire>
    <wire loc="38:/home/hades/tinyos-new/tos/chips/msp430/adc12/WireAdcStreamP.nc">
      <from><interface-ref name="SingleChannel" scoped="" ref="0x7f1d72bb31d0"/></from>
      <to><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0x7f1d72bbfc90"/></to>
    </wire>
    <wire loc="39:/home/hades/tinyos-new/tos/chips/msp430/adc12/WireAdcStreamP.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f1d72baf020"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f1d72b4a970"/></to>
    </wire>
    <wire loc="53:/home/hades/tinyos-new/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f1d72b4a970"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f1d71f8fa90"/></to>
    </wire>
    <wire loc="156:/home/hades/tinyos-new/tos/chips/msp430/adc12/AdcStreamP.nc">
      <from><interface-ref name="bufferDone" scoped="" ref="0x7f1d72b86380"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f1d748114f0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="119:/home/hades/tinyos-new/tos/chips/msp430/adc12/AdcStreamP.nc">
      <from><interface-ref name="readStreamDone" scoped="" ref="0x7f1d72b95aa0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f1d748114f0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:/home/hades/tinyos-new/tos/chips/msp430/adc12/AdcStreamP.nc">
      <from><interface-ref name="readStreamFail" scoped="" ref="0x7f1d72b8e100"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f1d748114f0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:/home/hades/tinyos-new/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f1d72b4a120"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f1d71f95020"/></to>
    </wire>
    <wire loc="51:/home/hades/tinyos-new/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f1d71f95020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f1d71f7a660"/></to>
    </wire>
    <wire loc="55:/home/hades/tinyos-new/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x7f1d71f88210"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f1d71f95870"/></to>
    </wire>
    <wire loc="52:/home/hades/tinyos-new/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f1d71f95870"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f1d71f78020"/></to>
    </wire>
    <wire loc="56:/home/hades/tinyos-new/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f1d71f8ce10"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f1d7324eb80"/></to>
    </wire>
    <wire loc="54:/home/hades/tinyos-new/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f1d71f75190"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7f1d71f7f450"/></to>
    </wire>
    <wire loc="49:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f1d71f7f450"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7f1d73c234d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/home/hades/tinyos-new/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f1d71f74770"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f1d71f7ea80"/></to>
    </wire>
    <wire loc="50:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f1d71f7ea80"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f1d73c21280"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:/home/hades/tinyos-new/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f1d71f73a80"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7f1d71f7dda0"/></to>
    </wire>
    <wire loc="51:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f1d71f7dda0"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7f1d73c20ba0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="60:/home/hades/tinyos-new/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Msp430Adc12MultiChannel" scoped="" ref="0x7f1d71fa4d70"/></from>
      <to><interface-ref name="MultiChannel" scoped="" ref="0x7f1d72e44960"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/home/hades/tinyos-new/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Msp430Adc12Overflow" scoped="" ref="0x7f1d71fa36f0"/></from>
      <to><interface-ref name="Overflow" scoped="" ref="0x7f1d72e43920"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="63:/home/hades/tinyos-new/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="AdcResource" scoped="" ref="0x7f1d72ca71d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f1d72e52cd0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="66:/home/hades/tinyos-new/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="ConfUp" scoped="" ref="0x7f1d71f30cc0"/></from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0x7f1d71fa2060"/></to>
    </wire>
    <wire loc="67:/home/hades/tinyos-new/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7f1d72ca6740"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ConfSub" scoped="" ref="0x7f1d71f31a60"/></to>
    </wire>
    <wire loc="69:/home/hades/tinyos-new/tos/chips/msp430/adc12/AdcReadNowClientC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7f1d72eb15c0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0x7f1d7201a130"/></to>
    </wire>
    <wire loc="70:/home/hades/tinyos-new/tos/chips/msp430/adc12/AdcReadNowClientC.nc">
      <from><interface-ref name="SingleChannel" scoped="" ref="0x7f1d72e9fb10"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0x7f1d71f25d70"/></to>
    </wire>
    <wire loc="59:/home/hades/tinyos-new/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0x7f1d71f25d70"/></from>
      <to><interface-ref name="SingleChannel" scoped="" ref="0x7f1d72e451d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:/home/hades/tinyos-new/tos/chips/msp430/adc12/AdcReadNowClientC.nc">
      <from><interface-ref name="SubResourceReadNow" scoped="" ref="0x7f1d72eb2020"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f1d71f25160"/></to>
    </wire>
    <wire loc="58:/home/hades/tinyos-new/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f1d71f25160"/></from>
      <to><interface-ref name="ClientResource" scoped="" ref="0x7f1d72cacd30"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/home/hades/tinyos-new/tos/chips/msp430/adc12/AdcReadNowClientC.nc">
      <from><interface-ref name="AdcConfigure" scoped="" ref="0x7f1d71f21020"/></from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0x7f1d7201a130"/></to>
    </wire>
    <wire loc="60:/home/hades/tinyos-new/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Msp430Adc12MultiChannel" scoped="" ref="0x7f1d71f24d30"/></from>
      <to><interface-ref name="MultiChannel" scoped="" ref="0x7f1d72e44960"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/home/hades/tinyos-new/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Msp430Adc12Overflow" scoped="" ref="0x7f1d71f23650"/></from>
      <to><interface-ref name="Overflow" scoped="" ref="0x7f1d72e43920"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="63:/home/hades/tinyos-new/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="AdcResource" scoped="" ref="0x7f1d72ca71d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f1d72e52cd0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="66:/home/hades/tinyos-new/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="ConfUp" scoped="" ref="0x7f1d71f129e0"/></from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0x7f1d71f21020"/></to>
    </wire>
    <wire loc="67:/home/hades/tinyos-new/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7f1d72ca6740"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ConfSub" scoped="" ref="0x7f1d71f14630"/></to>
    </wire>
    <wire loc="57:/home/hades/tinyos-new/tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
      <from><interface-ref name="HumidityMetadata" scoped="" ref="0x7f1d72967900"/></from>
      <to><interface-ref name="HumidityMetadata" scoped="" ref="0x7f1d71f06900"/></to>
    </wire>
    <wire loc="55:/home/hades/tinyos-new/tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
      <from><interface-ref name="TemperatureMetadata" scoped="" ref="0x7f1d72969aa0"/></from>
      <to><interface-ref name="TemperatureMetadata" scoped="" ref="0x7f1d71f08a50"/></to>
    </wire>
    <wire loc="64:/home/hades/tinyos-new/tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
      <from><interface-ref name="TempResource" scoped="" ref="0x7f1d71f04770"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f1d72a82020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:/home/hades/tinyos-new/tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
      <from><interface-ref name="Sht11Temp" scoped="" ref="0x7f1d71f02160"/></from>
      <to><interface-ref name="SensirionSht11" scoped="" ref="0x7f1d72a812c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="66:/home/hades/tinyos-new/tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
      <from><interface-ref name="HumResource" scoped="" ref="0x7f1d71f03480"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f1d72a82020"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="67:/home/hades/tinyos-new/tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
      <from><interface-ref name="Sht11Hum" scoped="" ref="0x7f1d71f00610"/></from>
      <to><interface-ref name="SensirionSht11" scoped="" ref="0x7f1d72a812c0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="49:/home/hades/tinyos-new/tos/platforms/telosa/chips/sht11/HalSensirionSht11C.nc">
      <from><interface-ref name="SensirionSht11" scoped="" ref="0x7f1d72a812c0"/></from>
      <to><interface-ref name="SensirionSht11" scoped="" ref="0x7f1d72a06580"/></to>
    </wire>
    <wire loc="52:/home/hades/tinyos-new/tos/platforms/telosa/chips/sht11/HalSensirionSht11C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f1d72a82020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f1d729f7b20"/></to>
    </wire>
    <wire loc="77:/home/hades/tinyos-new/tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f1d729f7b20"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f1d729bdca0"/></to>
    </wire>
    <wire loc="53:/home/hades/tinyos-new/tos/platforms/telosa/chips/sht11/HalSensirionSht11C.nc">
      <from><interface-ref name="DATA" scoped="" ref="0x7f1d72a05ac0"/></from>
      <to><interface-ref name="DATA" scoped="" ref="0x7f1d729f49c0"/></to>
    </wire>
    <wire loc="60:/home/hades/tinyos-new/tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="DATA" scoped="" ref="0x7f1d729f49c0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f1d729efb70"/></to>
    </wire>
    <wire loc="54:/home/hades/tinyos-new/tos/platforms/telosa/chips/sht11/HalSensirionSht11C.nc">
      <from><interface-ref name="CLOCK" scoped="" ref="0x7f1d72a04c50"/></from>
      <to><interface-ref name="SCK" scoped="" ref="0x7f1d729f2cd0"/></to>
    </wire>
    <wire loc="61:/home/hades/tinyos-new/tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="SCK" scoped="" ref="0x7f1d729f2cd0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f1d729ea690"/></to>
    </wire>
    <wire loc="55:/home/hades/tinyos-new/tos/platforms/telosa/chips/sht11/HalSensirionSht11C.nc">
      <from><interface-ref name="InterruptDATA" scoped="" ref="0x7f1d72a03de0"/></from>
      <to><interface-ref name="InterruptDATA" scoped="" ref="0x7f1d729f0020"/></to>
    </wire>
    <wire loc="74:/home/hades/tinyos-new/tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="InterruptDATA" scoped="" ref="0x7f1d729f0020"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x7f1d729c1b60"/></to>
    </wire>
    <wire loc="58:/home/hades/tinyos-new/tos/platforms/telosa/chips/sht11/HalSensirionSht11C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f1d72a029e0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f1d7297b1e0"/></to>
    </wire>
    <wire loc="52:/home/hades/tinyos-new/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f1d7297b1e0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f1d731922c0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/home/hades/tinyos-new/tos/platforms/telosa/chips/sht11/HalSensirionSht11C.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f1d729fdd50"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f1d74082dd0"/></to>
    </wire>
    <wire loc="102:/home/hades/tinyos-new/tos/chips/sht11/SensirionSht11LogicP.nc">
      <from><interface-ref name="readSensor" scoped="" ref="0x7f1d729fbc60"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f1d748114f0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="103:/home/hades/tinyos-new/tos/chips/sht11/SensirionSht11LogicP.nc">
      <from><interface-ref name="signalStatusDone" scoped="" ref="0x7f1d729fb480"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f1d748114f0"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="105:/home/hades/tinyos-new/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f1d729bdca0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f1d71e74970"/></to>
    </wire>
    <wire loc="56:/home/hades/tinyos-new/tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f1d729eede0"/></from>
      <to><interface-ref name="Port15" scoped="" ref="0x7f1d74039020"/></to>
    </wire>
    <wire loc="57:/home/hades/tinyos-new/tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f1d729e9930"/></from>
      <to><interface-ref name="Port16" scoped="" ref="0x7f1d74037020"/></to>
    </wire>
    <wire loc="58:/home/hades/tinyos-new/tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f1d729e4480"/></from>
      <to><interface-ref name="Port17" scoped="" ref="0x7f1d74035020"/></to>
    </wire>
    <wire loc="64:/home/hades/tinyos-new/tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="PWR" scoped="" ref="0x7f1d729d8a80"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f1d729e51b0"/></to>
    </wire>
    <wire loc="65:/home/hades/tinyos-new/tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="DATA" scoped="" ref="0x7f1d729d6ce0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f1d729efb70"/></to>
    </wire>
    <wire loc="66:/home/hades/tinyos-new/tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="SCK" scoped="" ref="0x7f1d729d4020"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f1d729ea690"/></to>
    </wire>
    <wire loc="69:/home/hades/tinyos-new/tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f1d729dc770"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f1d729c8c10"/></to>
    </wire>
    <wire loc="52:/home/hades/tinyos-new/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f1d729c8c10"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f1d731922c0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:/home/hades/tinyos-new/tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="HplInterrupt" scoped="" ref="0x7f1d729c07a0"/></from>
      <to><interface-ref name="Port15" scoped="" ref="0x7f1d73ad9020"/></to>
    </wire>
    <wire loc="80:/home/hades/tinyos-new/tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f1d729b5280"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f1d729dfa90"/></to>
    </wire>
    <wire loc="81:/home/hades/tinyos-new/tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f1d72987020"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f1d729bbe80"/></to>
    </wire>
    <wire loc="108:/home/hades/tinyos-new/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f1d729bbe80"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f1d71e71c30"/></to>
    </wire>
    <wire loc="82:/home/hades/tinyos-new/tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f1d729892f0"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f1d729bb270"/></to>
    </wire>
    <wire loc="107:/home/hades/tinyos-new/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f1d729bb270"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f1d71e71020"/></to>
    </wire>
    <wire loc="50:/home/hades/tinyos-new/tos/platforms/telosa/chips/sht11/HplSensirionSht11P.nc">
      <from><interface-ref name="stopTask" scoped="" ref="0x7f1d729d3ba0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f1d748114f0"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="106:/home/hades/tinyos-new/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f1d729bca60"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f1d71e73850"/></to>
    </wire>
    <wire loc="109:/home/hades/tinyos-new/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f1d71e70590"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f1d729ba770"/></to>
    </wire>
    <wire loc="111:/home/hades/tinyos-new/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7f1d71e70d50"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7f1d71e767c0"/></to>
    </wire>
    <wire loc="75:/home/hades/tinyos-new/tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7f1d71e6d020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f1d748114f0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="79:/home/hades/tinyos-new/tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f1d71e3c0f0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f1d729b5280"/></to>
    </wire>
    <wire loc="81:/home/hades/tinyos-new/tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f1d71e3cb70"/></from>
      <to><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f1d729b5d00"/></to>
    </wire>
    <wire loc="83:/home/hades/tinyos-new/tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f1d71e3b270"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f1d729892f0"/></to>
    </wire>
    <wire loc="84:/home/hades/tinyos-new/tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f1d71e3be80"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f1d72987020"/></to>
    </wire>
    <wire loc="78:/home/hades/tinyos-new/tos/lib/power/PowerManagerP.nc">
      <from><interface-ref name="stopTask" scoped="" ref="0x7f1d71e3a680"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f1d748114f0"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:/home/hades/tinyos-new/tos/lib/power/PowerManagerP.nc">
      <from><interface-ref name="startTask" scoped="" ref="0x7f1d71e3ae60"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f1d748114f0"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:/home/hades/tinyos-new/tos/chips/msp430/adc12/AdcReadClientC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x7f1d71e23bd0"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7f1d72ebbb10"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="50:/home/hades/tinyos-new/tos/platforms/telosa/chips/s1087/HamamatsuS1087ParC.nc">
      <from><interface-ref name="ReadStream" scoped="" ref="0x7f1d72943020"/></from>
      <to><interface-ref name="ReadStream" scoped="" ref="0x7f1d71e1e840"/></to>
    </wire>
    <wire loc="66:/home/hades/tinyos-new/tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
      <from><interface-ref name="ReadStream" scoped="" ref="0x7f1d71e1e840"/></from>
      <to><interface-ref name="ReadStream" scoped="" ref="0x7f1d72bc41d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="53:/home/hades/tinyos-new/tos/platforms/telosa/chips/s1087/HamamatsuS1087ParC.nc">
      <from><interface-ref name="DeviceMetadata" scoped="" ref="0x7f1d72963020"/></from>
      <to><interface-ref name="DeviceMetadata" scoped="" ref="0x7f1d729518b0"/></to>
    </wire>
    <wire loc="54:/home/hades/tinyos-new/tos/platforms/telosa/chips/s1087/HamamatsuS1087ParC.nc">
      <from><interface-ref name="AdcConfigure" scoped="" ref="0x7f1d71e214a0"/></from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0x7f1d7294e300"/></to>
    </wire>
    <wire loc="55:/home/hades/tinyos-new/tos/platforms/telosa/chips/s1087/HamamatsuS1087ParC.nc">
      <from><interface-ref name="AdcConfigure" scoped="" ref="0x7f1d71e1b5c0"/></from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0x7f1d7294e300"/></to>
    </wire>
    <wire loc="66:/home/hades/tinyos-new/tos/chips/msp430/adc12/AdcReadClientC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7f1d72eb15c0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0x7f1d71e214a0"/></to>
    </wire>
    <wire loc="67:/home/hades/tinyos-new/tos/chips/msp430/adc12/AdcReadClientC.nc">
      <from><interface-ref name="SingleChannel" scoped="" ref="0x7f1d72e9fb10"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0x7f1d71e15730"/></to>
    </wire>
    <wire loc="59:/home/hades/tinyos-new/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0x7f1d71e15730"/></from>
      <to><interface-ref name="SingleChannel" scoped="" ref="0x7f1d72e451d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="68:/home/hades/tinyos-new/tos/chips/msp430/adc12/AdcReadClientC.nc">
      <from><interface-ref name="ResourceRead" scoped="" ref="0x7f1d72eb5b20"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f1d71e16af0"/></to>
    </wire>
    <wire loc="58:/home/hades/tinyos-new/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f1d71e16af0"/></from>
      <to><interface-ref name="ClientResource" scoped="" ref="0x7f1d72cacd30"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="70:/home/hades/tinyos-new/tos/chips/msp430/adc12/AdcReadClientC.nc">
      <from><interface-ref name="AdcConfigure" scoped="" ref="0x7f1d71e139a0"/></from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0x7f1d71e214a0"/></to>
    </wire>
    <wire loc="60:/home/hades/tinyos-new/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Msp430Adc12MultiChannel" scoped="" ref="0x7f1d71e14720"/></from>
      <to><interface-ref name="MultiChannel" scoped="" ref="0x7f1d72e44960"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/home/hades/tinyos-new/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Msp430Adc12Overflow" scoped="" ref="0x7f1d71e13060"/></from>
      <to><interface-ref name="Overflow" scoped="" ref="0x7f1d72e43920"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="63:/home/hades/tinyos-new/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="AdcResource" scoped="" ref="0x7f1d72ca71d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f1d72e52cd0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="66:/home/hades/tinyos-new/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="ConfUp" scoped="" ref="0x7f1d71e03120"/></from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0x7f1d71e139a0"/></to>
    </wire>
    <wire loc="67:/home/hades/tinyos-new/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7f1d72ca6740"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ConfSub" scoped="" ref="0x7f1d71e06dc0"/></to>
    </wire>
    <wire loc="57:/home/hades/tinyos-new/tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
      <from><interface-ref name="AdcConfigure" scoped="" ref="0x7f1d71df6060"/></from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0x7f1d71e1b5c0"/></to>
    </wire>
    <wire loc="67:/home/hades/tinyos-new/tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
      <from><interface-ref name="AdcConfigure" scoped="" ref="0x7f1d72bc05e0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0x7f1d71e1b5c0"/></to>
    </wire>
    <wire loc="68:/home/hades/tinyos-new/tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f1d72bbd280"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f1d71df9200"/></to>
    </wire>
    <wire loc="58:/home/hades/tinyos-new/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f1d71df9200"/></from>
      <to><interface-ref name="ClientResource" scoped="" ref="0x7f1d72cacd30"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="69:/home/hades/tinyos-new/tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
      <from><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0x7f1d72bbfc90"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0x7f1d71df9e10"/></to>
    </wire>
    <wire loc="59:/home/hades/tinyos-new/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0x7f1d71df9e10"/></from>
      <to><interface-ref name="SingleChannel" scoped="" ref="0x7f1d72e451d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="60:/home/hades/tinyos-new/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Msp430Adc12MultiChannel" scoped="" ref="0x7f1d71df8d70"/></from>
      <to><interface-ref name="MultiChannel" scoped="" ref="0x7f1d72e44960"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/home/hades/tinyos-new/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Msp430Adc12Overflow" scoped="" ref="0x7f1d71df76f0"/></from>
      <to><interface-ref name="Overflow" scoped="" ref="0x7f1d72e43920"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="63:/home/hades/tinyos-new/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="AdcResource" scoped="" ref="0x7f1d72ca71d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f1d72e52cd0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="66:/home/hades/tinyos-new/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="ConfUp" scoped="" ref="0x7f1d71de6020"/></from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0x7f1d71df6060"/></to>
    </wire>
    <wire loc="67:/home/hades/tinyos-new/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7f1d72ca6740"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ConfSub" scoped="" ref="0x7f1d71de9c60"/></to>
    </wire>
    <wire loc="65:/home/hades/tinyos-new/tos/chips/msp430/adc12/AdcReadClientC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x7f1d71ddd200"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7f1d72ebbb10"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="50:/home/hades/tinyos-new/tos/platforms/telosa/chips/s10871/HamamatsuS10871TsrC.nc">
      <from><interface-ref name="ReadStream" scoped="" ref="0x7f1d7291f140"/></from>
      <to><interface-ref name="ReadStream" scoped="" ref="0x7f1d71dd9d90"/></to>
    </wire>
    <wire loc="66:/home/hades/tinyos-new/tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
      <from><interface-ref name="ReadStream" scoped="" ref="0x7f1d71dd9d90"/></from>
      <to><interface-ref name="ReadStream" scoped="" ref="0x7f1d72bc41d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="53:/home/hades/tinyos-new/tos/platforms/telosa/chips/s10871/HamamatsuS10871TsrC.nc">
      <from><interface-ref name="DeviceMetadata" scoped="" ref="0x7f1d7293d260"/></from>
      <to><interface-ref name="DeviceMetadata" scoped="" ref="0x7f1d7292bd70"/></to>
    </wire>
    <wire loc="54:/home/hades/tinyos-new/tos/platforms/telosa/chips/s10871/HamamatsuS10871TsrC.nc">
      <from><interface-ref name="AdcConfigure" scoped="" ref="0x7f1d71ddba00"/></from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0x7f1d72928750"/></to>
    </wire>
    <wire loc="55:/home/hades/tinyos-new/tos/platforms/telosa/chips/s10871/HamamatsuS10871TsrC.nc">
      <from><interface-ref name="AdcConfigure" scoped="" ref="0x7f1d71dd5ac0"/></from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0x7f1d72928750"/></to>
    </wire>
    <wire loc="66:/home/hades/tinyos-new/tos/chips/msp430/adc12/AdcReadClientC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7f1d72eb15c0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0x7f1d71ddba00"/></to>
    </wire>
    <wire loc="67:/home/hades/tinyos-new/tos/chips/msp430/adc12/AdcReadClientC.nc">
      <from><interface-ref name="SingleChannel" scoped="" ref="0x7f1d72e9fb10"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0x7f1d71dcfc90"/></to>
    </wire>
    <wire loc="59:/home/hades/tinyos-new/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0x7f1d71dcfc90"/></from>
      <to><interface-ref name="SingleChannel" scoped="" ref="0x7f1d72e451d0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="68:/home/hades/tinyos-new/tos/chips/msp430/adc12/AdcReadClientC.nc">
      <from><interface-ref name="ResourceRead" scoped="" ref="0x7f1d72eb5b20"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f1d71dcf080"/></to>
    </wire>
    <wire loc="58:/home/hades/tinyos-new/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f1d71dcf080"/></from>
      <to><interface-ref name="ClientResource" scoped="" ref="0x7f1d72cacd30"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="70:/home/hades/tinyos-new/tos/chips/msp430/adc12/AdcReadClientC.nc">
      <from><interface-ref name="AdcConfigure" scoped="" ref="0x7f1d71dcc020"/></from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0x7f1d71ddba00"/></to>
    </wire>
    <wire loc="60:/home/hades/tinyos-new/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Msp430Adc12MultiChannel" scoped="" ref="0x7f1d71dcec50"/></from>
      <to><interface-ref name="MultiChannel" scoped="" ref="0x7f1d72e44960"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/home/hades/tinyos-new/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Msp430Adc12Overflow" scoped="" ref="0x7f1d71dcd590"/></from>
      <to><interface-ref name="Overflow" scoped="" ref="0x7f1d72e43920"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="63:/home/hades/tinyos-new/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="AdcResource" scoped="" ref="0x7f1d72ca71d0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f1d72e52cd0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="66:/home/hades/tinyos-new/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="ConfUp" scoped="" ref="0x7f1d71dbe630"/></from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0x7f1d71dcc020"/></to>
    </wire>
    <wire loc="67:/home/hades/tinyos-new/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7f1d72ca6740"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ConfSub" scoped="" ref="0x7f1d71dbf3c0"/></to>
    </wire>
    <wire loc="57:/home/hades/tinyos-new/tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
      <from><interface-ref name="AdcConfigure" scoped="" ref="0x7f1d71db07e0"/></from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0x7f1d71dd5ac0"/></to>
    </wire>
    <wire loc="67:/home/hades/tinyos-new/tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
      <from><interface-ref name="AdcConfigure" scoped="" ref="0x7f1d72bc05e0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0x7f1d71dd5ac0"/></to>
    </wire>
    <wire loc="68:/home/hades/tinyos-new/tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f1d72bbd280"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f1d71db48a0"/></to>
    </wire>
    <wire loc="58:/home/hades/tinyos-new/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f1d71db48a0"/></from>
      <to><interface-ref name="ClientResource" scoped="" ref="0x7f1d72cacd30"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="69:/home/hades/tinyos-new/tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
      <from><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0x7f1d72bbfc90"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0x7f1d71db3590"/></to>
    </wire>
    <wire loc="59:/home/hades/tinyos-new/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0x7f1d71db3590"/></from>
      <to><interface-ref name="SingleChannel" scoped="" ref="0x7f1d72e451d0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="60:/home/hades/tinyos-new/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Msp430Adc12MultiChannel" scoped="" ref="0x7f1d71db1590"/></from>
      <to><interface-ref name="MultiChannel" scoped="" ref="0x7f1d72e44960"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/home/hades/tinyos-new/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Msp430Adc12Overflow" scoped="" ref="0x7f1d71db1e80"/></from>
      <to><interface-ref name="Overflow" scoped="" ref="0x7f1d72e43920"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="63:/home/hades/tinyos-new/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="AdcResource" scoped="" ref="0x7f1d72ca71d0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f1d72e52cd0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="66:/home/hades/tinyos-new/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="ConfUp" scoped="" ref="0x7f1d71da1630"/></from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0x7f1d71db07e0"/></to>
    </wire>
    <wire loc="67:/home/hades/tinyos-new/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7f1d72ca6740"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ConfSub" scoped="" ref="0x7f1d71da2390"/></to>
    </wire>
  </wiring>
  <components>
    <component qname="MainC" loc="56:/home/hades/tinyos-new/tos/system/MainC.nc">
      <documentation loc="45:/home/hades/tinyos-new/tos/system/MainC.nc">
        <short>&#10; MainC is the system interface the TinyOS boot sequence.</short>
        <long>&#10; MainC is the system interface the TinyOS boot sequence. It wires the&#10; boot sequence implementation to the scheduler and hardware resources.&#10;&#10; @author Philip Levis&#10; @date   August 6 2005&#10; @see    TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="40:/home/hades/tinyos-new/tos/platforms/telosa/PlatformC.nc">
      <documentation loc="34:/home/hades/tinyos-new/tos/platforms/telosa/PlatformC.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre and Cory Sharp&#10; @version $Revision: 1.6 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="3:/home/hades/tinyos-new/tos/platforms/telosa/PlatformP.nc" safe="">
      <module/>
    </component>
    <component qname="MotePlatformC" loc="1:/home/hades/tinyos-new/tos/platforms/telosb/MotePlatformC.nc" safe="">
      <module/>
    </component>
    <component qname="MoteClockC" loc="37:/home/hades/tinyos-new/tos/platforms/telosb/MoteClockC.nc">
      <documentation loc="33:/home/hades/tinyos-new/tos/platforms/telosb/MoteClockC.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlind.de>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430ClockC" loc="37:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430ClockC.nc">
      <documentation loc="33:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430ClockC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430ClockP" loc="43:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430ClockP.nc" safe="">
      <module/>
    </component>
    <component qname="Msp430TimerC" loc="37:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerC.nc">
      <documentation loc="33:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA" loc="39(Msp430TimerC.Msp430TimerA):/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerP.nc">
      <documentation loc="2:/home/hades/tinyos-new/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430TimerP"/>
        <arguments>
          <value cst="I:302">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:368">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:352">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:512">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB" loc="39(Msp430TimerC.Msp430TimerB):/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerP.nc">
      <documentation loc="2:/home/hades/tinyos-new/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430TimerP"/>
        <arguments>
          <value cst="I:286">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:400">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:384">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:512">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA0" loc="39(Msp430TimerC.Msp430TimerA0):/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:354">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:370">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA1" loc="39(Msp430TimerC.Msp430TimerA1):/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:356">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:372">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA2" loc="39(Msp430TimerC.Msp430TimerA2):/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:358">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:374">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB0" loc="39(Msp430TimerC.Msp430TimerB0):/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:386">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:402">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB1" loc="39(Msp430TimerC.Msp430TimerB1):/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:388">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:404">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB2" loc="39(Msp430TimerC.Msp430TimerB2):/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:390">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:406">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB3" loc="39(Msp430TimerC.Msp430TimerB3):/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:392">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:408">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB4" loc="39(Msp430TimerC.Msp430TimerB4):/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:394">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:410">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB5" loc="39(Msp430TimerC.Msp430TimerB5):/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:396">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:412">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB6" loc="39(Msp430TimerC.Msp430TimerB6):/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:398">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:414">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerCommonP" loc="2:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerCommonP.nc" safe="">
      <module/>
    </component>
    <component qname="McuSleepC" loc="49:/home/hades/tinyos-new/tos/chips/msp430/McuSleepC.nc" safe="">
      <documentation loc="33:/home/hades/tinyos-new/tos/chips/msp430/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the MSP430.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the MSP430. Code for low power calculation copied from older&#10; msp430hardware.h by Vlado Handziski, Joe Polastre, and Cory Sharp.&#10;&#10;&#10; @author Philip Levis&#10; @author Vlado Handziski&#10; @author Joe Polastre&#10; @author Cory Sharp&#10; @date   October 26, 2005&#10; @see  Please refer to TEP 112 for more information about this component and its&#10;          intended use.&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MoteClockP" loc="38:/home/hades/tinyos-new/tos/platforms/telosb/MoteClockP.nc">
      <documentation loc="33:/home/hades/tinyos-new/tos/platforms/telosb/MoteClockP.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlind.de>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="56:/home/hades/tinyos-new/tos/system/RealMainP.nc" safe="">
      <documentation loc="49:/home/hades/tinyos-new/tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="46:/home/hades/tinyos-new/tos/system/TinySchedulerC.nc">
      <documentation loc="34:/home/hades/tinyos-new/tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="54:/home/hades/tinyos-new/tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="TestCM5000P" loc="3:TestCM5000P.nc" safe="">
      <module/>
    </component>
    <component qname="LedsC" loc="45:/home/hades/tinyos-new/tos/system/LedsC.nc">
      <documentation loc="34:/home/hades/tinyos-new/tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="44:/home/hades/tinyos-new/tos/system/LedsP.nc" safe="">
      <documentation loc="35:/home/hades/tinyos-new/tos/system/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="40:/home/hades/tinyos-new/tos/platforms/telosa/PlatformLedsC.nc">
      <documentation loc="34:/home/hades/tinyos-new/tos/platforms/telosa/PlatformLedsC.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10; @version $Revision: 1.5 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430GeneralIOC" loc="45:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <documentation loc="35:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
        <short>&#10; HPL for the TI MSP430 family of microprocessors.</short>
        <long>&#10; HPL for the TI MSP430 family of microprocessors. This provides an&#10; abstraction for general-purpose I/O.&#10;&#10; @author Joe Polastre&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; @author Peter A. Bigot &#60;pab@peoplepowerco.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430GeneralIOC.P10" loc="39(HplMsp430GeneralIOC.P10):/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/hades/tinyos-new/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P11" loc="39(HplMsp430GeneralIOC.P11):/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/hades/tinyos-new/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P12" loc="39(HplMsp430GeneralIOC.P12):/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/hades/tinyos-new/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P13" loc="39(HplMsp430GeneralIOC.P13):/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/hades/tinyos-new/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P14" loc="39(HplMsp430GeneralIOC.P14):/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/hades/tinyos-new/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P15" loc="39(HplMsp430GeneralIOC.P15):/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/hades/tinyos-new/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P16" loc="39(HplMsp430GeneralIOC.P16):/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/hades/tinyos-new/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P17" loc="39(HplMsp430GeneralIOC.P17):/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/hades/tinyos-new/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P20" loc="39(HplMsp430GeneralIOC.P20):/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/hades/tinyos-new/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P21" loc="39(HplMsp430GeneralIOC.P21):/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/hades/tinyos-new/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P22" loc="39(HplMsp430GeneralIOC.P22):/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/hades/tinyos-new/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P23" loc="39(HplMsp430GeneralIOC.P23):/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/hades/tinyos-new/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P24" loc="39(HplMsp430GeneralIOC.P24):/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/hades/tinyos-new/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P25" loc="39(HplMsp430GeneralIOC.P25):/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/hades/tinyos-new/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P26" loc="39(HplMsp430GeneralIOC.P26):/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/hades/tinyos-new/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P27" loc="39(HplMsp430GeneralIOC.P27):/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/hades/tinyos-new/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P30" loc="39(HplMsp430GeneralIOC.P30):/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/hades/tinyos-new/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P31" loc="39(HplMsp430GeneralIOC.P31):/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/hades/tinyos-new/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P32" loc="39(HplMsp430GeneralIOC.P32):/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/hades/tinyos-new/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P33" loc="39(HplMsp430GeneralIOC.P33):/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/hades/tinyos-new/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P34" loc="39(HplMsp430GeneralIOC.P34):/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/hades/tinyos-new/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P35" loc="39(HplMsp430GeneralIOC.P35):/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/hades/tinyos-new/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P36" loc="39(HplMsp430GeneralIOC.P36):/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/hades/tinyos-new/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P37" loc="39(HplMsp430GeneralIOC.P37):/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/hades/tinyos-new/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P40" loc="39(HplMsp430GeneralIOC.P40):/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/hades/tinyos-new/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P41" loc="39(HplMsp430GeneralIOC.P41):/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/hades/tinyos-new/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P42" loc="39(HplMsp430GeneralIOC.P42):/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/hades/tinyos-new/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P43" loc="39(HplMsp430GeneralIOC.P43):/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/hades/tinyos-new/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P44" loc="39(HplMsp430GeneralIOC.P44):/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/hades/tinyos-new/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P45" loc="39(HplMsp430GeneralIOC.P45):/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/hades/tinyos-new/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P46" loc="39(HplMsp430GeneralIOC.P46):/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/hades/tinyos-new/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P47" loc="39(HplMsp430GeneralIOC.P47):/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/hades/tinyos-new/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P50" loc="39(HplMsp430GeneralIOC.P50):/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/hades/tinyos-new/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P51" loc="39(HplMsp430GeneralIOC.P51):/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/hades/tinyos-new/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P52" loc="39(HplMsp430GeneralIOC.P52):/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/hades/tinyos-new/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P53" loc="39(HplMsp430GeneralIOC.P53):/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/hades/tinyos-new/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P54" loc="39(HplMsp430GeneralIOC.P54):/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/hades/tinyos-new/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P55" loc="39(HplMsp430GeneralIOC.P55):/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/hades/tinyos-new/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P56" loc="39(HplMsp430GeneralIOC.P56):/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/hades/tinyos-new/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P57" loc="39(HplMsp430GeneralIOC.P57):/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/hades/tinyos-new/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P60" loc="39(HplMsp430GeneralIOC.P60):/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/hades/tinyos-new/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P61" loc="39(HplMsp430GeneralIOC.P61):/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/hades/tinyos-new/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P62" loc="39(HplMsp430GeneralIOC.P62):/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/hades/tinyos-new/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P63" loc="39(HplMsp430GeneralIOC.P63):/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/hades/tinyos-new/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P64" loc="39(HplMsp430GeneralIOC.P64):/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/hades/tinyos-new/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P65" loc="39(HplMsp430GeneralIOC.P65):/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/hades/tinyos-new/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P66" loc="39(HplMsp430GeneralIOC.P66):/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/hades/tinyos-new/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P67" loc="39(HplMsp430GeneralIOC.P67):/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/hades/tinyos-new/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led0Impl" loc="42(PlatformLedsC.Led0Impl):/home/hades/tinyos-new/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/hades/tinyos-new/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led1Impl" loc="42(PlatformLedsC.Led1Impl):/home/hades/tinyos-new/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/hades/tinyos-new/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led2Impl" loc="42(PlatformLedsC.Led2Impl):/home/hades/tinyos-new/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/hades/tinyos-new/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="ActiveMessageC" loc="59:/home/hades/tinyos-new/tos/platforms/telosa/ActiveMessageC.nc">
      <documentation loc="49:/home/hades/tinyos-new/tos/platforms/telosa/ActiveMessageC.nc">
        <short>&#10;&#10; The Active Message layer on the Telos platform.</short>
        <long>&#10;&#10; The Active Message layer on the Telos platform. This is a naming wrapper&#10; around the CC2420 Active Message layer.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.9 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ActiveMessageC" loc="53:/home/hades/tinyos-new/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <configuration/>
    </component>
    <component qname="CC2420RadioC" loc="41:/home/hades/tinyos-new/tos/chips/cc2420/CC2420RadioC.nc">
      <documentation loc="24:/home/hades/tinyos-new/tos/chips/cc2420/CC2420RadioC.nc">
        <short>&#10; Radio wiring for the CC2420.</short>
        <long>&#10; Radio wiring for the CC2420.  This layer seperates the common&#10; wiring of the lower-layer components of the CC2420 stack and makes&#10; them available to clients like the AM stack and the IEEE802.15.4&#10; stack.&#10;&#10; This component provides the highest-level internal interface to&#10; other components of the CC2420 stack.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10; @author Stephen Dawson-Haggerty&#10; @version $Revision: 1.2 $ $Date: 2009/08/20 01:37:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420CsmaC" loc="42:/home/hades/tinyos-new/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <documentation loc="32:/home/hades/tinyos-new/tos/chips/cc2420/csma/CC2420CsmaC.nc">
        <short>&#10; Basic implementation of a CSMA MAC for the ChipCon CC2420 radio.</short>
        <long>&#10; Basic implementation of a CSMA MAC for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-05-14 21:33:07 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420CsmaP" loc="37:/home/hades/tinyos-new/tos/chips/cc2420/csma/CC2420CsmaP.nc" safe="">
      <documentation loc="32:/home/hades/tinyos-new/tos/chips/cc2420/csma/CC2420CsmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.12 $ $Date: 2009/09/17 23:36:36 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ControlC" loc="42:/home/hades/tinyos-new/tos/chips/cc2420/control/CC2420ControlC.nc">
      <documentation loc="32:/home/hades/tinyos-new/tos/chips/cc2420/control/CC2420ControlC.nc">
        <short>&#10; Implementation for configuring a ChipCon CC2420 radio.</short>
        <long>&#10; Implementation for configuring a ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008/05/14 21:33:07 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ControlP" loc="42:/home/hades/tinyos-new/tos/chips/cc2420/control/CC2420ControlP.nc" safe="">
      <documentation loc="32:/home/hades/tinyos-new/tos/chips/cc2420/control/CC2420ControlP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Urs Hunkeler (ReadRssi implementation)&#10; @version $Revision: 1.7 $ $Date: 2008/06/24 04:07:28 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="AlarmMultiplexC" loc="43:/home/hades/tinyos-new/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <documentation loc="32:/home/hades/tinyos-new/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
        <short>&#10; A component that multiplexes the use of an alarm.</short>
        <long>&#10; A component that multiplexes the use of an alarm. The assumption is&#10; that its use is mutually exclusive and users check whether the&#10; events are for them.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:14 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm" loc="40(AlarmMultiplexC.Alarm):/home/hades/tinyos-new/tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <documentation loc="32:/home/hades/tinyos-new/tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
        <short>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplCC2420AlarmC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C" loc="41(AlarmMultiplexC.Alarm.Alarm32khz32C):/home/hades/tinyos-new/tos/chips/msp430/timer/Alarm32khz32C.nc">
      <documentation loc="33:/home/hades/tinyos-new/tos/chips/msp430/timer/Alarm32khz32C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Alarm32khz32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC" loc="41(AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC):/home/hades/tinyos-new/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <documentation loc="33:/home/hades/tinyos-new/tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Alarm32khz16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer" loc="37(AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer):/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <documentation loc="33:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Timer32khzC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430Timer32khzMapC" loc="48:/home/hades/tinyos-new/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <documentation loc="34:/home/hades/tinyos-new/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
        <short>&#10; MSP430Timer32khzMapC presents as paramaterized interfaces all of&#10; the 32khz hardware timers on the MSP430 that are available for&#10; compile time allocation by &#34;new Alarm32khz16C()&#34;, &#34;new&#10; AlarmMilli32C()&#34;, and so on.</short>
        <long>&#10; MSP430Timer32khzMapC presents as paramaterized interfaces all of&#10; the 32khz hardware timers on the MSP430 that are available for&#10; compile time allocation by &#34;new Alarm32khz16C()&#34;, &#34;new&#10; AlarmMilli32C()&#34;, and so on.  &#10;&#10; Platforms based on the MSP430 are * encouraged to copy in and&#10; override this file, presenting only the * hardware timers that are&#10; available for allocation on that platform.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @version $Revision: 1.5 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm" loc="43(AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm):/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <documentation loc="34:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1d740c1c10"/>
            <typename><typedef-ref name="T32khz" ref="0x7f1d740c0020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Counter32khz32C" loc="41:/home/hades/tinyos-new/tos/chips/msp430/timer/Counter32khz32C.nc">
      <documentation loc="33:/home/hades/tinyos-new/tos/chips/msp430/timer/Counter32khz32C.nc">
        <short>&#10; Counter32khz32C provides at 32-bit counter at 32768 ticks per second.</short>
        <long>&#10; Counter32khz32C provides at 32-bit counter at 32768 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Counter32khzC" loc="41:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <documentation loc="33:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430Counter32khzC.nc">
        <short>&#10; Msp430Counter32khC provides the standard 32khz counter for the MSP430.</short>
        <long>&#10; Msp430Counter32khC provides the standard 32khz counter for the MSP430.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Counter32khzC.Counter" loc="42(Msp430Counter32khzC.Counter):/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430CounterC.nc">
      <documentation loc="33:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1d740c1c10"/>
            <typename><typedef-ref name="T32khz" ref="0x7f1d740c0020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Counter32khz32C.Transform" loc="54(Counter32khz32C.Transform):/home/hades/tinyos-new/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:/home/hades/tinyos-new/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1d740c1c10"/>
            <typename><typedef-ref name="T32khz" ref="0x7f1d740c0020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f1d74a34920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1d740c1c10"/>
            <typename><typedef-ref name="T32khz" ref="0x7f1d740c0020"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1d74a34520"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1d74a34520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform" loc="51(AlarmMultiplexC.Alarm.Alarm32khz32C.Transform):/home/hades/tinyos-new/tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:/home/hades/tinyos-new/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1d740c1c10"/>
            <typename><typedef-ref name="T32khz" ref="0x7f1d740c0020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f1d74a34920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1d740c1c10"/>
            <typename><typedef-ref name="T32khz" ref="0x7f1d740c0020"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1d74a34520"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC" loc="40:/home/hades/tinyos-new/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <documentation loc="32:/home/hades/tinyos-new/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
        <short>&#10; HPL implementation of general-purpose I/O for the ChipCon CC2420&#10; radio connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of general-purpose I/O for the ChipCon CC2420&#10; radio connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC2420PinsC.CCAM" loc="42(HplCC2420PinsC.CCAM):/home/hades/tinyos-new/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/hades/tinyos-new/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.CSNM" loc="42(HplCC2420PinsC.CSNM):/home/hades/tinyos-new/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/hades/tinyos-new/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.FIFOM" loc="42(HplCC2420PinsC.FIFOM):/home/hades/tinyos-new/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/hades/tinyos-new/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.FIFOPM" loc="42(HplCC2420PinsC.FIFOPM):/home/hades/tinyos-new/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/hades/tinyos-new/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.RSTNM" loc="42(HplCC2420PinsC.RSTNM):/home/hades/tinyos-new/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/hades/tinyos-new/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.SFDM" loc="42(HplCC2420PinsC.SFDM):/home/hades/tinyos-new/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/hades/tinyos-new/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.VRENM" loc="42(HplCC2420PinsC.VRENM):/home/hades/tinyos-new/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/hades/tinyos-new/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC" loc="40:/home/hades/tinyos-new/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <documentation loc="32:/home/hades/tinyos-new/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
        <short>&#10; HPL implementation of interrupts and captures for the ChipCon&#10; CC2420 radio connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of interrupts and captures for the ChipCon&#10; CC2420 radio connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC2420InterruptsC.CaptureSFDC" loc="38(HplCC2420InterruptsC.CaptureSFDC):/home/hades/tinyos-new/tos/chips/msp430/timer/GpioCaptureC.nc">
      <documentation loc="33:/home/hades/tinyos-new/tos/chips/msp430/timer/GpioCaptureC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="GpioCaptureC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430InterruptC" loc="39:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <documentation loc="33:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
        <short>&#10; HPL for the TI MSP430 family of microprocessors.</short>
        <long>&#10; HPL for the TI MSP430 family of microprocessors. This provides an&#10; abstraction for GPIO interrupts.&#10;&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430InterruptP" loc="36:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430InterruptP.nc" safe="">
      <documentation loc="33:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC.InterruptCCAC" loc="43(HplCC2420InterruptsC.InterruptCCAC):/home/hades/tinyos-new/tos/chips/msp430/pins/Msp430InterruptC.nc">
      <documentation loc="33:/home/hades/tinyos-new/tos/chips/msp430/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430InterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC.InterruptFIFOPC" loc="43(HplCC2420InterruptsC.InterruptFIFOPC):/home/hades/tinyos-new/tos/chips/msp430/pins/Msp430InterruptC.nc">
      <documentation loc="33:/home/hades/tinyos-new/tos/chips/msp430/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430InterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="CC2420ControlC.Spi" loc="39(CC2420ControlC.Spi):/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420SpiWireC" loc="37:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <documentation loc="32:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:16 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420SpiP" loc="41:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiP.nc" safe="">
      <documentation loc="32:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Roman Lim&#10; @author Razvan Musaloie-E.&#10; @author Jeonggil Ko&#10; @version $Revision: 1.4 $ $Date: 2008-06-23 20:25:15 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.WorkingStateC" loc="65(CC2420SpiWireC.WorkingStateC):/home/hades/tinyos-new/tos/system/StateC.nc">
      <documentation loc="32:/home/hades/tinyos-new/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="StateImplC" loc="64:/home/hades/tinyos-new/tos/system/StateImplC.nc">
      <documentation loc="32:/home/hades/tinyos-new/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="StateImplP" loc="64:/home/hades/tinyos-new/tos/system/StateImplP.nc" safe="">
      <documentation loc="32:/home/hades/tinyos-new/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC" loc="40(CC2420SpiWireC.HplCC2420SpiC):/home/hades/tinyos-new/tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <documentation loc="32:/home/hades/tinyos-new/tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
        <short>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplCC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC.SpiC" loc="79(CC2420SpiWireC.HplCC2420SpiC.SpiC):/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <instance number="0">
        <component-ref qname="Msp430Spi0C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430SpiNoDma0P" loc="71:/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <documentation loc="66:/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.6 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430SpiNoDma0P.SpiP" loc="73(Msp430SpiNoDma0P.SpiP):/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <documentation loc="66:/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de> (bugfix in continueOp())&#10; @version $Revision: 1.8 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430SpiNoDmaP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430Usart0C" loc="74:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <documentation loc="31:/home/hades/tinyos-new/tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430Usart0P" loc="74:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430Usart0P.nc" safe="">
      <documentation loc="62:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430Usart0P.nc">
        <short>&#10; Implementation of USART0 lowlevel functionality - stateless.</short>
        <long>&#10; Implementation of USART0 lowlevel functionality - stateless.&#10; Setting a mode will by default disable USART-Interrupts.&#10;&#10; @author: Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10; @author: Jonathan Hui &#60;jhui@archedrock.com>&#10; @author: Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author: Joe Polastre&#10; @author: Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10; @version $Revision: 1.8 $ $Date: 2010-06-04 22:30:21 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC" loc="39(CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC):/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <documentation loc="32:/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430Usart0C.nc">
        <short>&#10; Provides an interface for USART0 on the MSP430.</short>
        <long>&#10; Provides an interface for USART0 on the MSP430.&#10;&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Usart0C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare0P" loc="37:/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <documentation loc="32:/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare0P.UsartShareP" loc="37(Msp430UsartShare0P.UsartShareP):/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <documentation loc="32:/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430UsartShareP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-26 04:39:08 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430UsartShareP"/>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare0P.ArbiterC" loc="89(Msp430UsartShare0P.ArbiterC):/home/hades/tinyos-new/tos/system/FcfsArbiterC.nc">
      <documentation loc="69:/home/hades/tinyos-new/tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="FcfsArbiterC"/>
        <arguments>
          <value cst="S:Msp430Usart0.Resource">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare0P.ArbiterC.Queue" loc="42(Msp430UsartShare0P.ArbiterC.Queue):/home/hades/tinyos-new/tos/system/FcfsResourceQueueC.nc">
      <instance number="1">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare0P.ArbiterC.Arbiter" loc="52(Msp430UsartShare0P.ArbiterC.Arbiter):/home/hades/tinyos-new/tos/system/ArbiterP.nc">
      <documentation loc="30:/home/hades/tinyos-new/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430I2C0C" loc="2:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <configuration/>
    </component>
    <component qname="HplMsp430I2C0P" loc="37:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430I2C0P.nc" safe="">
      <documentation loc="32:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430I2C0P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-24 05:32:31 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ControlC.SyncSpiC" loc="39(CC2420ControlC.SyncSpiC):/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ControlC.RssiResource" loc="39(CC2420ControlC.RssiResource):/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="ActiveMessageAddressC" loc="52:/home/hades/tinyos-new/tos/system/ActiveMessageAddressC.nc" safe="">
      <documentation loc="45:/home/hades/tinyos-new/tos/system/ActiveMessageAddressC.nc">
        <short>&#10; Component that stores the node's active message address and group ID.</short>
        <long>&#10; Component that stores the node's active message address and group ID.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="LocalIeeeEui64C" loc="11:/home/hades/tinyos-new/tos/chips/ds2411/LocalIeeeEui64C.nc">
      <configuration/>
    </component>
    <component qname="LocalIeeeEui64P" loc="3:/home/hades/tinyos-new/tos/chips/ds2411/LocalIeeeEui64P.nc">
      <module/>
    </component>
    <component qname="Ds2411C" loc="7:/home/hades/tinyos-new/tos/chips/ds2411/Ds2411C.nc">
      <configuration/>
    </component>
    <component qname="Ds2411P" loc="9:/home/hades/tinyos-new/tos/chips/ds2411/Ds2411P.nc">
      <module/>
    </component>
    <component qname="OneWireMasterC" loc="6:/home/hades/tinyos-new/tos/lib/onewire/OneWireMasterC.nc">
      <documentation loc="1:/home/hades/tinyos-new/tos/lib/onewire/OneWireMasterC.nc">
        <short>&#10; Dallas/Maxim 1wire bus master&#10;&#10;</short>
      </documentation>
      <configuration/>
    </component>
    <component qname="OneWireMasterP" loc="9:/home/hades/tinyos-new/tos/lib/onewire/OneWireMasterP.nc">
      <documentation loc="2:/home/hades/tinyos-new/tos/lib/onewire/OneWireMasterP.nc">
        <short>&#10; Dallas/Maxim 1wire bus master&#10;&#10; Only supports one device on the 1-wire bus.</short>
      </documentation>
      <module/>
    </component>
    <component qname="BusyWaitMicroC" loc="39:/home/hades/tinyos-new/tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <documentation loc="33:/home/hades/tinyos-new/tos/chips/msp430/timer/BusyWaitMicroC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="BusyWaitMicroC.BusyWaitCounterC" loc="52(BusyWaitMicroC.BusyWaitCounterC):/home/hades/tinyos-new/tos/lib/timer/BusyWaitCounterC.nc">
      <documentation loc="36:/home/hades/tinyos-new/tos/lib/timer/BusyWaitCounterC.nc">
        <short>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses).</short>
        <long>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses). See TEP102 for more&#10; details.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for the&#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="BusyWaitCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1d740c0460"/>
            <typename><typedef-ref name="TMicro" ref="0x7f1d740c07d0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1d74a34520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430CounterMicroC" loc="44:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430CounterMicroC.nc">
      <documentation loc="34:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430CounterMicroC.nc">
        <short>&#10; Msp430CounterMicroC provides the standard 1 uis (or 1 us) counter for the&#10; MSP430.</short>
        <long>&#10; Msp430CounterMicroC provides the standard 1 uis (or 1 us) counter for the&#10; MSP430.   If your base clock is in units of binary hertz then 1 uis, decimal&#10; hertz it will be 1us.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430CounterMicroC.Counter" loc="42(Msp430CounterMicroC.Counter):/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430CounterC.nc">
      <documentation loc="33:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1d740c0460"/>
            <typename><typedef-ref name="TMicro" ref="0x7f1d740c07d0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplDs2411C" loc="1:/home/hades/tinyos-new/tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <configuration/>
    </component>
    <component qname="HplDs2411C.MspGpio" loc="42(HplDs2411C.MspGpio):/home/hades/tinyos-new/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/hades/tinyos-new/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="Ds2411PowerControlC" loc="12:/home/hades/tinyos-new/tos/chips/ds2411/Ds2411PowerControlC.nc">
      <module/>
    </component>
    <component qname="CC2420TransmitC" loc="41:/home/hades/tinyos-new/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <documentation loc="32:/home/hades/tinyos-new/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
        <short>&#10; Implementation of the transmit path for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of the transmit path for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420TransmitP" loc="46:/home/hades/tinyos-new/tos/chips/cc2420/transmit/CC2420TransmitP.nc" safe="">
      <module/>
    </component>
    <component qname="CC2420TransmitC.Spi" loc="39(CC2420TransmitC.Spi):/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveC" loc="39:/home/hades/tinyos-new/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <documentation loc="32:/home/hades/tinyos-new/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
        <short>&#10; Implementation of the receive path for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of the receive path for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveP" loc="45:/home/hades/tinyos-new/tos/chips/cc2420/receive/CC2420ReceiveP.nc" safe="">
      <documentation loc="32:/home/hades/tinyos-new/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Jung Il Choi&#10; @author JeongGil Ko&#10; @author Razvan Musaloiu-E&#10; @version $Revision: 1.21 $ $Date: 2009/09/17 23:36:36 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420PacketC" loc="38:/home/hades/tinyos-new/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <documentation loc="32:/home/hades/tinyos-new/tos/chips/cc2420/packet/CC2420PacketC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420PacketP" loc="43:/home/hades/tinyos-new/tos/chips/cc2420/packet/CC2420PacketP.nc" safe="">
      <documentation loc="32:/home/hades/tinyos-new/tos/chips/cc2420/packet/CC2420PacketP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420PacketC.CounterToLocalTimeC" loc="46(CC2420PacketC.CounterToLocalTimeC):/home/hades/tinyos-new/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/home/hades/tinyos-new/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1d740c1c10"/>
            <typename><typedef-ref name="T32khz" ref="0x7f1d740c0020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC" loc="43:/home/hades/tinyos-new/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <documentation loc="33:/home/hades/tinyos-new/tos/chips/msp430/timer/HilTimerMilliC.nc">
        <short>&#10; HilTimerMilliC provides a parameterized interface to a virtualized&#10; millisecond timer.</short>
        <long>&#10; HilTimerMilliC provides a parameterized interface to a virtualized&#10; millisecond timer.  TimerMilliC in tos/system/ uses this component to&#10; allocate new timers.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C" loc="41(HilTimerMilliC.AlarmMilli32C):/home/hades/tinyos-new/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <documentation loc="33:/home/hades/tinyos-new/tos/chips/msp430/timer/AlarmMilli32C.nc">
        <short>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; </short>
        <long>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmMilli32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom" loc="41(HilTimerMilliC.AlarmMilli32C.AlarmFrom):/home/hades/tinyos-new/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <documentation loc="33:/home/hades/tinyos-new/tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Alarm32khz16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer" loc="37(HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer):/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <documentation loc="33:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430Timer32khzC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm" loc="43(HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm):/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <documentation loc="34:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1d740c1c10"/>
            <typename><typedef-ref name="T32khz" ref="0x7f1d740c0020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMilli32C" loc="41:/home/hades/tinyos-new/tos/chips/msp430/timer/CounterMilli32C.nc">
      <documentation loc="33:/home/hades/tinyos-new/tos/chips/msp430/timer/CounterMilli32C.nc">
        <short>&#10; CounterMilli32C provides at 32-bit counter at 1024 ticks per second.</short>
        <long>&#10; CounterMilli32C provides at 32-bit counter at 1024 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CounterMilli32C.Transform" loc="54(CounterMilli32C.Transform):/home/hades/tinyos-new/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:/home/hades/tinyos-new/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1d740c1460"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1d740c17d0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f1d74a34920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1d740c1c10"/>
            <typename><typedef-ref name="T32khz" ref="0x7f1d740c0020"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1d74a34520"/></typename>
          </type-int>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f1d74a34920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.Transform" loc="51(HilTimerMilliC.AlarmMilli32C.Transform):/home/hades/tinyos-new/tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:/home/hades/tinyos-new/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1d740c1460"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1d740c17d0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f1d74a34920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1d740c1c10"/>
            <typename><typedef-ref name="T32khz" ref="0x7f1d740c0020"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1d74a34520"/></typename>
          </type-int>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="46(HilTimerMilliC.AlarmToTimerC):/home/hades/tinyos-new/tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:/home/hades/tinyos-new/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1d740c1460"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1d740c17d0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="46(HilTimerMilliC.VirtualizeTimerC):/home/hades/tinyos-new/tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:/home/hades/tinyos-new/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1d740c1460"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1d740c17d0"/></typename>
          </type-tag>
          <value cst="I:7">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="46(HilTimerMilliC.CounterToLocalTimeC):/home/hades/tinyos-new/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/home/hades/tinyos-new/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1d740c1460"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1d740c17d0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CC2420PacketC.DummyTimer" loc="44(CC2420PacketC.DummyTimer):/home/hades/tinyos-new/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/hades/tinyos-new/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="48:/home/hades/tinyos-new/tos/system/TimerMilliP.nc">
      <documentation loc="34:/home/hades/tinyos-new/tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveC.Spi" loc="39(CC2420ReceiveC.Spi):/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RandomC" loc="43:/home/hades/tinyos-new/tos/system/RandomC.nc">
      <documentation loc="33:/home/hades/tinyos-new/tos/system/RandomC.nc">
        <short>&#10; The standard TinyOS random number generator.</short>
        <long>&#10; The standard TinyOS random number generator. If your system requires a &#10; specific random number generator, it should wire to that component&#10; directly. &#10;&#10; @author  Barbara Hohlt &#10; @author  Phil Levis &#10; @date    March 1 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RandomMlcgC" loc="45:/home/hades/tinyos-new/tos/system/RandomMlcgC.nc" safe="">
      <documentation loc="32:/home/hades/tinyos-new/tos/system/RandomMlcgC.nc">
        <short> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.</short>
        <long> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.  It uses the 32 bit multiplicative &#10;  linear congruential generator, &#10;&#10;&#9;&#9;S' = (A x S) mod (2^31 - 1) &#10;&#10;  for A = 16807.&#10;&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420CsmaC.StateC" loc="65(CC2420CsmaC.StateC):/home/hades/tinyos-new/tos/system/StateC.nc">
      <documentation loc="32:/home/hades/tinyos-new/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UniqueSendC" loc="38:/home/hades/tinyos-new/tos/chips/cc2420/unique/UniqueSendC.nc">
      <documentation loc="32:/home/hades/tinyos-new/tos/chips/cc2420/unique/UniqueSendC.nc">
        <short>&#10; Generate a unique dsn byte for this outgoing packet&#10; This should sit at the top of the stack&#10; </short>
        <long>&#10; Generate a unique dsn byte for this outgoing packet&#10; This should sit at the top of the stack&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="UniqueSendP" loc="38:/home/hades/tinyos-new/tos/chips/cc2420/unique/UniqueSendP.nc" safe="">
      <documentation loc="32:/home/hades/tinyos-new/tos/chips/cc2420/unique/UniqueSendP.nc">
        <short>&#10; This layer is responsible for supplying a unique data sequence number (dsn)&#10; to each outgoing message.</short>
        <long>&#10; This layer is responsible for supplying a unique data sequence number (dsn)&#10; to each outgoing message.&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="UniqueSendC.StateC" loc="65(UniqueSendC.StateC):/home/hades/tinyos-new/tos/system/StateC.nc">
      <documentation loc="32:/home/hades/tinyos-new/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UniqueReceiveC" loc="40:/home/hades/tinyos-new/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <documentation loc="32:/home/hades/tinyos-new/tos/chips/cc2420/unique/UniqueReceiveC.nc">
        <short>&#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.</short>
        <long>&#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.&#10; This should sit at the bottom of the stack&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="UniqueReceiveP" loc="41:/home/hades/tinyos-new/tos/chips/cc2420/unique/UniqueReceiveP.nc" safe="">
      <documentation loc="32:/home/hades/tinyos-new/tos/chips/cc2420/unique/UniqueReceiveP.nc">
        <short> &#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.</short>
        <long> &#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TinyosNetworkC" loc="62:/home/hades/tinyos-new/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <documentation loc="32:/home/hades/tinyos-new/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
        <short>&#10; Original TinyOS T-Frames use a packet header that is not compatible with&#10; other 6LowPAN networks.</short>
        <long>&#10; Original TinyOS T-Frames use a packet header that is not compatible with&#10; other 6LowPAN networks.  They do not include the network byte &#10; responsible for identifying the packing as being sourced from a TinyOS&#10; network.&#10;&#10; TinyOS I-Frames are interoperability packets that do include a network&#10; byte as defined by 6LowPAN specifications.  The I-Frame header type is&#10; the default packet header used in TinyOS networks.&#10;&#10; Since either packet header is acceptable, this layer must do some &#10; preprocessing (sorry) to figure out whether or not it needs to include &#10; the functionality to process I-frames.  If I-Frames are used, then&#10; the network byte is added on the way out and checked on the way in.&#10; If the packet came from a network different from a TinyOS network, the&#10; user may access it through the DispatchP's NonTinyosReceive[] Receive &#10; interface and process it in a different radio stack.&#10;&#10; If T-Frames are used instead, this layer is simply pass-through wiring to the&#10; layer beneath.  &#10;&#10; Define &#34;CC2420_IFRAME_TYPE&#34; to use the interoperability frame and &#10; this layer&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420TinyosNetworkP" loc="44:/home/hades/tinyos-new/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc" safe="">
      <documentation loc="32:/home/hades/tinyos-new/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
        <short>&#10; Fills in the network ID byte for outgoing packets for compatibility with&#10; other 6LowPAN networks.</short>
        <long>&#10; Fills in the network ID byte for outgoing packets for compatibility with&#10; other 6LowPAN networks.  Filters incoming packets that are not&#10; TinyOS network compatible.  Provides the 6LowpanSnoop interface to&#10; sniff for packets that were not originated from TinyOS.&#10;&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TinyosNetworkC.FcfsResourceQueueC" loc="42(CC2420TinyosNetworkC.FcfsResourceQueueC):/home/hades/tinyos-new/tos/system/FcfsResourceQueueC.nc">
      <instance number="0">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DummyLplC" loc="41:/home/hades/tinyos-new/tos/chips/cc2420/lpl/DummyLplC.nc">
      <documentation loc="32:/home/hades/tinyos-new/tos/chips/cc2420/lpl/DummyLplC.nc">
        <short>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.</short>
        <long>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.&#10; Sleep interval is always 0, and duty cycle is always 100%&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="DummyLplP" loc="39:/home/hades/tinyos-new/tos/chips/cc2420/lpl/DummyLplP.nc">
      <documentation loc="32:/home/hades/tinyos-new/tos/chips/cc2420/lpl/DummyLplP.nc">
        <short>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.</short>
        <long>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.&#10; Wakeup interval is always 0 (always on)&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="DummyLplC.StateC" loc="65(DummyLplC.StateC):/home/hades/tinyos-new/tos/system/StateC.nc">
      <documentation loc="32:/home/hades/tinyos-new/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="PacketLinkDummyC" loc="38:/home/hades/tinyos-new/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <documentation loc="32:/home/hades/tinyos-new/tos/chips/cc2420/link/PacketLinkDummyC.nc">
        <short>&#10; Dummy configuration for PacketLink Layer&#10; </short>
        <long>&#10; Dummy configuration for PacketLink Layer&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PacketLinkDummyP" loc="38:/home/hades/tinyos-new/tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <documentation loc="32:/home/hades/tinyos-new/tos/chips/cc2420/link/PacketLinkDummyP.nc">
        <short>&#10; Dummy module for Packet Link layer&#10; </short>
        <long>&#10; Dummy module for Packet Link layer&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ActiveMessageP" loc="46:/home/hades/tinyos-new/tos/chips/cc2420/CC2420ActiveMessageP.nc" safe="">
      <documentation loc="33:/home/hades/tinyos-new/tos/chips/cc2420/CC2420ActiveMessageP.nc">
        <short>&#10; Active message implementation on top of the CC2420 radio.</short>
        <long>&#10; Active message implementation on top of the CC2420 radio. This&#10; implementation uses the 16-bit addressing mode of 802.15.4: the&#10; only additional byte it adds is the AM id byte, as the first byte&#10; of the data payload.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.22 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TestCM5000C.AMSenderC" loc="47(TestCM5000C.AMSenderC):/home/hades/tinyos-new/tos/system/AMSenderC.nc">
      <documentation loc="33:/home/hades/tinyos-new/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="TestCM5000C.AMSenderC.SenderC" loc="47(TestCM5000C.AMSenderC.SenderC):/home/hades/tinyos-new/tos/system/DirectAMSenderC.nc">
      <documentation loc="33:/home/hades/tinyos-new/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7f1d740e7d50"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="TestCM5000C.AMSenderC.SenderC.AMQueueEntryP" loc="43(TestCM5000C.AMSenderC.SenderC.AMQueueEntryP):/home/hades/tinyos-new/tos/system/AMQueueEntryP.nc">
      <documentation loc="33:/home/hades/tinyos-new/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7f1d740e7d50"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AMQueueP" loc="42:/home/hades/tinyos-new/tos/system/AMQueueP.nc">
      <documentation loc="33:/home/hades/tinyos-new/tos/system/AMQueueP.nc">
        <short>&#10; The fair-share send queue for AM radio communication.</short>
        <long>&#10; The fair-share send queue for AM radio communication.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AMQueueP.AMQueueImplP" loc="45(AMQueueP.AMQueueImplP):/home/hades/tinyos-new/tos/system/AMQueueImplP.nc">
      <documentation loc="33:/home/hades/tinyos-new/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueImplP"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="TestCM5000C.SampleTimer" loc="44(TestCM5000C.SampleTimer):/home/hades/tinyos-new/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/hades/tinyos-new/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TestCM5000C.SensorVref" loc="43(TestCM5000C.SensorVref):/home/hades/tinyos-new/tos/chips/msp430/sensors/Msp430InternalVoltageC.nc">
      <documentation loc="32:/home/hades/tinyos-new/tos/chips/msp430/sensors/Msp430InternalVoltageC.nc">
        <short>&#10; Msp430InternalVoltageC is the voltage sensor available on the&#10; msp430-based platforms.</short>
        <long>&#10; Msp430InternalVoltageC is the voltage sensor available on the&#10; msp430-based platforms.&#10;&#10; To convert from ADC counts to actual voltage, divide by 4096 and&#10; multiply by 3.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:10 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430InternalVoltageC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TestCM5000C.SensorVref.AdcReadClientC" loc="47(TestCM5000C.SensorVref.AdcReadClientC):/home/hades/tinyos-new/tos/chips/msp430/adc12/AdcReadClientC.nc">
      <instance number="0">
        <component-ref qname="AdcReadClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AdcP" loc="36:/home/hades/tinyos-new/tos/chips/msp430/adc12/AdcP.nc" safe="">
      <module/>
    </component>
    <component qname="TestCM5000C.SensorVref.AdcReadClientC.Msp430AdcClient" loc="43(TestCM5000C.SensorVref.AdcReadClientC.Msp430AdcClient):/home/hades/tinyos-new/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <documentation loc="33:/home/hades/tinyos-new/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
        <short> &#10; This component virtualizes access to the HAL of the MSP430 ADC12.</short>
        <long> &#10; This component virtualizes access to the HAL of the MSP430 ADC12.&#10; Reference voltage is enabled automatically as required by the configuration.&#10; &#10; @author Jan Hauer &#10;&#10; @see  Please refer to the README.txt and TEP 101 for more information about&#10; this component and its intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Adc12ClientAutoRVGC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430Adc12P" loc="37:/home/hades/tinyos-new/tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <configuration/>
    </component>
    <component qname="Msp430Adc12ImplP" loc="37:/home/hades/tinyos-new/tos/chips/msp430/adc12/Msp430Adc12ImplP.nc" safe="">
      <module/>
    </component>
    <component qname="HplAdc12P" loc="45:/home/hades/tinyos-new/tos/chips/msp430/adc12/HplAdc12P.nc">
      <documentation loc="36:/home/hades/tinyos-new/tos/chips/msp430/adc12/HplAdc12P.nc">
        <short>&#10; The HplAdc12 interface exports low-level access to the ADC12 registers&#10; of the MSP430 MCU.</short>
        <long>&#10; The HplAdc12 interface exports low-level access to the ADC12 registers&#10; of the MSP430 MCU.&#10;&#10; @author Jan Hauer&#10; @see  Please refer to TEP 101 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Msp430Adc12P.Arbiter" loc="83(Msp430Adc12P.Arbiter):/home/hades/tinyos-new/tos/system/SimpleRoundRobinArbiterC.nc">
      <documentation loc="62:/home/hades/tinyos-new/tos/system/SimpleRoundRobinArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleRoundRobinArbiterC"/>
        <arguments>
          <value cst="S:Msp430Adc12C.Resource">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430Adc12P.Arbiter.Queue" loc="42(Msp430Adc12P.Arbiter.Queue):/home/hades/tinyos-new/tos/system/RoundRobinResourceQueueC.nc">
      <documentation loc="33:/home/hades/tinyos-new/tos/system/RoundRobinResourceQueueC.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.7 $&#10; @date $Date: 2010-06-29 22:07:56 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="RoundRobinResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430Adc12P.Arbiter.Arbiter" loc="49(Msp430Adc12P.Arbiter.Arbiter):/home/hades/tinyos-new/tos/system/SimpleArbiterP.nc">
      <documentation loc="30:/home/hades/tinyos-new/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleArbiterP"/>
      </instance>
      <module/>
    </component>
    <component qname="Msp430RefVoltArbiterP" loc="50:/home/hades/tinyos-new/tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <documentation loc="36:/home/hades/tinyos-new/tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
        <short> &#10; This component is meant to intercept requests to the &#60;code>Resource&#60;/code>&#10; interface on their way to the adc arbiter.</short>
        <long> &#10; This component is meant to intercept requests to the &#60;code>Resource&#60;/code>&#10; interface on their way to the adc arbiter. It checks whether the client's&#10; adc configuration requires the internal reference voltage generator of the&#10; MSP430 to be enabled during the conversion by inspecting the client's&#10; configuration data (using the &#60;code>AdcConfigure&#60;/code> interface). If so it&#10; makes sure that Resource.granted() is held back until the reference voltage&#10; is stable. Clients SHOULD NOT wire to &#60;code>Msp430RefVoltArbiterP&#60;/code> but&#10; to the Resource interface provided by&#10; &#60;code>Msp430Adc12ClientAutoRVGC&#60;/code>.&#10; &#10; @author Jan Hauer&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430RefVoltGeneratorP" loc="36:/home/hades/tinyos-new/tos/chips/msp430/adc12/Msp430RefVoltGeneratorP.nc">
      <module/>
    </component>
    <component qname="Msp430RefVoltArbiterImplP" loc="36:/home/hades/tinyos-new/tos/chips/msp430/adc12/Msp430RefVoltArbiterImplP.nc">
      <module/>
    </component>
    <component qname="Msp430RefVoltArbiterP.SwitchOnDelayTimer" loc="44(Msp430RefVoltArbiterP.SwitchOnDelayTimer):/home/hades/tinyos-new/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/hades/tinyos-new/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430RefVoltArbiterP.SwitchOffDelayTimer" loc="44(Msp430RefVoltArbiterP.SwitchOffDelayTimer):/home/hades/tinyos-new/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/hades/tinyos-new/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430RefVoltArbiterP.SwitchOffSettleTimer" loc="44(Msp430RefVoltArbiterP.SwitchOffSettleTimer):/home/hades/tinyos-new/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/hades/tinyos-new/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TestCM5000C.SensorVref.AdcReadClientC.Msp430AdcClient.Msp430Adc12ConfAlertC" loc="42(TestCM5000C.SensorVref.AdcReadClientC.Msp430AdcClient.Msp430Adc12ConfAlertC):/home/hades/tinyos-new/tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
      <documentation loc="33:/home/hades/tinyos-new/tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
        <short> &#10; The only purpose of this component is to generate a nesC warning&#10; if someone has wired to Msp430Adc12ClientAutoRVGC or &#10; Msp430Adc12ClientAutoDMA_RVGC and forgotten to wire to AdcConfigure.</short>
        <long> &#10; The only purpose of this component is to generate a nesC warning&#10; if someone has wired to Msp430Adc12ClientAutoRVGC or &#10; Msp430Adc12ClientAutoDMA_RVGC and forgotten to wire to AdcConfigure.&#10; (nesC optimizes all of its code away).&#10;&#10; @author: Jan Hauer&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Adc12ConfAlertC"/>
      </instance>
      <module/>
    </component>
    <component qname="TestCM5000C.SensorVref.AdcReadStreamClientC" loc="47(TestCM5000C.SensorVref.AdcReadStreamClientC):/home/hades/tinyos-new/tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
      <documentation loc="36:/home/hades/tinyos-new/tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
        <short> &#10; This component virtualizes the HIL of ADC12 on MSP430.</short>
        <long> &#10; This component virtualizes the HIL of ADC12 on MSP430. A client must wire&#10; &#60;code>AdcConfigure&#60;/code> to a component that returns the client's adc&#10; configuration data.&#10;&#10; @author Jan Hauer &#10; @see  Please refer to the README.txt and TEP 101 for more information about &#10; this component and its intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AdcReadStreamClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="WireAdcStreamP" loc="19:/home/hades/tinyos-new/tos/chips/msp430/adc12/WireAdcStreamP.nc">
      <documentation loc="10:/home/hades/tinyos-new/tos/chips/msp430/adc12/WireAdcStreamP.nc">
        <short>&#10; Support component for AdcReadStreamClientC.</short>
        <long>&#10; Support component for AdcReadStreamClientC.&#10;&#10; @author David Gay&#10; @author Jan Hauer &#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AdcStreamP" loc="46:/home/hades/tinyos-new/tos/chips/msp430/adc12/AdcStreamP.nc" safe="">
      <documentation loc="39:/home/hades/tinyos-new/tos/chips/msp430/adc12/AdcStreamP.nc">
        <short>&#10; Convert MSP430 HAL A/D interface to the HIL interfaces (adapted atmega code).</short>
        <long>&#10; Convert MSP430 HAL A/D interface to the HIL interfaces (adapted atmega code).&#10; @author David Gay&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="WireAdcStreamP.Alarm" loc="41(WireAdcStreamP.Alarm):/home/hades/tinyos-new/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <documentation loc="33:/home/hades/tinyos-new/tos/chips/msp430/timer/AlarmMilli32C.nc">
        <short>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; </short>
        <long>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AlarmMilli32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="WireAdcStreamP.Alarm.AlarmFrom" loc="41(WireAdcStreamP.Alarm.AlarmFrom):/home/hades/tinyos-new/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <documentation loc="33:/home/hades/tinyos-new/tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Alarm32khz16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="WireAdcStreamP.Alarm.AlarmFrom.Msp430Timer" loc="37(WireAdcStreamP.Alarm.AlarmFrom.Msp430Timer):/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <documentation loc="33:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430Timer32khzC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="WireAdcStreamP.Alarm.AlarmFrom.Msp430Alarm" loc="43(WireAdcStreamP.Alarm.AlarmFrom.Msp430Alarm):/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <documentation loc="34:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1d740c1c10"/>
            <typename><typedef-ref name="T32khz" ref="0x7f1d740c0020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="WireAdcStreamP.Alarm.Transform" loc="51(WireAdcStreamP.Alarm.Transform):/home/hades/tinyos-new/tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:/home/hades/tinyos-new/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1d740c1460"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1d740c17d0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f1d74a34920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1d740c1c10"/>
            <typename><typedef-ref name="T32khz" ref="0x7f1d740c0020"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1d74a34520"/></typename>
          </type-int>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="WireAdcStreamP.ArbitrateReadStream" loc="23(WireAdcStreamP.ArbitrateReadStream):/home/hades/tinyos-new/tos/system/ArbitratedReadStreamC.nc">
      <documentation loc="10:/home/hades/tinyos-new/tos/system/ArbitratedReadStreamC.nc">
        <short>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.</short>
        <long>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.&#10;&#10; Note that this code does not deal with unexpected events: it assumes&#10; that all events it receives are in response to commands that it&#10; made. See tos/chips/atm128/adc for an example of using&#10; ArbitratedReadStreamC in a safe way.&#10;&#10; @param width_t Width of the underlying ReadStream interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbitratedReadStreamC"/>
        <arguments>
          <value cst="I:3">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1d74a34520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="TestCM5000C.SensorVref.AdcReadStreamClientC.Msp430AdcClient" loc="43(TestCM5000C.SensorVref.AdcReadStreamClientC.Msp430AdcClient):/home/hades/tinyos-new/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <documentation loc="33:/home/hades/tinyos-new/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
        <short> &#10; This component virtualizes access to the HAL of the MSP430 ADC12.</short>
        <long> &#10; This component virtualizes access to the HAL of the MSP430 ADC12.&#10; Reference voltage is enabled automatically as required by the configuration.&#10; &#10; @author Jan Hauer &#10;&#10; @see  Please refer to the README.txt and TEP 101 for more information about&#10; this component and its intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430Adc12ClientAutoRVGC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TestCM5000C.SensorVref.AdcReadStreamClientC.Msp430AdcClient.Msp430Adc12ConfAlertC" loc="42(TestCM5000C.SensorVref.AdcReadStreamClientC.Msp430AdcClient.Msp430Adc12ConfAlertC):/home/hades/tinyos-new/tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
      <documentation loc="33:/home/hades/tinyos-new/tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
        <short> &#10; The only purpose of this component is to generate a nesC warning&#10; if someone has wired to Msp430Adc12ClientAutoRVGC or &#10; Msp430Adc12ClientAutoDMA_RVGC and forgotten to wire to AdcConfigure.</short>
        <long> &#10; The only purpose of this component is to generate a nesC warning&#10; if someone has wired to Msp430Adc12ClientAutoRVGC or &#10; Msp430Adc12ClientAutoDMA_RVGC and forgotten to wire to AdcConfigure.&#10; (nesC optimizes all of its code away).&#10;&#10; @author: Jan Hauer&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430Adc12ConfAlertC"/>
      </instance>
      <module/>
    </component>
    <component qname="Msp430InternalVoltageP" loc="34:/home/hades/tinyos-new/tos/chips/msp430/sensors/Msp430InternalVoltageP.nc">
      <module/>
    </component>
    <component qname="TestCM5000C.SensorVref.AdcReadNowClientC" loc="47(TestCM5000C.SensorVref.AdcReadNowClientC):/home/hades/tinyos-new/tos/chips/msp430/adc12/AdcReadNowClientC.nc">
      <documentation loc="36:/home/hades/tinyos-new/tos/chips/msp430/adc12/AdcReadNowClientC.nc">
        <short> &#10; This component virtualizes the HIL of ADC12 on MSP430.</short>
        <long> &#10; This component virtualizes the HIL of ADC12 on MSP430. A client must wire&#10; &#60;code>AdcConfigure&#60;/code> to a component that returns the client's adc&#10; configuration data.&#10;&#10; @author Jan Hauer &#10; @see  Please refer to the README.txt and TEP 101 for more information about &#10; this component and its intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AdcReadNowClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TestCM5000C.SensorVref.AdcReadNowClientC.Msp430AdcClient" loc="43(TestCM5000C.SensorVref.AdcReadNowClientC.Msp430AdcClient):/home/hades/tinyos-new/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <documentation loc="33:/home/hades/tinyos-new/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
        <short> &#10; This component virtualizes access to the HAL of the MSP430 ADC12.</short>
        <long> &#10; This component virtualizes access to the HAL of the MSP430 ADC12.&#10; Reference voltage is enabled automatically as required by the configuration.&#10; &#10; @author Jan Hauer &#10;&#10; @see  Please refer to the README.txt and TEP 101 for more information about&#10; this component and its intended use.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430Adc12ClientAutoRVGC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TestCM5000C.SensorVref.AdcReadNowClientC.Msp430AdcClient.Msp430Adc12ConfAlertC" loc="42(TestCM5000C.SensorVref.AdcReadNowClientC.Msp430AdcClient.Msp430Adc12ConfAlertC):/home/hades/tinyos-new/tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
      <documentation loc="33:/home/hades/tinyos-new/tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
        <short> &#10; The only purpose of this component is to generate a nesC warning&#10; if someone has wired to Msp430Adc12ClientAutoRVGC or &#10; Msp430Adc12ClientAutoDMA_RVGC and forgotten to wire to AdcConfigure.</short>
        <long> &#10; The only purpose of this component is to generate a nesC warning&#10; if someone has wired to Msp430Adc12ClientAutoRVGC or &#10; Msp430Adc12ClientAutoDMA_RVGC and forgotten to wire to AdcConfigure.&#10; (nesC optimizes all of its code away).&#10;&#10; @author: Jan Hauer&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430Adc12ConfAlertC"/>
      </instance>
      <module/>
    </component>
    <component qname="TestCM5000C.SensorHT" loc="45(TestCM5000C.SensorHT):/home/hades/tinyos-new/tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
      <documentation loc="32:/home/hades/tinyos-new/tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
        <short>&#10; SensirionSht11C is a top-level access component for the Sensirion&#10; SHT11 model humidity and temperature sensor, available on the&#10; telosb platform.</short>
        <long>&#10; SensirionSht11C is a top-level access component for the Sensirion&#10; SHT11 model humidity and temperature sensor, available on the&#10; telosb platform. Because this component represents one physical&#10; device, simultaneous calls to read temperature and humidity will be&#10; arbitrated and executed in sequential order. Feel free to read both&#10; at the same time, just be aware that they'll come back&#10; sequentially.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2007-04-13 21:46:18 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SensirionSht11C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TestCM5000C.SensorHT.SensirionSht11ReaderP" loc="45(TestCM5000C.SensorHT.SensirionSht11ReaderP):/home/hades/tinyos-new/tos/chips/sht11/SensirionSht11ReaderP.nc">
      <instance number="0">
        <component-ref qname="SensirionSht11ReaderP"/>
      </instance>
      <module/>
    </component>
    <component qname="HalSensirionSht11C" loc="43:/home/hades/tinyos-new/tos/platforms/telosa/chips/sht11/HalSensirionSht11C.nc">
      <documentation loc="32:/home/hades/tinyos-new/tos/platforms/telosa/chips/sht11/HalSensirionSht11C.nc">
        <short>&#10; HalSensirionSht11C is an advanced access component for the&#10; Sensirion SHT11 model humidity and temperature sensor, available on&#10; the telosb platform.</short>
        <long>&#10; HalSensirionSht11C is an advanced access component for the&#10; Sensirion SHT11 model humidity and temperature sensor, available on&#10; the telosb platform. This component provides the SensirionSht11&#10; interface, which offers full control over the device. Please&#10; acquire the Resource before using it.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:45 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HalSensirionSht11C.SensirionSht11LogicP" loc="53(HalSensirionSht11C.SensirionSht11LogicP):/home/hades/tinyos-new/tos/chips/sht11/SensirionSht11LogicP.nc">
      <documentation loc="35:/home/hades/tinyos-new/tos/chips/sht11/SensirionSht11LogicP.nc">
        <short>&#10; SensirionSht11LogicP contains the actual driver logic needed to&#10; read from the Sensirion SHT11 temperature/humidity sensor.</short>
        <long>&#10; SensirionSht11LogicP contains the actual driver logic needed to&#10; read from the Sensirion SHT11 temperature/humidity sensor. It&#10; depends on 2 underlying GeneralIO interfaces, one for the data pin&#10; and one for the clock pin, and one underlying GpioInterrupt.  It&#10; provides the HAL-level SensirionSht11 interface. It's generic, so&#10; you can instantiate it multiple times if you have more than one&#10; Sensirion SHT11 attached to a node. &#10; &#10; &#60;p>&#10; This code assumes that the MCU clock is less than 10 MHz.  If you&#10; ever run this on a faster MCU, you'll need to insert a lot of&#10; waits to keep the Sensirion happy.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:12 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SensirionSht11LogicP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplSensirionSht11C" loc="43:/home/hades/tinyos-new/tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <documentation loc="32:/home/hades/tinyos-new/tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
        <short>&#10; HplSensirionSht11C is a low-level component, intended to provide&#10; the physical resources used by the Sensirion SHT11 sensor on the&#10; telosb platform so that the chip driver can make use of them.</short>
        <long>&#10; HplSensirionSht11C is a low-level component, intended to provide&#10; the physical resources used by the Sensirion SHT11 sensor on the&#10; telosb platform so that the chip driver can make use of them. You&#10; really shouldn't be wiring to this, unless you're writing a new&#10; Sensirion SHT11 driver.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.6 $ $Date: 2007-02-04 19:56:29 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplSensirionSht11C.DATAM" loc="42(HplSensirionSht11C.DATAM):/home/hades/tinyos-new/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/hades/tinyos-new/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplSensirionSht11C.SCKM" loc="42(HplSensirionSht11C.SCKM):/home/hades/tinyos-new/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/hades/tinyos-new/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplSensirionSht11C.PWRM" loc="42(HplSensirionSht11C.PWRM):/home/hades/tinyos-new/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/hades/tinyos-new/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplSensirionSht11P" loc="42:/home/hades/tinyos-new/tos/platforms/telosa/chips/sht11/HplSensirionSht11P.nc">
      <documentation loc="34:/home/hades/tinyos-new/tos/platforms/telosa/chips/sht11/HplSensirionSht11P.nc">
        <short>&#10; HplSensirionSht11P is a low-level component that controls power for&#10; the Sensirion SHT11 sensor on the telosb platform.</short>
        <long>&#10; HplSensirionSht11P is a low-level component that controls power for&#10; the Sensirion SHT11 sensor on the telosb platform.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:45 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplSensirionSht11C.TimerMilliC" loc="44(HplSensirionSht11C.TimerMilliC):/home/hades/tinyos-new/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/hades/tinyos-new/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HplSensirionSht11C.InterruptDATAC" loc="43(HplSensirionSht11C.InterruptDATAC):/home/hades/tinyos-new/tos/chips/msp430/pins/Msp430InterruptC.nc">
      <documentation loc="33:/home/hades/tinyos-new/tos/chips/msp430/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430InterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplSensirionSht11C.Arbiter" loc="89(HplSensirionSht11C.Arbiter):/home/hades/tinyos-new/tos/system/FcfsArbiterC.nc">
      <documentation loc="69:/home/hades/tinyos-new/tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="FcfsArbiterC"/>
        <arguments>
          <value cst="S:Sht11.Resource">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplSensirionSht11C.Arbiter.Queue" loc="42(HplSensirionSht11C.Arbiter.Queue):/home/hades/tinyos-new/tos/system/FcfsResourceQueueC.nc">
      <instance number="2">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplSensirionSht11C.Arbiter.Arbiter" loc="52(HplSensirionSht11C.Arbiter.Arbiter):/home/hades/tinyos-new/tos/system/ArbiterP.nc">
      <documentation loc="30:/home/hades/tinyos-new/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplSensirionSht11C.SplitControlPowerManagerC" loc="67(HplSensirionSht11C.SplitControlPowerManagerC):/home/hades/tinyos-new/tos/lib/power/SplitControlPowerManagerC.nc">
      <documentation loc="41:/home/hades/tinyos-new/tos/lib/power/SplitControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices.  Non-virtualized devices are shared&#10; using a parameterized Resource interface, and are powered down according&#10; to some policy whenever there are no more pending requests to that Resource.&#10; The policy implemented by this component is to delay the power down of a&#10; device by some contant factor.  Such a policy is useful whenever a device&#10; has a long wake-up latency.  The cost of waiting for the device to power&#10; up can be avoided if the device is requested again before some predetermined&#10; amount of time.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>SplitControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>AsyncStdControl&#60;/code> or&#10; &#60;code>StdControl&#60;/code> interfaces, please use either the&#10; &#60;code>AsyncStdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SplitControlPowerManagerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HplSensirionSht11C.SplitControlPowerManagerC.PowerManager" loc="58(HplSensirionSht11C.SplitControlPowerManagerC.PowerManager):/home/hades/tinyos-new/tos/lib/power/PowerManagerP.nc">
      <documentation loc="41:/home/hades/tinyos-new/tos/lib/power/PowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PowerManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="HalSensirionSht11C.TimerMilliC" loc="44(HalSensirionSht11C.TimerMilliC):/home/hades/tinyos-new/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/hades/tinyos-new/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TestCM5000C.SensorPhoto" loc="40(TestCM5000C.SensorPhoto):/home/hades/tinyos-new/tos/platforms/telosa/chips/s1087/HamamatsuS1087ParC.nc">
      <documentation loc="32:/home/hades/tinyos-new/tos/platforms/telosa/chips/s1087/HamamatsuS1087ParC.nc">
        <short>&#10; HamamatsuS1087ParC is a driver for a photosynthetically-active&#10; radiation sensor available on the telosb platform.</short>
        <long>&#10; HamamatsuS1087ParC is a driver for a photosynthetically-active&#10; radiation sensor available on the telosb platform. &#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2007-04-13 21:46:18 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HamamatsuS1087ParC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TestCM5000C.SensorPhoto.AdcReadClientC" loc="47(TestCM5000C.SensorPhoto.AdcReadClientC):/home/hades/tinyos-new/tos/chips/msp430/adc12/AdcReadClientC.nc">
      <instance number="1">
        <component-ref qname="AdcReadClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TestCM5000C.SensorPhoto.AdcReadClientC.Msp430AdcClient" loc="43(TestCM5000C.SensorPhoto.AdcReadClientC.Msp430AdcClient):/home/hades/tinyos-new/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <documentation loc="33:/home/hades/tinyos-new/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
        <short> &#10; This component virtualizes access to the HAL of the MSP430 ADC12.</short>
        <long> &#10; This component virtualizes access to the HAL of the MSP430 ADC12.&#10; Reference voltage is enabled automatically as required by the configuration.&#10; &#10; @author Jan Hauer &#10;&#10; @see  Please refer to the README.txt and TEP 101 for more information about&#10; this component and its intended use.&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="Msp430Adc12ClientAutoRVGC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TestCM5000C.SensorPhoto.AdcReadClientC.Msp430AdcClient.Msp430Adc12ConfAlertC" loc="42(TestCM5000C.SensorPhoto.AdcReadClientC.Msp430AdcClient.Msp430Adc12ConfAlertC):/home/hades/tinyos-new/tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
      <documentation loc="33:/home/hades/tinyos-new/tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
        <short> &#10; The only purpose of this component is to generate a nesC warning&#10; if someone has wired to Msp430Adc12ClientAutoRVGC or &#10; Msp430Adc12ClientAutoDMA_RVGC and forgotten to wire to AdcConfigure.</short>
        <long> &#10; The only purpose of this component is to generate a nesC warning&#10; if someone has wired to Msp430Adc12ClientAutoRVGC or &#10; Msp430Adc12ClientAutoDMA_RVGC and forgotten to wire to AdcConfigure.&#10; (nesC optimizes all of its code away).&#10;&#10; @author: Jan Hauer&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="Msp430Adc12ConfAlertC"/>
      </instance>
      <module/>
    </component>
    <component qname="TestCM5000C.SensorPhoto.AdcReadStreamClientC" loc="47(TestCM5000C.SensorPhoto.AdcReadStreamClientC):/home/hades/tinyos-new/tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
      <documentation loc="36:/home/hades/tinyos-new/tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
        <short> &#10; This component virtualizes the HIL of ADC12 on MSP430.</short>
        <long> &#10; This component virtualizes the HIL of ADC12 on MSP430. A client must wire&#10; &#60;code>AdcConfigure&#60;/code> to a component that returns the client's adc&#10; configuration data.&#10;&#10; @author Jan Hauer &#10; @see  Please refer to the README.txt and TEP 101 for more information about &#10; this component and its intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AdcReadStreamClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TestCM5000C.SensorPhoto.AdcReadStreamClientC.Msp430AdcClient" loc="43(TestCM5000C.SensorPhoto.AdcReadStreamClientC.Msp430AdcClient):/home/hades/tinyos-new/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <documentation loc="33:/home/hades/tinyos-new/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
        <short> &#10; This component virtualizes access to the HAL of the MSP430 ADC12.</short>
        <long> &#10; This component virtualizes access to the HAL of the MSP430 ADC12.&#10; Reference voltage is enabled automatically as required by the configuration.&#10; &#10; @author Jan Hauer &#10;&#10; @see  Please refer to the README.txt and TEP 101 for more information about&#10; this component and its intended use.&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="Msp430Adc12ClientAutoRVGC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TestCM5000C.SensorPhoto.AdcReadStreamClientC.Msp430AdcClient.Msp430Adc12ConfAlertC" loc="42(TestCM5000C.SensorPhoto.AdcReadStreamClientC.Msp430AdcClient.Msp430Adc12ConfAlertC):/home/hades/tinyos-new/tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
      <documentation loc="33:/home/hades/tinyos-new/tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
        <short> &#10; The only purpose of this component is to generate a nesC warning&#10; if someone has wired to Msp430Adc12ClientAutoRVGC or &#10; Msp430Adc12ClientAutoDMA_RVGC and forgotten to wire to AdcConfigure.</short>
        <long> &#10; The only purpose of this component is to generate a nesC warning&#10; if someone has wired to Msp430Adc12ClientAutoRVGC or &#10; Msp430Adc12ClientAutoDMA_RVGC and forgotten to wire to AdcConfigure.&#10; (nesC optimizes all of its code away).&#10;&#10; @author: Jan Hauer&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="Msp430Adc12ConfAlertC"/>
      </instance>
      <module/>
    </component>
    <component qname="HamamatsuS1087ParP" loc="42:/home/hades/tinyos-new/tos/platforms/telosa/chips/s1087/HamamatsuS1087ParP.nc">
      <documentation loc="34:/home/hades/tinyos-new/tos/platforms/telosa/chips/s1087/HamamatsuS1087ParP.nc">
        <short>&#10; HamamatsuS1087ParP is a driver for a photosynthetically-active&#10; radiation sensor available on the telosb platform.</short>
        <long>&#10; HamamatsuS1087ParP is a driver for a photosynthetically-active&#10; radiation sensor available on the telosb platform. &#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2007-04-13 21:46:18 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TestCM5000C.SensorTotal" loc="40(TestCM5000C.SensorTotal):/home/hades/tinyos-new/tos/platforms/telosa/chips/s10871/HamamatsuS10871TsrC.nc">
      <documentation loc="32:/home/hades/tinyos-new/tos/platforms/telosa/chips/s10871/HamamatsuS10871TsrC.nc">
        <short>&#10; HamamatsuS10871TsrC is a driver for a total solar radiation sensor&#10; available on the telosb platform.</short>
        <long>&#10; HamamatsuS10871TsrC is a driver for a total solar radiation sensor&#10; available on the telosb platform.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2007-04-13 21:46:18 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HamamatsuS10871TsrC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TestCM5000C.SensorTotal.AdcReadClientC" loc="47(TestCM5000C.SensorTotal.AdcReadClientC):/home/hades/tinyos-new/tos/chips/msp430/adc12/AdcReadClientC.nc">
      <instance number="2">
        <component-ref qname="AdcReadClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TestCM5000C.SensorTotal.AdcReadClientC.Msp430AdcClient" loc="43(TestCM5000C.SensorTotal.AdcReadClientC.Msp430AdcClient):/home/hades/tinyos-new/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <documentation loc="33:/home/hades/tinyos-new/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
        <short> &#10; This component virtualizes access to the HAL of the MSP430 ADC12.</short>
        <long> &#10; This component virtualizes access to the HAL of the MSP430 ADC12.&#10; Reference voltage is enabled automatically as required by the configuration.&#10; &#10; @author Jan Hauer &#10;&#10; @see  Please refer to the README.txt and TEP 101 for more information about&#10; this component and its intended use.&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="Msp430Adc12ClientAutoRVGC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TestCM5000C.SensorTotal.AdcReadClientC.Msp430AdcClient.Msp430Adc12ConfAlertC" loc="42(TestCM5000C.SensorTotal.AdcReadClientC.Msp430AdcClient.Msp430Adc12ConfAlertC):/home/hades/tinyos-new/tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
      <documentation loc="33:/home/hades/tinyos-new/tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
        <short> &#10; The only purpose of this component is to generate a nesC warning&#10; if someone has wired to Msp430Adc12ClientAutoRVGC or &#10; Msp430Adc12ClientAutoDMA_RVGC and forgotten to wire to AdcConfigure.</short>
        <long> &#10; The only purpose of this component is to generate a nesC warning&#10; if someone has wired to Msp430Adc12ClientAutoRVGC or &#10; Msp430Adc12ClientAutoDMA_RVGC and forgotten to wire to AdcConfigure.&#10; (nesC optimizes all of its code away).&#10;&#10; @author: Jan Hauer&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="Msp430Adc12ConfAlertC"/>
      </instance>
      <module/>
    </component>
    <component qname="TestCM5000C.SensorTotal.AdcReadStreamClientC" loc="47(TestCM5000C.SensorTotal.AdcReadStreamClientC):/home/hades/tinyos-new/tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
      <documentation loc="36:/home/hades/tinyos-new/tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
        <short> &#10; This component virtualizes the HIL of ADC12 on MSP430.</short>
        <long> &#10; This component virtualizes the HIL of ADC12 on MSP430. A client must wire&#10; &#60;code>AdcConfigure&#60;/code> to a component that returns the client's adc&#10; configuration data.&#10;&#10; @author Jan Hauer &#10; @see  Please refer to the README.txt and TEP 101 for more information about &#10; this component and its intended use.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="AdcReadStreamClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TestCM5000C.SensorTotal.AdcReadStreamClientC.Msp430AdcClient" loc="43(TestCM5000C.SensorTotal.AdcReadStreamClientC.Msp430AdcClient):/home/hades/tinyos-new/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <documentation loc="33:/home/hades/tinyos-new/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
        <short> &#10; This component virtualizes access to the HAL of the MSP430 ADC12.</short>
        <long> &#10; This component virtualizes access to the HAL of the MSP430 ADC12.&#10; Reference voltage is enabled automatically as required by the configuration.&#10; &#10; @author Jan Hauer &#10;&#10; @see  Please refer to the README.txt and TEP 101 for more information about&#10; this component and its intended use.&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="Msp430Adc12ClientAutoRVGC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TestCM5000C.SensorTotal.AdcReadStreamClientC.Msp430AdcClient.Msp430Adc12ConfAlertC" loc="42(TestCM5000C.SensorTotal.AdcReadStreamClientC.Msp430AdcClient.Msp430Adc12ConfAlertC):/home/hades/tinyos-new/tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
      <documentation loc="33:/home/hades/tinyos-new/tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
        <short> &#10; The only purpose of this component is to generate a nesC warning&#10; if someone has wired to Msp430Adc12ClientAutoRVGC or &#10; Msp430Adc12ClientAutoDMA_RVGC and forgotten to wire to AdcConfigure.</short>
        <long> &#10; The only purpose of this component is to generate a nesC warning&#10; if someone has wired to Msp430Adc12ClientAutoRVGC or &#10; Msp430Adc12ClientAutoDMA_RVGC and forgotten to wire to AdcConfigure.&#10; (nesC optimizes all of its code away).&#10;&#10; @author: Jan Hauer&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="Msp430Adc12ConfAlertC"/>
      </instance>
      <module/>
    </component>
    <component qname="HamamatsuS10871TsrP" loc="42:/home/hades/tinyos-new/tos/platforms/telosa/chips/s10871/HamamatsuS10871TsrP.nc">
      <documentation loc="34:/home/hades/tinyos-new/tos/platforms/telosa/chips/s10871/HamamatsuS10871TsrP.nc">
        <short>&#10; HamamatsuS10871TsrP is a driver for a photosynthetically-active&#10; radiation sensor available on the telosb platform.</short>
        <long>&#10; HamamatsuS10871TsrP is a driver for a photosynthetically-active&#10; radiation sensor available on the telosb platform. &#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2007-04-13 21:46:18 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Msp430TimerP" loc="39:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerP.nc" abstract="" safe="">
      <documentation loc="2:/home/hades/tinyos-new/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <parameters>
        <constant name="TxIV_addr" ref="0x7f1d7425f890" loc="40:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1d74a34520"/></typename>
          </type-int>
        </constant>
        <constant name="TxR_addr" ref="0x7f1d7425fc30" loc="41:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1d74a34520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCTL_addr" ref="0x7f1d7425e020" loc="42:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1d74a34520"/></typename>
          </type-int>
        </constant>
        <constant name="TxIFG" ref="0x7f1d7425e3a0" loc="43:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1d74a34520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCLR" ref="0x7f1d7425e720" loc="44:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1d74a34520"/></typename>
          </type-int>
        </constant>
        <constant name="TxIE" ref="0x7f1d7425ea90" loc="45:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1d74a34520"/></typename>
          </type-int>
        </constant>
        <constant name="TxSSEL0" ref="0x7f1d7425ee20" loc="46:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1d74a34520"/></typename>
          </type-int>
        </constant>
        <constant name="TxSSEL1" ref="0x7f1d7425c200" loc="47:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1d74a34520"/></typename>
          </type-int>
        </constant>
        <constant name="isClockSourceAsync" ref="0x7f1d7425c5d0" loc="48:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1d747a7090"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430TimerCapComP" loc="39:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerCapComP.nc" abstract="" safe="">
      <documentation loc="33:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <constant name="TxCCTLx_addr" ref="0x7f1d74221e80" loc="40:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
          <component-ref qname="Msp430TimerCapComP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1d74a34520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCCRx_addr" ref="0x7f1d7421d270" loc="41:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
          <component-ref qname="Msp430TimerCapComP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1d74a34520"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOP" loc="39:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc" abstract="" safe="">
      <documentation loc="2:/home/hades/tinyos-new/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_in_addr" ref="0x7f1d73fa9a10" loc="40:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_out_addr" ref="0x7f1d73fa9dc0" loc="41:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_dir_addr" ref="0x7f1d73fa81a0" loc="42:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_sel_addr" ref="0x7f1d73fa8550" loc="43:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="pin" ref="0x7f1d73fa88c0" loc="44:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1d74a34160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430GpioC" loc="42:/home/hades/tinyos-new/tos/chips/msp430/pins/Msp430GpioC.nc" abstract="" safe="">
      <documentation loc="33:/home/hades/tinyos-new/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="HplCC2420AlarmC" loc="40:/home/hades/tinyos-new/tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc" abstract="">
      <documentation loc="32:/home/hades/tinyos-new/tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
        <short>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Alarm32khz32C" loc="41:/home/hades/tinyos-new/tos/chips/msp430/timer/Alarm32khz32C.nc" abstract="">
      <documentation loc="33:/home/hades/tinyos-new/tos/chips/msp430/timer/Alarm32khz32C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Alarm32khz16C" loc="41:/home/hades/tinyos-new/tos/chips/msp430/timer/Alarm32khz16C.nc" abstract="">
      <documentation loc="33:/home/hades/tinyos-new/tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430Timer32khzC" loc="37:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430Timer32khzC.nc" abstract="">
      <documentation loc="33:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430AlarmC" loc="43:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430AlarmC.nc" abstract="" safe="">
      <documentation loc="34:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x7f1d73c039d0" loc="43:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430AlarmC.nc">
          <component-ref qname="Msp430AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x7f1d73c039d0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430CounterC" loc="42:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430CounterC.nc" abstract="" safe="">
      <documentation loc="33:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x7f1d73bbf160" loc="42:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430CounterC.nc">
          <component-ref qname="Msp430CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x7f1d73bbf160"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformCounterC" loc="54:/home/hades/tinyos-new/tos/lib/timer/TransformCounterC.nc" abstract="" safe="">
      <documentation loc="34:/home/hades/tinyos-new/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x7f1d73baea60" loc="55:/home/hades/tinyos-new/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x7f1d73baea60"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x7f1d73bab290" loc="56:/home/hades/tinyos-new/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x7f1d73bab290"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x7f1d73bab680" loc="57:/home/hades/tinyos-new/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x7f1d73bab680"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x7f1d73babe60" loc="58:/home/hades/tinyos-new/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x7f1d73babe60"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x7f1d73baa260" loc="59:/home/hades/tinyos-new/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1d74a34160"/></typename>
          </type-int>
        </constant>
        <typedef name="upper_count_type" ref="0x7f1d73baaa60" loc="60:/home/hades/tinyos-new/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="upper_count_type" scoped="" ref="0x7f1d73baaa60"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformAlarmC" loc="51:/home/hades/tinyos-new/tos/lib/timer/TransformAlarmC.nc" abstract="" safe="">
      <documentation loc="34:/home/hades/tinyos-new/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x7f1d73b8ba30" loc="52:/home/hades/tinyos-new/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x7f1d73b8ba30"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x7f1d73b88290" loc="53:/home/hades/tinyos-new/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x7f1d73b88290"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x7f1d73b88680" loc="54:/home/hades/tinyos-new/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x7f1d73b88680"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x7f1d73b88e60" loc="55:/home/hades/tinyos-new/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x7f1d73b88e60"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x7f1d73b87260" loc="56:/home/hades/tinyos-new/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1d74a34160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="GpioCaptureC" loc="38:/home/hades/tinyos-new/tos/chips/msp430/timer/GpioCaptureC.nc" abstract="" safe="">
      <documentation loc="33:/home/hades/tinyos-new/tos/chips/msp430/timer/GpioCaptureC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430InterruptC" loc="43:/home/hades/tinyos-new/tos/chips/msp430/pins/Msp430InterruptC.nc" abstract="" safe="">
      <documentation loc="33:/home/hades/tinyos-new/tos/chips/msp430/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="CC2420SpiC" loc="39:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc" abstract="">
      <documentation loc="32:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="StateC" loc="65:/home/hades/tinyos-new/tos/system/StateC.nc" abstract="">
      <documentation loc="32:/home/hades/tinyos-new/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplCC2420SpiC" loc="40:/home/hades/tinyos-new/tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc" abstract="">
      <documentation loc="32:/home/hades/tinyos-new/tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
        <short>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430Spi0C" loc="79:/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430Spi0C.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430SpiNoDmaP" loc="73:/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc" abstract="">
      <documentation loc="66:/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de> (bugfix in continueOp())&#10; @version $Revision: 1.8 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430Usart0C" loc="39:/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430Usart0C.nc" abstract="">
      <documentation loc="32:/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430Usart0C.nc">
        <short>&#10; Provides an interface for USART0 on the MSP430.</short>
        <long>&#10; Provides an interface for USART0 on the MSP430.&#10;&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430UsartShareP" loc="37:/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430UsartShareP.nc" abstract="" safe="">
      <documentation loc="32:/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430UsartShareP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-26 04:39:08 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="FcfsArbiterC" loc="89:/home/hades/tinyos-new/tos/system/FcfsArbiterC.nc" abstract="">
      <documentation loc="69:/home/hades/tinyos-new/tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x7f1d73703020" loc="89:/home/hades/tinyos-new/tos/system/FcfsArbiterC.nc">
          <component-ref qname="FcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsResourceQueueC" loc="42:/home/hades/tinyos-new/tos/system/FcfsResourceQueueC.nc" abstract="" safe="">
      <parameters>
        <constant name="size" ref="0x7f1d736f70d0" loc="42:/home/hades/tinyos-new/tos/system/FcfsResourceQueueC.nc">
          <component-ref qname="FcfsResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1d74a34160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="ArbiterP" loc="52:/home/hades/tinyos-new/tos/system/ArbiterP.nc" abstract="" safe="">
      <documentation loc="30:/home/hades/tinyos-new/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="default_owner_id" ref="0x7f1d736dc800" loc="52:/home/hades/tinyos-new/tos/system/ArbiterP.nc">
          <component-ref qname="ArbiterP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1d74a34160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="BusyWaitCounterC" loc="52:/home/hades/tinyos-new/tos/lib/timer/BusyWaitCounterC.nc" abstract="">
      <documentation loc="36:/home/hades/tinyos-new/tos/lib/timer/BusyWaitCounterC.nc">
        <short>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses).</short>
        <long>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses). See TEP102 for more&#10; details.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for the&#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f1d73499400" loc="52:/home/hades/tinyos-new/tos/lib/timer/BusyWaitCounterC.nc">
          <component-ref qname="BusyWaitCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f1d73499400"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f1d73499b90" loc="52:/home/hades/tinyos-new/tos/lib/timer/BusyWaitCounterC.nc">
          <component-ref qname="BusyWaitCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f1d73499b90"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="46:/home/hades/tinyos-new/tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="36:/home/hades/tinyos-new/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f1d73276a60" loc="46:/home/hades/tinyos-new/tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f1d73276a60"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmMilli32C" loc="41:/home/hades/tinyos-new/tos/chips/msp430/timer/AlarmMilli32C.nc" abstract="">
      <documentation loc="33:/home/hades/tinyos-new/tos/chips/msp430/timer/AlarmMilli32C.nc">
        <short>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; </short>
        <long>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AlarmToTimerC" loc="46:/home/hades/tinyos-new/tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="36:/home/hades/tinyos-new/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f1d7322bcd0" loc="46:/home/hades/tinyos-new/tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f1d7322bcd0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="46:/home/hades/tinyos-new/tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="34:/home/hades/tinyos-new/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f1d731f5230" loc="46:/home/hades/tinyos-new/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f1d731f5230"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x7f1d731f5560" loc="46:/home/hades/tinyos-new/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="44:/home/hades/tinyos-new/tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="33:/home/hades/tinyos-new/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMSenderC" loc="47:/home/hades/tinyos-new/tos/system/AMSenderC.nc" abstract="">
      <documentation loc="33:/home/hades/tinyos-new/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x7f1d72f90a10" loc="47:/home/hades/tinyos-new/tos/system/AMSenderC.nc">
          <component-ref qname="AMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f1d740e7d50"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="DirectAMSenderC" loc="47:/home/hades/tinyos-new/tos/system/DirectAMSenderC.nc" abstract="">
      <documentation loc="33:/home/hades/tinyos-new/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x7f1d72f896b0" loc="47:/home/hades/tinyos-new/tos/system/DirectAMSenderC.nc">
          <component-ref qname="DirectAMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f1d740e7d50"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMQueueEntryP" loc="43:/home/hades/tinyos-new/tos/system/AMQueueEntryP.nc" abstract="" safe="">
      <documentation loc="33:/home/hades/tinyos-new/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x7f1d72f80320" loc="43:/home/hades/tinyos-new/tos/system/AMQueueEntryP.nc">
          <component-ref qname="AMQueueEntryP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f1d740e7d50"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMQueueImplP" loc="45:/home/hades/tinyos-new/tos/system/AMQueueImplP.nc" abstract="" safe="">
      <documentation loc="33:/home/hades/tinyos-new/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="numClients" ref="0x7f1d72f66c90" loc="45:/home/hades/tinyos-new/tos/system/AMQueueImplP.nc">
          <component-ref qname="AMQueueImplP"/>
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430InternalVoltageC" loc="43:/home/hades/tinyos-new/tos/chips/msp430/sensors/Msp430InternalVoltageC.nc" abstract="">
      <documentation loc="32:/home/hades/tinyos-new/tos/chips/msp430/sensors/Msp430InternalVoltageC.nc">
        <short>&#10; Msp430InternalVoltageC is the voltage sensor available on the&#10; msp430-based platforms.</short>
        <long>&#10; Msp430InternalVoltageC is the voltage sensor available on the&#10; msp430-based platforms.&#10;&#10; To convert from ADC counts to actual voltage, divide by 4096 and&#10; multiply by 3.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:10 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AdcReadClientC" loc="47:/home/hades/tinyos-new/tos/chips/msp430/adc12/AdcReadClientC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430Adc12ClientAutoRVGC" loc="43:/home/hades/tinyos-new/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc" abstract="">
      <documentation loc="33:/home/hades/tinyos-new/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
        <short> &#10; This component virtualizes access to the HAL of the MSP430 ADC12.</short>
        <long> &#10; This component virtualizes access to the HAL of the MSP430 ADC12.&#10; Reference voltage is enabled automatically as required by the configuration.&#10; &#10; @author Jan Hauer &#10;&#10; @see  Please refer to the README.txt and TEP 101 for more information about&#10; this component and its intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="SimpleRoundRobinArbiterC" loc="83:/home/hades/tinyos-new/tos/system/SimpleRoundRobinArbiterC.nc" abstract="">
      <documentation loc="62:/home/hades/tinyos-new/tos/system/SimpleRoundRobinArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x7f1d72d1e850" loc="83:/home/hades/tinyos-new/tos/system/SimpleRoundRobinArbiterC.nc">
          <component-ref qname="SimpleRoundRobinArbiterC"/>
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="RoundRobinResourceQueueC" loc="42:/home/hades/tinyos-new/tos/system/RoundRobinResourceQueueC.nc" abstract="" safe="">
      <documentation loc="33:/home/hades/tinyos-new/tos/system/RoundRobinResourceQueueC.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.7 $&#10; @date $Date: 2010-06-29 22:07:56 $&#10;</long>
      </documentation>
      <parameters>
        <constant name="size" ref="0x7f1d72d153d0" loc="42:/home/hades/tinyos-new/tos/system/RoundRobinResourceQueueC.nc">
          <component-ref qname="RoundRobinResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1d74a34160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SimpleArbiterP" loc="49:/home/hades/tinyos-new/tos/system/SimpleArbiterP.nc" abstract="" safe="">
      <documentation loc="30:/home/hades/tinyos-new/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430Adc12ConfAlertC" loc="42:/home/hades/tinyos-new/tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc" abstract="">
      <documentation loc="33:/home/hades/tinyos-new/tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
        <short> &#10; The only purpose of this component is to generate a nesC warning&#10; if someone has wired to Msp430Adc12ClientAutoRVGC or &#10; Msp430Adc12ClientAutoDMA_RVGC and forgotten to wire to AdcConfigure.</short>
        <long> &#10; The only purpose of this component is to generate a nesC warning&#10; if someone has wired to Msp430Adc12ClientAutoRVGC or &#10; Msp430Adc12ClientAutoDMA_RVGC and forgotten to wire to AdcConfigure.&#10; (nesC optimizes all of its code away).&#10;&#10; @author: Jan Hauer&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="AdcReadStreamClientC" loc="47:/home/hades/tinyos-new/tos/chips/msp430/adc12/AdcReadStreamClientC.nc" abstract="">
      <documentation loc="36:/home/hades/tinyos-new/tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
        <short> &#10; This component virtualizes the HIL of ADC12 on MSP430.</short>
        <long> &#10; This component virtualizes the HIL of ADC12 on MSP430. A client must wire&#10; &#60;code>AdcConfigure&#60;/code> to a component that returns the client's adc&#10; configuration data.&#10;&#10; @author Jan Hauer &#10; @see  Please refer to the README.txt and TEP 101 for more information about &#10; this component and its intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="ArbitratedReadStreamC" loc="23:/home/hades/tinyos-new/tos/system/ArbitratedReadStreamC.nc" abstract="">
      <documentation loc="10:/home/hades/tinyos-new/tos/system/ArbitratedReadStreamC.nc">
        <short>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.</short>
        <long>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.&#10;&#10; Note that this code does not deal with unexpected events: it assumes&#10; that all events it receives are in response to commands that it&#10; made. See tos/chips/atm128/adc for an example of using&#10; ArbitratedReadStreamC in a safe way.&#10;&#10; @param width_t Width of the underlying ReadStream interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <constant name="nClients" ref="0x7f1d72b44670" loc="23:/home/hades/tinyos-new/tos/system/ArbitratedReadStreamC.nc">
          <component-ref qname="ArbitratedReadStreamC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1d74a34160"/></typename>
          </type-int>
        </constant>
        <typedef name="val_t" ref="0x7f1d72b449c0" loc="23:/home/hades/tinyos-new/tos/system/ArbitratedReadStreamC.nc">
          <component-ref qname="ArbitratedReadStreamC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f1d72b449c0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="AdcReadNowClientC" loc="47:/home/hades/tinyos-new/tos/chips/msp430/adc12/AdcReadNowClientC.nc" abstract="">
      <documentation loc="36:/home/hades/tinyos-new/tos/chips/msp430/adc12/AdcReadNowClientC.nc">
        <short> &#10; This component virtualizes the HIL of ADC12 on MSP430.</short>
        <long> &#10; This component virtualizes the HIL of ADC12 on MSP430. A client must wire&#10; &#60;code>AdcConfigure&#60;/code> to a component that returns the client's adc&#10; configuration data.&#10;&#10; @author Jan Hauer &#10; @see  Please refer to the README.txt and TEP 101 for more information about &#10; this component and its intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="SensirionSht11C" loc="45:/home/hades/tinyos-new/tos/platforms/telosa/chips/sht11/SensirionSht11C.nc" abstract="">
      <documentation loc="32:/home/hades/tinyos-new/tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
        <short>&#10; SensirionSht11C is a top-level access component for the Sensirion&#10; SHT11 model humidity and temperature sensor, available on the&#10; telosb platform.</short>
        <long>&#10; SensirionSht11C is a top-level access component for the Sensirion&#10; SHT11 model humidity and temperature sensor, available on the&#10; telosb platform. Because this component represents one physical&#10; device, simultaneous calls to read temperature and humidity will be&#10; arbitrated and executed in sequential order. Feel free to read both&#10; at the same time, just be aware that they'll come back&#10; sequentially.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2007-04-13 21:46:18 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="SensirionSht11ReaderP" loc="45:/home/hades/tinyos-new/tos/chips/sht11/SensirionSht11ReaderP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SensirionSht11LogicP" loc="53:/home/hades/tinyos-new/tos/chips/sht11/SensirionSht11LogicP.nc" abstract="">
      <documentation loc="35:/home/hades/tinyos-new/tos/chips/sht11/SensirionSht11LogicP.nc">
        <short>&#10; SensirionSht11LogicP contains the actual driver logic needed to&#10; read from the Sensirion SHT11 temperature/humidity sensor.</short>
        <long>&#10; SensirionSht11LogicP contains the actual driver logic needed to&#10; read from the Sensirion SHT11 temperature/humidity sensor. It&#10; depends on 2 underlying GeneralIO interfaces, one for the data pin&#10; and one for the clock pin, and one underlying GpioInterrupt.  It&#10; provides the HAL-level SensirionSht11 interface. It's generic, so&#10; you can instantiate it multiple times if you have more than one&#10; Sensirion SHT11 attached to a node. &#10; &#10; &#60;p>&#10; This code assumes that the MCU clock is less than 10 MHz.  If you&#10; ever run this on a faster MCU, you'll need to insert a lot of&#10; waits to keep the Sensirion happy.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:12 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SplitControlPowerManagerC" loc="67:/home/hades/tinyos-new/tos/lib/power/SplitControlPowerManagerC.nc" abstract="">
      <documentation loc="41:/home/hades/tinyos-new/tos/lib/power/SplitControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices.  Non-virtualized devices are shared&#10; using a parameterized Resource interface, and are powered down according&#10; to some policy whenever there are no more pending requests to that Resource.&#10; The policy implemented by this component is to delay the power down of a&#10; device by some contant factor.  Such a policy is useful whenever a device&#10; has a long wake-up latency.  The cost of waiting for the device to power&#10; up can be avoided if the device is requested again before some predetermined&#10; amount of time.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>SplitControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>AsyncStdControl&#60;/code> or&#10; &#60;code>StdControl&#60;/code> interfaces, please use either the&#10; &#60;code>AsyncStdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="PowerManagerP" loc="58:/home/hades/tinyos-new/tos/lib/power/PowerManagerP.nc" abstract="">
      <documentation loc="41:/home/hades/tinyos-new/tos/lib/power/PowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="HamamatsuS1087ParC" loc="40:/home/hades/tinyos-new/tos/platforms/telosa/chips/s1087/HamamatsuS1087ParC.nc" abstract="">
      <documentation loc="32:/home/hades/tinyos-new/tos/platforms/telosa/chips/s1087/HamamatsuS1087ParC.nc">
        <short>&#10; HamamatsuS1087ParC is a driver for a photosynthetically-active&#10; radiation sensor available on the telosb platform.</short>
        <long>&#10; HamamatsuS1087ParC is a driver for a photosynthetically-active&#10; radiation sensor available on the telosb platform. &#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2007-04-13 21:46:18 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="HamamatsuS10871TsrC" loc="40:/home/hades/tinyos-new/tos/platforms/telosa/chips/s10871/HamamatsuS10871TsrC.nc" abstract="">
      <documentation loc="32:/home/hades/tinyos-new/tos/platforms/telosa/chips/s10871/HamamatsuS10871TsrC.nc">
        <short>&#10; HamamatsuS10871TsrC is a driver for a total solar radiation sensor&#10; available on the telosb platform.</short>
        <long>&#10; HamamatsuS10871TsrC is a driver for a total solar radiation sensor&#10; available on the telosb platform.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2007-04-13 21:46:18 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="SoftwareInit" ref="0x7f1d7430f160" loc="58:/home/hades/tinyos-new/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SoftwareInit" scoped="" ref="0x7f1d7430f160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1d7430f4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x7f1d74312c10" loc="57:/home/hades/tinyos-new/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x7f1d74312c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7f1d74311020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f1d7430c130" loc="42:/home/hades/tinyos-new/tos/platforms/telosa/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f1d7430c130"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1d7430c4b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0x7f1d74308190" loc="6:/home/hades/tinyos-new/tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteInit" scoped="" ref="0x7f1d74308190"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1d74308510"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f1d74309360" loc="4:/home/hades/tinyos-new/tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f1d74309360"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1d743096e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteClockInit" ref="0x7f1d74309a70" loc="5:/home/hades/tinyos-new/tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteClockInit" scoped="" ref="0x7f1d74309a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1d74309df0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LedsInit" ref="0x7f1d74308870" loc="7:/home/hades/tinyos-new/tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LedsInit" scoped="" ref="0x7f1d74308870"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1d74308bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f1d743024a0" loc="2:/home/hades/tinyos-new/tos/platforms/telosb/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f1d743024a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1d74302820"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MoteClockInit" ref="0x7f1d7430a910" loc="39:/home/hades/tinyos-new/tos/platforms/telosb/MoteClockC.nc">
      <component-ref qname="MoteClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteClockInit" scoped="" ref="0x7f1d7430a910"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1d7430ac90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430ClockInit" ref="0x7f1d742e1de0" loc="40:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430ClockC.nc">
      <component-ref qname="Msp430ClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x7f1d742e1de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x7f1d742e6c70"/>
        <function-ref name="initTimerB" scoped="" ref="0x7f1d742e6310"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x7f1d742e64a0"/>
        <function-ref name="initTimerA" scoped="" ref="0x7f1d742e6630"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x7f1d742e6180"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x7f1d742e67c0"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x7f1d742e6950"/>
        <function-ref name="initClocks" scoped="" ref="0x7f1d742e6ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f1d742ea850" loc="39:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430ClockC.nc">
      <component-ref qname="Msp430ClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f1d742ea850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1d742eabd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430ClockInit" ref="0x7f1d742d0020" loc="46:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x7f1d742d0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x7f1d742cf020"/>
        <function-ref name="initTimerB" scoped="" ref="0x7f1d742d0530"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x7f1d742d06c0"/>
        <function-ref name="initTimerA" scoped="" ref="0x7f1d742d0850"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x7f1d742d03a0"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x7f1d742d09e0"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x7f1d742d0b70"/>
        <function-ref name="initClocks" scoped="" ref="0x7f1d742d0d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x7f1d742cf360" loc="47:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerOverride" scoped="" ref="0x7f1d742cf360"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x7f1d742cf6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f1d742d17e0" loc="45:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f1d742d17e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1d742d1b60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA2" ref="0x7f1d7428c5a0" loc="42:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA2" scoped="" ref="0x7f1d7428c5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f1d7428c920"/>
        <function-ref name="getControl" scoped="" ref="0x7f1d7428cab0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1d7428cc40"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f1d7428cdd0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f1d7428b020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1d7428b1b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f1d7428b340"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f1d7428b4d0"/>
        <function-ref name="setControl" scoped="" ref="0x7f1d7428b660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB0" ref="0x7f1d7427a020" loc="51:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB0" scoped="" ref="0x7f1d7427a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f1d7427a3a0"/>
        <function-ref name="getControl" scoped="" ref="0x7f1d7427a530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1d7427a6c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f1d7427a850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f1d7427a9e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1d7427ab70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f1d7427ad00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f1d74279020"/>
        <function-ref name="setControl" scoped="" ref="0x7f1d742791b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA1" ref="0x7f1d74283700" loc="47:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA1" scoped="" ref="0x7f1d74283700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1d74283a80"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f1d74283c10"/>
        <function-ref name="captured" scoped="" ref="0x7f1d74283da0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1d74282020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1d742821b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f1d74282340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB3" ref="0x7f1d74267a20" loc="68:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB3" scoped="" ref="0x7f1d74267a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1d74267da0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f1d74266020"/>
        <function-ref name="captured" scoped="" ref="0x7f1d742661b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1d74266340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1d742664d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f1d74266660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA1" ref="0x7f1d7428aaa0" loc="44:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA1" scoped="" ref="0x7f1d7428aaa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1d7428ae20"/>
        <function-ref name="setEvent" scoped="" ref="0x7f1d74289020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f1d742891b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f1d74289340"/>
        <function-ref name="fired" scoped="" ref="0x7f1d742894d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB3" ref="0x7f1d7426d020" loc="61:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB3" scoped="" ref="0x7f1d7426d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1d7426d3a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f1d7426d530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f1d7426d6c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f1d7426d850"/>
        <function-ref name="fired" scoped="" ref="0x7f1d7426d9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB6" ref="0x7f1d74264a20" loc="71:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB6" scoped="" ref="0x7f1d74264a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1d74264da0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f1d74263020"/>
        <function-ref name="captured" scoped="" ref="0x7f1d742631b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1d74263340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1d742634d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f1d74263660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB4" ref="0x7f1d742755a0" loc="55:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB4" scoped="" ref="0x7f1d742755a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f1d74275920"/>
        <function-ref name="getControl" scoped="" ref="0x7f1d74275ab0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1d74275c40"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f1d74275dd0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f1d74273020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1d742731b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f1d74273340"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f1d742734d0"/>
        <function-ref name="setControl" scoped="" ref="0x7f1d74273660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA0" ref="0x7f1d7428db10" loc="40:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA0" scoped="" ref="0x7f1d7428db10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f1d74294020"/>
        <function-ref name="getControl" scoped="" ref="0x7f1d742941b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1d74294340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f1d742944d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f1d74294660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1d742947f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f1d74294980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f1d74294b10"/>
        <function-ref name="setControl" scoped="" ref="0x7f1d74294ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB1" ref="0x7f1d74269a20" loc="66:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB1" scoped="" ref="0x7f1d74269a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1d74269da0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f1d74268020"/>
        <function-ref name="captured" scoped="" ref="0x7f1d742681b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1d74268340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1d742684d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f1d74268660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB1" ref="0x7f1d7426f3e0" loc="59:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB1" scoped="" ref="0x7f1d7426f3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1d7426f760"/>
        <function-ref name="setEvent" scoped="" ref="0x7f1d7426f8f0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f1d7426fa80"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f1d7426fc10"/>
        <function-ref name="fired" scoped="" ref="0x7f1d7426fda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB1" ref="0x7f1d742795a0" loc="52:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB1" scoped="" ref="0x7f1d742795a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f1d74279a20"/>
        <function-ref name="getControl" scoped="" ref="0x7f1d74279bb0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1d74279d40"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f1d74278020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f1d742781b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1d74278340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f1d742784d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f1d74278660"/>
        <function-ref name="setControl" scoped="" ref="0x7f1d742787f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA2" ref="0x7f1d74282700" loc="48:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA2" scoped="" ref="0x7f1d74282700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1d74282a80"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f1d74282c10"/>
        <function-ref name="captured" scoped="" ref="0x7f1d74282da0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1d7427c020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1d7427c1b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f1d7427c340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB4" ref="0x7f1d74266a20" loc="69:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB4" scoped="" ref="0x7f1d74266a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1d74266da0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f1d74265020"/>
        <function-ref name="captured" scoped="" ref="0x7f1d742651b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1d74265340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1d742654d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f1d74265660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB2" ref="0x7f1d74278be0" loc="53:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB2" scoped="" ref="0x7f1d74278be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f1d74277020"/>
        <function-ref name="getControl" scoped="" ref="0x7f1d742771b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1d74277340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f1d742774d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f1d74277660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1d742777f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f1d74277980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f1d74277b10"/>
        <function-ref name="setControl" scoped="" ref="0x7f1d74277ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA2" ref="0x7f1d74289890" loc="45:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA2" scoped="" ref="0x7f1d74289890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1d74289c10"/>
        <function-ref name="setEvent" scoped="" ref="0x7f1d74289da0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f1d74284020"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f1d742841b0"/>
        <function-ref name="fired" scoped="" ref="0x7f1d74284340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerA" ref="0x7f1d7429d060" loc="39:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerA" scoped="" ref="0x7f1d7429d060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1d7429d3e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f1d7429d570"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1d7429d700"/>
        <function-ref name="get" scoped="" ref="0x7f1d7429d890"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1d7429da20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1d7429dbb0"/>
        <function-ref name="getMode" scoped="" ref="0x7f1d7429dd40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1d7429c020"/>
        <function-ref name="overflow" scoped="" ref="0x7f1d7429c1b0"/>
        <function-ref name="setMode" scoped="" ref="0x7f1d7429c340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f1d7429c4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB4" ref="0x7f1d7426dda0" loc="62:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB4" scoped="" ref="0x7f1d7426dda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1d7426c180"/>
        <function-ref name="setEvent" scoped="" ref="0x7f1d7426c310"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f1d7426c4a0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f1d7426c630"/>
        <function-ref name="fired" scoped="" ref="0x7f1d7426c7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA1" ref="0x7f1d742930c0" loc="41:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA1" scoped="" ref="0x7f1d742930c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f1d74293440"/>
        <function-ref name="getControl" scoped="" ref="0x7f1d742935d0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1d74293760"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f1d742938f0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f1d74293a80"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1d74293c10"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f1d74293da0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f1d7428c020"/>
        <function-ref name="setControl" scoped="" ref="0x7f1d7428c1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB5" ref="0x7f1d74273a50" loc="56:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB5" scoped="" ref="0x7f1d74273a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f1d74273dd0"/>
        <function-ref name="getControl" scoped="" ref="0x7f1d74272020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1d742721b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f1d74272340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f1d742724d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1d74272660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f1d742727f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f1d74272980"/>
        <function-ref name="setControl" scoped="" ref="0x7f1d74272b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA0" ref="0x7f1d7427d6d0" loc="46:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA0" scoped="" ref="0x7f1d7427d6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1d7427da50"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f1d7427dbe0"/>
        <function-ref name="captured" scoped="" ref="0x7f1d7427dd70"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1d74283020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1d742831b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f1d74283340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB2" ref="0x7f1d74268a20" loc="67:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB2" scoped="" ref="0x7f1d74268a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1d74268da0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f1d74267020"/>
        <function-ref name="captured" scoped="" ref="0x7f1d742671b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1d74267340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1d742674d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f1d74267660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA0" ref="0x7f1d74285cf0" loc="43:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA0" scoped="" ref="0x7f1d74285cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1d7428a0a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f1d7428a230"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f1d7428a3c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f1d7428a550"/>
        <function-ref name="fired" scoped="" ref="0x7f1d7428a6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB2" ref="0x7f1d7426e1f0" loc="60:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB2" scoped="" ref="0x7f1d7426e1f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1d7426e570"/>
        <function-ref name="setEvent" scoped="" ref="0x7f1d7426e700"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f1d7426e890"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f1d7426ea20"/>
        <function-ref name="fired" scoped="" ref="0x7f1d7426ebb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB5" ref="0x7f1d74265a20" loc="70:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB5" scoped="" ref="0x7f1d74265a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1d74265da0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f1d74264020"/>
        <function-ref name="captured" scoped="" ref="0x7f1d742641b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1d74264340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1d742644d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f1d74264660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB3" ref="0x7f1d742760c0" loc="54:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB3" scoped="" ref="0x7f1d742760c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f1d74276440"/>
        <function-ref name="getControl" scoped="" ref="0x7f1d742765d0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1d74276760"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f1d742768f0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f1d74276a80"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1d74276c10"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f1d74276da0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f1d74275020"/>
        <function-ref name="setControl" scoped="" ref="0x7f1d742751b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerB" ref="0x7f1d7427c6c0" loc="50:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerB" scoped="" ref="0x7f1d7427c6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1d7427ca40"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f1d7427cbd0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1d7427cd60"/>
        <function-ref name="get" scoped="" ref="0x7f1d7427b020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1d7427b1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1d7427b340"/>
        <function-ref name="getMode" scoped="" ref="0x7f1d7427b4d0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1d7427b660"/>
        <function-ref name="overflow" scoped="" ref="0x7f1d7427b7f0"/>
        <function-ref name="setMode" scoped="" ref="0x7f1d7427b980"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f1d7427bb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB5" ref="0x7f1d7426cb80" loc="63:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB5" scoped="" ref="0x7f1d7426cb80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1d7426b020"/>
        <function-ref name="setEvent" scoped="" ref="0x7f1d7426b1b0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f1d7426b340"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f1d7426b4d0"/>
        <function-ref name="fired" scoped="" ref="0x7f1d7426b660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB0" ref="0x7f1d7426aa20" loc="65:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB0" scoped="" ref="0x7f1d7426aa20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1d7426ada0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f1d74269020"/>
        <function-ref name="captured" scoped="" ref="0x7f1d742691b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1d74269340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1d742694d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f1d74269660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB6" ref="0x7f1d7426ba20" loc="64:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB6" scoped="" ref="0x7f1d7426ba20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1d7426a020"/>
        <function-ref name="setEvent" scoped="" ref="0x7f1d7426a1b0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f1d7426a340"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f1d7426a4d0"/>
        <function-ref name="fired" scoped="" ref="0x7f1d7426a660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB0" ref="0x7f1d74270570" loc="58:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB0" scoped="" ref="0x7f1d74270570"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1d742708f0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f1d74270a80"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f1d74270c10"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f1d74270da0"/>
        <function-ref name="fired" scoped="" ref="0x7f1d7426f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB6" ref="0x7f1d74271020" loc="57:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB6" scoped="" ref="0x7f1d74271020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f1d742713a0"/>
        <function-ref name="getControl" scoped="" ref="0x7f1d74271530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1d742716c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f1d74271850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f1d742719e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1d74271b70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f1d74271d00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f1d74270020"/>
        <function-ref name="setControl" scoped="" ref="0x7f1d742701b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX0" ref="0x7f1d7422baa0" loc="53:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX0" scoped="" ref="0x7f1d7422baa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1d7422be20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Overflow" ref="0x7f1d7422b450" loc="52:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x7f1d7422b450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1d7422b7d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX1" ref="0x7f1d7422a120" loc="54:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX1" scoped="" ref="0x7f1d7422a120"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1d7422a4a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Event" ref="0x7f1d7422cd80" loc="51:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f1d7422cd80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1d74a34160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1d7422b180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f1d7422d540" loc="50:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f1d7422d540"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1d7422d8c0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f1d7422da50"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1d7422dbe0"/>
        <function-ref name="get" scoped="" ref="0x7f1d7422dd70"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1d7422c020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1d7422c1b0"/>
        <function-ref name="getMode" scoped="" ref="0x7f1d7422c340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1d7422c4d0"/>
        <function-ref name="overflow" scoped="" ref="0x7f1d7422c660"/>
        <function-ref name="setMode" scoped="" ref="0x7f1d7422c7f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f1d7422c980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX0" ref="0x7f1d74223940" loc="53:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX0" scoped="" ref="0x7f1d74223940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1d74223cc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Overflow" ref="0x7f1d742232f0" loc="52:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x7f1d742232f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1d74223670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX1" ref="0x7f1d74222020" loc="54:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX1" scoped="" ref="0x7f1d74222020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1d742223a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Event" ref="0x7f1d74224bf0" loc="51:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f1d74224bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1d74a34160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1d74223020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f1d742253e0" loc="50:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f1d742253e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1d74225760"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f1d742258f0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1d74225a80"/>
        <function-ref name="get" scoped="" ref="0x7f1d74225c10"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1d74225da0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1d74224020"/>
        <function-ref name="getMode" scoped="" ref="0x7f1d742241b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1d74224340"/>
        <function-ref name="overflow" scoped="" ref="0x7f1d742244d0"/>
        <function-ref name="setMode" scoped="" ref="0x7f1d74224660"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f1d742247f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f1d741d6a90" loc="46:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f1d741d6a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1d741d6e10"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f1d741d5020"/>
        <function-ref name="captured" scoped="" ref="0x7f1d741d51b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1d741d5340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1d741d54d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f1d741d5660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f1d7421f9d0" loc="44:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f1d7421f9d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f1d7421fd50"/>
        <function-ref name="getControl" scoped="" ref="0x7f1d741d7020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1d741d71b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f1d741d7340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f1d741d74d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1d741d7660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f1d741d77f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f1d741d7980"/>
        <function-ref name="setControl" scoped="" ref="0x7f1d741d7b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f1d741d3020" loc="48:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f1d741d3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1d741d33a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f1d741d7de0" loc="45:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f1d741d7de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1d741d6180"/>
        <function-ref name="setEvent" scoped="" ref="0x7f1d741d6310"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f1d741d64a0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f1d741d6630"/>
        <function-ref name="fired" scoped="" ref="0x7f1d741d67c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f1d741d5930" loc="47:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f1d741d5930"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1d741d5cb0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f1d741d5e40"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1d741d4020"/>
        <function-ref name="get" scoped="" ref="0x7f1d741d41b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1d741d4340"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1d741d44d0"/>
        <function-ref name="getMode" scoped="" ref="0x7f1d741d4660"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1d741d47f0"/>
        <function-ref name="overflow" scoped="" ref="0x7f1d741d4980"/>
        <function-ref name="setMode" scoped="" ref="0x7f1d741d4b10"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f1d741d4ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f1d741ce160" loc="46:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f1d741ce160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1d741ce4e0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f1d741ce670"/>
        <function-ref name="captured" scoped="" ref="0x7f1d741ce800"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1d741ce990"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1d741ceb20"/>
        <function-ref name="setEdge" scoped="" ref="0x7f1d741cecb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f1d741d0020" loc="44:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f1d741d0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f1d741d03a0"/>
        <function-ref name="getControl" scoped="" ref="0x7f1d741d0530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1d741d06c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f1d741d0850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f1d741d09e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1d741d0b70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f1d741d0d00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f1d741cf020"/>
        <function-ref name="setControl" scoped="" ref="0x7f1d741cf1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f1d741cc7a0" loc="48:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f1d741cc7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1d741ccb20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f1d741cf480" loc="45:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f1d741cf480"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1d741cf800"/>
        <function-ref name="setEvent" scoped="" ref="0x7f1d741cf990"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f1d741cfb20"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f1d741cfcb0"/>
        <function-ref name="fired" scoped="" ref="0x7f1d741cfe40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f1d741cd020" loc="47:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f1d741cd020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1d741cd3a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f1d741cd530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1d741cd6c0"/>
        <function-ref name="get" scoped="" ref="0x7f1d741cd850"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1d741cd9e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1d741cdb70"/>
        <function-ref name="getMode" scoped="" ref="0x7f1d741cdd00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1d741cc020"/>
        <function-ref name="overflow" scoped="" ref="0x7f1d741cc1b0"/>
        <function-ref name="setMode" scoped="" ref="0x7f1d741cc340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f1d741cc4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f1d741c67a0" loc="46:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f1d741c67a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1d741c6b20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f1d741c6cb0"/>
        <function-ref name="captured" scoped="" ref="0x7f1d741c6e40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1d741c5020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1d741c51b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f1d741c5340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f1d741c86d0" loc="44:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f1d741c86d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f1d741c8a50"/>
        <function-ref name="getControl" scoped="" ref="0x7f1d741c8be0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1d741c8d70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f1d741c7020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f1d741c71b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1d741c7340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f1d741c74d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f1d741c7660"/>
        <function-ref name="setControl" scoped="" ref="0x7f1d741c77f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f1d741c4c50" loc="48:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f1d741c4c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1d741c3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f1d741c7ac0" loc="45:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f1d741c7ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1d741c7e40"/>
        <function-ref name="setEvent" scoped="" ref="0x7f1d741c6020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f1d741c61b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f1d741c6340"/>
        <function-ref name="fired" scoped="" ref="0x7f1d741c64d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f1d741c5610" loc="47:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f1d741c5610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1d741c5990"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f1d741c5b20"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1d741c5cb0"/>
        <function-ref name="get" scoped="" ref="0x7f1d741c5e40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1d741c4020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1d741c41b0"/>
        <function-ref name="getMode" scoped="" ref="0x7f1d741c4340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1d741c44d0"/>
        <function-ref name="overflow" scoped="" ref="0x7f1d741c4660"/>
        <function-ref name="setMode" scoped="" ref="0x7f1d741c47f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f1d741c4980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f1d741bfcb0" loc="46:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f1d741bfcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1d741be0a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f1d741be230"/>
        <function-ref name="captured" scoped="" ref="0x7f1d741be3c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1d741be550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1d741be6e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f1d741be870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f1d741c1b30" loc="44:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f1d741c1b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f1d741c0020"/>
        <function-ref name="getControl" scoped="" ref="0x7f1d741c01b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1d741c0340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f1d741c04d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f1d741c0660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1d741c07f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f1d741c0980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f1d741c0b10"/>
        <function-ref name="setControl" scoped="" ref="0x7f1d741c0ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f1d741bc2f0" loc="48:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f1d741bc2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1d741bc670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f1d741bf020" loc="45:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f1d741bf020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1d741bf3a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f1d741bf530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f1d741bf6c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f1d741bf850"/>
        <function-ref name="fired" scoped="" ref="0x7f1d741bf9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f1d741beb40" loc="47:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f1d741beb40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1d741bd020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f1d741bd1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1d741bd340"/>
        <function-ref name="get" scoped="" ref="0x7f1d741bd4d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1d741bd660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1d741bd7f0"/>
        <function-ref name="getMode" scoped="" ref="0x7f1d741bd980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1d741bdb10"/>
        <function-ref name="overflow" scoped="" ref="0x7f1d741bdca0"/>
        <function-ref name="setMode" scoped="" ref="0x7f1d741bde30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f1d741bc020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f1d741b62f0" loc="46:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f1d741b62f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1d741b6670"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f1d741b6800"/>
        <function-ref name="captured" scoped="" ref="0x7f1d741b6990"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1d741b6b20"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1d741b6cb0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f1d741b6e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f1d741b8220" loc="44:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f1d741b8220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f1d741b85a0"/>
        <function-ref name="getControl" scoped="" ref="0x7f1d741b8730"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1d741b88c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f1d741b8a50"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f1d741b8be0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1d741b8d70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f1d741b7020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f1d741b71b0"/>
        <function-ref name="setControl" scoped="" ref="0x7f1d741b7340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f1d741b47a0" loc="48:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f1d741b47a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1d741b4b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f1d741b7610" loc="45:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f1d741b7610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1d741b7990"/>
        <function-ref name="setEvent" scoped="" ref="0x7f1d741b7b20"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f1d741b7cb0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f1d741b7e40"/>
        <function-ref name="fired" scoped="" ref="0x7f1d741b6020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f1d741b5160" loc="47:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f1d741b5160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1d741b54e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f1d741b5670"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1d741b5800"/>
        <function-ref name="get" scoped="" ref="0x7f1d741b5990"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1d741b5b20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1d741b5cb0"/>
        <function-ref name="getMode" scoped="" ref="0x7f1d741b5e40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1d741b4020"/>
        <function-ref name="overflow" scoped="" ref="0x7f1d741b41b0"/>
        <function-ref name="setMode" scoped="" ref="0x7f1d741b4340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f1d741b44d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f1d741af7a0" loc="46:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f1d741af7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1d741afb20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f1d741afcb0"/>
        <function-ref name="captured" scoped="" ref="0x7f1d741afe40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1d741ae020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1d741ae1b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f1d741ae340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f1d741b16d0" loc="44:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f1d741b16d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f1d741b1a50"/>
        <function-ref name="getControl" scoped="" ref="0x7f1d741b1be0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1d741b1d70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f1d741b0020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f1d741b01b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1d741b0340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f1d741b04d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f1d741b0660"/>
        <function-ref name="setControl" scoped="" ref="0x7f1d741b07f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f1d741adc50" loc="48:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f1d741adc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1d741ac020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f1d741b0ac0" loc="45:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f1d741b0ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1d741b0e40"/>
        <function-ref name="setEvent" scoped="" ref="0x7f1d741af020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f1d741af1b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f1d741af340"/>
        <function-ref name="fired" scoped="" ref="0x7f1d741af4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f1d741ae610" loc="47:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f1d741ae610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1d741ae990"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f1d741aeb20"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1d741aecb0"/>
        <function-ref name="get" scoped="" ref="0x7f1d741aee40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1d741ad020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1d741ad1b0"/>
        <function-ref name="getMode" scoped="" ref="0x7f1d741ad340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1d741ad4d0"/>
        <function-ref name="overflow" scoped="" ref="0x7f1d741ad660"/>
        <function-ref name="setMode" scoped="" ref="0x7f1d741ad7f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f1d741ad980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f1d741a7cb0" loc="46:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f1d741a7cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1d741a60a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f1d741a6230"/>
        <function-ref name="captured" scoped="" ref="0x7f1d741a63c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1d741a6550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1d741a66e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f1d741a6870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f1d741a9b30" loc="44:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f1d741a9b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f1d741a8020"/>
        <function-ref name="getControl" scoped="" ref="0x7f1d741a81b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1d741a8340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f1d741a84d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f1d741a8660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1d741a87f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f1d741a8980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f1d741a8b10"/>
        <function-ref name="setControl" scoped="" ref="0x7f1d741a8ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f1d741a42f0" loc="48:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f1d741a42f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1d741a4670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f1d741a7020" loc="45:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f1d741a7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1d741a73a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f1d741a7530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f1d741a76c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f1d741a7850"/>
        <function-ref name="fired" scoped="" ref="0x7f1d741a79e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f1d741a6b40" loc="47:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f1d741a6b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1d741a5020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f1d741a51b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1d741a5340"/>
        <function-ref name="get" scoped="" ref="0x7f1d741a54d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1d741a5660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1d741a57f0"/>
        <function-ref name="getMode" scoped="" ref="0x7f1d741a5980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1d741a5b10"/>
        <function-ref name="overflow" scoped="" ref="0x7f1d741a5ca0"/>
        <function-ref name="setMode" scoped="" ref="0x7f1d741a5e30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f1d741a4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f1d7419f2f0" loc="46:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f1d7419f2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1d7419f670"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f1d7419f800"/>
        <function-ref name="captured" scoped="" ref="0x7f1d7419f990"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1d7419fb20"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1d7419fcb0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f1d7419fe40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f1d741a1220" loc="44:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f1d741a1220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f1d741a15a0"/>
        <function-ref name="getControl" scoped="" ref="0x7f1d741a1730"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1d741a18c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f1d741a1a50"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f1d741a1be0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1d741a1d70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f1d741a0020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f1d741a01b0"/>
        <function-ref name="setControl" scoped="" ref="0x7f1d741a0340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f1d7419d7a0" loc="48:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f1d7419d7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1d7419db20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f1d741a0610" loc="45:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f1d741a0610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1d741a0990"/>
        <function-ref name="setEvent" scoped="" ref="0x7f1d741a0b20"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f1d741a0cb0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f1d741a0e40"/>
        <function-ref name="fired" scoped="" ref="0x7f1d7419f020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f1d7419e160" loc="47:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f1d7419e160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1d7419e4e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f1d7419e670"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1d7419e800"/>
        <function-ref name="get" scoped="" ref="0x7f1d7419e990"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1d7419eb20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1d7419ecb0"/>
        <function-ref name="getMode" scoped="" ref="0x7f1d7419ee40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1d7419d020"/>
        <function-ref name="overflow" scoped="" ref="0x7f1d7419d1b0"/>
        <function-ref name="setMode" scoped="" ref="0x7f1d7419d340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f1d7419d4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f1d741977a0" loc="46:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f1d741977a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1d74197b20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f1d74197cb0"/>
        <function-ref name="captured" scoped="" ref="0x7f1d74197e40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1d74196020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1d741961b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f1d74196340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f1d7419a6d0" loc="44:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f1d7419a6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f1d7419aa50"/>
        <function-ref name="getControl" scoped="" ref="0x7f1d7419abe0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1d7419ad70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f1d74198020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f1d741981b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1d74198340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f1d741984d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f1d74198660"/>
        <function-ref name="setControl" scoped="" ref="0x7f1d741987f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f1d74195c50" loc="48:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f1d74195c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1d74194020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f1d74198ac0" loc="45:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f1d74198ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1d74198e40"/>
        <function-ref name="setEvent" scoped="" ref="0x7f1d74197020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f1d741971b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f1d74197340"/>
        <function-ref name="fired" scoped="" ref="0x7f1d741974d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f1d74196610" loc="47:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f1d74196610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1d74196990"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f1d74196b20"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1d74196cb0"/>
        <function-ref name="get" scoped="" ref="0x7f1d74196e40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1d74195020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1d741951b0"/>
        <function-ref name="getMode" scoped="" ref="0x7f1d74195340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1d741954d0"/>
        <function-ref name="overflow" scoped="" ref="0x7f1d74195660"/>
        <function-ref name="setMode" scoped="" ref="0x7f1d741957f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f1d74195980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f1d74190cb0" loc="46:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f1d74190cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1d7418f0a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f1d7418f230"/>
        <function-ref name="captured" scoped="" ref="0x7f1d7418f3c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1d7418f550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1d7418f6e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f1d7418f870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f1d74192b30" loc="44:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f1d74192b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f1d74191020"/>
        <function-ref name="getControl" scoped="" ref="0x7f1d741911b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1d74191340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f1d741914d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f1d74191660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1d741917f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f1d74191980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f1d74191b10"/>
        <function-ref name="setControl" scoped="" ref="0x7f1d74191ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f1d7418d2f0" loc="48:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f1d7418d2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1d7418d670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f1d74190020" loc="45:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f1d74190020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1d741903a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f1d74190530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f1d741906c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f1d74190850"/>
        <function-ref name="fired" scoped="" ref="0x7f1d741909e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f1d7418fb40" loc="47:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f1d7418fb40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1d7418e020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f1d7418e1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1d7418e340"/>
        <function-ref name="get" scoped="" ref="0x7f1d7418e4d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1d7418e660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1d7418e7f0"/>
        <function-ref name="getMode" scoped="" ref="0x7f1d7418e980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1d7418eb10"/>
        <function-ref name="overflow" scoped="" ref="0x7f1d7418eca0"/>
        <function-ref name="setMode" scoped="" ref="0x7f1d7418ee30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f1d7418d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerB1" ref="0x7f1d74186240" loc="7:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerB1" scoped="" ref="0x7f1d74186240"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1d741865c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerA0" ref="0x7f1d7418baa0" loc="4:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerA0" scoped="" ref="0x7f1d7418baa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1d7418be20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerA1" ref="0x7f1d74187260" loc="5:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerA1" scoped="" ref="0x7f1d74187260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1d741875e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerB0" ref="0x7f1d741879f0" loc="6:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerB0" scoped="" ref="0x7f1d741879f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1d74187d70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x7f1d744254c0" loc="55:/home/hades/tinyos-new/tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerOverride" scoped="" ref="0x7f1d744254c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x7f1d74425840"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x7f1d747393b0" loc="51:/home/hades/tinyos-new/tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuSleep" scoped="" ref="0x7f1d747393b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="irq_preamble" scoped="" ref="0x7f1d74739730"/>
        <function-ref name="irq_postamble" scoped="" ref="0x7f1d747398c0"/>
        <function-ref name="sleep" scoped="" ref="0x7f1d74739a50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x7f1d74561be0" loc="52:/home/hades/tinyos-new/tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerState" scoped="" ref="0x7f1d74561be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x7f1d7469d020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430ClockInit" ref="0x7f1d742e8b50" loc="39:/home/hades/tinyos-new/tos/platforms/telosb/MoteClockP.nc">
      <component-ref qname="MoteClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x7f1d742e8b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x7f1d7414fb10"/>
        <function-ref name="initTimerB" scoped="" ref="0x7f1d7414f1b0"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x7f1d7414f340"/>
        <function-ref name="initTimerA" scoped="" ref="0x7f1d7414f4d0"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x7f1d7414f020"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x7f1d7414f660"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x7f1d7414f7f0"/>
        <function-ref name="initClocks" scoped="" ref="0x7f1d7414f980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x7f1d74143dc0" loc="60:/home/hades/tinyos-new/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SoftwareInit" scoped="" ref="0x7f1d74143dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1d74142180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x7f1d74150590" loc="57:/home/hades/tinyos-new/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x7f1d74150590"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7f1d74150910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x7f1d741436c0" loc="59:/home/hades/tinyos-new/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PlatformInit" scoped="" ref="0x7f1d741436c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1d74143a40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x7f1d74150c00" loc="58:/home/hades/tinyos-new/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x7f1d74150c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1d74143020"/>
        <function-ref name="taskLoop" scoped="" ref="0x7f1d741431b0"/>
        <function-ref name="runNextTask" scoped="" ref="0x7f1d74143340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x7f1d748114f0" loc="48:/home/hades/tinyos-new/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TaskBasic" scoped="" ref="0x7f1d748114f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1d74a34160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f1d74811870"/>
        <function-ref name="runTask" scoped="" ref="0x7f1d74811a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x7f1d747a23a0" loc="47:/home/hades/tinyos-new/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x7f1d747a23a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1d747a2720"/>
        <function-ref name="taskLoop" scoped="" ref="0x7f1d747a28b0"/>
        <function-ref name="runNextTask" scoped="" ref="0x7f1d747a2a40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x7f1d7434b040" loc="56:/home/hades/tinyos-new/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TaskBasic" scoped="" ref="0x7f1d7434b040"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1d74a34160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f1d7434b3c0"/>
        <function-ref name="runTask" scoped="" ref="0x7f1d7434b550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x7f1d74347490" loc="57:/home/hades/tinyos-new/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuSleep" scoped="" ref="0x7f1d74347490"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="irq_preamble" scoped="" ref="0x7f1d74347810"/>
        <function-ref name="irq_postamble" scoped="" ref="0x7f1d743479a0"/>
        <function-ref name="sleep" scoped="" ref="0x7f1d74347b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x7f1d7434d140" loc="55:/home/hades/tinyos-new/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x7f1d7434d140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1d7434d4c0"/>
        <function-ref name="taskLoop" scoped="" ref="0x7f1d7434d650"/>
        <function-ref name="runNextTask" scoped="" ref="0x7f1d7434d7e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x7f1d74136a00" loc="7:TestCM5000P.nc">
      <component-ref qname="TestCM5000P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x7f1d74136a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7f1d74136d80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7f1d740c3910" loc="13:TestCM5000P.nc">
      <component-ref qname="TestCM5000P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f1d740c3910"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1d740c3c90"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f1d740c3e20"/>
        <function-ref name="getPayload" scoped="" ref="0x7f1d74123020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1d741231b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f1d74123340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioControl" ref="0x7f1d74124710" loc="11:TestCM5000P.nc">
      <component-ref qname="TestCM5000P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioControl" scoped="" ref="0x7f1d74124710"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f1d74124a90"/>
        <function-ref name="stopDone" scoped="" ref="0x7f1d74124c20"/>
        <function-ref name="start" scoped="" ref="0x7f1d74124db0"/>
        <function-ref name="stop" scoped="" ref="0x7f1d74128020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Humidity" ref="0x7f1d740ad8a0" loc="23:TestCM5000P.nc">
      <component-ref qname="TestCM5000P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Humidity" scoped="" ref="0x7f1d740ad8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1d74a34520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1d740ac4c0"/>
        <function-ref name="readDone" scoped="" ref="0x7f1d740ac940"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SampleTimer" ref="0x7f1d740cd250" loc="18:TestCM5000P.nc">
      <component-ref qname="TestCM5000P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SampleTimer" scoped="" ref="0x7f1d740cd250"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1d740c1460"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1d740c17d0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f1d740b46e0"/>
        <function-ref name="fired" scoped="" ref="0x7f1d740c4c90"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f1d740b5a70"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f1d740b55f0"/>
        <function-ref name="getdt" scoped="" ref="0x7f1d740b3020"/>
        <function-ref name="gett0" scoped="" ref="0x7f1d740b4b60"/>
        <function-ref name="isRunning" scoped="" ref="0x7f1d740b5170"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f1d740cde40"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f1d740b40d0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f1d740c4340"/>
        <function-ref name="stop" scoped="" ref="0x7f1d740c4810"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Photo" ref="0x7f1d740aa190" loc="24:TestCM5000P.nc">
      <component-ref qname="TestCM5000P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Photo" scoped="" ref="0x7f1d740aa190"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1d74a34520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1d740aad80"/>
        <function-ref name="readDone" scoped="" ref="0x7f1d740a9260"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendThlMsg" ref="0x7f1d740a6610" loc="42:TestCM5000P.nc">
      <component-ref qname="TestCM5000P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="sendThlMsg" scoped="" ref="0x7f1d740a6610"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f1d740a6990"/>
        <function-ref name="runTask" scoped="" ref="0x7f1d740a6b20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f1d7412ab50" loc="8:TestCM5000P.nc">
      <component-ref qname="TestCM5000P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f1d7412ab50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f1d74134020"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f1d741341b0"/>
        <function-ref name="led1On" scoped="" ref="0x7f1d74134340"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f1d741344d0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f1d74134660"/>
        <function-ref name="get" scoped="" ref="0x7f1d741347f0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f1d74134980"/>
        <function-ref name="led2Off" scoped="" ref="0x7f1d74133020"/>
        <function-ref name="set" scoped="" ref="0x7f1d74134b10"/>
        <function-ref name="led0On" scoped="" ref="0x7f1d74134ca0"/>
        <function-ref name="led2On" scoped="" ref="0x7f1d74134e30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ThlSend" ref="0x7f1d740cc9a0" loc="12:TestCM5000P.nc">
      <component-ref qname="TestCM5000P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ThlSend" scoped="" ref="0x7f1d740cc9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1d740ccd20"/>
        <function-ref name="getPayload" scoped="" ref="0x7f1d74127020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1d741271b0"/>
        <function-ref name="cancel" scoped="" ref="0x7f1d74127340"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1d741274d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Vref" ref="0x7f1d740af690" loc="21:TestCM5000P.nc">
      <component-ref qname="TestCM5000P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Vref" scoped="" ref="0x7f1d740af690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1d74a34520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1d740b2390"/>
        <function-ref name="readDone" scoped="" ref="0x7f1d740b2810"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Temperature" ref="0x7f1d740b1020" loc="22:TestCM5000P.nc">
      <component-ref qname="TestCM5000P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Temperature" scoped="" ref="0x7f1d740b1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1d74a34520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1d740b1c10"/>
        <function-ref name="readDone" scoped="" ref="0x7f1d740ad0d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Radiation" ref="0x7f1d740a9a30" loc="25:TestCM5000P.nc">
      <component-ref qname="TestCM5000P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Radiation" scoped="" ref="0x7f1d740a9a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1d74a34520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1d740a8670"/>
        <function-ref name="readDone" scoped="" ref="0x7f1d740a8af0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7f1d74082dd0" loc="46:/home/hades/tinyos-new/tos/system/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f1d74082dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f1d7407e180"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f1d7407e310"/>
        <function-ref name="led1On" scoped="" ref="0x7f1d7407e4a0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f1d7407e630"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f1d7407e7c0"/>
        <function-ref name="get" scoped="" ref="0x7f1d7407e950"/>
        <function-ref name="led1Off" scoped="" ref="0x7f1d7407eae0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f1d7407d1b0"/>
        <function-ref name="set" scoped="" ref="0x7f1d7407ec70"/>
        <function-ref name="led0On" scoped="" ref="0x7f1d7407ee00"/>
        <function-ref name="led2On" scoped="" ref="0x7f1d7407d020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x7f1d74072ce0" loc="50:/home/hades/tinyos-new/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led0" scoped="" ref="0x7f1d74072ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1d740770a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1d74077230"/>
        <function-ref name="toggle" scoped="" ref="0x7f1d740773c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1d74077550"/>
        <function-ref name="get" scoped="" ref="0x7f1d740776e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1d74077870"/>
        <function-ref name="set" scoped="" ref="0x7f1d74077a00"/>
        <function-ref name="clr" scoped="" ref="0x7f1d74077b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f1d7407a110" loc="46:/home/hades/tinyos-new/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f1d7407a110"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1d7407a490"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x7f1d74071020" loc="51:/home/hades/tinyos-new/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led1" scoped="" ref="0x7f1d74071020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1d740713a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1d74071530"/>
        <function-ref name="toggle" scoped="" ref="0x7f1d740716c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1d74071850"/>
        <function-ref name="get" scoped="" ref="0x7f1d740719e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1d74071b70"/>
        <function-ref name="set" scoped="" ref="0x7f1d74071d00"/>
        <function-ref name="clr" scoped="" ref="0x7f1d74070020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7f1d7407a710" loc="47:/home/hades/tinyos-new/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f1d7407a710"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f1d7407aa90"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f1d7407ac20"/>
        <function-ref name="led1On" scoped="" ref="0x7f1d7407adb0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f1d74079020"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f1d740791b0"/>
        <function-ref name="get" scoped="" ref="0x7f1d74079340"/>
        <function-ref name="led1Off" scoped="" ref="0x7f1d740794d0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f1d74079b10"/>
        <function-ref name="set" scoped="" ref="0x7f1d74079660"/>
        <function-ref name="led0On" scoped="" ref="0x7f1d740797f0"/>
        <function-ref name="led2On" scoped="" ref="0x7f1d74079980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x7f1d74070340" loc="52:/home/hades/tinyos-new/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led2" scoped="" ref="0x7f1d74070340"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1d740706c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1d74070850"/>
        <function-ref name="toggle" scoped="" ref="0x7f1d740709e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1d74070b70"/>
        <function-ref name="get" scoped="" ref="0x7f1d74070d00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1d7406f020"/>
        <function-ref name="set" scoped="" ref="0x7f1d7406f1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f1d7406f340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x7f1d7407b970" loc="41:/home/hades/tinyos-new/tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led0" scoped="" ref="0x7f1d7407b970"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1d7407bcf0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1d7407be80"/>
        <function-ref name="toggle" scoped="" ref="0x7f1d74054030"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1d740541c0"/>
        <function-ref name="get" scoped="" ref="0x7f1d74054350"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1d740544e0"/>
        <function-ref name="set" scoped="" ref="0x7f1d74054670"/>
        <function-ref name="clr" scoped="" ref="0x7f1d74054800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x7f1d74054b60" loc="42:/home/hades/tinyos-new/tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led1" scoped="" ref="0x7f1d74054b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1d74053020"/>
        <function-ref name="isInput" scoped="" ref="0x7f1d740531b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1d74053340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1d740534d0"/>
        <function-ref name="get" scoped="" ref="0x7f1d74053660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1d740537f0"/>
        <function-ref name="set" scoped="" ref="0x7f1d74053980"/>
        <function-ref name="clr" scoped="" ref="0x7f1d74053b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x7f1d74051020" loc="44:/home/hades/tinyos-new/tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f1d74051020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1d740513a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x7f1d74053e70" loc="43:/home/hades/tinyos-new/tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led2" scoped="" ref="0x7f1d74053e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1d74052220"/>
        <function-ref name="isInput" scoped="" ref="0x7f1d740523b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1d74052540"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1d740526d0"/>
        <function-ref name="get" scoped="" ref="0x7f1d74052860"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1d740529f0"/>
        <function-ref name="set" scoped="" ref="0x7f1d74052b80"/>
        <function-ref name="clr" scoped="" ref="0x7f1d74052d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x7f1d7403b020" loc="53:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x7f1d7403b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1d7403b3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1d7403b530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1d7403b6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1d7403b850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1d7403b9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1d7403bb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1d7403bd00"/>
        <function-ref name="get" scoped="" ref="0x7f1d7403a020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1d7403a1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1d7403a340"/>
        <function-ref name="set" scoped="" ref="0x7f1d7403a4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1d7403a660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1d7403a7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1d7403aa80"/>
        <function-ref name="clr" scoped="" ref="0x7f1d7403ac10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x7f1d74027020" loc="66:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x7f1d74027020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1d740273a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1d74027530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1d740276c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1d74027850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1d740279e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1d74027b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1d74027d00"/>
        <function-ref name="get" scoped="" ref="0x7f1d74026020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1d740261b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1d74026340"/>
        <function-ref name="set" scoped="" ref="0x7f1d740264d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1d74026660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1d740267f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1d74026a80"/>
        <function-ref name="clr" scoped="" ref="0x7f1d74026c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SDA" ref="0x7f1d73fde560" loc="145:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SDA" scoped="" ref="0x7f1d73fde560"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1d73fde8e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1d73fdea70"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1d73fdec00"/>
        <function-ref name="toggle" scoped="" ref="0x7f1d73fded90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1d73fdc020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1d73fdc1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1d73fdc340"/>
        <function-ref name="get" scoped="" ref="0x7f1d73fdc4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1d73fdc660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1d73fdc7f0"/>
        <function-ref name="set" scoped="" ref="0x7f1d73fdc980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1d73fdcb10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1d73fdcca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1d73fdb020"/>
        <function-ref name="clr" scoped="" ref="0x7f1d73fdb1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC6" ref="0x7f1d73fb9570" loc="165:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC6" scoped="" ref="0x7f1d73fb9570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1d73fb98f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1d73fb9a80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1d73fb9c10"/>
        <function-ref name="toggle" scoped="" ref="0x7f1d73fb9da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1d73fb8020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1d73fb81b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1d73fb8340"/>
        <function-ref name="get" scoped="" ref="0x7f1d73fb84d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1d73fb8660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1d73fb87f0"/>
        <function-ref name="set" scoped="" ref="0x7f1d73fb8980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1d73fb8b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1d73fb8ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1d73fb7020"/>
        <function-ref name="clr" scoped="" ref="0x7f1d73fb71b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SOMI0" ref="0x7f1d73fdb580" loc="146:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI0" scoped="" ref="0x7f1d73fdb580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1d73fdb900"/>
        <function-ref name="isInput" scoped="" ref="0x7f1d73fdba90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1d73fdbc20"/>
        <function-ref name="toggle" scoped="" ref="0x7f1d73fdbdb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1d73fda020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1d73fda1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1d73fda340"/>
        <function-ref name="get" scoped="" ref="0x7f1d73fda4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1d73fda660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1d73fda7f0"/>
        <function-ref name="set" scoped="" ref="0x7f1d73fda980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1d73fdab10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1d73fdaca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1d73fd9020"/>
        <function-ref name="clr" scoped="" ref="0x7f1d73fd91b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port30" ref="0x7f1d74023020" loc="71:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port30" scoped="" ref="0x7f1d74023020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1d740233a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1d74023530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1d740236c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1d74023850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1d740239e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1d74023b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1d74023d00"/>
        <function-ref name="get" scoped="" ref="0x7f1d74022020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1d740221b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1d74022340"/>
        <function-ref name="set" scoped="" ref="0x7f1d740224d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1d74022660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1d740227f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1d74022a80"/>
        <function-ref name="clr" scoped="" ref="0x7f1d74022c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port42" ref="0x7f1d7400f200" loc="84:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port42" scoped="" ref="0x7f1d7400f200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1d7400f580"/>
        <function-ref name="isInput" scoped="" ref="0x7f1d7400f710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1d7400f8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1d7400fa30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1d7400fbc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1d7400fd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1d7400e020"/>
        <function-ref name="get" scoped="" ref="0x7f1d7400e1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1d7400e340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1d7400e4d0"/>
        <function-ref name="set" scoped="" ref="0x7f1d7400e660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1d7400e7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1d7400e980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1d7400ec10"/>
        <function-ref name="clr" scoped="" ref="0x7f1d7400eda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port54" ref="0x7f1d73ffa200" loc="97:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port54" scoped="" ref="0x7f1d73ffa200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1d73ffa580"/>
        <function-ref name="isInput" scoped="" ref="0x7f1d73ffa710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1d73ffa8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1d73ffaa30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1d73ffabc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1d73ffad50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1d73ff9020"/>
        <function-ref name="get" scoped="" ref="0x7f1d73ff91b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1d73ff9340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1d73ff94d0"/>
        <function-ref name="set" scoped="" ref="0x7f1d73ff9660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1d73ff97f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1d73ff9980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1d73ff9c10"/>
        <function-ref name="clr" scoped="" ref="0x7f1d73ff9da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port64" ref="0x7f1d73fea200" loc="108:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port64" scoped="" ref="0x7f1d73fea200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1d73fea580"/>
        <function-ref name="isInput" scoped="" ref="0x7f1d73fea710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1d73fea8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1d73feaa30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1d73feabc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1d73fead50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1d73fe9020"/>
        <function-ref name="get" scoped="" ref="0x7f1d73fe91b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1d73fe9340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1d73fe94d0"/>
        <function-ref name="set" scoped="" ref="0x7f1d73fe9660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1d73fe97f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1d73fe9980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1d73fe9c10"/>
        <function-ref name="clr" scoped="" ref="0x7f1d73fe9da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UTXD0" ref="0x7f1d73fd5580" loc="149:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD0" scoped="" ref="0x7f1d73fd5580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1d73fd5900"/>
        <function-ref name="isInput" scoped="" ref="0x7f1d73fd5a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1d73fd5c20"/>
        <function-ref name="toggle" scoped="" ref="0x7f1d73fd5db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1d73fd4020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1d73fd41b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1d73fd4340"/>
        <function-ref name="get" scoped="" ref="0x7f1d73fd44d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1d73fd4660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1d73fd47f0"/>
        <function-ref name="set" scoped="" ref="0x7f1d73fd4980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1d73fd4b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1d73fd4ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1d73fd3020"/>
        <function-ref name="clr" scoped="" ref="0x7f1d73fd31b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC0" ref="0x7f1d73fc5570" loc="159:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC0" scoped="" ref="0x7f1d73fc5570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1d73fc58f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1d73fc5a80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1d73fc5c10"/>
        <function-ref name="toggle" scoped="" ref="0x7f1d73fc5da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1d73fc4020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1d73fc41b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1d73fc4340"/>
        <function-ref name="get" scoped="" ref="0x7f1d73fc44d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1d73fc4660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1d73fc47f0"/>
        <function-ref name="set" scoped="" ref="0x7f1d73fc4980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1d73fc4b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1d73fc4ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1d73fc3020"/>
        <function-ref name="clr" scoped="" ref="0x7f1d73fc31b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SVSIN" ref="0x7f1d73fb1580" loc="171:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SVSIN" scoped="" ref="0x7f1d73fb1580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1d73fb1900"/>
        <function-ref name="isInput" scoped="" ref="0x7f1d73fb1a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1d73fb1c20"/>
        <function-ref name="toggle" scoped="" ref="0x7f1d73fb1db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1d73fb0020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1d73fb01b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1d73fb0340"/>
        <function-ref name="get" scoped="" ref="0x7f1d73fb04d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1d73fb0660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1d73fb07f0"/>
        <function-ref name="set" scoped="" ref="0x7f1d73fb0980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1d73fb0b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1d73fb0ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1d73faf020"/>
        <function-ref name="clr" scoped="" ref="0x7f1d73faf1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x7f1d74035020" loc="56:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x7f1d74035020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1d740353a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1d74035530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1d740356c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1d74035850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1d740359e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1d74035b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1d74035d00"/>
        <function-ref name="get" scoped="" ref="0x7f1d74034020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1d740341b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1d74034340"/>
        <function-ref name="set" scoped="" ref="0x7f1d740344d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1d74034660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1d740347f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1d74034a80"/>
        <function-ref name="clr" scoped="" ref="0x7f1d74034c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="URXD0" ref="0x7f1d73fd3580" loc="150:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD0" scoped="" ref="0x7f1d73fd3580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1d73fd3900"/>
        <function-ref name="isInput" scoped="" ref="0x7f1d73fd3a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1d73fd3c20"/>
        <function-ref name="toggle" scoped="" ref="0x7f1d73fd3db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1d73fd2020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1d73fd21b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1d73fd2340"/>
        <function-ref name="get" scoped="" ref="0x7f1d73fd24d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1d73fd2660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1d73fd27f0"/>
        <function-ref name="set" scoped="" ref="0x7f1d73fd2980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1d73fd2b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1d73fd2ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1d73fd1020"/>
        <function-ref name="clr" scoped="" ref="0x7f1d73fd11b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x7f1d74031020" loc="61:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x7f1d74031020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1d740313a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1d74031530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1d740316c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1d74031850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1d740319e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1d74031b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1d74031d00"/>
        <function-ref name="get" scoped="" ref="0x7f1d74030020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1d740301b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1d74030340"/>
        <function-ref name="set" scoped="" ref="0x7f1d740304d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1d74030660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1d740307f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1d74030a80"/>
        <function-ref name="clr" scoped="" ref="0x7f1d74030c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port33" ref="0x7f1d7401d020" loc="74:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port33" scoped="" ref="0x7f1d7401d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1d7401d3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1d7401d530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1d7401d6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1d7401d850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1d7401d9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1d7401db70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1d7401dd00"/>
        <function-ref name="get" scoped="" ref="0x7f1d7401c020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1d7401c1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1d7401c340"/>
        <function-ref name="set" scoped="" ref="0x7f1d7401c4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1d7401c660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1d7401c7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1d7401ca80"/>
        <function-ref name="clr" scoped="" ref="0x7f1d7401cc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port45" ref="0x7f1d74008200" loc="87:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port45" scoped="" ref="0x7f1d74008200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1d74008580"/>
        <function-ref name="isInput" scoped="" ref="0x7f1d74008710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1d740088a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1d74008a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1d74008bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1d74008d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1d74007020"/>
        <function-ref name="get" scoped="" ref="0x7f1d740071b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1d74007340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1d740074d0"/>
        <function-ref name="set" scoped="" ref="0x7f1d74007660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1d740077f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1d74007980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1d74007c10"/>
        <function-ref name="clr" scoped="" ref="0x7f1d74007da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port57" ref="0x7f1d73ff4200" loc="100:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port57" scoped="" ref="0x7f1d73ff4200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1d73ff4580"/>
        <function-ref name="isInput" scoped="" ref="0x7f1d73ff4710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1d73ff48a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1d73ff4a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1d73ff4bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1d73ff4d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1d73ff3020"/>
        <function-ref name="get" scoped="" ref="0x7f1d73ff31b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1d73ff3340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1d73ff34d0"/>
        <function-ref name="set" scoped="" ref="0x7f1d73ff3660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1d73ff37f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1d73ff3980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1d73ff3c10"/>
        <function-ref name="clr" scoped="" ref="0x7f1d73ff3da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port67" ref="0x7f1d73fe4200" loc="111:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port67" scoped="" ref="0x7f1d73fe4200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1d73fe4580"/>
        <function-ref name="isInput" scoped="" ref="0x7f1d73fe4710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1d73fe48a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1d73fe4a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1d73fe4bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1d73fe4d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1d73fe3020"/>
        <function-ref name="get" scoped="" ref="0x7f1d73fe31b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1d73fe3340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1d73fe34d0"/>
        <function-ref name="set" scoped="" ref="0x7f1d73fe3660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1d73fe37f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1d73fe3980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1d73fe3c10"/>
        <function-ref name="clr" scoped="" ref="0x7f1d73fe3da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x7f1d74040020" loc="51:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x7f1d74040020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1d740403a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1d74040530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1d740406c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1d74040850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1d740409e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1d74040b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1d74040d00"/>
        <function-ref name="get" scoped="" ref="0x7f1d7403f020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1d7403f1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1d7403f340"/>
        <function-ref name="set" scoped="" ref="0x7f1d7403f4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1d7403f660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1d7403f7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1d7403fa80"/>
        <function-ref name="clr" scoped="" ref="0x7f1d7403fc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x7f1d7402b020" loc="64:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x7f1d7402b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1d7402b4a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1d7402b630"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1d7402b7c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1d7402b950"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1d7402bae0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1d7402bc70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1d7402be00"/>
        <function-ref name="get" scoped="" ref="0x7f1d7402a020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1d7402a1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1d7402a340"/>
        <function-ref name="set" scoped="" ref="0x7f1d7402a4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1d7402a660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1d7402a7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1d7402aa80"/>
        <function-ref name="clr" scoped="" ref="0x7f1d7402ac10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port36" ref="0x7f1d74017020" loc="77:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port36" scoped="" ref="0x7f1d74017020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1d740173a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1d74017530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1d740176c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1d74017850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1d740179e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1d74017b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1d74017d00"/>
        <function-ref name="get" scoped="" ref="0x7f1d74016020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1d740161b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1d74016340"/>
        <function-ref name="set" scoped="" ref="0x7f1d740164d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1d74016660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1d740167f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1d74016a80"/>
        <function-ref name="clr" scoped="" ref="0x7f1d74016c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SIMO0" ref="0x7f1d73fe0580" loc="144:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO0" scoped="" ref="0x7f1d73fe0580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1d73fe0900"/>
        <function-ref name="isInput" scoped="" ref="0x7f1d73fe0a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1d73fe0c20"/>
        <function-ref name="toggle" scoped="" ref="0x7f1d73fe0db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1d73fdf020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1d73fdf1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1d73fdf340"/>
        <function-ref name="get" scoped="" ref="0x7f1d73fdf4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1d73fdf660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1d73fdf7f0"/>
        <function-ref name="set" scoped="" ref="0x7f1d73fdf980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1d73fdfb10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1d73fdfca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1d73fde020"/>
        <function-ref name="clr" scoped="" ref="0x7f1d73fde1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC3" ref="0x7f1d73fbf570" loc="162:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC3" scoped="" ref="0x7f1d73fbf570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1d73fbf8f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1d73fbfa80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1d73fbfc10"/>
        <function-ref name="toggle" scoped="" ref="0x7f1d73fbfda0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1d73fbe020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1d73fbe1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1d73fbe340"/>
        <function-ref name="get" scoped="" ref="0x7f1d73fbe4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1d73fbe660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1d73fbe7f0"/>
        <function-ref name="set" scoped="" ref="0x7f1d73fbe980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1d73fbeb10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1d73fbeca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1d73fbd020"/>
        <function-ref name="clr" scoped="" ref="0x7f1d73fbd1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DAC1" ref="0x7f1d73fb3570" loc="169:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DAC1" scoped="" ref="0x7f1d73fb3570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1d73fb38f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1d73fb3a80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1d73fb3c10"/>
        <function-ref name="toggle" scoped="" ref="0x7f1d73fb3da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1d73fb2020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1d73fb21b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1d73fb2340"/>
        <function-ref name="get" scoped="" ref="0x7f1d73fb24d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1d73fb2660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1d73fb27f0"/>
        <function-ref name="set" scoped="" ref="0x7f1d73fb2980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1d73fb2b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1d73fb2ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1d73fb1020"/>
        <function-ref name="clr" scoped="" ref="0x7f1d73fb11b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCLK1" ref="0x7f1d73fcb580" loc="155:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK1" scoped="" ref="0x7f1d73fcb580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1d73fcb900"/>
        <function-ref name="isInput" scoped="" ref="0x7f1d73fcba90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1d73fcbc20"/>
        <function-ref name="toggle" scoped="" ref="0x7f1d73fcbdb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1d73fca020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1d73fca1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1d73fca340"/>
        <function-ref name="get" scoped="" ref="0x7f1d73fca4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1d73fca660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1d73fca7f0"/>
        <function-ref name="set" scoped="" ref="0x7f1d73fca980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1d73fcab10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1d73fcaca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1d73fc9020"/>
        <function-ref name="clr" scoped="" ref="0x7f1d73fc91b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port40" ref="0x7f1d74013020" loc="82:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port40" scoped="" ref="0x7f1d74013020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1d740135a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1d74013730"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1d740138c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1d74013a50"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1d74013be0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1d74013d70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1d74012020"/>
        <function-ref name="get" scoped="" ref="0x7f1d740121b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1d74012340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1d740124d0"/>
        <function-ref name="set" scoped="" ref="0x7f1d74012660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1d740127f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1d74012980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1d74012c10"/>
        <function-ref name="clr" scoped="" ref="0x7f1d74012da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port52" ref="0x7f1d73ffe200" loc="95:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port52" scoped="" ref="0x7f1d73ffe200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1d73ffe580"/>
        <function-ref name="isInput" scoped="" ref="0x7f1d73ffe710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1d73ffe8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1d73ffea30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1d73ffebc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1d73ffed50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1d73ffd020"/>
        <function-ref name="get" scoped="" ref="0x7f1d73ffd1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1d73ffd340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1d73ffd4d0"/>
        <function-ref name="set" scoped="" ref="0x7f1d73ffd660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1d73ffd7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1d73ffd980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1d73ffdc10"/>
        <function-ref name="clr" scoped="" ref="0x7f1d73ffdda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port62" ref="0x7f1d73fee200" loc="106:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port62" scoped="" ref="0x7f1d73fee200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1d73fee580"/>
        <function-ref name="isInput" scoped="" ref="0x7f1d73fee710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1d73fee8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1d73feea30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1d73feebc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1d73feed50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1d73fed020"/>
        <function-ref name="get" scoped="" ref="0x7f1d73fed1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1d73fed340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1d73fed4d0"/>
        <function-ref name="set" scoped="" ref="0x7f1d73fed660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1d73fed7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1d73fed980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1d73fedc10"/>
        <function-ref name="clr" scoped="" ref="0x7f1d73fedda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC4" ref="0x7f1d73fbd570" loc="163:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC4" scoped="" ref="0x7f1d73fbd570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1d73fbd8f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1d73fbda80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1d73fbdc10"/>
        <function-ref name="toggle" scoped="" ref="0x7f1d73fbdda0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1d73fbc020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1d73fbc1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1d73fbc340"/>
        <function-ref name="get" scoped="" ref="0x7f1d73fbc4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1d73fbc660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1d73fbc7f0"/>
        <function-ref name="set" scoped="" ref="0x7f1d73fbc980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1d73fbcb10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1d73fbcca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1d73fbb020"/>
        <function-ref name="clr" scoped="" ref="0x7f1d73fbb1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STE1" ref="0x7f1d73fd1570" loc="152:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STE1" scoped="" ref="0x7f1d73fd1570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1d73fd18f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1d73fd1a80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1d73fd1c10"/>
        <function-ref name="toggle" scoped="" ref="0x7f1d73fd1da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1d73fd0020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1d73fd01b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1d73fd0340"/>
        <function-ref name="get" scoped="" ref="0x7f1d73fd04d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1d73fd0660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1d73fd07f0"/>
        <function-ref name="set" scoped="" ref="0x7f1d73fd0980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1d73fd0b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1d73fd0ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1d73fcf020"/>
        <function-ref name="clr" scoped="" ref="0x7f1d73fcf1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x7f1d74039020" loc="54:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x7f1d74039020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1d740393a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1d74039530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1d740396c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1d74039850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1d740399e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1d74039b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1d74039d00"/>
        <function-ref name="get" scoped="" ref="0x7f1d74038020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1d740381b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1d74038340"/>
        <function-ref name="set" scoped="" ref="0x7f1d740384d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1d74038660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1d740387f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1d74038a80"/>
        <function-ref name="clr" scoped="" ref="0x7f1d74038c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x7f1d74025020" loc="67:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x7f1d74025020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1d740253a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1d74025530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1d740256c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1d74025850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1d740259e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1d74025b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1d74025d00"/>
        <function-ref name="get" scoped="" ref="0x7f1d74024020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1d740241b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1d74024340"/>
        <function-ref name="set" scoped="" ref="0x7f1d740244d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1d74024660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1d740247f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1d74024a80"/>
        <function-ref name="clr" scoped="" ref="0x7f1d74024c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port60" ref="0x7f1d73ff2200" loc="104:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port60" scoped="" ref="0x7f1d73ff2200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1d73ff2580"/>
        <function-ref name="isInput" scoped="" ref="0x7f1d73ff2710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1d73ff28a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1d73ff2a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1d73ff2bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1d73ff2d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1d73ff1020"/>
        <function-ref name="get" scoped="" ref="0x7f1d73ff11b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1d73ff1340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1d73ff14d0"/>
        <function-ref name="set" scoped="" ref="0x7f1d73ff1660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1d73ff17f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1d73ff1980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1d73ff1c10"/>
        <function-ref name="clr" scoped="" ref="0x7f1d73ff1da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port31" ref="0x7f1d74021020" loc="72:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port31" scoped="" ref="0x7f1d74021020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1d740213a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1d74021530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1d740216c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1d74021850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1d740219e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1d74021b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1d74021d00"/>
        <function-ref name="get" scoped="" ref="0x7f1d74020020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1d740201b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1d74020340"/>
        <function-ref name="set" scoped="" ref="0x7f1d740204d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1d74020660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1d740207f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1d74020a80"/>
        <function-ref name="clr" scoped="" ref="0x7f1d74020c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port43" ref="0x7f1d7400c200" loc="85:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port43" scoped="" ref="0x7f1d7400c200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1d7400c580"/>
        <function-ref name="isInput" scoped="" ref="0x7f1d7400c710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1d7400c8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1d7400ca30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1d7400cbc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1d7400cd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1d7400b020"/>
        <function-ref name="get" scoped="" ref="0x7f1d7400b1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1d7400b340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1d7400b4d0"/>
        <function-ref name="set" scoped="" ref="0x7f1d7400b660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1d7400b7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1d7400b980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1d7400bc10"/>
        <function-ref name="clr" scoped="" ref="0x7f1d7400bda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port55" ref="0x7f1d73ff8200" loc="98:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port55" scoped="" ref="0x7f1d73ff8200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1d73ff8580"/>
        <function-ref name="isInput" scoped="" ref="0x7f1d73ff8710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1d73ff88a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1d73ff8a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1d73ff8bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1d73ff8d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1d73ff7020"/>
        <function-ref name="get" scoped="" ref="0x7f1d73ff71b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1d73ff7340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1d73ff74d0"/>
        <function-ref name="set" scoped="" ref="0x7f1d73ff7660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1d73ff77f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1d73ff7980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1d73ff7c10"/>
        <function-ref name="clr" scoped="" ref="0x7f1d73ff7da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port65" ref="0x7f1d73fe8200" loc="109:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port65" scoped="" ref="0x7f1d73fe8200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1d73fe8580"/>
        <function-ref name="isInput" scoped="" ref="0x7f1d73fe8710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1d73fe88a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1d73fe8a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1d73fe8bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1d73fe8d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1d73fe7020"/>
        <function-ref name="get" scoped="" ref="0x7f1d73fe71b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1d73fe7340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1d73fe74d0"/>
        <function-ref name="set" scoped="" ref="0x7f1d73fe7660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1d73fe77f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1d73fe7980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1d73fe7c10"/>
        <function-ref name="clr" scoped="" ref="0x7f1d73fe7da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SOMI1" ref="0x7f1d73fcd580" loc="154:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI1" scoped="" ref="0x7f1d73fcd580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1d73fcd900"/>
        <function-ref name="isInput" scoped="" ref="0x7f1d73fcda90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1d73fcdc20"/>
        <function-ref name="toggle" scoped="" ref="0x7f1d73fcddb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1d73fcc020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1d73fcc1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1d73fcc340"/>
        <function-ref name="get" scoped="" ref="0x7f1d73fcc4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1d73fcc660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1d73fcc7f0"/>
        <function-ref name="set" scoped="" ref="0x7f1d73fcc980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1d73fccb10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1d73fccca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1d73fcb020"/>
        <function-ref name="clr" scoped="" ref="0x7f1d73fcb1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x7f1d7404d0a0" loc="49:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x7f1d7404d0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1d7404d420"/>
        <function-ref name="isInput" scoped="" ref="0x7f1d7404d5b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1d7404d740"/>
        <function-ref name="toggle" scoped="" ref="0x7f1d7404d8d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1d7404da60"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1d7404dbf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1d7404dd80"/>
        <function-ref name="get" scoped="" ref="0x7f1d7404c020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1d7404c1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1d7404c340"/>
        <function-ref name="set" scoped="" ref="0x7f1d7404c4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1d7404c660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1d7404c7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1d7404ca80"/>
        <function-ref name="clr" scoped="" ref="0x7f1d7404cc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x7f1d7402f020" loc="62:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x7f1d7402f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1d7402f3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1d7402f530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1d7402f6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1d7402f850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1d7402f9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1d7402fb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1d7402fd00"/>
        <function-ref name="get" scoped="" ref="0x7f1d7402e020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1d7402e1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1d7402e340"/>
        <function-ref name="set" scoped="" ref="0x7f1d7402e4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1d7402e660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1d7402e7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1d7402ea80"/>
        <function-ref name="clr" scoped="" ref="0x7f1d7402ec10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port34" ref="0x7f1d7401b020" loc="75:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port34" scoped="" ref="0x7f1d7401b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1d7401b3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1d7401b530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1d7401b6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1d7401b850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1d7401b9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1d7401bb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1d7401bd00"/>
        <function-ref name="get" scoped="" ref="0x7f1d7401a020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1d7401a1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1d7401a340"/>
        <function-ref name="set" scoped="" ref="0x7f1d7401a4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1d7401a660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1d7401a7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1d7401aa80"/>
        <function-ref name="clr" scoped="" ref="0x7f1d7401ac10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port46" ref="0x7f1d74006200" loc="88:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port46" scoped="" ref="0x7f1d74006200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1d74006580"/>
        <function-ref name="isInput" scoped="" ref="0x7f1d74006710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1d740068a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1d74006a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1d74006bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1d74006d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1d74005020"/>
        <function-ref name="get" scoped="" ref="0x7f1d740051b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1d74005340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1d740054d0"/>
        <function-ref name="set" scoped="" ref="0x7f1d74005660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1d740057f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1d74005980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1d74005c10"/>
        <function-ref name="clr" scoped="" ref="0x7f1d74005da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UTXD1" ref="0x7f1d73fc9580" loc="156:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD1" scoped="" ref="0x7f1d73fc9580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1d73fc9900"/>
        <function-ref name="isInput" scoped="" ref="0x7f1d73fc9a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1d73fc9c20"/>
        <function-ref name="toggle" scoped="" ref="0x7f1d73fc9db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1d73fc8020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1d73fc81b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1d73fc8340"/>
        <function-ref name="get" scoped="" ref="0x7f1d73fc84d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1d73fc8660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1d73fc87f0"/>
        <function-ref name="set" scoped="" ref="0x7f1d73fc8980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1d73fc8b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1d73fc8ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1d73fc7020"/>
        <function-ref name="clr" scoped="" ref="0x7f1d73fc71b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC1" ref="0x7f1d73fc3570" loc="160:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC1" scoped="" ref="0x7f1d73fc3570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1d73fc38f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1d73fc3a80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1d73fc3c10"/>
        <function-ref name="toggle" scoped="" ref="0x7f1d73fc3da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1d73fc2020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1d73fc21b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1d73fc2340"/>
        <function-ref name="get" scoped="" ref="0x7f1d73fc24d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1d73fc2660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1d73fc27f0"/>
        <function-ref name="set" scoped="" ref="0x7f1d73fc2980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1d73fc2b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1d73fc2ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1d73fc1020"/>
        <function-ref name="clr" scoped="" ref="0x7f1d73fc11b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC7" ref="0x7f1d73fb7570" loc="166:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC7" scoped="" ref="0x7f1d73fb7570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1d73fb78f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1d73fb7a80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1d73fb7c10"/>
        <function-ref name="toggle" scoped="" ref="0x7f1d73fb7da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1d73fb6020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1d73fb61b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1d73fb6340"/>
        <function-ref name="get" scoped="" ref="0x7f1d73fb64d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1d73fb6660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1d73fb67f0"/>
        <function-ref name="set" scoped="" ref="0x7f1d73fb6980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1d73fb6b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1d73fb6ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1d73fb5020"/>
        <function-ref name="clr" scoped="" ref="0x7f1d73fb51b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port50" ref="0x7f1d74002200" loc="93:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port50" scoped="" ref="0x7f1d74002200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1d74002580"/>
        <function-ref name="isInput" scoped="" ref="0x7f1d74002710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1d740028a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1d74002a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1d74002bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1d74002d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1d74001020"/>
        <function-ref name="get" scoped="" ref="0x7f1d740011b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1d74001340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1d740014d0"/>
        <function-ref name="set" scoped="" ref="0x7f1d74001660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1d740017f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1d74001980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1d74001c10"/>
        <function-ref name="clr" scoped="" ref="0x7f1d74001da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="URXD1" ref="0x7f1d73fc7580" loc="157:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD1" scoped="" ref="0x7f1d73fc7580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1d73fc7900"/>
        <function-ref name="isInput" scoped="" ref="0x7f1d73fc7a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1d73fc7c20"/>
        <function-ref name="toggle" scoped="" ref="0x7f1d73fc7db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1d73fc6020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1d73fc61b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1d73fc6340"/>
        <function-ref name="get" scoped="" ref="0x7f1d73fc64d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1d73fc6660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1d73fc67f0"/>
        <function-ref name="set" scoped="" ref="0x7f1d73fc6980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1d73fc6b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1d73fc6ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1d73fc5020"/>
        <function-ref name="clr" scoped="" ref="0x7f1d73fc51b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x7f1d7403e020" loc="52:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x7f1d7403e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1d7403e3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1d7403e530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1d7403e6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1d7403e850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1d7403e9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1d7403eb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1d7403ed00"/>
        <function-ref name="get" scoped="" ref="0x7f1d7403d020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1d7403d1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1d7403d340"/>
        <function-ref name="set" scoped="" ref="0x7f1d7403d4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1d7403d660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1d7403d7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1d7403da80"/>
        <function-ref name="clr" scoped="" ref="0x7f1d7403dc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x7f1d74029020" loc="65:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x7f1d74029020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1d740293a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1d74029530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1d740296c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1d74029850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1d740299e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1d74029b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1d74029d00"/>
        <function-ref name="get" scoped="" ref="0x7f1d74028020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1d740281b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1d74028340"/>
        <function-ref name="set" scoped="" ref="0x7f1d740284d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1d74028660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1d740287f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1d74028a80"/>
        <function-ref name="clr" scoped="" ref="0x7f1d74028c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port37" ref="0x7f1d74015020" loc="78:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port37" scoped="" ref="0x7f1d74015020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1d740153a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1d74015530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1d740156c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1d74015850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1d740159e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1d74015b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1d74015d00"/>
        <function-ref name="get" scoped="" ref="0x7f1d74014020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1d740141b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1d74014340"/>
        <function-ref name="set" scoped="" ref="0x7f1d740144d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1d74014660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1d740147f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1d74014a80"/>
        <function-ref name="clr" scoped="" ref="0x7f1d74014c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SIMO1" ref="0x7f1d73fcf580" loc="153:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO1" scoped="" ref="0x7f1d73fcf580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1d73fcf900"/>
        <function-ref name="isInput" scoped="" ref="0x7f1d73fcfa90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1d73fcfc20"/>
        <function-ref name="toggle" scoped="" ref="0x7f1d73fcfdb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1d73fce020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1d73fce1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1d73fce340"/>
        <function-ref name="get" scoped="" ref="0x7f1d73fce4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1d73fce660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1d73fce7f0"/>
        <function-ref name="set" scoped="" ref="0x7f1d73fce980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1d73fceb10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1d73fceca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1d73fcd020"/>
        <function-ref name="clr" scoped="" ref="0x7f1d73fcd1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC5" ref="0x7f1d73fbb570" loc="164:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC5" scoped="" ref="0x7f1d73fbb570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1d73fbb8f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1d73fbba80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1d73fbbc10"/>
        <function-ref name="toggle" scoped="" ref="0x7f1d73fbbda0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1d73fba020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1d73fba1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1d73fba340"/>
        <function-ref name="get" scoped="" ref="0x7f1d73fba4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1d73fba660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1d73fba7f0"/>
        <function-ref name="set" scoped="" ref="0x7f1d73fba980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1d73fbab10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1d73fbaca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1d73fb9020"/>
        <function-ref name="clr" scoped="" ref="0x7f1d73fb91b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port41" ref="0x7f1d74011200" loc="83:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port41" scoped="" ref="0x7f1d74011200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1d74011580"/>
        <function-ref name="isInput" scoped="" ref="0x7f1d74011710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1d740118a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1d74011a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1d74011bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1d74011d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1d74010020"/>
        <function-ref name="get" scoped="" ref="0x7f1d740101b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1d74010340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1d740104d0"/>
        <function-ref name="set" scoped="" ref="0x7f1d74010660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1d740107f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1d74010980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1d74010c10"/>
        <function-ref name="clr" scoped="" ref="0x7f1d74010da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port53" ref="0x7f1d73ffc200" loc="96:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port53" scoped="" ref="0x7f1d73ffc200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1d73ffc580"/>
        <function-ref name="isInput" scoped="" ref="0x7f1d73ffc710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1d73ffc8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1d73ffca30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1d73ffcbc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1d73ffcd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1d73ffb020"/>
        <function-ref name="get" scoped="" ref="0x7f1d73ffb1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1d73ffb340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1d73ffb4d0"/>
        <function-ref name="set" scoped="" ref="0x7f1d73ffb660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1d73ffb7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1d73ffb980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1d73ffbc10"/>
        <function-ref name="clr" scoped="" ref="0x7f1d73ffbda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port63" ref="0x7f1d73fec200" loc="107:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port63" scoped="" ref="0x7f1d73fec200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1d73fec580"/>
        <function-ref name="isInput" scoped="" ref="0x7f1d73fec710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1d73fec8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1d73feca30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1d73fecbc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1d73fecd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1d73feb020"/>
        <function-ref name="get" scoped="" ref="0x7f1d73feb1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1d73feb340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1d73feb4d0"/>
        <function-ref name="set" scoped="" ref="0x7f1d73feb660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1d73feb7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1d73feb980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1d73febc10"/>
        <function-ref name="clr" scoped="" ref="0x7f1d73febda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x7f1d74037020" loc="55:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x7f1d74037020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1d740373a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1d74037530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1d740376c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1d74037850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1d740379e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1d74037b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1d74037d00"/>
        <function-ref name="get" scoped="" ref="0x7f1d74036020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1d740361b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1d74036340"/>
        <function-ref name="set" scoped="" ref="0x7f1d740364d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1d74036660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1d740367f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1d74036a80"/>
        <function-ref name="clr" scoped="" ref="0x7f1d74036c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port61" ref="0x7f1d73ff0200" loc="105:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port61" scoped="" ref="0x7f1d73ff0200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1d73ff0580"/>
        <function-ref name="isInput" scoped="" ref="0x7f1d73ff0710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1d73ff08a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1d73ff0a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1d73ff0bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1d73ff0d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1d73fef020"/>
        <function-ref name="get" scoped="" ref="0x7f1d73fef1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1d73fef340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1d73fef4d0"/>
        <function-ref name="set" scoped="" ref="0x7f1d73fef660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1d73fef7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1d73fef980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1d73fefc10"/>
        <function-ref name="clr" scoped="" ref="0x7f1d73fefda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x7f1d74033020" loc="60:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x7f1d74033020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1d740333a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1d74033530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1d740336c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1d74033850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1d740339e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1d74033b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1d74033d00"/>
        <function-ref name="get" scoped="" ref="0x7f1d74032020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1d740321b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1d74032340"/>
        <function-ref name="set" scoped="" ref="0x7f1d740324d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1d74032660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1d740327f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1d74032a80"/>
        <function-ref name="clr" scoped="" ref="0x7f1d74032c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port32" ref="0x7f1d7401f020" loc="73:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port32" scoped="" ref="0x7f1d7401f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1d7401f3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1d7401f530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1d7401f6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1d7401f850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1d7401f9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1d7401fb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1d7401fd00"/>
        <function-ref name="get" scoped="" ref="0x7f1d7401e020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1d7401e1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1d7401e340"/>
        <function-ref name="set" scoped="" ref="0x7f1d7401e4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1d7401e660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1d7401e7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1d7401ea80"/>
        <function-ref name="clr" scoped="" ref="0x7f1d7401ec10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port44" ref="0x7f1d7400a200" loc="86:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port44" scoped="" ref="0x7f1d7400a200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1d7400a580"/>
        <function-ref name="isInput" scoped="" ref="0x7f1d7400a710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1d7400a8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1d7400aa30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1d7400abc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1d7400ad50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1d74009020"/>
        <function-ref name="get" scoped="" ref="0x7f1d740091b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1d74009340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1d740094d0"/>
        <function-ref name="set" scoped="" ref="0x7f1d74009660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1d740097f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1d74009980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1d74009c10"/>
        <function-ref name="clr" scoped="" ref="0x7f1d74009da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port56" ref="0x7f1d73ff6200" loc="99:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port56" scoped="" ref="0x7f1d73ff6200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1d73ff6580"/>
        <function-ref name="isInput" scoped="" ref="0x7f1d73ff6710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1d73ff68a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1d73ff6a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1d73ff6bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1d73ff6d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1d73ff5020"/>
        <function-ref name="get" scoped="" ref="0x7f1d73ff51b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1d73ff5340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1d73ff54d0"/>
        <function-ref name="set" scoped="" ref="0x7f1d73ff5660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1d73ff57f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1d73ff5980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1d73ff5c10"/>
        <function-ref name="clr" scoped="" ref="0x7f1d73ff5da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port66" ref="0x7f1d73fe6200" loc="110:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port66" scoped="" ref="0x7f1d73fe6200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1d73fe6580"/>
        <function-ref name="isInput" scoped="" ref="0x7f1d73fe6710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1d73fe68a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1d73fe6a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1d73fe6bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1d73fe6d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1d73fe5020"/>
        <function-ref name="get" scoped="" ref="0x7f1d73fe51b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1d73fe5340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1d73fe54d0"/>
        <function-ref name="set" scoped="" ref="0x7f1d73fe5660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1d73fe57f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1d73fe5980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1d73fe5c10"/>
        <function-ref name="clr" scoped="" ref="0x7f1d73fe5da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x7f1d74042020" loc="50:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x7f1d74042020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1d740423a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1d74042530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1d740426c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1d74042850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1d740429e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1d74042b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1d74042d00"/>
        <function-ref name="get" scoped="" ref="0x7f1d74041020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1d740411b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1d74041340"/>
        <function-ref name="set" scoped="" ref="0x7f1d740414d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1d74041660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1d740417f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1d74041a80"/>
        <function-ref name="clr" scoped="" ref="0x7f1d74041c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x7f1d7402d020" loc="63:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x7f1d7402d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1d7402d3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1d7402d530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1d7402d6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1d7402d850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1d7402d9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1d7402db70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1d7402dd00"/>
        <function-ref name="get" scoped="" ref="0x7f1d7402c020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1d7402c1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1d7402c340"/>
        <function-ref name="set" scoped="" ref="0x7f1d7402c4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1d7402c660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1d7402c7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1d7402ca80"/>
        <function-ref name="clr" scoped="" ref="0x7f1d7402cc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port35" ref="0x7f1d74019020" loc="76:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port35" scoped="" ref="0x7f1d74019020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1d740193a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1d74019530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1d740196c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1d74019850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1d740199e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1d74019b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1d74019d00"/>
        <function-ref name="get" scoped="" ref="0x7f1d74018020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1d740181b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1d74018340"/>
        <function-ref name="set" scoped="" ref="0x7f1d740184d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1d74018660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1d740187f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1d74018a80"/>
        <function-ref name="clr" scoped="" ref="0x7f1d74018c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port47" ref="0x7f1d74004200" loc="89:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port47" scoped="" ref="0x7f1d74004200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1d74004580"/>
        <function-ref name="isInput" scoped="" ref="0x7f1d74004710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1d740048a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1d74004a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1d74004bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1d74004d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1d74003020"/>
        <function-ref name="get" scoped="" ref="0x7f1d740031b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1d74003340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1d740034d0"/>
        <function-ref name="set" scoped="" ref="0x7f1d74003660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1d740037f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1d74003980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1d74003c10"/>
        <function-ref name="clr" scoped="" ref="0x7f1d74003da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SCL" ref="0x7f1d73fd7560" loc="148:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SCL" scoped="" ref="0x7f1d73fd7560"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1d73fd78e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1d73fd7a70"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1d73fd7c00"/>
        <function-ref name="toggle" scoped="" ref="0x7f1d73fd7d90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1d73fd6020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1d73fd61b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1d73fd6340"/>
        <function-ref name="get" scoped="" ref="0x7f1d73fd64d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1d73fd6660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1d73fd67f0"/>
        <function-ref name="set" scoped="" ref="0x7f1d73fd6980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1d73fd6b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1d73fd6ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1d73fd5020"/>
        <function-ref name="clr" scoped="" ref="0x7f1d73fd51b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC2" ref="0x7f1d73fc1570" loc="161:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC2" scoped="" ref="0x7f1d73fc1570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1d73fc18f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1d73fc1a80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1d73fc1c10"/>
        <function-ref name="toggle" scoped="" ref="0x7f1d73fc1da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1d73fc0020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1d73fc01b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1d73fc0340"/>
        <function-ref name="get" scoped="" ref="0x7f1d73fc04d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1d73fc0660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1d73fc07f0"/>
        <function-ref name="set" scoped="" ref="0x7f1d73fc0980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1d73fc0b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1d73fc0ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1d73fbf020"/>
        <function-ref name="clr" scoped="" ref="0x7f1d73fbf1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCLK0" ref="0x7f1d73fd9580" loc="147:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK0" scoped="" ref="0x7f1d73fd9580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1d73fd9900"/>
        <function-ref name="isInput" scoped="" ref="0x7f1d73fd9a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1d73fd9c20"/>
        <function-ref name="toggle" scoped="" ref="0x7f1d73fd9db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1d73fd8020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1d73fd81b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1d73fd8340"/>
        <function-ref name="get" scoped="" ref="0x7f1d73fd84d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1d73fd8660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1d73fd87f0"/>
        <function-ref name="set" scoped="" ref="0x7f1d73fd8980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1d73fd8b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1d73fd8ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1d73fd7020"/>
        <function-ref name="clr" scoped="" ref="0x7f1d73fd71b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port51" ref="0x7f1d74000200" loc="94:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port51" scoped="" ref="0x7f1d74000200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1d74000580"/>
        <function-ref name="isInput" scoped="" ref="0x7f1d74000710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1d740008a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1d74000a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1d74000bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1d74000d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1d73fff020"/>
        <function-ref name="get" scoped="" ref="0x7f1d73fff1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1d73fff340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1d73fff4d0"/>
        <function-ref name="set" scoped="" ref="0x7f1d73fff660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1d73fff7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1d73fff980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1d73fffc10"/>
        <function-ref name="clr" scoped="" ref="0x7f1d73fffda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DAC0" ref="0x7f1d73fb5570" loc="168:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DAC0" scoped="" ref="0x7f1d73fb5570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1d73fb58f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1d73fb5a80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1d73fb5c10"/>
        <function-ref name="toggle" scoped="" ref="0x7f1d73fb5da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1d73fb4020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1d73fb41b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1d73fb4340"/>
        <function-ref name="get" scoped="" ref="0x7f1d73fb44d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1d73fb4660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1d73fb47f0"/>
        <function-ref name="set" scoped="" ref="0x7f1d73fb4980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1d73fb4b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1d73fb4ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1d73fb3020"/>
        <function-ref name="clr" scoped="" ref="0x7f1d73fb31b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SVSOUT" ref="0x7f1d73faf580" loc="172:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SVSOUT" scoped="" ref="0x7f1d73faf580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1d73faf900"/>
        <function-ref name="isInput" scoped="" ref="0x7f1d73fafa90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1d73fafc20"/>
        <function-ref name="toggle" scoped="" ref="0x7f1d73fafdb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1d73fad020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1d73fad1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1d73fad340"/>
        <function-ref name="get" scoped="" ref="0x7f1d73fad4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1d73fad660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1d73fad7f0"/>
        <function-ref name="set" scoped="" ref="0x7f1d73fad980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1d73fadb10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1d73fadca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1d73fac020"/>
        <function-ref name="clr" scoped="" ref="0x7f1d73fac1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STE0" ref="0x7f1d73fe21f0" loc="143:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STE0" scoped="" ref="0x7f1d73fe21f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1d73fe2970"/>
        <function-ref name="isInput" scoped="" ref="0x7f1d73fe2b00"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1d73fe2c90"/>
        <function-ref name="toggle" scoped="" ref="0x7f1d73fe2e20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1d73fe1020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1d73fe11b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1d73fe1340"/>
        <function-ref name="get" scoped="" ref="0x7f1d73fe14d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1d73fe1660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1d73fe17f0"/>
        <function-ref name="set" scoped="" ref="0x7f1d73fe1980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1d73fe1b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1d73fe1ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1d73fe0020"/>
        <function-ref name="clr" scoped="" ref="0x7f1d73fe01b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1d73f836d0" loc="47:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P10"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1d73f836d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1d73f83a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f1d73f83be0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1d73f83d70"/>
        <function-ref name="toggle" scoped="" ref="0x7f1d73f82020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1d73f821b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1d73f82340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1d73f824d0"/>
        <function-ref name="get" scoped="" ref="0x7f1d73f82660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1d73f827f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1d73f82980"/>
        <function-ref name="set" scoped="" ref="0x7f1d73f82b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1d73f82ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1d73f82e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1d73f81120"/>
        <function-ref name="clr" scoped="" ref="0x7f1d73f812b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1d73f7e100" loc="47:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P11"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1d73f7e100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1d73f7e480"/>
        <function-ref name="isInput" scoped="" ref="0x7f1d73f7e610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1d73f7e7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1d73f7e930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1d73f7eac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1d73f7ec50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1d73f7ede0"/>
        <function-ref name="get" scoped="" ref="0x7f1d73f7d020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1d73f7d1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1d73f7d340"/>
        <function-ref name="set" scoped="" ref="0x7f1d73f7d4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1d73f7d660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1d73f7d7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1d73f7da80"/>
        <function-ref name="clr" scoped="" ref="0x7f1d73f7dc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1d73f7ad10" loc="47:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P12"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1d73f7ad10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1d73f790e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1d73f79270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1d73f79400"/>
        <function-ref name="toggle" scoped="" ref="0x7f1d73f79590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1d73f79720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1d73f798b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1d73f79a40"/>
        <function-ref name="get" scoped="" ref="0x7f1d73f79bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1d73f79d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1d73f78020"/>
        <function-ref name="set" scoped="" ref="0x7f1d73f781b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1d73f78340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1d73f784d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1d73f78760"/>
        <function-ref name="clr" scoped="" ref="0x7f1d73f788f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1d73f75740" loc="47:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P13"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1d73f75740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1d73f75ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1d73f75c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1d73f75de0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1d73f74020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1d73f741b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1d73f74340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1d73f744d0"/>
        <function-ref name="get" scoped="" ref="0x7f1d73f74660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1d73f747f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1d73f74980"/>
        <function-ref name="set" scoped="" ref="0x7f1d73f74b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1d73f74ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1d73f74e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1d73f73120"/>
        <function-ref name="clr" scoped="" ref="0x7f1d73f732b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1d73f70100" loc="47:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P14"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1d73f70100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1d73f70480"/>
        <function-ref name="isInput" scoped="" ref="0x7f1d73f70610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1d73f707a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1d73f70930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1d73f70ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1d73f70c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1d73f70de0"/>
        <function-ref name="get" scoped="" ref="0x7f1d73f6f020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1d73f6f1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1d73f6f340"/>
        <function-ref name="set" scoped="" ref="0x7f1d73f6f4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1d73f6f660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1d73f6f7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1d73f6fa80"/>
        <function-ref name="clr" scoped="" ref="0x7f1d73f6fc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1d73f6cd10" loc="47:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P15"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1d73f6cd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1d73f6b0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1d73f6b270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1d73f6b400"/>
        <function-ref name="toggle" scoped="" ref="0x7f1d73f6b590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1d73f6b720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1d73f6b8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1d73f6ba40"/>
        <function-ref name="get" scoped="" ref="0x7f1d73f6bbd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1d73f6bd60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1d73f6a020"/>
        <function-ref name="set" scoped="" ref="0x7f1d73f6a1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1d73f6a340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1d73f6a4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1d73f6a760"/>
        <function-ref name="clr" scoped="" ref="0x7f1d73f6a8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1d73f67740" loc="47:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P16"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1d73f67740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1d73f67ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1d73f67c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1d73f67de0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1d73f65020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1d73f651b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1d73f65340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1d73f654d0"/>
        <function-ref name="get" scoped="" ref="0x7f1d73f65660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1d73f657f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1d73f65980"/>
        <function-ref name="set" scoped="" ref="0x7f1d73f65b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1d73f65ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1d73f65e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1d73f64120"/>
        <function-ref name="clr" scoped="" ref="0x7f1d73f642b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1d73f61100" loc="47:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P17"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1d73f61100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1d73f61480"/>
        <function-ref name="isInput" scoped="" ref="0x7f1d73f61610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1d73f617a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1d73f61930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1d73f61ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1d73f61c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1d73f61de0"/>
        <function-ref name="get" scoped="" ref="0x7f1d73f60020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1d73f601b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1d73f60340"/>
        <function-ref name="set" scoped="" ref="0x7f1d73f604d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1d73f60660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1d73f607f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1d73f60a80"/>
        <function-ref name="clr" scoped="" ref="0x7f1d73f60c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1d73f5dd10" loc="47:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P20"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1d73f5dd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1d73f5c0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1d73f5c270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1d73f5c400"/>
        <function-ref name="toggle" scoped="" ref="0x7f1d73f5c590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1d73f5c720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1d73f5c8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1d73f5ca40"/>
        <function-ref name="get" scoped="" ref="0x7f1d73f5cbd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1d73f5cd60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1d73f5b020"/>
        <function-ref name="set" scoped="" ref="0x7f1d73f5b1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1d73f5b340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1d73f5b4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1d73f5b760"/>
        <function-ref name="clr" scoped="" ref="0x7f1d73f5b8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1d73f58740" loc="47:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P21"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1d73f58740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1d73f58ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1d73f58c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1d73f58de0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1d73f57020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1d73f571b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1d73f57340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1d73f574d0"/>
        <function-ref name="get" scoped="" ref="0x7f1d73f57660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1d73f577f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1d73f57980"/>
        <function-ref name="set" scoped="" ref="0x7f1d73f57b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1d73f57ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1d73f57e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1d73f56120"/>
        <function-ref name="clr" scoped="" ref="0x7f1d73f562b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1d73f53100" loc="47:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P22"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1d73f53100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1d73f53480"/>
        <function-ref name="isInput" scoped="" ref="0x7f1d73f53610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1d73f537a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1d73f53930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1d73f53ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1d73f53c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1d73f53de0"/>
        <function-ref name="get" scoped="" ref="0x7f1d73f52020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1d73f521b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1d73f52340"/>
        <function-ref name="set" scoped="" ref="0x7f1d73f524d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1d73f52660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1d73f527f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1d73f52a80"/>
        <function-ref name="clr" scoped="" ref="0x7f1d73f52c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1d73f4fd10" loc="47:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P23"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1d73f4fd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1d73f4e0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1d73f4e270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1d73f4e400"/>
        <function-ref name="toggle" scoped="" ref="0x7f1d73f4e590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1d73f4e720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1d73f4e8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1d73f4ea40"/>
        <function-ref name="get" scoped="" ref="0x7f1d73f4ebd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1d73f4ed60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1d73f4d020"/>
        <function-ref name="set" scoped="" ref="0x7f1d73f4d1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1d73f4d340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1d73f4d4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1d73f4d760"/>
        <function-ref name="clr" scoped="" ref="0x7f1d73f4d8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1d73f4a860" loc="47:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P24"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1d73f4a860"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1d73f4abe0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1d73f4ad70"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1d73f49020"/>
        <function-ref name="toggle" scoped="" ref="0x7f1d73f491b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1d73f49340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1d73f494d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1d73f49660"/>
        <function-ref name="get" scoped="" ref="0x7f1d73f497f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1d73f49980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1d73f49b10"/>
        <function-ref name="set" scoped="" ref="0x7f1d73f49ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1d73f49e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1d73f48020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1d73f482b0"/>
        <function-ref name="clr" scoped="" ref="0x7f1d73f48440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1d73f45270" loc="47:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P25"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1d73f45270"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1d73f455f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1d73f45780"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1d73f45910"/>
        <function-ref name="toggle" scoped="" ref="0x7f1d73f45aa0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1d73f45c30"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1d73f45dc0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1d73f44020"/>
        <function-ref name="get" scoped="" ref="0x7f1d73f441b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1d73f44340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1d73f444d0"/>
        <function-ref name="set" scoped="" ref="0x7f1d73f44660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1d73f447f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1d73f44980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1d73f44c10"/>
        <function-ref name="clr" scoped="" ref="0x7f1d73f44da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1d73f41d10" loc="47:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P26"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1d73f41d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1d73f3f0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1d73f3f270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1d73f3f400"/>
        <function-ref name="toggle" scoped="" ref="0x7f1d73f3f590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1d73f3f720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1d73f3f8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1d73f3fa40"/>
        <function-ref name="get" scoped="" ref="0x7f1d73f3fbd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1d73f3fd60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1d73f3e020"/>
        <function-ref name="set" scoped="" ref="0x7f1d73f3e1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1d73f3e340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1d73f3e4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1d73f3e760"/>
        <function-ref name="clr" scoped="" ref="0x7f1d73f3e8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1d73f3b740" loc="47:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P27"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1d73f3b740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1d73f3bac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1d73f3bc50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1d73f3bde0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1d73f3a020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1d73f3a1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1d73f3a340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1d73f3a4d0"/>
        <function-ref name="get" scoped="" ref="0x7f1d73f3a660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1d73f3a7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1d73f3a980"/>
        <function-ref name="set" scoped="" ref="0x7f1d73f3ab10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1d73f3aca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1d73f3ae30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1d73f39120"/>
        <function-ref name="clr" scoped="" ref="0x7f1d73f392b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1d73f36100" loc="47:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P30"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1d73f36100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1d73f36480"/>
        <function-ref name="isInput" scoped="" ref="0x7f1d73f36610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1d73f367a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1d73f36930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1d73f36ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1d73f36c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1d73f36de0"/>
        <function-ref name="get" scoped="" ref="0x7f1d73f35020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1d73f351b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1d73f35340"/>
        <function-ref name="set" scoped="" ref="0x7f1d73f354d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1d73f35660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1d73f357f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1d73f35a80"/>
        <function-ref name="clr" scoped="" ref="0x7f1d73f35c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1d73f32d10" loc="47:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P31"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1d73f32d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1d73f310e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1d73f31270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1d73f31400"/>
        <function-ref name="toggle" scoped="" ref="0x7f1d73f31590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1d73f31720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1d73f318b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1d73f31a40"/>
        <function-ref name="get" scoped="" ref="0x7f1d73f31bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1d73f31d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1d73f30020"/>
        <function-ref name="set" scoped="" ref="0x7f1d73f301b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1d73f30340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1d73f304d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1d73f30760"/>
        <function-ref name="clr" scoped="" ref="0x7f1d73f308f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1d73f2d740" loc="47:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P32"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1d73f2d740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1d73f2dac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1d73f2dc50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1d73f2dde0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1d73f2c020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1d73f2c1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1d73f2c340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1d73f2c4d0"/>
        <function-ref name="get" scoped="" ref="0x7f1d73f2c660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1d73f2c7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1d73f2c980"/>
        <function-ref name="set" scoped="" ref="0x7f1d73f2cb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1d73f2cca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1d73f2ce30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1d73f2b120"/>
        <function-ref name="clr" scoped="" ref="0x7f1d73f2b2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1d73f28100" loc="47:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P33"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1d73f28100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1d73f28480"/>
        <function-ref name="isInput" scoped="" ref="0x7f1d73f28610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1d73f287a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1d73f28930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1d73f28ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1d73f28c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1d73f28de0"/>
        <function-ref name="get" scoped="" ref="0x7f1d73f27020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1d73f271b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1d73f27340"/>
        <function-ref name="set" scoped="" ref="0x7f1d73f274d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1d73f27660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1d73f277f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1d73f27a80"/>
        <function-ref name="clr" scoped="" ref="0x7f1d73f27c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1d73f24d10" loc="47:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P34"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1d73f24d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1d73f230e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1d73f23270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1d73f23400"/>
        <function-ref name="toggle" scoped="" ref="0x7f1d73f23590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1d73f23720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1d73f238b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1d73f23a40"/>
        <function-ref name="get" scoped="" ref="0x7f1d73f23bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1d73f23d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1d73f22020"/>
        <function-ref name="set" scoped="" ref="0x7f1d73f221b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1d73f22340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1d73f224d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1d73f22760"/>
        <function-ref name="clr" scoped="" ref="0x7f1d73f228f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1d73f1f740" loc="47:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P35"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1d73f1f740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1d73f1fac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1d73f1fc50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1d73f1fde0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1d73f1e020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1d73f1e1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1d73f1e340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1d73f1e4d0"/>
        <function-ref name="get" scoped="" ref="0x7f1d73f1e660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1d73f1e7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1d73f1e980"/>
        <function-ref name="set" scoped="" ref="0x7f1d73f1eb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1d73f1eca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1d73f1ee30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1d73f1d120"/>
        <function-ref name="clr" scoped="" ref="0x7f1d73f1d2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1d73f19100" loc="47:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P36"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1d73f19100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1d73f19480"/>
        <function-ref name="isInput" scoped="" ref="0x7f1d73f19610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1d73f197a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1d73f19930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1d73f19ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1d73f19c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1d73f19de0"/>
        <function-ref name="get" scoped="" ref="0x7f1d73f18020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1d73f181b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1d73f18340"/>
        <function-ref name="set" scoped="" ref="0x7f1d73f184d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1d73f18660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1d73f187f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1d73f18a80"/>
        <function-ref name="clr" scoped="" ref="0x7f1d73f18c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1d73f15d10" loc="47:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P37"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1d73f15d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1d73f140e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1d73f14270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1d73f14400"/>
        <function-ref name="toggle" scoped="" ref="0x7f1d73f14590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1d73f14720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1d73f148b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1d73f14a40"/>
        <function-ref name="get" scoped="" ref="0x7f1d73f14bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1d73f14d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1d73f13020"/>
        <function-ref name="set" scoped="" ref="0x7f1d73f131b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1d73f13340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1d73f134d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1d73f13760"/>
        <function-ref name="clr" scoped="" ref="0x7f1d73f138f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1d73f10a60" loc="47:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P40"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1d73f10a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1d73f10de0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1d73f0f020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1d73f0f1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1d73f0f340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1d73f0f4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1d73f0f660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1d73f0f7f0"/>
        <function-ref name="get" scoped="" ref="0x7f1d73f0f980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1d73f0fb10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1d73f0fca0"/>
        <function-ref name="set" scoped="" ref="0x7f1d73f0fe30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1d73f0e020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1d73f0e1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1d73f0e440"/>
        <function-ref name="clr" scoped="" ref="0x7f1d73f0e5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1d73f0b460" loc="47:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P41"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1d73f0b460"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1d73f0b7e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1d73f0b970"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1d73f0bb00"/>
        <function-ref name="toggle" scoped="" ref="0x7f1d73f0bc90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1d73f0be20"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1d73f0a020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1d73f0a1b0"/>
        <function-ref name="get" scoped="" ref="0x7f1d73f0a340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1d73f0a4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1d73f0a660"/>
        <function-ref name="set" scoped="" ref="0x7f1d73f0a7f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1d73f0a980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1d73f0ab10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1d73f0ada0"/>
        <function-ref name="clr" scoped="" ref="0x7f1d73f09020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1d73f07e00" loc="47:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P42"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1d73f07e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1d73f061c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1d73f06350"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1d73f064e0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1d73f06670"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1d73f06800"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1d73f06990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1d73f06b20"/>
        <function-ref name="get" scoped="" ref="0x7f1d73f06cb0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1d73f06e40"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1d73f05020"/>
        <function-ref name="set" scoped="" ref="0x7f1d73f051b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1d73f05340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1d73f054d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1d73f05760"/>
        <function-ref name="clr" scoped="" ref="0x7f1d73f058f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1d73f02740" loc="47:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P43"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1d73f02740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1d73f02ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1d73f02c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1d73f02de0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1d73f01020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1d73f011b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1d73f01340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1d73f014d0"/>
        <function-ref name="get" scoped="" ref="0x7f1d73f01660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1d73f017f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1d73f01980"/>
        <function-ref name="set" scoped="" ref="0x7f1d73f01b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1d73f01ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1d73f01e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1d73f00120"/>
        <function-ref name="clr" scoped="" ref="0x7f1d73f002b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1d73efd100" loc="47:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P44"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1d73efd100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1d73efd480"/>
        <function-ref name="isInput" scoped="" ref="0x7f1d73efd610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1d73efd7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1d73efd930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1d73efdac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1d73efdc50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1d73efdde0"/>
        <function-ref name="get" scoped="" ref="0x7f1d73efc020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1d73efc1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1d73efc340"/>
        <function-ref name="set" scoped="" ref="0x7f1d73efc4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1d73efc660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1d73efc7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1d73efca80"/>
        <function-ref name="clr" scoped="" ref="0x7f1d73efcc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1d73ef9d10" loc="47:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P45"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1d73ef9d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1d73ef70e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1d73ef7270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1d73ef7400"/>
        <function-ref name="toggle" scoped="" ref="0x7f1d73ef7590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1d73ef7720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1d73ef78b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1d73ef7a40"/>
        <function-ref name="get" scoped="" ref="0x7f1d73ef7bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1d73ef7d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1d73ef6020"/>
        <function-ref name="set" scoped="" ref="0x7f1d73ef61b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1d73ef6340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1d73ef64d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1d73ef6760"/>
        <function-ref name="clr" scoped="" ref="0x7f1d73ef68f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1d73ef3740" loc="47:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P46"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1d73ef3740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1d73ef3ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1d73ef3c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1d73ef3de0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1d73ef2020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1d73ef21b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1d73ef2340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1d73ef24d0"/>
        <function-ref name="get" scoped="" ref="0x7f1d73ef2660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1d73ef27f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1d73ef2980"/>
        <function-ref name="set" scoped="" ref="0x7f1d73ef2b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1d73ef2ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1d73ef2e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1d73ef1120"/>
        <function-ref name="clr" scoped="" ref="0x7f1d73ef12b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1d73eee100" loc="47:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P47"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1d73eee100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1d73eee480"/>
        <function-ref name="isInput" scoped="" ref="0x7f1d73eee610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1d73eee7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1d73eee930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1d73eeeac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1d73eeec50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1d73eeede0"/>
        <function-ref name="get" scoped="" ref="0x7f1d73eed020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1d73eed1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1d73eed340"/>
        <function-ref name="set" scoped="" ref="0x7f1d73eed4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1d73eed660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1d73eed7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1d73eeda80"/>
        <function-ref name="clr" scoped="" ref="0x7f1d73eedc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1d73eead10" loc="47:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P50"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1d73eead10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1d73ee90e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1d73ee9270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1d73ee9400"/>
        <function-ref name="toggle" scoped="" ref="0x7f1d73ee9590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1d73ee9720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1d73ee98b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1d73ee9a40"/>
        <function-ref name="get" scoped="" ref="0x7f1d73ee9bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1d73ee9d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1d73ee8020"/>
        <function-ref name="set" scoped="" ref="0x7f1d73ee81b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1d73ee8340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1d73ee84d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1d73ee8760"/>
        <function-ref name="clr" scoped="" ref="0x7f1d73ee88f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1d73ee5740" loc="47:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P51"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1d73ee5740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1d73ee5ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1d73ee5c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1d73ee5de0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1d73ee4020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1d73ee41b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1d73ee4340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1d73ee44d0"/>
        <function-ref name="get" scoped="" ref="0x7f1d73ee4660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1d73ee47f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1d73ee4980"/>
        <function-ref name="set" scoped="" ref="0x7f1d73ee4b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1d73ee4ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1d73ee4e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1d73ee3120"/>
        <function-ref name="clr" scoped="" ref="0x7f1d73ee32b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1d73ee0100" loc="47:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P52"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1d73ee0100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1d73ee0480"/>
        <function-ref name="isInput" scoped="" ref="0x7f1d73ee0610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1d73ee07a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1d73ee0930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1d73ee0ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1d73ee0c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1d73ee0de0"/>
        <function-ref name="get" scoped="" ref="0x7f1d73edf020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1d73edf1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1d73edf340"/>
        <function-ref name="set" scoped="" ref="0x7f1d73edf4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1d73edf660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1d73edf7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1d73edfa80"/>
        <function-ref name="clr" scoped="" ref="0x7f1d73edfc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1d73edcd10" loc="47:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P53"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1d73edcd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1d73edb0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1d73edb270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1d73edb400"/>
        <function-ref name="toggle" scoped="" ref="0x7f1d73edb590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1d73edb720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1d73edb8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1d73edba40"/>
        <function-ref name="get" scoped="" ref="0x7f1d73edbbd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1d73edbd60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1d73eda020"/>
        <function-ref name="set" scoped="" ref="0x7f1d73eda1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1d73eda340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1d73eda4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1d73eda760"/>
        <function-ref name="clr" scoped="" ref="0x7f1d73eda8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1d73ed7740" loc="47:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P54"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1d73ed7740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1d73ed7ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1d73ed7c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1d73ed7de0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1d73ed6020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1d73ed61b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1d73ed6340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1d73ed64d0"/>
        <function-ref name="get" scoped="" ref="0x7f1d73ed6660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1d73ed67f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1d73ed6980"/>
        <function-ref name="set" scoped="" ref="0x7f1d73ed6b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1d73ed6ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1d73ed6e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1d73ed5120"/>
        <function-ref name="clr" scoped="" ref="0x7f1d73ed52b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1d73ed2100" loc="47:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P55"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1d73ed2100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1d73ed2480"/>
        <function-ref name="isInput" scoped="" ref="0x7f1d73ed2610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1d73ed27a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1d73ed2930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1d73ed2ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1d73ed2c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1d73ed2de0"/>
        <function-ref name="get" scoped="" ref="0x7f1d73ed0020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1d73ed01b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1d73ed0340"/>
        <function-ref name="set" scoped="" ref="0x7f1d73ed04d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1d73ed0660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1d73ed07f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1d73ed0a80"/>
        <function-ref name="clr" scoped="" ref="0x7f1d73ed0c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1d73ecdd10" loc="47:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P56"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1d73ecdd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1d73ecc0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1d73ecc270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1d73ecc400"/>
        <function-ref name="toggle" scoped="" ref="0x7f1d73ecc590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1d73ecc720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1d73ecc8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1d73ecca40"/>
        <function-ref name="get" scoped="" ref="0x7f1d73eccbd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1d73eccd60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1d73ecb020"/>
        <function-ref name="set" scoped="" ref="0x7f1d73ecb1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1d73ecb340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1d73ecb4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1d73ecb760"/>
        <function-ref name="clr" scoped="" ref="0x7f1d73ecb8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1d73ec8740" loc="47:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P57"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1d73ec8740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1d73ec8ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1d73ec8c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1d73ec8de0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1d73ec7020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1d73ec71b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1d73ec7340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1d73ec74d0"/>
        <function-ref name="get" scoped="" ref="0x7f1d73ec7660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1d73ec77f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1d73ec7980"/>
        <function-ref name="set" scoped="" ref="0x7f1d73ec7b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1d73ec7ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1d73ec7e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1d73ec6120"/>
        <function-ref name="clr" scoped="" ref="0x7f1d73ec62b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1d73ec3100" loc="47:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P60"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1d73ec3100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1d73ec3480"/>
        <function-ref name="isInput" scoped="" ref="0x7f1d73ec3610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1d73ec37a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1d73ec3930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1d73ec3ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1d73ec3c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1d73ec3de0"/>
        <function-ref name="get" scoped="" ref="0x7f1d73ec2020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1d73ec21b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1d73ec2340"/>
        <function-ref name="set" scoped="" ref="0x7f1d73ec24d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1d73ec2660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1d73ec27f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1d73ec2a80"/>
        <function-ref name="clr" scoped="" ref="0x7f1d73ec2c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1d73ebfd10" loc="47:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P61"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1d73ebfd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1d73ebe0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1d73ebe270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1d73ebe400"/>
        <function-ref name="toggle" scoped="" ref="0x7f1d73ebe590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1d73ebe720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1d73ebe8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1d73ebea40"/>
        <function-ref name="get" scoped="" ref="0x7f1d73ebebd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1d73ebed60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1d73ebd020"/>
        <function-ref name="set" scoped="" ref="0x7f1d73ebd1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1d73ebd340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1d73ebd4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1d73ebd760"/>
        <function-ref name="clr" scoped="" ref="0x7f1d73ebd8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1d73eba740" loc="47:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P62"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1d73eba740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1d73ebaac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1d73ebac50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1d73ebade0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1d73eb9020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1d73eb91b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1d73eb9340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1d73eb94d0"/>
        <function-ref name="get" scoped="" ref="0x7f1d73eb9660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1d73eb97f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1d73eb9980"/>
        <function-ref name="set" scoped="" ref="0x7f1d73eb9b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1d73eb9ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1d73eb9e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1d73eb8120"/>
        <function-ref name="clr" scoped="" ref="0x7f1d73eb82b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1d73eb5100" loc="47:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P63"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1d73eb5100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1d73eb5480"/>
        <function-ref name="isInput" scoped="" ref="0x7f1d73eb5610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1d73eb57a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1d73eb5930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1d73eb5ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1d73eb5c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1d73eb5de0"/>
        <function-ref name="get" scoped="" ref="0x7f1d73eb4020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1d73eb41b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1d73eb4340"/>
        <function-ref name="set" scoped="" ref="0x7f1d73eb44d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1d73eb4660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1d73eb47f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1d73eb4a80"/>
        <function-ref name="clr" scoped="" ref="0x7f1d73eb4c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1d73eb1d10" loc="47:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P64"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1d73eb1d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1d73eb00e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1d73eb0270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1d73eb0400"/>
        <function-ref name="toggle" scoped="" ref="0x7f1d73eb0590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1d73eb0720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1d73eb08b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1d73eb0a40"/>
        <function-ref name="get" scoped="" ref="0x7f1d73eb0bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1d73eb0d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1d73eaf020"/>
        <function-ref name="set" scoped="" ref="0x7f1d73eaf1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1d73eaf340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1d73eaf4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1d73eaf760"/>
        <function-ref name="clr" scoped="" ref="0x7f1d73eaf8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1d73eab740" loc="47:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P65"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1d73eab740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1d73eabac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1d73eabc50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1d73eabde0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1d73eaa020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1d73eaa1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1d73eaa340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1d73eaa4d0"/>
        <function-ref name="get" scoped="" ref="0x7f1d73eaa660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1d73eaa7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1d73eaa980"/>
        <function-ref name="set" scoped="" ref="0x7f1d73eaab10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1d73eaaca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1d73eaae30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1d73ea9120"/>
        <function-ref name="clr" scoped="" ref="0x7f1d73ea92b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1d73ea6100" loc="47:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P66"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1d73ea6100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1d73ea6480"/>
        <function-ref name="isInput" scoped="" ref="0x7f1d73ea6610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1d73ea67a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1d73ea6930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1d73ea6ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1d73ea6c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1d73ea6de0"/>
        <function-ref name="get" scoped="" ref="0x7f1d73ea5020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1d73ea51b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1d73ea5340"/>
        <function-ref name="set" scoped="" ref="0x7f1d73ea54d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1d73ea5660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1d73ea57f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1d73ea5a80"/>
        <function-ref name="clr" scoped="" ref="0x7f1d73ea5c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1d73ea2d10" loc="47:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P67"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f1d73ea2d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1d73ea10e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1d73ea1270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1d73ea1400"/>
        <function-ref name="toggle" scoped="" ref="0x7f1d73ea1590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1d73ea1720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1d73ea18b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1d73ea1a40"/>
        <function-ref name="get" scoped="" ref="0x7f1d73ea1bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1d73ea1d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1d73ea0020"/>
        <function-ref name="set" scoped="" ref="0x7f1d73ea01b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1d73ea0340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1d73ea04d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1d73ea0760"/>
        <function-ref name="clr" scoped="" ref="0x7f1d73ea08f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f1d73e292f0" loc="44:/home/hades/tinyos-new/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led0Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f1d73e292f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1d73e29670"/>
        <function-ref name="isInput" scoped="" ref="0x7f1d73e29800"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1d73e29990"/>
        <function-ref name="toggle" scoped="" ref="0x7f1d73e29b20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1d73e29cb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1d73e29e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1d73e28020"/>
        <function-ref name="get" scoped="" ref="0x7f1d73e281b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1d73e28340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1d73e284d0"/>
        <function-ref name="set" scoped="" ref="0x7f1d73e28660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1d73e287f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1d73e28980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1d73e28c10"/>
        <function-ref name="clr" scoped="" ref="0x7f1d73e28da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f1d73e3a020" loc="43:/home/hades/tinyos-new/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led0Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f1d73e3a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1d73e3a3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1d73e3a530"/>
        <function-ref name="toggle" scoped="" ref="0x7f1d73e3a6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1d73e3a850"/>
        <function-ref name="get" scoped="" ref="0x7f1d73e3a9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1d73e3ab70"/>
        <function-ref name="set" scoped="" ref="0x7f1d73e3ad00"/>
        <function-ref name="clr" scoped="" ref="0x7f1d73e29020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f1d73e25de0" loc="44:/home/hades/tinyos-new/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led1Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f1d73e25de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1d73e24180"/>
        <function-ref name="isInput" scoped="" ref="0x7f1d73e24310"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1d73e244a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1d73e24630"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1d73e247c0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1d73e24950"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1d73e24ae0"/>
        <function-ref name="get" scoped="" ref="0x7f1d73e24c70"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1d73e24e00"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1d73e23020"/>
        <function-ref name="set" scoped="" ref="0x7f1d73e231b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1d73e23340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1d73e234d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1d73e23760"/>
        <function-ref name="clr" scoped="" ref="0x7f1d73e238f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f1d73e26b90" loc="43:/home/hades/tinyos-new/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led1Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f1d73e26b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1d73e25020"/>
        <function-ref name="isInput" scoped="" ref="0x7f1d73e251b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1d73e25340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1d73e254d0"/>
        <function-ref name="get" scoped="" ref="0x7f1d73e25660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1d73e257f0"/>
        <function-ref name="set" scoped="" ref="0x7f1d73e25980"/>
        <function-ref name="clr" scoped="" ref="0x7f1d73e25b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f1d73e20930" loc="44:/home/hades/tinyos-new/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led2Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f1d73e20930"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1d73e20cb0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1d73e20e40"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1d73e1e020"/>
        <function-ref name="toggle" scoped="" ref="0x7f1d73e1e1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1d73e1e340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1d73e1e4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1d73e1e660"/>
        <function-ref name="get" scoped="" ref="0x7f1d73e1e7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1d73e1e980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1d73e1eb10"/>
        <function-ref name="set" scoped="" ref="0x7f1d73e1eca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1d73e1ee30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1d73e1d020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1d73e1d2b0"/>
        <function-ref name="clr" scoped="" ref="0x7f1d73e1d440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f1d73e21710" loc="43:/home/hades/tinyos-new/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led2Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f1d73e21710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1d73e21a90"/>
        <function-ref name="isInput" scoped="" ref="0x7f1d73e21c20"/>
        <function-ref name="toggle" scoped="" ref="0x7f1d73e21db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1d73e20020"/>
        <function-ref name="get" scoped="" ref="0x7f1d73e201b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1d73e20340"/>
        <function-ref name="set" scoped="" ref="0x7f1d73e204d0"/>
        <function-ref name="clr" scoped="" ref="0x7f1d73e20660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f1d73e10360" loc="61:/home/hades/tinyos-new/tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f1d73e10360"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f1d73e106e0"/>
        <function-ref name="stopDone" scoped="" ref="0x7f1d73e10870"/>
        <function-ref name="start" scoped="" ref="0x7f1d73e10a00"/>
        <function-ref name="stop" scoped="" ref="0x7f1d73e10b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f1d73e0f3f0" loc="63:/home/hades/tinyos-new/tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f1d73e0f3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f1d740e7d50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1d73e0f770"/>
        <function-ref name="getPayload" scoped="" ref="0x7f1d73e0f900"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1d73e0fa90"/>
        <function-ref name="cancel" scoped="" ref="0x7f1d73e0fc20"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1d73e0fdb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7f1d73e0ddb0" loc="65:/home/hades/tinyos-new/tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0x7f1d73e0ddb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f1d740e7d50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f1d73e0c180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f1d73e0c410" loc="67:/home/hades/tinyos-new/tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f1d73e0c410"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1d73e0c790"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f1d73e0c920"/>
        <function-ref name="getPayload" scoped="" ref="0x7f1d73e0cab0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1d73e0cc40"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f1d73e0cdd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x7f1d73df4060" loc="70:/home/hades/tinyos-new/tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f1d73df4060"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1d740c1c10"/>
            <typename><typedef-ref name="T32khz" ref="0x7f1d740c0020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f1d74a34920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f1d73def5d0"/>
        <function-ref name="clear" scoped="" ref="0x7f1d73defd00"/>
        <function-ref name="isValid" scoped="" ref="0x7f1d73df4e70"/>
        <function-ref name="set" scoped="" ref="0x7f1d73de6460"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7f1d73ddbd90" loc="72:/home/hades/tinyos-new/tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7f1d73ddbd90"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f1d73de0180"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f1d73de0310"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f1d73de04a0"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f1d73de0630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f1d73e0d1d0" loc="64:/home/hades/tinyos-new/tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f1d73e0d1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f1d740e7d50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f1d73e0d550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7f1d73df0e00" loc="69:/home/hades/tinyos-new/tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f1d73df0e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f1d73df51c0"/>
        <function-ref name="noAck" scoped="" ref="0x7f1d73df5350"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f1d73df54e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f1d73df6370" loc="68:/home/hades/tinyos-new/tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f1d73df6370"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f1d73df66f0"/>
        <function-ref name="source" scoped="" ref="0x7f1d73df6880"/>
        <function-ref name="address" scoped="" ref="0x7f1d73df6a10"/>
        <function-ref name="destination" scoped="" ref="0x7f1d73df6ba0"/>
        <function-ref name="setSource" scoped="" ref="0x7f1d73df6d30"/>
        <function-ref name="setDestination" scoped="" ref="0x7f1d73e07020"/>
        <function-ref name="type" scoped="" ref="0x7f1d73e071b0"/>
        <function-ref name="setType" scoped="" ref="0x7f1d73e07340"/>
        <function-ref name="isForMe" scoped="" ref="0x7f1d73e074d0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f1d73e07660"/>
        <function-ref name="localGroup" scoped="" ref="0x7f1d73e077f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7f1d73de5130" loc="71:/home/hades/tinyos-new/tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f1d73de5130"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1d740c1460"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1d740c17d0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f1d74a34920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f1d73de4750"/>
        <function-ref name="clear" scoped="" ref="0x7f1d73de4e80"/>
        <function-ref name="isValid" scoped="" ref="0x7f1d73de4020"/>
        <function-ref name="set" scoped="" ref="0x7f1d73de25d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f1d73dcec10" loc="55:/home/hades/tinyos-new/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f1d73dcec10"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f1d73dcd020"/>
        <function-ref name="stopDone" scoped="" ref="0x7f1d73dcd1b0"/>
        <function-ref name="start" scoped="" ref="0x7f1d73dcd340"/>
        <function-ref name="stop" scoped="" ref="0x7f1d73dcd4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7f1d73db4e30" loc="64:/home/hades/tinyos-new/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7f1d73db4e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f1d740e7d50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f1d73dbc1e0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f1d73dbc370"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f1d73dbc500"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f1d73dbc690"/>
        <function-ref name="setCca" scoped="" ref="0x7f1d73dbc820"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f1d73dbc9b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x7f1d73da7d20" loc="67:/home/hades/tinyos-new/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendNotifier" scoped="" ref="0x7f1d73da7d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f1d740e7d50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x7f1d73db11c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f1d73dc88f0" loc="60:/home/hades/tinyos-new/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f1d73dc88f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1d73dc8c70"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f1d73dc8e00"/>
        <function-ref name="getPayload" scoped="" ref="0x7f1d73dc7020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1d73dc71b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f1d73dc7340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f1d73dcdca0" loc="56:/home/hades/tinyos-new/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f1d73dcdca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f1d740e7d50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1d73dcc0a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f1d73dcc230"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1d73dcc3c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f1d73dcc550"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1d73dcc6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7f1d73dcac00" loc="58:/home/hades/tinyos-new/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0x7f1d73dcac00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f1d740e7d50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f1d73dc9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7f1d73dbf9b0" loc="61:/home/hades/tinyos-new/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f1d73dbf9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f1d73dbfd30"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f1d73dc6020"/>
        <function-ref name="getRssi" scoped="" ref="0x7f1d73dc61b0"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f1d73dc6340"/>
        <function-ref name="getPower" scoped="" ref="0x7f1d73dc64d0"/>
        <function-ref name="getLqi" scoped="" ref="0x7f1d73dc6660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7f1d73dbccb0" loc="65:/home/hades/tinyos-new/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7f1d73dbccb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f1d73dba0a0"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f1d73dba230"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f1d73dba3c0"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f1d73dba550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f1d73dca020" loc="57:/home/hades/tinyos-new/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f1d73dca020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f1d740e7d50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f1d73dca3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7f1d73dc6990" loc="62:/home/hades/tinyos-new/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f1d73dc6990"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f1d73dc6d10"/>
        <function-ref name="noAck" scoped="" ref="0x7f1d73dc5020"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f1d73dc51b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7f1d73db2020" loc="66:/home/hades/tinyos-new/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x7f1d73db2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7f1d73db23a0"/>
        <function-ref name="setRetries" scoped="" ref="0x7f1d73db2530"/>
        <function-ref name="getRetries" scoped="" ref="0x7f1d73db26c0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7f1d73db2850"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7f1d73db29e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f1d73dc92d0" loc="59:/home/hades/tinyos-new/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f1d73dc92d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f1d73dc9650"/>
        <function-ref name="source" scoped="" ref="0x7f1d73dc97e0"/>
        <function-ref name="address" scoped="" ref="0x7f1d73dc9970"/>
        <function-ref name="destination" scoped="" ref="0x7f1d73dc9b00"/>
        <function-ref name="setSource" scoped="" ref="0x7f1d73dc9c90"/>
        <function-ref name="setDestination" scoped="" ref="0x7f1d73dc9e20"/>
        <function-ref name="type" scoped="" ref="0x7f1d73dc8020"/>
        <function-ref name="setType" scoped="" ref="0x7f1d73dc81b0"/>
        <function-ref name="isForMe" scoped="" ref="0x7f1d73dc8340"/>
        <function-ref name="setGroup" scoped="" ref="0x7f1d73dc84d0"/>
        <function-ref name="localGroup" scoped="" ref="0x7f1d73dc8660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7f1d73dbbc70" loc="63:/home/hades/tinyos-new/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f1d73dbbc70"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7f1d73dbd020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f1d73da6b80" loc="43:/home/hades/tinyos-new/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f1d73da6b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f1d73da3020"/>
        <function-ref name="stopDone" scoped="" ref="0x7f1d73da31b0"/>
        <function-ref name="start" scoped="" ref="0x7f1d73da3340"/>
        <function-ref name="stop" scoped="" ref="0x7f1d73da34d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7f1d73d909d0" loc="55:/home/hades/tinyos-new/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f1d73d909d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7f1d73d90d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7f1d73d8fb70" loc="57:/home/hades/tinyos-new/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x7f1d73d8fb70"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7f1d73d8e020"/>
        <function-ref name="setRetries" scoped="" ref="0x7f1d73d8e1b0"/>
        <function-ref name="getRetries" scoped="" ref="0x7f1d73d8e340"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7f1d73d8e4d0"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7f1d73d8e660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7f1d73d91020" loc="53:/home/hades/tinyos-new/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f1d73d91020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f1d73d913a0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f1d73d91530"/>
        <function-ref name="getRssi" scoped="" ref="0x7f1d73d916c0"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f1d73d91850"/>
        <function-ref name="getPower" scoped="" ref="0x7f1d73d919e0"/>
        <function-ref name="getLqi" scoped="" ref="0x7f1d73d91b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x7f1d73d9b990" loc="50:/home/hades/tinyos-new/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveSend" scoped="" ref="0x7f1d73d9b990"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1d73d9bd10"/>
        <function-ref name="getPayload" scoped="" ref="0x7f1d73d94020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1d73d941b0"/>
        <function-ref name="cancel" scoped="" ref="0x7f1d73d94340"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1d73d944d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7f1d73d8f080" loc="56:/home/hades/tinyos-new/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7f1d73d8f080"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f1d73d8f400"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f1d73d8f590"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f1d73d8f720"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f1d73d8f8b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x7f1d73d9c500" loc="47:/home/hades/tinyos-new/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareReceive" scoped="" ref="0x7f1d73d9c500"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f1d73d9c880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7f1d73d90020" loc="54:/home/hades/tinyos-new/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f1d73d90020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f1d73d903a0"/>
        <function-ref name="noAck" scoped="" ref="0x7f1d73d90530"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f1d73d906c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f1d73da2210" loc="45:/home/hades/tinyos-new/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f1d73da2210"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1d74a34160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1d73da2590"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f1d73da2720"/>
        <function-ref name="request" scoped="" ref="0x7f1d73da28b0"/>
        <function-ref name="granted" scoped="" ref="0x7f1d73da2a40"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1d73da2bd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x7f1d73d936f0" loc="46:/home/hades/tinyos-new/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareSend" scoped="" ref="0x7f1d73d936f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1d73d93a70"/>
        <function-ref name="getPayload" scoped="" ref="0x7f1d73d93c00"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1d73d93d90"/>
        <function-ref name="cancel" scoped="" ref="0x7f1d73d9c020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1d73d9c1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x7f1d73d9cbc0" loc="48:/home/hades/tinyos-new/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BarePacket" scoped="" ref="0x7f1d73d9cbc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1d73d9b020"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f1d73d9b1b0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f1d73d9b340"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1d73d9b4d0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f1d73d9b660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x7f1d73d94840" loc="51:/home/hades/tinyos-new/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveReceive" scoped="" ref="0x7f1d73d94840"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f1d73d94bc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f1d73d8b390" loc="44:/home/hades/tinyos-new/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f1d73d8b390"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f1d73d8b710"/>
        <function-ref name="stopDone" scoped="" ref="0x7f1d73d8b8a0"/>
        <function-ref name="start" scoped="" ref="0x7f1d73d8ba30"/>
        <function-ref name="stop" scoped="" ref="0x7f1d73d8bbc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7f1d73d89330" loc="47:/home/hades/tinyos-new/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7f1d73d89330"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f1d73d896b0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f1d73d89840"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f1d73d899d0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f1d73d89b60"/>
        <function-ref name="setCca" scoped="" ref="0x7f1d73d89cf0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f1d73d89e80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f1d73d8be80" loc="45:/home/hades/tinyos-new/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f1d73d8be80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1d73d8a220"/>
        <function-ref name="getPayload" scoped="" ref="0x7f1d73d8a3b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1d73d8a540"/>
        <function-ref name="cancel" scoped="" ref="0x7f1d73d8a6d0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1d73d8a860"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f1d73d8ab40" loc="46:/home/hades/tinyos-new/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f1d73d8ab40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f1d73d89020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f1d73d88e80" loc="39:/home/hades/tinyos-new/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f1d73d88e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f1d73d85220"/>
        <function-ref name="stopDone" scoped="" ref="0x7f1d73d853b0"/>
        <function-ref name="start" scoped="" ref="0x7f1d73d85540"/>
        <function-ref name="stop" scoped="" ref="0x7f1d73d856d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7f1d73d847e0" loc="41:/home/hades/tinyos-new/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7f1d73d847e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f1d73d84b60"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f1d73d84cf0"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f1d73d84e80"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f1d73d83030"/>
        <function-ref name="setCca" scoped="" ref="0x7f1d73d831c0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f1d73d83350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBackoff" ref="0x7f1d73d793e0" loc="47:/home/hades/tinyos-new/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubBackoff" scoped="" ref="0x7f1d73d793e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f1d73d79760"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f1d73d798f0"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f1d73d79a80"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f1d73d79c10"/>
        <function-ref name="setCca" scoped="" ref="0x7f1d73d79da0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f1d73d76020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7f1d73d6e7e0" loc="50:/home/hades/tinyos-new/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f1d73d6e7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f1d73d6eb60"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f1d73d6ecf0"/>
        <function-ref name="getRssi" scoped="" ref="0x7f1d73d6ee80"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f1d73d6b030"/>
        <function-ref name="getPower" scoped="" ref="0x7f1d73d6b1c0"/>
        <function-ref name="getLqi" scoped="" ref="0x7f1d73d6b350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Transmit" ref="0x7f1d73d704d0" loc="46:/home/hades/tinyos-new/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Transmit" scoped="" ref="0x7f1d73d704d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1d73d70850"/>
        <function-ref name="cancel" scoped="" ref="0x7f1d73d709e0"/>
        <function-ref name="modify" scoped="" ref="0x7f1d73d70b70"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1d73d70d00"/>
        <function-ref name="resend" scoped="" ref="0x7f1d73d79020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f1d73d85990" loc="40:/home/hades/tinyos-new/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f1d73d85990"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1d73d85d10"/>
        <function-ref name="getPayload" scoped="" ref="0x7f1d73d84020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1d73d841b0"/>
        <function-ref name="cancel" scoped="" ref="0x7f1d73d84340"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1d73d844d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x7f1d73d6d840" loc="48:/home/hades/tinyos-new/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x7f1d73d6d840"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7f1d73d6dbc0"/>
        <function-ref name="rand32" scoped="" ref="0x7f1d73d6dd50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x7f1d73d777a0" loc="45:/home/hades/tinyos-new/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubControl" scoped="" ref="0x7f1d73d777a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f1d73d77b20"/>
        <function-ref name="stop" scoped="" ref="0x7f1d73d77cb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f1d73d66d00" loc="51:/home/hades/tinyos-new/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f1d73d66d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f1d73d6a0a0"/>
        <function-ref name="getHeader" scoped="" ref="0x7f1d73d6a230"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f1d73d6a3c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Power" ref="0x7f1d73d7bb50" loc="44:/home/hades/tinyos-new/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Power" scoped="" ref="0x7f1d73d7bb50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x7f1d73d81020"/>
        <function-ref name="rfOff" scoped="" ref="0x7f1d73d811b0"/>
        <function-ref name="rxOn" scoped="" ref="0x7f1d73d81340"/>
        <function-ref name="startVReg" scoped="" ref="0x7f1d73d814d0"/>
        <function-ref name="stopVReg" scoped="" ref="0x7f1d73d81660"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x7f1d73d817f0"/>
        <function-ref name="stopOscillator" scoped="" ref="0x7f1d73d81980"/>
        <function-ref name="startVRegDone" scoped="" ref="0x7f1d73d81b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f1d73d6f080" loc="49:/home/hades/tinyos-new/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f1d73d6f080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f1d73d6f400"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f1d73d6f590"/>
        <function-ref name="led1On" scoped="" ref="0x7f1d73d6f720"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f1d73d6f8b0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f1d73d6fa40"/>
        <function-ref name="get" scoped="" ref="0x7f1d73d6fbd0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f1d73d6fd60"/>
        <function-ref name="led2Off" scoped="" ref="0x7f1d73d6e4d0"/>
        <function-ref name="set" scoped="" ref="0x7f1d73d6e020"/>
        <function-ref name="led0On" scoped="" ref="0x7f1d73d6e1b0"/>
        <function-ref name="led2On" scoped="" ref="0x7f1d73d6e340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7f1d73d83640" loc="43:/home/hades/tinyos-new/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f1d73d83640"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1d73d839c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f1d73d83b50"/>
        <function-ref name="request" scoped="" ref="0x7f1d73d83ce0"/>
        <function-ref name="granted" scoped="" ref="0x7f1d73d83e70"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1d73d82030"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControlState" ref="0x7f1d73d5e3f0" loc="52:/home/hades/tinyos-new/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControlState" scoped="" ref="0x7f1d73d5e3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f1d73d5e870"/>
        <function-ref name="toIdle" scoped="" ref="0x7f1d73d5ea00"/>
        <function-ref name="isState" scoped="" ref="0x7f1d73d5eb90"/>
        <function-ref name="isIdle" scoped="" ref="0x7f1d73d5ed20"/>
        <function-ref name="requestState" scoped="" ref="0x7f1d73d69020"/>
        <function-ref name="forceState" scoped="" ref="0x7f1d73d691b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendDone_task" ref="0x7f1d73d59020" loc="76:/home/hades/tinyos-new/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="sendDone_task" scoped="" ref="0x7f1d73d59020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f1d73d593a0"/>
        <function-ref name="runTask" scoped="" ref="0x7f1d73d59530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDone_task" ref="0x7f1d73d5b020" loc="75:/home/hades/tinyos-new/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="stopDone_task" scoped="" ref="0x7f1d73d5b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f1d73d5b3a0"/>
        <function-ref name="runTask" scoped="" ref="0x7f1d73d5b530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startDone_task" ref="0x7f1d73d5c020" loc="74:/home/hades/tinyos-new/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="startDone_task" scoped="" ref="0x7f1d73d5c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f1d73d5c3a0"/>
        <function-ref name="runTask" scoped="" ref="0x7f1d73d5c530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Config" ref="0x7f1d73d03dc0" loc="45:/home/hades/tinyos-new/tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x7f1d73d03dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7f1d73d0f180"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7f1d73d0f310"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7f1d73d0f4a0"/>
        <function-ref name="syncDone" scoped="" ref="0x7f1d73d0f630"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x7f1d73d0f7c0"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7f1d73d0f950"/>
        <function-ref name="setChannel" scoped="" ref="0x7f1d73d0fae0"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7f1d73d0fc70"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7f1d73d0fe00"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7f1d73d0e020"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7f1d73d0e1b0"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7f1d73d0e340"/>
        <function-ref name="sync" scoped="" ref="0x7f1d73d0e4d0"/>
        <function-ref name="getChannel" scoped="" ref="0x7f1d73d0e760"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7f1d73d0e8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadRssi" ref="0x7f1d73d01020" loc="47:/home/hades/tinyos-new/tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadRssi" scoped="" ref="0x7f1d73d01020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1d74a34520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1d73d01c10"/>
        <function-ref name="readDone" scoped="" ref="0x7f1d73d000d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Power" ref="0x7f1d73d0ebf0" loc="46:/home/hades/tinyos-new/tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Power" scoped="" ref="0x7f1d73d0ebf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x7f1d73d02020"/>
        <function-ref name="rfOff" scoped="" ref="0x7f1d73d021b0"/>
        <function-ref name="rxOn" scoped="" ref="0x7f1d73d02340"/>
        <function-ref name="startVReg" scoped="" ref="0x7f1d73d024d0"/>
        <function-ref name="stopVReg" scoped="" ref="0x7f1d73d02660"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x7f1d73d027f0"/>
        <function-ref name="stopOscillator" scoped="" ref="0x7f1d73d02980"/>
        <function-ref name="startVRegDone" scoped="" ref="0x7f1d73d02b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f1d73d13960" loc="44:/home/hades/tinyos-new/tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f1d73d13960"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1d73d13ce0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f1d73d13e70"/>
        <function-ref name="request" scoped="" ref="0x7f1d73d10030"/>
        <function-ref name="granted" scoped="" ref="0x7f1d73d101c0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1d73d10350"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Config" ref="0x7f1d73cfb970" loc="46:/home/hades/tinyos-new/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x7f1d73cfb970"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7f1d73cfbcf0"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7f1d73cfbe80"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7f1d73cfa030"/>
        <function-ref name="syncDone" scoped="" ref="0x7f1d73cfa1c0"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x7f1d73cfa350"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7f1d73cfa4e0"/>
        <function-ref name="setChannel" scoped="" ref="0x7f1d73cfa670"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7f1d73cfa800"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7f1d73cfa990"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7f1d73cfab20"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7f1d73cfacb0"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7f1d73cfae40"/>
        <function-ref name="sync" scoped="" ref="0x7f1d73cf9020"/>
        <function-ref name="getChannel" scoped="" ref="0x7f1d73cf92b0"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7f1d73cf9440"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXCTRL1" ref="0x7f1d73cd48e0" loc="66:/home/hades/tinyos-new/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7f1d73cd48e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1d73cd4c60"/>
        <function-ref name="write" scoped="" ref="0x7f1d73cd4df0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalIeeeEui64" ref="0x7f1d73cf5020" loc="50:/home/hades/tinyos-new/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f1d73cf5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x7f1d73cf53a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StartupTimer" ref="0x7f1d73cedd90" loc="52:/home/hades/tinyos-new/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StartupTimer" scoped="" ref="0x7f1d73cedd90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1d740c1c10"/>
            <typename><typedef-ref name="T32khz" ref="0x7f1d740c0020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f1d74a34920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f1d73ceb670"/>
        <function-ref name="fired" scoped="" ref="0x7f1d73cf35d0"/>
        <function-ref name="startAt" scoped="" ref="0x7f1d73ceb020"/>
        <function-ref name="isRunning" scoped="" ref="0x7f1d73cf3a90"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f1d73cebb30"/>
        <function-ref name="start" scoped="" ref="0x7f1d73cf4bc0"/>
        <function-ref name="stop" scoped="" ref="0x7f1d73cf3110"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL0" ref="0x7f1d73cd75f0" loc="64:/home/hades/tinyos-new/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7f1d73cd75f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1d73cd7970"/>
        <function-ref name="write" scoped="" ref="0x7f1d73cd7b00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSTN" ref="0x7f1d73ce8380" loc="54:/home/hades/tinyos-new/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSTN" scoped="" ref="0x7f1d73ce8380"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1d73ce8700"/>
        <function-ref name="isInput" scoped="" ref="0x7f1d73ce8890"/>
        <function-ref name="toggle" scoped="" ref="0x7f1d73ce8a20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1d73ce8bb0"/>
        <function-ref name="get" scoped="" ref="0x7f1d73ce8d40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1d73ce7020"/>
        <function-ref name="set" scoped="" ref="0x7f1d73ce71b0"/>
        <function-ref name="clr" scoped="" ref="0x7f1d73ce7340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadRssi" ref="0x7f1d73cf8b40" loc="48:/home/hades/tinyos-new/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadRssi" scoped="" ref="0x7f1d73cf8b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1d74a34520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1d73cf7750"/>
        <function-ref name="readDone" scoped="" ref="0x7f1d73cf7bd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="syncDone" ref="0x7f1d73cc2820" loc="126:/home/hades/tinyos-new/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="syncDone" scoped="" ref="0x7f1d73cc2820"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f1d73cc2ba0"/>
        <function-ref name="runTask" scoped="" ref="0x7f1d73cc2d30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSSI" ref="0x7f1d73cd31c0" loc="67:/home/hades/tinyos-new/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7f1d73cd31c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1d73cd3540"/>
        <function-ref name="write" scoped="" ref="0x7f1d73cd36d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXCTRL" ref="0x7f1d73cd3a70" loc="68:/home/hades/tinyos-new/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7f1d73cd3a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1d73cd3df0"/>
        <function-ref name="write" scoped="" ref="0x7f1d73cd2020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IOCFG0" ref="0x7f1d73cdc3d0" loc="62:/home/hades/tinyos-new/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7f1d73cdc3d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1d73cdc750"/>
        <function-ref name="write" scoped="" ref="0x7f1d73cdc8e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x7f1d73cdd810" loc="57:/home/hades/tinyos-new/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f1d73cdd810"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x7f1d73cddb90"/>
        <function-ref name="changed" scoped="" ref="0x7f1d73cddd20"/>
        <function-ref name="amGroup" scoped="" ref="0x7f1d73ce4020"/>
        <function-ref name="setAddress" scoped="" ref="0x7f1d73ce41b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x7f1d73ce9060" loc="53:/home/hades/tinyos-new/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x7f1d73ce9060"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1d73ce93e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1d73ce9570"/>
        <function-ref name="toggle" scoped="" ref="0x7f1d73ce9700"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1d73ce9890"/>
        <function-ref name="get" scoped="" ref="0x7f1d73ce9a20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1d73ce9bb0"/>
        <function-ref name="set" scoped="" ref="0x7f1d73ce9d40"/>
        <function-ref name="clr" scoped="" ref="0x7f1d73ce8020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SXOSCOFF" ref="0x7f1d73cd0160" loc="71:/home/hades/tinyos-new/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7f1d73cd0160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1d73cd06e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VREN" ref="0x7f1d73ce76a0" loc="55:/home/hades/tinyos-new/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VREN" scoped="" ref="0x7f1d73ce76a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1d73ce7a20"/>
        <function-ref name="isInput" scoped="" ref="0x7f1d73ce7bb0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1d73ce7d40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1d73ce6020"/>
        <function-ref name="get" scoped="" ref="0x7f1d73ce61b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1d73ce6340"/>
        <function-ref name="set" scoped="" ref="0x7f1d73ce64d0"/>
        <function-ref name="clr" scoped="" ref="0x7f1d73ce6660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f1d73cfc4a0" loc="44:/home/hades/tinyos-new/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f1d73cfc4a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1d73cfc820"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL1" ref="0x7f1d73cd4020" loc="65:/home/hades/tinyos-new/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f1d73cd4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1d73cd43a0"/>
        <function-ref name="write" scoped="" ref="0x7f1d73cd4530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SXOSCON" ref="0x7f1d73cd0a80" loc="72:/home/hades/tinyos-new/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7f1d73cd0a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1d73cd0e00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7f1d73ccf1d0" loc="74:/home/hades/tinyos-new/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x7f1d73ccf1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1d73ccf550"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f1d73ccf6e0"/>
        <function-ref name="request" scoped="" ref="0x7f1d73ccf870"/>
        <function-ref name="granted" scoped="" ref="0x7f1d73ccfa00"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1d73ccfb90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SyncResource" ref="0x7f1d73ccdd90" loc="76:/home/hades/tinyos-new/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SyncResource" scoped="" ref="0x7f1d73ccdd90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1d73ccc180"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f1d73ccc310"/>
        <function-ref name="request" scoped="" ref="0x7f1d73ccc4a0"/>
        <function-ref name="granted" scoped="" ref="0x7f1d73ccc630"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1d73ccc7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Power" ref="0x7f1d73cf9740" loc="47:/home/hades/tinyos-new/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Power" scoped="" ref="0x7f1d73cf9740"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x7f1d73cf9ac0"/>
        <function-ref name="rfOff" scoped="" ref="0x7f1d73cf9c50"/>
        <function-ref name="rxOn" scoped="" ref="0x7f1d73cf9de0"/>
        <function-ref name="startVReg" scoped="" ref="0x7f1d73cf8020"/>
        <function-ref name="stopVReg" scoped="" ref="0x7f1d73cf81b0"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x7f1d73cf8340"/>
        <function-ref name="stopOscillator" scoped="" ref="0x7f1d73cf84d0"/>
        <function-ref name="startVRegDone" scoped="" ref="0x7f1d73cf8660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IOCFG1" ref="0x7f1d73cdcc80" loc="63:/home/hades/tinyos-new/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7f1d73cdcc80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1d73cd70a0"/>
        <function-ref name="write" scoped="" ref="0x7f1d73cd7230"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FSCTRL" ref="0x7f1d73cd5b00" loc="61:/home/hades/tinyos-new/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7f1d73cd5b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1d73cd5e80"/>
        <function-ref name="write" scoped="" ref="0x7f1d73cdc030"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRXON" ref="0x7f1d73cce2e0" loc="69:/home/hades/tinyos-new/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7f1d73cce2e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1d73cce660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f1d73ccca80" loc="78:/home/hades/tinyos-new/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f1d73ccca80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f1d73ccce00"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f1d73ccb020"/>
        <function-ref name="led1On" scoped="" ref="0x7f1d73ccb1b0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f1d73ccb340"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f1d73ccb4d0"/>
        <function-ref name="get" scoped="" ref="0x7f1d73ccb660"/>
        <function-ref name="led1Off" scoped="" ref="0x7f1d73ccb7f0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f1d73ccbe30"/>
        <function-ref name="set" scoped="" ref="0x7f1d73ccb980"/>
        <function-ref name="led0On" scoped="" ref="0x7f1d73ccbb10"/>
        <function-ref name="led2On" scoped="" ref="0x7f1d73ccbca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sync" ref="0x7f1d73cc3940" loc="125:/home/hades/tinyos-new/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="sync" scoped="" ref="0x7f1d73cc3940"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f1d73cc3cc0"/>
        <function-ref name="runTask" scoped="" ref="0x7f1d73cc3e50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f1d73cfcb10" loc="45:/home/hades/tinyos-new/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f1d73cfcb10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1d73cfb020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f1d73cfb1b0"/>
        <function-ref name="request" scoped="" ref="0x7f1d73cfb340"/>
        <function-ref name="granted" scoped="" ref="0x7f1d73cfb4d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1d73cfb660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PANID" ref="0x7f1d73ce1520" loc="60:/home/hades/tinyos-new/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7f1d73ce1520"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1d73ce18a0"/>
        <function-ref name="write" scoped="" ref="0x7f1d73ce1a30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IEEEADR" ref="0x7f1d73cd8a90" loc="59:/home/hades/tinyos-new/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7f1d73cd8a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1d73ce1020"/>
        <function-ref name="write" scoped="" ref="0x7f1d73ce11b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptCCA" ref="0x7f1d73ce50e0" loc="56:/home/hades/tinyos-new/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptCCA" scoped="" ref="0x7f1d73ce50e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1d73ce5460"/>
        <function-ref name="disable" scoped="" ref="0x7f1d73ce55f0"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f1d73ce5780"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f1d73ce5910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RssiResource" ref="0x7f1d73ccd020" loc="75:/home/hades/tinyos-new/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RssiResource" scoped="" ref="0x7f1d73ccd020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1d73ccd3a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f1d73ccd530"/>
        <function-ref name="request" scoped="" ref="0x7f1d73ccd6c0"/>
        <function-ref name="granted" scoped="" ref="0x7f1d73ccd850"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1d73ccd9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRFOFF" ref="0x7f1d73cce9f0" loc="70:/home/hades/tinyos-new/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7f1d73cce9f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1d73cced70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f1d73c4c7f0" loc="45:/home/hades/tinyos-new/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <component-ref qname="AlarmMultiplexC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f1d73c4c7f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1d73c4cb70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm32khz32" ref="0x7f1d73c49220" loc="46:/home/hades/tinyos-new/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <component-ref qname="AlarmMultiplexC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm32khz32" scoped="" ref="0x7f1d73c49220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1d740c1c10"/>
            <typename><typedef-ref name="T32khz" ref="0x7f1d740c0020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f1d74a34920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f1d73c46b30"/>
        <function-ref name="fired" scoped="" ref="0x7f1d73c48a60"/>
        <function-ref name="startAt" scoped="" ref="0x7f1d73c464e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f1d73c46020"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f1d73c45020"/>
        <function-ref name="start" scoped="" ref="0x7f1d73c48090"/>
        <function-ref name="stop" scoped="" ref="0x7f1d73c485a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f1d73c43490" loc="42:/home/hades/tinyos-new/tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f1d73c43490"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1d73c43810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm32khz32" ref="0x7f1d73c43d20" loc="43:/home/hades/tinyos-new/tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm32khz32" scoped="" ref="0x7f1d73c43d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1d740c1c10"/>
            <typename><typedef-ref name="T32khz" ref="0x7f1d740c0020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f1d74a34920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f1d73b49670"/>
        <function-ref name="fired" scoped="" ref="0x7f1d73b4a550"/>
        <function-ref name="startAt" scoped="" ref="0x7f1d73b49020"/>
        <function-ref name="isRunning" scoped="" ref="0x7f1d73b4aa10"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f1d73b49b30"/>
        <function-ref name="start" scoped="" ref="0x7f1d73b4bb60"/>
        <function-ref name="stop" scoped="" ref="0x7f1d73b4a090"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f1d72435140" loc="44:/home/hades/tinyos-new/tos/chips/msp430/timer/Alarm32khz32C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f1d72435140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1d740c1c10"/>
            <typename><typedef-ref name="T32khz" ref="0x7f1d740c0020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f1d74a34920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f1d72433b30"/>
        <function-ref name="fired" scoped="" ref="0x7f1d724349f0"/>
        <function-ref name="startAt" scoped="" ref="0x7f1d724334e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f1d72433020"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f1d7241d020"/>
        <function-ref name="start" scoped="" ref="0x7f1d72434020"/>
        <function-ref name="stop" scoped="" ref="0x7f1d72434530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f1d72436860" loc="43:/home/hades/tinyos-new/tos/chips/msp430/timer/Alarm32khz32C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f1d72436860"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1d72436be0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f1d7241a2a0" loc="44:/home/hades/tinyos-new/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f1d7241a2a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1d740c1c10"/>
            <typename><typedef-ref name="T32khz" ref="0x7f1d740c0020"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1d74a34520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f1d72417b30"/>
        <function-ref name="fired" scoped="" ref="0x7f1d72418aa0"/>
        <function-ref name="startAt" scoped="" ref="0x7f1d724174e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f1d72417020"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f1d72416020"/>
        <function-ref name="start" scoped="" ref="0x7f1d724180d0"/>
        <function-ref name="stop" scoped="" ref="0x7f1d724185e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f1d7241ba10" loc="43:/home/hades/tinyos-new/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f1d7241ba10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1d7241bd90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x7f1d72401c10" loc="41:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7f1d72401c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1d72400020"/>
        <function-ref name="setEvent" scoped="" ref="0x7f1d724001b0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f1d72400340"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f1d724004d0"/>
        <function-ref name="fired" scoped="" ref="0x7f1d72400660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x7f1d724031b0" loc="39:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f1d724031b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1d72403530"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f1d724036c0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1d72403850"/>
        <function-ref name="get" scoped="" ref="0x7f1d724039e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1d72403b70"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1d72403d00"/>
        <function-ref name="getMode" scoped="" ref="0x7f1d72402020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1d724021b0"/>
        <function-ref name="overflow" scoped="" ref="0x7f1d72402340"/>
        <function-ref name="setMode" scoped="" ref="0x7f1d724024d0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f1d72402660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x7f1d724028f0" loc="40:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f1d724028f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f1d72402c70"/>
        <function-ref name="getControl" scoped="" ref="0x7f1d72402e00"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1d72401020"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f1d724011b0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f1d72401340"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1d724014d0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f1d72401660"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f1d724017f0"/>
        <function-ref name="setControl" scoped="" ref="0x7f1d72401980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x7f1d73c20ba0" loc="52:/home/hades/tinyos-new/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7f1d73c20ba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1d74a34160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1d73c1e020"/>
        <function-ref name="setEvent" scoped="" ref="0x7f1d73c1e1b0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f1d73c1e340"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f1d73c1e4d0"/>
        <function-ref name="fired" scoped="" ref="0x7f1d73c1e660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x7f1d73c234d0" loc="50:/home/hades/tinyos-new/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f1d73c234d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1d74a34160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1d73c23850"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f1d73c239e0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1d73c23b70"/>
        <function-ref name="get" scoped="" ref="0x7f1d73c23d00"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1d73c22020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1d73c221b0"/>
        <function-ref name="getMode" scoped="" ref="0x7f1d73c22340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1d73c224d0"/>
        <function-ref name="overflow" scoped="" ref="0x7f1d73c22660"/>
        <function-ref name="setMode" scoped="" ref="0x7f1d73c227f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f1d73c22980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x7f1d73c21280" loc="51:/home/hades/tinyos-new/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f1d73c21280"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1d74a34160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f1d73c21600"/>
        <function-ref name="getControl" scoped="" ref="0x7f1d73c21790"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1d73c21920"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f1d73c21ab0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f1d73c21c40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1d73c21dd0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f1d73c20020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f1d73c201b0"/>
        <function-ref name="setControl" scoped="" ref="0x7f1d73c20340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Compare" ref="0x7f1d723f7a80" loc="49:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7f1d723f7a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1d723f7e00"/>
        <function-ref name="setEvent" scoped="" ref="0x7f1d723f6020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f1d723f61b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f1d723f6340"/>
        <function-ref name="fired" scoped="" ref="0x7f1d723f64d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7f1d723f9020" loc="47:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f1d723f9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1d723f93a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f1d723f9530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1d723f96c0"/>
        <function-ref name="get" scoped="" ref="0x7f1d723f9850"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1d723f99e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1d723f9b70"/>
        <function-ref name="getMode" scoped="" ref="0x7f1d723f9d00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1d723f8020"/>
        <function-ref name="overflow" scoped="" ref="0x7f1d723f81b0"/>
        <function-ref name="setMode" scoped="" ref="0x7f1d723f8340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f1d723f84d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f1d723feda0" loc="46:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f1d723feda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1d740c1c10"/>
            <typename><typedef-ref name="T32khz" ref="0x7f1d740c0020"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1d74a34520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f1d723fb670"/>
        <function-ref name="fired" scoped="" ref="0x7f1d723fc610"/>
        <function-ref name="startAt" scoped="" ref="0x7f1d723fb020"/>
        <function-ref name="isRunning" scoped="" ref="0x7f1d723fcad0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f1d723fbb30"/>
        <function-ref name="start" scoped="" ref="0x7f1d723fdbf0"/>
        <function-ref name="stop" scoped="" ref="0x7f1d723fc150"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f1d723fe510" loc="45:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f1d723fe510"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1d723fe890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x7f1d723f8760" loc="48:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f1d723f8760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f1d723f8ae0"/>
        <function-ref name="getControl" scoped="" ref="0x7f1d723f8c70"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1d723f8e00"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f1d723f7020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f1d723f71b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1d723f7340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f1d723f74d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f1d723f7660"/>
        <function-ref name="setControl" scoped="" ref="0x7f1d723f77f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f1d73bce020" loc="43:/home/hades/tinyos-new/tos/chips/msp430/timer/Counter32khz32C.nc">
      <component-ref qname="Counter32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f1d73bce020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1d740c1c10"/>
            <typename><typedef-ref name="T32khz" ref="0x7f1d740c0020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f1d74a34920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f1d73bcee30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1d73bc9800"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1d73bc9340"/>
        <function-ref name="overflow" scoped="" ref="0x7f1d73bc9cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Counter32khz" ref="0x7f1d73bc5060" loc="43:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <component-ref qname="Msp430Counter32khzC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7f1d73bc5060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1d740c1c10"/>
            <typename><typedef-ref name="T32khz" ref="0x7f1d740c0020"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1d74a34520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f1d73bc5e70"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1d73bc4820"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1d73bc4360"/>
        <function-ref name="overflow" scoped="" ref="0x7f1d73bc4ce0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7f1d73bb22c0" loc="45:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430Counter32khzC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f1d73bb22c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1d73bb2640"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f1d73bb27d0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1d73bb2960"/>
        <function-ref name="get" scoped="" ref="0x7f1d73bb2af0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1d73bb2c80"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1d73bb2e10"/>
        <function-ref name="getMode" scoped="" ref="0x7f1d73bb0020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1d73bb01b0"/>
        <function-ref name="overflow" scoped="" ref="0x7f1d73bb0340"/>
        <function-ref name="setMode" scoped="" ref="0x7f1d73bb04d0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f1d73bb0660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f1d73bc00a0" loc="44:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430Counter32khzC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f1d73bc00a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1d740c1c10"/>
            <typename><typedef-ref name="T32khz" ref="0x7f1d740c0020"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1d74a34520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f1d73bb3020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1d73bb39a0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1d73bb34e0"/>
        <function-ref name="overflow" scoped="" ref="0x7f1d73bb3e60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x7f1d73b90540" loc="63:/home/hades/tinyos-new/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CounterFrom" scoped="" ref="0x7f1d73b90540"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1d740c1c10"/>
            <typename><typedef-ref name="T32khz" ref="0x7f1d740c0020"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1d74a34520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f1d73b8e3d0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1d73b8ed50"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1d73b8e890"/>
        <function-ref name="overflow" scoped="" ref="0x7f1d73b8d260"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f1d73b920f0" loc="62:/home/hades/tinyos-new/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f1d73b920f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1d740c1c10"/>
            <typename><typedef-ref name="T32khz" ref="0x7f1d740c0020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f1d74a34920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f1d73b91020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1d73b919a0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1d73b914e0"/>
        <function-ref name="overflow" scoped="" ref="0x7f1d73b91e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f1d724145f0" loc="61:/home/hades/tinyos-new/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f1d724145f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1d740c1c10"/>
            <typename><typedef-ref name="T32khz" ref="0x7f1d740c0020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f1d74a34920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f1d72412e50"/>
        <function-ref name="fired" scoped="" ref="0x7f1d72413e00"/>
        <function-ref name="startAt" scoped="" ref="0x7f1d72412800"/>
        <function-ref name="isRunning" scoped="" ref="0x7f1d72412340"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f1d72410340"/>
        <function-ref name="start" scoped="" ref="0x7f1d72413430"/>
        <function-ref name="stop" scoped="" ref="0x7f1d72413940"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x7f1d7240ed20" loc="73:/home/hades/tinyos-new/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AlarmFrom" scoped="" ref="0x7f1d7240ed20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1d740c1c10"/>
            <typename><typedef-ref name="T32khz" ref="0x7f1d740c0020"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1d74a34520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f1d7240a670"/>
        <function-ref name="fired" scoped="" ref="0x7f1d7240c550"/>
        <function-ref name="startAt" scoped="" ref="0x7f1d7240a020"/>
        <function-ref name="isRunning" scoped="" ref="0x7f1d7240ca10"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f1d7240ab30"/>
        <function-ref name="start" scoped="" ref="0x7f1d7240db60"/>
        <function-ref name="stop" scoped="" ref="0x7f1d7240c090"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f1d724109b0" loc="68:/home/hades/tinyos-new/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f1d724109b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1d740c1c10"/>
            <typename><typedef-ref name="T32khz" ref="0x7f1d740c0020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f1d74a34920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f1d7240f7e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1d7240e1b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1d7240fca0"/>
        <function-ref name="overflow" scoped="" ref="0x7f1d7240e670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FIFO" ref="0x7f1d73b42380" loc="44:/home/hades/tinyos-new/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFO" scoped="" ref="0x7f1d73b42380"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1d73b42700"/>
        <function-ref name="isInput" scoped="" ref="0x7f1d73b42890"/>
        <function-ref name="toggle" scoped="" ref="0x7f1d73b42a20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1d73b42bb0"/>
        <function-ref name="get" scoped="" ref="0x7f1d73b42d40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1d73b41020"/>
        <function-ref name="set" scoped="" ref="0x7f1d73b411b0"/>
        <function-ref name="clr" scoped="" ref="0x7f1d73b41340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FIFOP" ref="0x7f1d73b416b0" loc="45:/home/hades/tinyos-new/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFOP" scoped="" ref="0x7f1d73b416b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1d73b41a30"/>
        <function-ref name="isInput" scoped="" ref="0x7f1d73b41bc0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1d73b41d50"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1d73b40020"/>
        <function-ref name="get" scoped="" ref="0x7f1d73b401b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1d73b40340"/>
        <function-ref name="set" scoped="" ref="0x7f1d73b404d0"/>
        <function-ref name="clr" scoped="" ref="0x7f1d73b40660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSTN" ref="0x7f1d73b409c0" loc="46:/home/hades/tinyos-new/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSTN" scoped="" ref="0x7f1d73b409c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1d73b40d40"/>
        <function-ref name="isInput" scoped="" ref="0x7f1d73b3f020"/>
        <function-ref name="toggle" scoped="" ref="0x7f1d73b3f1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1d73b3f340"/>
        <function-ref name="get" scoped="" ref="0x7f1d73b3f4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1d73b3f660"/>
        <function-ref name="set" scoped="" ref="0x7f1d73b3f7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f1d73b3f980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CSN" ref="0x7f1d73b43060" loc="43:/home/hades/tinyos-new/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x7f1d73b43060"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1d73b433e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1d73b43570"/>
        <function-ref name="toggle" scoped="" ref="0x7f1d73b43700"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1d73b43890"/>
        <function-ref name="get" scoped="" ref="0x7f1d73b43a20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1d73b43bb0"/>
        <function-ref name="set" scoped="" ref="0x7f1d73b43d40"/>
        <function-ref name="clr" scoped="" ref="0x7f1d73b42020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VREN" ref="0x7f1d73b3d020" loc="48:/home/hades/tinyos-new/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VREN" scoped="" ref="0x7f1d73b3d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1d73b3d3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1d73b3d530"/>
        <function-ref name="toggle" scoped="" ref="0x7f1d73b3d6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1d73b3d850"/>
        <function-ref name="get" scoped="" ref="0x7f1d73b3d9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1d73b3db70"/>
        <function-ref name="set" scoped="" ref="0x7f1d73b3dd00"/>
        <function-ref name="clr" scoped="" ref="0x7f1d73b3c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CCA" ref="0x7f1d73c4ae40" loc="42:/home/hades/tinyos-new/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CCA" scoped="" ref="0x7f1d73c4ae40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1d73b441e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1d73b44370"/>
        <function-ref name="toggle" scoped="" ref="0x7f1d73b44500"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1d73b44690"/>
        <function-ref name="get" scoped="" ref="0x7f1d73b44820"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1d73b449b0"/>
        <function-ref name="set" scoped="" ref="0x7f1d73b44b40"/>
        <function-ref name="clr" scoped="" ref="0x7f1d73b44cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFD" ref="0x7f1d73b3fcd0" loc="47:/home/hades/tinyos-new/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFD" scoped="" ref="0x7f1d73b3fcd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1d73b3e0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1d73b3e230"/>
        <function-ref name="toggle" scoped="" ref="0x7f1d73b3e3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1d73b3e550"/>
        <function-ref name="get" scoped="" ref="0x7f1d73b3e6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1d73b3e870"/>
        <function-ref name="set" scoped="" ref="0x7f1d73b3ea00"/>
        <function-ref name="clr" scoped="" ref="0x7f1d73b3eb90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f1d73b3a610" loc="44:/home/hades/tinyos-new/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CCAM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f1d73b3a610"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1d73b3a990"/>
        <function-ref name="isInput" scoped="" ref="0x7f1d73b3ab20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1d73b3acb0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1d73b3ae40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1d73b39020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1d73b391b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1d73b39340"/>
        <function-ref name="get" scoped="" ref="0x7f1d73b394d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1d73b39660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1d73b397f0"/>
        <function-ref name="set" scoped="" ref="0x7f1d73b39980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1d73b39b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1d73b39ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1d73b38020"/>
        <function-ref name="clr" scoped="" ref="0x7f1d73b381b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f1d73b3b440" loc="43:/home/hades/tinyos-new/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CCAM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f1d73b3b440"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1d73b3b7c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1d73b3b950"/>
        <function-ref name="toggle" scoped="" ref="0x7f1d73b3bae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1d73b3bc70"/>
        <function-ref name="get" scoped="" ref="0x7f1d73b3be00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1d73b3a020"/>
        <function-ref name="set" scoped="" ref="0x7f1d73b3a1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f1d73b3a340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f1d73b352f0" loc="44:/home/hades/tinyos-new/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CSNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f1d73b352f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1d73b35670"/>
        <function-ref name="isInput" scoped="" ref="0x7f1d73b35800"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1d73b35990"/>
        <function-ref name="toggle" scoped="" ref="0x7f1d73b35b20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1d73b35cb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1d73b35e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1d73b34020"/>
        <function-ref name="get" scoped="" ref="0x7f1d73b341b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1d73b34340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1d73b344d0"/>
        <function-ref name="set" scoped="" ref="0x7f1d73b34660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1d73b347f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1d73b34980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1d73b34c10"/>
        <function-ref name="clr" scoped="" ref="0x7f1d73b34da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f1d73b36020" loc="43:/home/hades/tinyos-new/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CSNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f1d73b36020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1d73b363a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1d73b36530"/>
        <function-ref name="toggle" scoped="" ref="0x7f1d73b366c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1d73b36850"/>
        <function-ref name="get" scoped="" ref="0x7f1d73b369e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1d73b36b70"/>
        <function-ref name="set" scoped="" ref="0x7f1d73b36d00"/>
        <function-ref name="clr" scoped="" ref="0x7f1d73b35020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f1d73b31de0" loc="44:/home/hades/tinyos-new/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f1d73b31de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1d73b2f180"/>
        <function-ref name="isInput" scoped="" ref="0x7f1d73b2f310"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1d73b2f4a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1d73b2f630"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1d73b2f7c0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1d73b2f950"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1d73b2fae0"/>
        <function-ref name="get" scoped="" ref="0x7f1d73b2fc70"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1d73b2fe00"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1d73b2e020"/>
        <function-ref name="set" scoped="" ref="0x7f1d73b2e1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1d73b2e340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1d73b2e4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1d73b2e760"/>
        <function-ref name="clr" scoped="" ref="0x7f1d73b2e8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f1d73b32b70" loc="43:/home/hades/tinyos-new/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f1d73b32b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1d73b31020"/>
        <function-ref name="isInput" scoped="" ref="0x7f1d73b311b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1d73b31340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1d73b314d0"/>
        <function-ref name="get" scoped="" ref="0x7f1d73b31660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1d73b317f0"/>
        <function-ref name="set" scoped="" ref="0x7f1d73b31980"/>
        <function-ref name="clr" scoped="" ref="0x7f1d73b31b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f1d73b2b930" loc="44:/home/hades/tinyos-new/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOPM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f1d73b2b930"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1d73b2bcb0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1d73b2be40"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1d73b2a020"/>
        <function-ref name="toggle" scoped="" ref="0x7f1d73b2a1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1d73b2a340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1d73b2a4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1d73b2a660"/>
        <function-ref name="get" scoped="" ref="0x7f1d73b2a7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1d73b2a980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1d73b2ab10"/>
        <function-ref name="set" scoped="" ref="0x7f1d73b2aca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1d73b2ae30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1d73b29020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1d73b292b0"/>
        <function-ref name="clr" scoped="" ref="0x7f1d73b29440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f1d73b2c710" loc="43:/home/hades/tinyos-new/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOPM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f1d73b2c710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1d73b2ca90"/>
        <function-ref name="isInput" scoped="" ref="0x7f1d73b2cc20"/>
        <function-ref name="toggle" scoped="" ref="0x7f1d73b2cdb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1d73b2b020"/>
        <function-ref name="get" scoped="" ref="0x7f1d73b2b1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1d73b2b340"/>
        <function-ref name="set" scoped="" ref="0x7f1d73b2b4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f1d73b2b660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f1d73b26480" loc="44:/home/hades/tinyos-new/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.RSTNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f1d73b26480"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1d73b26800"/>
        <function-ref name="isInput" scoped="" ref="0x7f1d73b26990"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1d73b26b20"/>
        <function-ref name="toggle" scoped="" ref="0x7f1d73b26cb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1d73b26e40"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1d73b25020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1d73b251b0"/>
        <function-ref name="get" scoped="" ref="0x7f1d73b25340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1d73b254d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1d73b25660"/>
        <function-ref name="set" scoped="" ref="0x7f1d73b257f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1d73b25980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1d73b25b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1d73b25da0"/>
        <function-ref name="clr" scoped="" ref="0x7f1d73b24020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f1d73b271d0" loc="43:/home/hades/tinyos-new/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.RSTNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f1d73b271d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1d73b27550"/>
        <function-ref name="isInput" scoped="" ref="0x7f1d73b276e0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1d73b27870"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1d73b27a00"/>
        <function-ref name="get" scoped="" ref="0x7f1d73b27b90"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1d73b27d20"/>
        <function-ref name="set" scoped="" ref="0x7f1d73b26020"/>
        <function-ref name="clr" scoped="" ref="0x7f1d73b261b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f1d73b21020" loc="44:/home/hades/tinyos-new/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.SFDM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f1d73b21020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1d73b213a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1d73b21530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1d73b216c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1d73b21850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1d73b219e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1d73b21b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1d73b21d00"/>
        <function-ref name="get" scoped="" ref="0x7f1d73b20020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1d73b201b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1d73b20340"/>
        <function-ref name="set" scoped="" ref="0x7f1d73b204d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1d73b20660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1d73b207f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1d73b20a80"/>
        <function-ref name="clr" scoped="" ref="0x7f1d73b20c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f1d73b23d60" loc="43:/home/hades/tinyos-new/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.SFDM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f1d73b23d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1d73b22180"/>
        <function-ref name="isInput" scoped="" ref="0x7f1d73b22310"/>
        <function-ref name="toggle" scoped="" ref="0x7f1d73b224a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1d73b22630"/>
        <function-ref name="get" scoped="" ref="0x7f1d73b227c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1d73b22950"/>
        <function-ref name="set" scoped="" ref="0x7f1d73b22ae0"/>
        <function-ref name="clr" scoped="" ref="0x7f1d73b22c70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f1d73b1dde0" loc="44:/home/hades/tinyos-new/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.VRENM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f1d73b1dde0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1d73b1c180"/>
        <function-ref name="isInput" scoped="" ref="0x7f1d73b1c310"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1d73b1c4a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1d73b1c630"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1d73b1c7c0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1d73b1c950"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1d73b1cae0"/>
        <function-ref name="get" scoped="" ref="0x7f1d73b1cc70"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1d73b1ce00"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1d73b1b020"/>
        <function-ref name="set" scoped="" ref="0x7f1d73b1b1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1d73b1b340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1d73b1b4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1d73b1b760"/>
        <function-ref name="clr" scoped="" ref="0x7f1d73b1b8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f1d73b1eb70" loc="43:/home/hades/tinyos-new/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.VRENM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f1d73b1eb70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1d73b1d020"/>
        <function-ref name="isInput" scoped="" ref="0x7f1d73b1d1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1d73b1d340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1d73b1d4d0"/>
        <function-ref name="get" scoped="" ref="0x7f1d73b1d660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1d73b1d7f0"/>
        <function-ref name="set" scoped="" ref="0x7f1d73b1d980"/>
        <function-ref name="clr" scoped="" ref="0x7f1d73b1db10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureSFD" ref="0x7f1d73b06150" loc="42:/home/hades/tinyos-new/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureSFD" scoped="" ref="0x7f1d73b06150"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7f1d73b064d0"/>
        <function-ref name="disable" scoped="" ref="0x7f1d73b06660"/>
        <function-ref name="captured" scoped="" ref="0x7f1d73b067f0"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7f1d73b06980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptCCA" ref="0x7f1d73b06d60" loc="43:/home/hades/tinyos-new/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptCCA" scoped="" ref="0x7f1d73b06d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1d73b05180"/>
        <function-ref name="disable" scoped="" ref="0x7f1d73b05310"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f1d73b054a0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f1d73b05630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptFIFOP" ref="0x7f1d73b05a20" loc="44:/home/hades/tinyos-new/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptFIFOP" scoped="" ref="0x7f1d73b05a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1d73b05da0"/>
        <function-ref name="disable" scoped="" ref="0x7f1d73b01020"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f1d73b011b0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f1d73b01340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Capture" ref="0x7f1d73aeb8f0" loc="42:/home/hades/tinyos-new/tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Capture" scoped="" ref="0x7f1d73aeb8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1d73aebc70"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f1d73aebe00"/>
        <function-ref name="captured" scoped="" ref="0x7f1d73aea020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1d73aea1b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1d73aea340"/>
        <function-ref name="setEdge" scoped="" ref="0x7f1d73aea4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f1d73afea20" loc="40:/home/hades/tinyos-new/tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f1d73afea20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7f1d73afeda0"/>
        <function-ref name="disable" scoped="" ref="0x7f1d73aec020"/>
        <function-ref name="captured" scoped="" ref="0x7f1d73aec1b0"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7f1d73aec340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x7f1d73aec5d0" loc="41:/home/hades/tinyos-new/tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f1d73aec5d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f1d73aec950"/>
        <function-ref name="getControl" scoped="" ref="0x7f1d73aecae0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1d73aecc70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f1d73aece00"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f1d73aeb020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1d73aeb1b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f1d73aeb340"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f1d73aeb4d0"/>
        <function-ref name="setControl" scoped="" ref="0x7f1d73aeb660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="GeneralIO" ref="0x7f1d73aea7a0" loc="43:/home/hades/tinyos-new/tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f1d73aea7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1d73aeab20"/>
        <function-ref name="isInput" scoped="" ref="0x7f1d73aeacb0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1d73aeae40"/>
        <function-ref name="toggle" scoped="" ref="0x7f1d73ae9020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1d73ae91b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1d73ae9340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1d73ae94d0"/>
        <function-ref name="get" scoped="" ref="0x7f1d73ae9660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1d73ae97f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1d73ae9980"/>
        <function-ref name="set" scoped="" ref="0x7f1d73ae9b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1d73ae9ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1d73ae9e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1d73ae8120"/>
        <function-ref name="clr" scoped="" ref="0x7f1d73ae82b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x7f1d73ada020" loc="46:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x7f1d73ada020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1d73ada3a0"/>
        <function-ref name="fired" scoped="" ref="0x7f1d73ada530"/>
        <function-ref name="disable" scoped="" ref="0x7f1d73ada6c0"/>
        <function-ref name="edge" scoped="" ref="0x7f1d73ada850"/>
        <function-ref name="enable" scoped="" ref="0x7f1d73ada9e0"/>
        <function-ref name="getValue" scoped="" ref="0x7f1d73adab70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x7f1d73ad0020" loc="58:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x7f1d73ad0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1d73ad03a0"/>
        <function-ref name="fired" scoped="" ref="0x7f1d73ad0530"/>
        <function-ref name="disable" scoped="" ref="0x7f1d73ad06c0"/>
        <function-ref name="edge" scoped="" ref="0x7f1d73ad0850"/>
        <function-ref name="enable" scoped="" ref="0x7f1d73ad09e0"/>
        <function-ref name="getValue" scoped="" ref="0x7f1d73ad0b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x7f1d73ad7020" loc="49:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x7f1d73ad7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1d73ad73a0"/>
        <function-ref name="fired" scoped="" ref="0x7f1d73ad7530"/>
        <function-ref name="disable" scoped="" ref="0x7f1d73ad76c0"/>
        <function-ref name="edge" scoped="" ref="0x7f1d73ad7850"/>
        <function-ref name="enable" scoped="" ref="0x7f1d73ad79e0"/>
        <function-ref name="getValue" scoped="" ref="0x7f1d73ad7b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x7f1d73ad5020" loc="53:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x7f1d73ad5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1d73ad53a0"/>
        <function-ref name="fired" scoped="" ref="0x7f1d73ad5530"/>
        <function-ref name="disable" scoped="" ref="0x7f1d73ad56c0"/>
        <function-ref name="edge" scoped="" ref="0x7f1d73ad5850"/>
        <function-ref name="enable" scoped="" ref="0x7f1d73ad59e0"/>
        <function-ref name="getValue" scoped="" ref="0x7f1d73ad5b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x7f1d73ae1060" loc="44:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x7f1d73ae1060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1d73ae13e0"/>
        <function-ref name="fired" scoped="" ref="0x7f1d73ae1570"/>
        <function-ref name="disable" scoped="" ref="0x7f1d73ae1700"/>
        <function-ref name="edge" scoped="" ref="0x7f1d73ae1890"/>
        <function-ref name="enable" scoped="" ref="0x7f1d73ae1a20"/>
        <function-ref name="getValue" scoped="" ref="0x7f1d73ae1bb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x7f1d73ad2020" loc="56:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x7f1d73ad2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1d73ad24a0"/>
        <function-ref name="fired" scoped="" ref="0x7f1d73ad2630"/>
        <function-ref name="disable" scoped="" ref="0x7f1d73ad27c0"/>
        <function-ref name="edge" scoped="" ref="0x7f1d73ad2950"/>
        <function-ref name="enable" scoped="" ref="0x7f1d73ad2ae0"/>
        <function-ref name="getValue" scoped="" ref="0x7f1d73ad2c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x7f1d73ad9020" loc="47:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x7f1d73ad9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1d73ad93a0"/>
        <function-ref name="fired" scoped="" ref="0x7f1d73ad9530"/>
        <function-ref name="disable" scoped="" ref="0x7f1d73ad96c0"/>
        <function-ref name="edge" scoped="" ref="0x7f1d73ad9850"/>
        <function-ref name="enable" scoped="" ref="0x7f1d73ad99e0"/>
        <function-ref name="getValue" scoped="" ref="0x7f1d73ad9b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x7f1d73acf020" loc="59:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x7f1d73acf020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1d73acf3a0"/>
        <function-ref name="fired" scoped="" ref="0x7f1d73acf530"/>
        <function-ref name="disable" scoped="" ref="0x7f1d73acf6c0"/>
        <function-ref name="edge" scoped="" ref="0x7f1d73acf850"/>
        <function-ref name="enable" scoped="" ref="0x7f1d73acf9e0"/>
        <function-ref name="getValue" scoped="" ref="0x7f1d73acfb70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x7f1d73adc170" loc="42:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x7f1d73adc170"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1d73adc4f0"/>
        <function-ref name="fired" scoped="" ref="0x7f1d73adc680"/>
        <function-ref name="disable" scoped="" ref="0x7f1d73adc810"/>
        <function-ref name="edge" scoped="" ref="0x7f1d73adc9a0"/>
        <function-ref name="enable" scoped="" ref="0x7f1d73adcb30"/>
        <function-ref name="getValue" scoped="" ref="0x7f1d73adccc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x7f1d73ad4020" loc="54:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x7f1d73ad4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1d73ad43a0"/>
        <function-ref name="fired" scoped="" ref="0x7f1d73ad4530"/>
        <function-ref name="disable" scoped="" ref="0x7f1d73ad46c0"/>
        <function-ref name="edge" scoped="" ref="0x7f1d73ad4850"/>
        <function-ref name="enable" scoped="" ref="0x7f1d73ad49e0"/>
        <function-ref name="getValue" scoped="" ref="0x7f1d73ad4b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x7f1d73adb020" loc="45:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x7f1d73adb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1d73adb3a0"/>
        <function-ref name="fired" scoped="" ref="0x7f1d73adb530"/>
        <function-ref name="disable" scoped="" ref="0x7f1d73adb6c0"/>
        <function-ref name="edge" scoped="" ref="0x7f1d73adb850"/>
        <function-ref name="enable" scoped="" ref="0x7f1d73adb9e0"/>
        <function-ref name="getValue" scoped="" ref="0x7f1d73adbb70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x7f1d73ad1060" loc="57:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x7f1d73ad1060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1d73ad13e0"/>
        <function-ref name="fired" scoped="" ref="0x7f1d73ad1570"/>
        <function-ref name="disable" scoped="" ref="0x7f1d73ad1700"/>
        <function-ref name="edge" scoped="" ref="0x7f1d73ad1890"/>
        <function-ref name="enable" scoped="" ref="0x7f1d73ad1a20"/>
        <function-ref name="getValue" scoped="" ref="0x7f1d73ad1bb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x7f1d73ad8020" loc="48:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x7f1d73ad8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1d73ad83a0"/>
        <function-ref name="fired" scoped="" ref="0x7f1d73ad8530"/>
        <function-ref name="disable" scoped="" ref="0x7f1d73ad86c0"/>
        <function-ref name="edge" scoped="" ref="0x7f1d73ad8850"/>
        <function-ref name="enable" scoped="" ref="0x7f1d73ad89e0"/>
        <function-ref name="getValue" scoped="" ref="0x7f1d73ad8b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x7f1d73ad6020" loc="52:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x7f1d73ad6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1d73ad63a0"/>
        <function-ref name="fired" scoped="" ref="0x7f1d73ad6530"/>
        <function-ref name="disable" scoped="" ref="0x7f1d73ad66c0"/>
        <function-ref name="edge" scoped="" ref="0x7f1d73ad6850"/>
        <function-ref name="enable" scoped="" ref="0x7f1d73ad69e0"/>
        <function-ref name="getValue" scoped="" ref="0x7f1d73ad6b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x7f1d73ae2100" loc="43:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x7f1d73ae2100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1d73ae2480"/>
        <function-ref name="fired" scoped="" ref="0x7f1d73ae2610"/>
        <function-ref name="disable" scoped="" ref="0x7f1d73ae27a0"/>
        <function-ref name="edge" scoped="" ref="0x7f1d73ae2930"/>
        <function-ref name="enable" scoped="" ref="0x7f1d73ae2ac0"/>
        <function-ref name="getValue" scoped="" ref="0x7f1d73ae2c50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x7f1d73ad3020" loc="55:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x7f1d73ad3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1d73ad33a0"/>
        <function-ref name="fired" scoped="" ref="0x7f1d73ad3530"/>
        <function-ref name="disable" scoped="" ref="0x7f1d73ad36c0"/>
        <function-ref name="edge" scoped="" ref="0x7f1d73ad3850"/>
        <function-ref name="enable" scoped="" ref="0x7f1d73ad39e0"/>
        <function-ref name="getValue" scoped="" ref="0x7f1d73ad3b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x7f1d73ac7bc0" loc="43:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x7f1d73ac7bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1d73ac6020"/>
        <function-ref name="fired" scoped="" ref="0x7f1d73ac61b0"/>
        <function-ref name="disable" scoped="" ref="0x7f1d73ac6340"/>
        <function-ref name="edge" scoped="" ref="0x7f1d73ac64d0"/>
        <function-ref name="enable" scoped="" ref="0x7f1d73ac6660"/>
        <function-ref name="getValue" scoped="" ref="0x7f1d73ac67f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x7f1d73abdbc0" loc="55:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x7f1d73abdbc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1d73abc020"/>
        <function-ref name="fired" scoped="" ref="0x7f1d73abc1b0"/>
        <function-ref name="disable" scoped="" ref="0x7f1d73abc340"/>
        <function-ref name="edge" scoped="" ref="0x7f1d73abc4d0"/>
        <function-ref name="enable" scoped="" ref="0x7f1d73abc660"/>
        <function-ref name="getValue" scoped="" ref="0x7f1d73abc7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x7f1d73ac4bc0" loc="46:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x7f1d73ac4bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1d73ac3020"/>
        <function-ref name="fired" scoped="" ref="0x7f1d73ac31b0"/>
        <function-ref name="disable" scoped="" ref="0x7f1d73ac3340"/>
        <function-ref name="edge" scoped="" ref="0x7f1d73ac34d0"/>
        <function-ref name="enable" scoped="" ref="0x7f1d73ac3660"/>
        <function-ref name="getValue" scoped="" ref="0x7f1d73ac37f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x7f1d73ac2bc0" loc="50:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x7f1d73ac2bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1d73ac1020"/>
        <function-ref name="fired" scoped="" ref="0x7f1d73ac11b0"/>
        <function-ref name="disable" scoped="" ref="0x7f1d73ac1340"/>
        <function-ref name="edge" scoped="" ref="0x7f1d73ac14d0"/>
        <function-ref name="enable" scoped="" ref="0x7f1d73ac1660"/>
        <function-ref name="getValue" scoped="" ref="0x7f1d73ac17f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x7f1d73acac40" loc="41:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x7f1d73acac40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1d73ac8020"/>
        <function-ref name="fired" scoped="" ref="0x7f1d73ac81b0"/>
        <function-ref name="disable" scoped="" ref="0x7f1d73ac8340"/>
        <function-ref name="edge" scoped="" ref="0x7f1d73ac84d0"/>
        <function-ref name="enable" scoped="" ref="0x7f1d73ac8660"/>
        <function-ref name="getValue" scoped="" ref="0x7f1d73ac87f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x7f1d73abfbc0" loc="53:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x7f1d73abfbc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1d73abe0a0"/>
        <function-ref name="fired" scoped="" ref="0x7f1d73abe230"/>
        <function-ref name="disable" scoped="" ref="0x7f1d73abe3c0"/>
        <function-ref name="edge" scoped="" ref="0x7f1d73abe550"/>
        <function-ref name="enable" scoped="" ref="0x7f1d73abe6e0"/>
        <function-ref name="getValue" scoped="" ref="0x7f1d73abe870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x7f1d73ac6bc0" loc="44:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x7f1d73ac6bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1d73ac5020"/>
        <function-ref name="fired" scoped="" ref="0x7f1d73ac51b0"/>
        <function-ref name="disable" scoped="" ref="0x7f1d73ac5340"/>
        <function-ref name="edge" scoped="" ref="0x7f1d73ac54d0"/>
        <function-ref name="enable" scoped="" ref="0x7f1d73ac5660"/>
        <function-ref name="getValue" scoped="" ref="0x7f1d73ac57f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x7f1d73abcbc0" loc="56:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x7f1d73abcbc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1d73abb020"/>
        <function-ref name="fired" scoped="" ref="0x7f1d73abb1b0"/>
        <function-ref name="disable" scoped="" ref="0x7f1d73abb340"/>
        <function-ref name="edge" scoped="" ref="0x7f1d73abb4d0"/>
        <function-ref name="enable" scoped="" ref="0x7f1d73abb660"/>
        <function-ref name="getValue" scoped="" ref="0x7f1d73abb7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x7f1d73aced40" loc="39:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x7f1d73aced40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1d73acb0e0"/>
        <function-ref name="fired" scoped="" ref="0x7f1d73acb270"/>
        <function-ref name="disable" scoped="" ref="0x7f1d73acb400"/>
        <function-ref name="edge" scoped="" ref="0x7f1d73acb590"/>
        <function-ref name="enable" scoped="" ref="0x7f1d73acb720"/>
        <function-ref name="getValue" scoped="" ref="0x7f1d73acb8b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x7f1d73ac1bc0" loc="51:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x7f1d73ac1bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1d73ac0020"/>
        <function-ref name="fired" scoped="" ref="0x7f1d73ac01b0"/>
        <function-ref name="disable" scoped="" ref="0x7f1d73ac0340"/>
        <function-ref name="edge" scoped="" ref="0x7f1d73ac04d0"/>
        <function-ref name="enable" scoped="" ref="0x7f1d73ac0660"/>
        <function-ref name="getValue" scoped="" ref="0x7f1d73ac07f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x7f1d73ac8bc0" loc="42:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x7f1d73ac8bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1d73ac7020"/>
        <function-ref name="fired" scoped="" ref="0x7f1d73ac71b0"/>
        <function-ref name="disable" scoped="" ref="0x7f1d73ac7340"/>
        <function-ref name="edge" scoped="" ref="0x7f1d73ac74d0"/>
        <function-ref name="enable" scoped="" ref="0x7f1d73ac7660"/>
        <function-ref name="getValue" scoped="" ref="0x7f1d73ac77f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x7f1d73abec40" loc="54:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x7f1d73abec40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1d73abd020"/>
        <function-ref name="fired" scoped="" ref="0x7f1d73abd1b0"/>
        <function-ref name="disable" scoped="" ref="0x7f1d73abd340"/>
        <function-ref name="edge" scoped="" ref="0x7f1d73abd4d0"/>
        <function-ref name="enable" scoped="" ref="0x7f1d73abd660"/>
        <function-ref name="getValue" scoped="" ref="0x7f1d73abd7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x7f1d73ac5bc0" loc="45:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x7f1d73ac5bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1d73ac4020"/>
        <function-ref name="fired" scoped="" ref="0x7f1d73ac41b0"/>
        <function-ref name="disable" scoped="" ref="0x7f1d73ac4340"/>
        <function-ref name="edge" scoped="" ref="0x7f1d73ac44d0"/>
        <function-ref name="enable" scoped="" ref="0x7f1d73ac4660"/>
        <function-ref name="getValue" scoped="" ref="0x7f1d73ac47f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x7f1d73ac3bc0" loc="49:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x7f1d73ac3bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1d73ac2020"/>
        <function-ref name="fired" scoped="" ref="0x7f1d73ac21b0"/>
        <function-ref name="disable" scoped="" ref="0x7f1d73ac2340"/>
        <function-ref name="edge" scoped="" ref="0x7f1d73ac24d0"/>
        <function-ref name="enable" scoped="" ref="0x7f1d73ac2660"/>
        <function-ref name="getValue" scoped="" ref="0x7f1d73ac27f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x7f1d73acbc80" loc="40:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x7f1d73acbc80"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1d73aca0a0"/>
        <function-ref name="fired" scoped="" ref="0x7f1d73aca230"/>
        <function-ref name="disable" scoped="" ref="0x7f1d73aca3c0"/>
        <function-ref name="edge" scoped="" ref="0x7f1d73aca550"/>
        <function-ref name="enable" scoped="" ref="0x7f1d73aca6e0"/>
        <function-ref name="getValue" scoped="" ref="0x7f1d73aca870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x7f1d73ac0bc0" loc="52:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x7f1d73ac0bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1d73abf020"/>
        <function-ref name="fired" scoped="" ref="0x7f1d73abf1b0"/>
        <function-ref name="disable" scoped="" ref="0x7f1d73abf340"/>
        <function-ref name="edge" scoped="" ref="0x7f1d73abf4d0"/>
        <function-ref name="enable" scoped="" ref="0x7f1d73abf660"/>
        <function-ref name="getValue" scoped="" ref="0x7f1d73abf7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplInterrupt" ref="0x7f1d739e8610" loc="46:/home/hades/tinyos-new/tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptCCAC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplInterrupt" scoped="" ref="0x7f1d739e8610"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1d739e8990"/>
        <function-ref name="fired" scoped="" ref="0x7f1d739e8b20"/>
        <function-ref name="disable" scoped="" ref="0x7f1d739e8cb0"/>
        <function-ref name="edge" scoped="" ref="0x7f1d739e8e40"/>
        <function-ref name="enable" scoped="" ref="0x7f1d739db020"/>
        <function-ref name="getValue" scoped="" ref="0x7f1d739db1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x7f1d739e9a30" loc="45:/home/hades/tinyos-new/tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptCCAC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupt" scoped="" ref="0x7f1d739e9a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1d739e9db0"/>
        <function-ref name="disable" scoped="" ref="0x7f1d739e8020"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f1d739e81b0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f1d739e8340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplInterrupt" ref="0x7f1d739d9610" loc="46:/home/hades/tinyos-new/tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptFIFOPC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplInterrupt" scoped="" ref="0x7f1d739d9610"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1d739d9990"/>
        <function-ref name="fired" scoped="" ref="0x7f1d739d9b20"/>
        <function-ref name="disable" scoped="" ref="0x7f1d739d9cb0"/>
        <function-ref name="edge" scoped="" ref="0x7f1d739d9e40"/>
        <function-ref name="enable" scoped="" ref="0x7f1d739d8020"/>
        <function-ref name="getValue" scoped="" ref="0x7f1d739d81b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x7f1d739daa70" loc="45:/home/hades/tinyos-new/tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptFIFOPC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupt" scoped="" ref="0x7f1d739daa70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1d739dadf0"/>
        <function-ref name="disable" scoped="" ref="0x7f1d739d9020"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f1d739d91b0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f1d739d9340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7f1d7358be50" loc="69:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7f1d7358be50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1d73589410"/>
        <function-ref name="write" scoped="" ref="0x7f1d735895a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7f1d73594160" loc="47:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7f1d73594160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1d735944e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7f1d7358ee50" loc="63:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7f1d7358ee50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1d7358d210"/>
        <function-ref name="write" scoped="" ref="0x7f1d7358d3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7f1d73588880" loc="72:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7f1d73588880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1d73588c00"/>
        <function-ref name="write" scoped="" ref="0x7f1d73588d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7f1d735800a0" loc="86:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7f1d735800a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1d73580420"/>
        <function-ref name="write" scoped="" ref="0x7f1d735805b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7f1d735870a0" loc="73:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7f1d735870a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1d73587420"/>
        <function-ref name="write" scoped="" ref="0x7f1d735875b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7f1d73572500" loc="108:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7f1d73572500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1d73572880"/>
        <function-ref name="write" scoped="" ref="0x7f1d73572a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7f1d73575500" loc="104:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7f1d73575500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1d73575880"/>
        <function-ref name="write" scoped="" ref="0x7f1d73575a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7f1d73593490" loc="50:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7f1d73593490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1d73593810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7f1d7357d880" loc="93:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7f1d7357d880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1d7357dc00"/>
        <function-ref name="write" scoped="" ref="0x7f1d7357dd90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7f1d73576500" loc="102:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f1d73576500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1d73576880"/>
        <function-ref name="write" scoped="" ref="0x7f1d73576a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7f1d7358de50" loc="65:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7f1d7358de50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1d7358c210"/>
        <function-ref name="write" scoped="" ref="0x7f1d7358c3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7f1d7358ce50" loc="67:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7f1d7358ce50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1d7358b210"/>
        <function-ref name="write" scoped="" ref="0x7f1d7358b3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7f1d73582880" loc="83:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7f1d73582880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1d73582c00"/>
        <function-ref name="write" scoped="" ref="0x7f1d73582d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7f1d735840a0" loc="79:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7f1d735840a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1d73584420"/>
        <function-ref name="write" scoped="" ref="0x7f1d735845b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7f1d73587880" loc="74:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7f1d73587880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1d73587c00"/>
        <function-ref name="write" scoped="" ref="0x7f1d73587d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f1d73596a90" loc="42:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f1d73596a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f1d73596e10"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f1d73595020"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f1d735951b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7f1d73592e00" loc="54:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7f1d73592e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1d735901c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7f1d73590490" loc="55:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7f1d73590490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1d73590910"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7f1d7357bc80" loc="95:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f1d7357bc80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1d735780a0"/>
        <function-ref name="write" scoped="" ref="0x7f1d73578230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7f1d73590be0" loc="56:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7f1d73590be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1d7358f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7f1d73576ce0" loc="103:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f1d73576ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1d735750a0"/>
        <function-ref name="write" scoped="" ref="0x7f1d73575230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7f1d73592160" loc="52:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7f1d73592160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1d735924e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7f1d7357d0a0" loc="92:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7f1d7357d0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1d7357d420"/>
        <function-ref name="write" scoped="" ref="0x7f1d7357d5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7f1d7358c670" loc="66:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7f1d7358c670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1d7358c9f0"/>
        <function-ref name="write" scoped="" ref="0x7f1d7358cb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7f1d7358d670" loc="64:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f1d7358d670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1d7358d9f0"/>
        <function-ref name="write" scoped="" ref="0x7f1d7358db80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7f1d73595ad0" loc="46:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7f1d73595ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1d73595e50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7f1d7357e0a0" loc="90:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7f1d7357e0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1d7357e420"/>
        <function-ref name="write" scoped="" ref="0x7f1d7357e5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7f1d73580880" loc="87:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7f1d73580880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1d73580c00"/>
        <function-ref name="write" scoped="" ref="0x7f1d73580d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7f1d7357e880" loc="91:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7f1d7357e880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1d7357ec00"/>
        <function-ref name="write" scoped="" ref="0x7f1d7357ed90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7f1d73573ce0" loc="107:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7f1d73573ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1d735720a0"/>
        <function-ref name="write" scoped="" ref="0x7f1d73572230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7f1d73575ce0" loc="105:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7f1d73575ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1d735730a0"/>
        <function-ref name="write" scoped="" ref="0x7f1d73573230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7f1d73584880" loc="80:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7f1d73584880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1d73584c00"/>
        <function-ref name="write" scoped="" ref="0x7f1d73584d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7f1d7357f0a0" loc="88:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7f1d7357f0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1d7357f420"/>
        <function-ref name="write" scoped="" ref="0x7f1d7357f5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7f1d73577ce0" loc="101:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7f1d73577ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1d735760a0"/>
        <function-ref name="write" scoped="" ref="0x7f1d73576230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7f1d73586880" loc="76:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7f1d73586880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1d73586c00"/>
        <function-ref name="write" scoped="" ref="0x7f1d73586d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7f1d73572ce0" loc="111:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7f1d73572ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f1d735710a0"/>
        <function-ref name="writeDone" scoped="" ref="0x7f1d73571230"/>
        <function-ref name="write" scoped="" ref="0x7f1d735713c0"/>
        <function-ref name="beginRead" scoped="" ref="0x7f1d73571550"/>
        <function-ref name="readDone" scoped="" ref="0x7f1d735716e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7f1d73595480" loc="45:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7f1d73595480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1d73595800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7f1d7358e670" loc="62:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7f1d7358e670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1d7358e9f0"/>
        <function-ref name="write" scoped="" ref="0x7f1d7358eb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7f1d7358b670" loc="68:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7f1d7358b670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1d7358b9f0"/>
        <function-ref name="write" scoped="" ref="0x7f1d7358bb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7f1d735810a0" loc="84:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7f1d735810a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1d73581420"/>
        <function-ref name="write" scoped="" ref="0x7f1d735815b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7f1d735860a0" loc="75:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7f1d735860a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1d73586420"/>
        <function-ref name="write" scoped="" ref="0x7f1d735865b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7f1d73581880" loc="85:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7f1d73581880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1d73581c00"/>
        <function-ref name="write" scoped="" ref="0x7f1d73581d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7f1d73589870" loc="70:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7f1d73589870"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1d73589bf0"/>
        <function-ref name="write" scoped="" ref="0x7f1d73589d80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7f1d735947b0" loc="48:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7f1d735947b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1d73594b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7f1d735880a0" loc="71:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7f1d735880a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1d73588420"/>
        <function-ref name="write" scoped="" ref="0x7f1d735885b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f1d73598e20" loc="41:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f1d73598e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1d735961c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f1d73596350"/>
        <function-ref name="request" scoped="" ref="0x7f1d735964e0"/>
        <function-ref name="granted" scoped="" ref="0x7f1d73596670"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1d73596800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7f1d7358f2f0" loc="57:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7f1d7358f2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1d7358f670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7f1d7358e020" loc="59:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7f1d7358e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1d7358e3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7f1d73577500" loc="100:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7f1d73577500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1d73577880"/>
        <function-ref name="write" scoped="" ref="0x7f1d73577a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7f1d73578ce0" loc="99:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7f1d73578ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1d735770a0"/>
        <function-ref name="write" scoped="" ref="0x7f1d73577230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7f1d735927b0" loc="53:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7f1d735927b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1d73592b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7f1d73578500" loc="96:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f1d73578500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1d73578880"/>
        <function-ref name="write" scoped="" ref="0x7f1d73578a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7f1d73573500" loc="106:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7f1d73573500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1d73573880"/>
        <function-ref name="write" scoped="" ref="0x7f1d73573a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7f1d735820a0" loc="81:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7f1d735820a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1d73582420"/>
        <function-ref name="write" scoped="" ref="0x7f1d735825b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7f1d7357f880" loc="89:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7f1d7357f880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1d7357fc00"/>
        <function-ref name="write" scoped="" ref="0x7f1d7357fd90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7f1d73594e00" loc="49:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7f1d73594e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1d735931c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7f1d73593ae0" loc="51:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7f1d73593ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1d73593e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7f1d735850a0" loc="77:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7f1d735850a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1d73585420"/>
        <function-ref name="write" scoped="" ref="0x7f1d735855b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7f1d7358f940" loc="58:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7f1d7358f940"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1d7358fcc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7f1d73585880" loc="78:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7f1d73585880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1d73585c00"/>
        <function-ref name="write" scoped="" ref="0x7f1d73585d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7f1d7357b0a0" loc="94:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7f1d7357b0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1d7357b820"/>
        <function-ref name="write" scoped="" ref="0x7f1d7357b9b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7f1d735719b0" loc="112:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7f1d735719b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f1d73571d30"/>
        <function-ref name="writeDone" scoped="" ref="0x7f1d73570020"/>
        <function-ref name="write" scoped="" ref="0x7f1d735701b0"/>
        <function-ref name="beginRead" scoped="" ref="0x7f1d73570340"/>
        <function-ref name="readDone" scoped="" ref="0x7f1d735704d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Fifo" ref="0x7f1d73998630" loc="41:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Fifo" scoped="" ref="0x7f1d73998630"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1d74a34160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f1d739989b0"/>
        <function-ref name="writeDone" scoped="" ref="0x7f1d73998b40"/>
        <function-ref name="write" scoped="" ref="0x7f1d73998cd0"/>
        <function-ref name="beginRead" scoped="" ref="0x7f1d73998e60"/>
        <function-ref name="readDone" scoped="" ref="0x7f1d73997020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f1d7399a680" loc="40:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f1d7399a680"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f1d7399aa00"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f1d7399ab90"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f1d7399ad20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ram" ref="0x7f1d739978c0" loc="42:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Ram" scoped="" ref="0x7f1d739978c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x7f1d74a34520"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1d73997c40"/>
        <function-ref name="write" scoped="" ref="0x7f1d73997dd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Reg" ref="0x7f1d739966f0" loc="43:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Reg" scoped="" ref="0x7f1d739966f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1d74a34160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1d73996a70"/>
        <function-ref name="write" scoped="" ref="0x7f1d73996c00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f1d7399d960" loc="39:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f1d7399d960"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1d74a34160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1d7399dce0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f1d7399de70"/>
        <function-ref name="request" scoped="" ref="0x7f1d7399a030"/>
        <function-ref name="granted" scoped="" ref="0x7f1d7399a1c0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1d7399a350"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Strobe" ref="0x7f1d73995510" loc="44:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Strobe" scoped="" ref="0x7f1d73995510"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1d74a34160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1d73995890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiPacket" ref="0x7f1d7397f680" loc="55:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7f1d7397f680"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1d7397fa00"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1d7397fb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Fifo" ref="0x7f1d73990bb0" loc="46:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Fifo" scoped="" ref="0x7f1d73990bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1d74a34160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f1d7398e020"/>
        <function-ref name="writeDone" scoped="" ref="0x7f1d7398e1b0"/>
        <function-ref name="write" scoped="" ref="0x7f1d7398e340"/>
        <function-ref name="beginRead" scoped="" ref="0x7f1d7398e4d0"/>
        <function-ref name="readDone" scoped="" ref="0x7f1d7398e660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f1d73994930" loc="44:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f1d73994930"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f1d73994cb0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f1d73994e40"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f1d73991020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiByte" ref="0x7f1d73988080" loc="54:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7f1d73988080"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7f1d73988400"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="WorkingState" ref="0x7f1d73987020" loc="56:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="WorkingState" scoped="" ref="0x7f1d73987020"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f1d739873a0"/>
        <function-ref name="toIdle" scoped="" ref="0x7f1d73987530"/>
        <function-ref name="isState" scoped="" ref="0x7f1d739876c0"/>
        <function-ref name="isIdle" scoped="" ref="0x7f1d73987850"/>
        <function-ref name="requestState" scoped="" ref="0x7f1d739879e0"/>
        <function-ref name="forceState" scoped="" ref="0x7f1d73987b70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7f1d7398b400" loc="53:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x7f1d7398b400"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1d7398b780"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f1d7398b910"/>
        <function-ref name="request" scoped="" ref="0x7f1d7398baa0"/>
        <function-ref name="granted" scoped="" ref="0x7f1d7398bc30"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1d7398bdc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ram" ref="0x7f1d7398d020" loc="47:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Ram" scoped="" ref="0x7f1d7398d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x7f1d74a34520"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1d7398d3a0"/>
        <function-ref name="write" scoped="" ref="0x7f1d7398d530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Reg" ref="0x7f1d7398ddb0" loc="48:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Reg" scoped="" ref="0x7f1d7398ddb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1d74a34160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1d7398c180"/>
        <function-ref name="write" scoped="" ref="0x7f1d7398c310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f1d73987df0" loc="57:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f1d73987df0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f1d739861c0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f1d73986350"/>
        <function-ref name="led1On" scoped="" ref="0x7f1d739864e0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f1d73986670"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f1d73986800"/>
        <function-ref name="get" scoped="" ref="0x7f1d73986990"/>
        <function-ref name="led1Off" scoped="" ref="0x7f1d73986b20"/>
        <function-ref name="led2Off" scoped="" ref="0x7f1d739801b0"/>
        <function-ref name="set" scoped="" ref="0x7f1d73986cb0"/>
        <function-ref name="led0On" scoped="" ref="0x7f1d73986e40"/>
        <function-ref name="led2On" scoped="" ref="0x7f1d73980020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f1d73991810" loc="45:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f1d73991810"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1d74a34160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1d73991b90"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f1d73991d20"/>
        <function-ref name="request" scoped="" ref="0x7f1d73990020"/>
        <function-ref name="granted" scoped="" ref="0x7f1d739901b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1d73990340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grant" ref="0x7f1d7397a120" loc="88:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grant" scoped="" ref="0x7f1d7397a120"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f1d7397a4a0"/>
        <function-ref name="runTask" scoped="" ref="0x7f1d7397a630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Strobe" ref="0x7f1d7398cba0" loc="49:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Strobe" scoped="" ref="0x7f1d7398cba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1d74a34160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1d7398b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7f1d7391f770" loc="67:/home/hades/tinyos-new/tos/system/StateC.nc">
      <component-ref qname="CC2420SpiWireC.WorkingStateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7f1d7391f770"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f1d7391faf0"/>
        <function-ref name="toIdle" scoped="" ref="0x7f1d7391fc80"/>
        <function-ref name="isState" scoped="" ref="0x7f1d7391fe10"/>
        <function-ref name="isIdle" scoped="" ref="0x7f1d73917020"/>
        <function-ref name="requestState" scoped="" ref="0x7f1d739171b0"/>
        <function-ref name="forceState" scoped="" ref="0x7f1d73917340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7f1d7391a280" loc="66:/home/hades/tinyos-new/tos/system/StateImplC.nc">
      <component-ref qname="StateImplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7f1d7391a280"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1d74a34160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f1d7391a600"/>
        <function-ref name="toIdle" scoped="" ref="0x7f1d7391a790"/>
        <function-ref name="isState" scoped="" ref="0x7f1d7391a920"/>
        <function-ref name="isIdle" scoped="" ref="0x7f1d7391aab0"/>
        <function-ref name="requestState" scoped="" ref="0x7f1d7391ac40"/>
        <function-ref name="forceState" scoped="" ref="0x7f1d7391add0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f1d73916020" loc="66:/home/hades/tinyos-new/tos/system/StateImplP.nc">
      <component-ref qname="StateImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f1d73916020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1d739163a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7f1d73916b70" loc="67:/home/hades/tinyos-new/tos/system/StateImplP.nc">
      <component-ref qname="StateImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7f1d73916b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1d74a34160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f1d73915020"/>
        <function-ref name="toIdle" scoped="" ref="0x7f1d739151b0"/>
        <function-ref name="isState" scoped="" ref="0x7f1d73915340"/>
        <function-ref name="isIdle" scoped="" ref="0x7f1d739154d0"/>
        <function-ref name="requestState" scoped="" ref="0x7f1d73915660"/>
        <function-ref name="forceState" scoped="" ref="0x7f1d739157f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7f1d735bd020" loc="44:/home/hades/tinyos-new/tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7f1d735bd020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1d735bd3a0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1d735bd530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7f1d735be8f0" loc="43:/home/hades/tinyos-new/tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7f1d735be8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7f1d735bec70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f1d738fdc40" loc="42:/home/hades/tinyos-new/tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f1d738fdc40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1d735be020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f1d735be1b0"/>
        <function-ref name="request" scoped="" ref="0x7f1d735be340"/>
        <function-ref name="granted" scoped="" ref="0x7f1d735be4d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1d735be660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f1d7231a8f0" loc="82:/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f1d7231a8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f1d7231ac70"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f1d7231ae00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7f1d723172b0" loc="87:/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7f1d723172b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1d72317630"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1d723177c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430SpiConfigure" ref="0x7f1d72317a50" loc="89:/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7f1d72317a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430SpiConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7f1d72317dd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7f1d723180c0" loc="83:/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7f1d723180c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7f1d72318440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f1d7231cc30" loc="81:/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f1d7231cc30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1d7231a020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f1d7231a1b0"/>
        <function-ref name="request" scoped="" ref="0x7f1d7231a340"/>
        <function-ref name="granted" scoped="" ref="0x7f1d7231a4d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1d7231a660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x7f1d723186d0" loc="85:/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FastSpiByte" scoped="" ref="0x7f1d723186d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7f1d72318a50"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7f1d72318be0"/>
        <function-ref name="splitRead" scoped="" ref="0x7f1d72318d70"/>
        <function-ref name="write" scoped="" ref="0x7f1d72317020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x7f1d73898450" loc="74:/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f1d73898450"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1d74a34160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f1d738987d0"/>
        <function-ref name="configure" scoped="" ref="0x7f1d73898960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7f1d738953f0" loc="77:/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7f1d738953f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1d74a34160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1d73895770"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1d73895900"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430SpiConfigure" ref="0x7f1d73892510" loc="80:/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7f1d73892510"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430SpiConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1d74a34160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7f1d73892890"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7f1d73898c40" loc="75:/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7f1d73898c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7f1d73897020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x7f1d73893280" loc="79:/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x7f1d73893280"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1d74a34160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1d73893600"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f1d73893790"/>
        <function-ref name="request" scoped="" ref="0x7f1d73893920"/>
        <function-ref name="granted" scoped="" ref="0x7f1d73893ab0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1d73893c40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f1d7389a7f0" loc="73:/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f1d7389a7f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1d74a34160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1d7389ab70"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f1d7389ad00"/>
        <function-ref name="request" scoped="" ref="0x7f1d73899020"/>
        <function-ref name="granted" scoped="" ref="0x7f1d738991b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1d73899340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x7f1d73897320" loc="76:/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FastSpiByte" scoped="" ref="0x7f1d73897320"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7f1d738976a0"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7f1d73897830"/>
        <function-ref name="splitRead" scoped="" ref="0x7f1d738979c0"/>
        <function-ref name="write" scoped="" ref="0x7f1d73897b50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x7f1d7388e6a0" loc="81:/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x7f1d7388e6a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f1d7388ea20"/>
        <function-ref name="txDone" scoped="" ref="0x7f1d7388ebb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x7f1d7381dc40" loc="76:/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f1d7381dc40"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1d74a34160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f1d7381c020"/>
        <function-ref name="configure" scoped="" ref="0x7f1d7381c1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7f1d7381b700" loc="79:/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7f1d7381b700"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1d74a34160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1d7381baa0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1d7381bc30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430SpiConfigure" ref="0x7f1d7381ae00" loc="82:/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7f1d7381ae00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430SpiConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1d74a34160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7f1d738191c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7f1d7381c440" loc="77:/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7f1d7381c440"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7f1d7381c7c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Usart" ref="0x7f1d73819490" loc="83:/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x7f1d73819490"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f1d73819810"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f1d738199a0"/>
        <function-ref name="setUctl" scoped="" ref="0x7f1d73819b30"/>
        <function-ref name="enableUart" scoped="" ref="0x7f1d73819cc0"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f1d73819e50"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f1d73817020"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f1d738171b0"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f1d73817340"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f1d738174d0"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f1d73817660"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f1d738177f0"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f1d73817980"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f1d73817b10"/>
        <function-ref name="getUbr" scoped="" ref="0x7f1d73817da0"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f1d73816020"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f1d738161b0"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f1d73816340"/>
        <function-ref name="isUart" scoped="" ref="0x7f1d738164d0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f1d73816660"/>
        <function-ref name="isSpi" scoped="" ref="0x7f1d738167f0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f1d73816980"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f1d73816b10"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f1d73816ca0"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f1d73816e30"/>
        <function-ref name="getMode" scoped="" ref="0x7f1d73815020"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f1d738153b0"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f1d73815540"/>
        <function-ref name="setUbr" scoped="" ref="0x7f1d738156d0"/>
        <function-ref name="tx" scoped="" ref="0x7f1d73815860"/>
        <function-ref name="getUctl" scoped="" ref="0x7f1d738159f0"/>
        <function-ref name="disableUart" scoped="" ref="0x7f1d73815b80"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f1d73815d10"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f1d73814020"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f1d738141b0"/>
        <function-ref name="rx" scoped="" ref="0x7f1d73814340"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f1d738144d0"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f1d73814660"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f1d738147f0"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f1d73814980"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f1d73814b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f1d738135a0" loc="85:/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f1d738135a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f1d73813920"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f1d73813ab0"/>
        <function-ref name="led1On" scoped="" ref="0x7f1d73813c40"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f1d73813dd0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f1d73812020"/>
        <function-ref name="get" scoped="" ref="0x7f1d738121b0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f1d73812340"/>
        <function-ref name="led2On" scoped="" ref="0x7f1d73812980"/>
        <function-ref name="set" scoped="" ref="0x7f1d73812660"/>
        <function-ref name="led2Off" scoped="" ref="0x7f1d738124d0"/>
        <function-ref name="led0On" scoped="" ref="0x7f1d738127f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x7f1d7381a060" loc="81:/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x7f1d7381a060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1d74a34160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1d7381a400"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f1d7381a590"/>
        <function-ref name="request" scoped="" ref="0x7f1d7381a720"/>
        <function-ref name="granted" scoped="" ref="0x7f1d7381a8b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1d7381aa40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f1d7381ee80" loc="75:/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f1d7381ee80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1d74a34160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1d7381d240"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f1d7381d3d0"/>
        <function-ref name="request" scoped="" ref="0x7f1d7381d560"/>
        <function-ref name="granted" scoped="" ref="0x7f1d7381d6f0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1d7381d880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x7f1d7381ca50" loc="78:/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FastSpiByte" scoped="" ref="0x7f1d7381ca50"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7f1d7381cdd0"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7f1d7381b020"/>
        <function-ref name="splitRead" scoped="" ref="0x7f1d7381b1b0"/>
        <function-ref name="write" scoped="" ref="0x7f1d7381b340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x7f1d73814de0" loc="84:/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x7f1d73814de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f1d73813180"/>
        <function-ref name="txDone" scoped="" ref="0x7f1d73813310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalDone_task" ref="0x7f1d73812c50" loc="102:/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="signalDone_task" scoped="" ref="0x7f1d73812c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f1d73811020"/>
        <function-ref name="runTask" scoped="" ref="0x7f1d738111b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2CInterrupts" ref="0x7f1d73802980" loc="78:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <component-ref qname="HplMsp430Usart0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7f1d73802980"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1d73802d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x7f1d738053b0" loc="77:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <component-ref qname="HplMsp430Usart0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f1d738053b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f1d73805730"/>
        <function-ref name="txDone" scoped="" ref="0x7f1d738058c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x7f1d7380c870" loc="76:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <component-ref qname="HplMsp430Usart0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f1d7380c870"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f1d7380cbf0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f1d7380cd80"/>
        <function-ref name="setUctl" scoped="" ref="0x7f1d73809020"/>
        <function-ref name="enableUart" scoped="" ref="0x7f1d738091b0"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f1d73809340"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f1d738094d0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f1d73809660"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f1d738097f0"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f1d73809980"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f1d73809b10"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f1d73809ca0"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f1d73809e30"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f1d73808020"/>
        <function-ref name="getUbr" scoped="" ref="0x7f1d738082b0"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f1d73808440"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f1d738085d0"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f1d73808760"/>
        <function-ref name="isUart" scoped="" ref="0x7f1d738088f0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f1d73808a80"/>
        <function-ref name="isSpi" scoped="" ref="0x7f1d73808c10"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f1d73808da0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f1d73807020"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f1d738071b0"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f1d73807340"/>
        <function-ref name="getMode" scoped="" ref="0x7f1d738074d0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f1d73807860"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f1d738079f0"/>
        <function-ref name="setUbr" scoped="" ref="0x7f1d73807b80"/>
        <function-ref name="tx" scoped="" ref="0x7f1d73807d10"/>
        <function-ref name="getUctl" scoped="" ref="0x7f1d73806020"/>
        <function-ref name="disableUart" scoped="" ref="0x7f1d738061b0"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f1d73806340"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f1d738064d0"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f1d73806660"/>
        <function-ref name="rx" scoped="" ref="0x7f1d738067f0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f1d73806980"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f1d73806b10"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f1d73806ca0"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f1d73806e30"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f1d73805020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UCLK" ref="0x7f1d737c7670" loc="82:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK" scoped="" ref="0x7f1d737c7670"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1d737c79f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1d737c7b80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1d737c7d10"/>
        <function-ref name="toggle" scoped="" ref="0x7f1d737c6020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1d737c61b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1d737c6340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1d737c64d0"/>
        <function-ref name="get" scoped="" ref="0x7f1d737c6660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1d737c67f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1d737c6980"/>
        <function-ref name="set" scoped="" ref="0x7f1d737c6b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1d737c6ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1d737c6e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1d737c5120"/>
        <function-ref name="clr" scoped="" ref="0x7f1d737c52b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7f1d737fbdc0" loc="76:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7f1d737fbdc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f1d737fa180"/>
        <function-ref name="txDone" scoped="" ref="0x7f1d737fa310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="URXD" ref="0x7f1d737c5670" loc="83:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD" scoped="" ref="0x7f1d737c5670"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1d737c59f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1d737c5b80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1d737c5d10"/>
        <function-ref name="toggle" scoped="" ref="0x7f1d737c4020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1d737c41b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1d737c4340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1d737c44d0"/>
        <function-ref name="get" scoped="" ref="0x7f1d737c4660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1d737c47f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1d737c4980"/>
        <function-ref name="set" scoped="" ref="0x7f1d737c4b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1d737c4ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1d737c4e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1d737c3120"/>
        <function-ref name="clr" scoped="" ref="0x7f1d737c32b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UTXD" ref="0x7f1d737c3670" loc="84:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD" scoped="" ref="0x7f1d737c3670"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1d737c39f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1d737c3b80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1d737c3d10"/>
        <function-ref name="toggle" scoped="" ref="0x7f1d737c2020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1d737c21b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1d737c2340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1d737c24d0"/>
        <function-ref name="get" scoped="" ref="0x7f1d737c2660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1d737c27f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1d737c2980"/>
        <function-ref name="set" scoped="" ref="0x7f1d737c2b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1d737c2ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1d737c2e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1d737c1120"/>
        <function-ref name="clr" scoped="" ref="0x7f1d737c12b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Usart" ref="0x7f1d737ff060" loc="75:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x7f1d737ff060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f1d737ff3e0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f1d737ff570"/>
        <function-ref name="setUctl" scoped="" ref="0x7f1d737ff700"/>
        <function-ref name="enableUart" scoped="" ref="0x7f1d737ff890"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f1d737ffa20"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f1d737ffbb0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f1d737ffd40"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f1d737fe020"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f1d737fe1b0"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f1d737fe340"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f1d737fe4d0"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f1d737fe660"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f1d737fe7f0"/>
        <function-ref name="getUbr" scoped="" ref="0x7f1d737fea80"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f1d737fec10"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f1d737feda0"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f1d737fd020"/>
        <function-ref name="isUart" scoped="" ref="0x7f1d737fd1b0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f1d737fd340"/>
        <function-ref name="isSpi" scoped="" ref="0x7f1d737fd4d0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f1d737fd660"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f1d737fd7f0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f1d737fd980"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f1d737fdb10"/>
        <function-ref name="getMode" scoped="" ref="0x7f1d737fdca0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f1d737fc220"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f1d737fc3b0"/>
        <function-ref name="setUbr" scoped="" ref="0x7f1d737fc540"/>
        <function-ref name="tx" scoped="" ref="0x7f1d737fc6d0"/>
        <function-ref name="getUctl" scoped="" ref="0x7f1d737fc860"/>
        <function-ref name="disableUart" scoped="" ref="0x7f1d737fc9f0"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f1d737fcb80"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f1d737fcd10"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f1d737fb020"/>
        <function-ref name="rx" scoped="" ref="0x7f1d737fb1b0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f1d737fb340"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f1d737fb4d0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f1d737fb660"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f1d737fb7f0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f1d737fb980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplI2C" ref="0x7f1d737d15b0" loc="79:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplI2C" scoped="" ref="0x7f1d737d15b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x7f1d737d1930"/>
        <function-ref name="getStartByte" scoped="" ref="0x7f1d737d1ac0"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x7f1d737d1c50"/>
        <function-ref name="setMasterMode" scoped="" ref="0x7f1d737d1de0"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x7f1d737f8020"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x7f1d737f81b0"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x7f1d737f8340"/>
        <function-ref name="getStopBit" scoped="" ref="0x7f1d737f84d0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f1d737f8660"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x7f1d737f87f0"/>
        <function-ref name="getData" scoped="" ref="0x7f1d737f8980"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x7f1d737f8b10"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x7f1d737f8ca0"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x7f1d737f7020"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x7f1d737f71b0"/>
        <function-ref name="getIV" scoped="" ref="0x7f1d737f7340"/>
        <function-ref name="enableI2C" scoped="" ref="0x7f1d737f74d0"/>
        <function-ref name="setStartBit" scoped="" ref="0x7f1d737f7660"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x7f1d737f77f0"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x7f1d737f7980"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x7f1d737f7b10"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x7f1d737f7ca0"/>
        <function-ref name="isI2C" scoped="" ref="0x7f1d737f7e30"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x7f1d737d0020"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x7f1d737d01b0"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x7f1d737d0540"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x7f1d737d06d0"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x7f1d737d0860"/>
        <function-ref name="disableNoAck" scoped="" ref="0x7f1d737d09f0"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x7f1d737d0b80"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x7f1d737d0d10"/>
        <function-ref name="disableI2C" scoped="" ref="0x7f1d737cf020"/>
        <function-ref name="getShiftClock" scoped="" ref="0x7f1d737cf1b0"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x7f1d737cf340"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x7f1d737cf4d0"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x7f1d737cf660"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x7f1d737cf7f0"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x7f1d737cf980"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x7f1d737cfb10"/>
        <function-ref name="setModeI2C" scoped="" ref="0x7f1d737cfca0"/>
        <function-ref name="getStartBit" scoped="" ref="0x7f1d737cfe30"/>
        <function-ref name="setWordMode" scoped="" ref="0x7f1d737ce020"/>
        <function-ref name="setData" scoped="" ref="0x7f1d737ce1b0"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x7f1d737ce340"/>
        <function-ref name="getClockSource" scoped="" ref="0x7f1d737ce4d0"/>
        <function-ref name="getWordMode" scoped="" ref="0x7f1d737ce660"/>
        <function-ref name="setShiftClock" scoped="" ref="0x7f1d737ce7f0"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x7f1d737ce980"/>
        <function-ref name="enableNoAck" scoped="" ref="0x7f1d737ceb10"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x7f1d737cd420"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x7f1d737cd5b0"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x7f1d737cd740"/>
        <function-ref name="setStopBit" scoped="" ref="0x7f1d737cd8d0"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x7f1d737cda60"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x7f1d737cdbf0"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x7f1d737cdd80"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x7f1d737cc020"/>
        <function-ref name="setStartByte" scoped="" ref="0x7f1d737cc1b0"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x7f1d737cc340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SOMI" ref="0x7f1d737ca670" loc="81:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI" scoped="" ref="0x7f1d737ca670"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1d737ca9f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1d737cab80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1d737cad10"/>
        <function-ref name="toggle" scoped="" ref="0x7f1d737c8020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1d737c81b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1d737c8340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1d737c84d0"/>
        <function-ref name="get" scoped="" ref="0x7f1d737c8660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1d737c87f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1d737c8980"/>
        <function-ref name="set" scoped="" ref="0x7f1d737c8b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1d737c8ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1d737c8e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1d737c7120"/>
        <function-ref name="clr" scoped="" ref="0x7f1d737c72b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x7f1d737fa750" loc="77:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x7f1d737fa750"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1d737faad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SIMO" ref="0x7f1d737cc700" loc="80:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO" scoped="" ref="0x7f1d737cc700"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1d737cca80"/>
        <function-ref name="isInput" scoped="" ref="0x7f1d737ccc10"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1d737ccda0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1d737cb020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1d737cb1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1d737cb340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1d737cb4d0"/>
        <function-ref name="get" scoped="" ref="0x7f1d737cb660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1d737cb7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1d737cb980"/>
        <function-ref name="set" scoped="" ref="0x7f1d737cbb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1d737cbca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1d737cbe30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1d737ca120"/>
        <function-ref name="clr" scoped="" ref="0x7f1d737ca2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f1d7230f2c0" loc="42:/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f1d7230f2c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f1d7230f640"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f1d7230f7d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2CInterrupts" ref="0x7f1d72309440" loc="46:/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7f1d72309440"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1d723097c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f1d72301760" loc="51:/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f1d72301760"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f1d72301ae0"/>
        <function-ref name="configure" scoped="" ref="0x7f1d72301c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2C" ref="0x7f1d72309a50" loc="48:/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2C" scoped="" ref="0x7f1d72309a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x7f1d72309dd0"/>
        <function-ref name="getStartByte" scoped="" ref="0x7f1d72307020"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x7f1d723071b0"/>
        <function-ref name="setMasterMode" scoped="" ref="0x7f1d72307340"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x7f1d723074d0"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x7f1d72307660"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x7f1d723077f0"/>
        <function-ref name="getStopBit" scoped="" ref="0x7f1d72307980"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f1d72307b10"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x7f1d72307ca0"/>
        <function-ref name="getData" scoped="" ref="0x7f1d72307e30"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x7f1d72306020"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x7f1d723061b0"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x7f1d72306440"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x7f1d723065d0"/>
        <function-ref name="getIV" scoped="" ref="0x7f1d72306760"/>
        <function-ref name="enableI2C" scoped="" ref="0x7f1d723068f0"/>
        <function-ref name="setStartBit" scoped="" ref="0x7f1d72306a80"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x7f1d72306c10"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x7f1d72306da0"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x7f1d72305020"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x7f1d723051b0"/>
        <function-ref name="isI2C" scoped="" ref="0x7f1d72305340"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x7f1d723054d0"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x7f1d72305660"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x7f1d723059f0"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x7f1d72305b80"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x7f1d72305d10"/>
        <function-ref name="disableNoAck" scoped="" ref="0x7f1d72304020"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x7f1d723041b0"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x7f1d72304340"/>
        <function-ref name="disableI2C" scoped="" ref="0x7f1d723044d0"/>
        <function-ref name="getShiftClock" scoped="" ref="0x7f1d72304660"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x7f1d723047f0"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x7f1d72304980"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x7f1d72304b10"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x7f1d72304ca0"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x7f1d72304e30"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x7f1d72303020"/>
        <function-ref name="setModeI2C" scoped="" ref="0x7f1d723031b0"/>
        <function-ref name="getStartBit" scoped="" ref="0x7f1d72303340"/>
        <function-ref name="setWordMode" scoped="" ref="0x7f1d723034d0"/>
        <function-ref name="setData" scoped="" ref="0x7f1d72303660"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x7f1d723037f0"/>
        <function-ref name="getClockSource" scoped="" ref="0x7f1d72303980"/>
        <function-ref name="getWordMode" scoped="" ref="0x7f1d72303b10"/>
        <function-ref name="setShiftClock" scoped="" ref="0x7f1d72303ca0"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x7f1d72303e30"/>
        <function-ref name="enableNoAck" scoped="" ref="0x7f1d72302020"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x7f1d723025b0"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x7f1d72302740"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x7f1d723028d0"/>
        <function-ref name="setStopBit" scoped="" ref="0x7f1d72302a60"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x7f1d72302bf0"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x7f1d72302d80"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x7f1d72301020"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x7f1d723011b0"/>
        <function-ref name="setStartByte" scoped="" ref="0x7f1d72301340"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x7f1d723014d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x7f1d7230ac10" loc="45:/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f1d7230ac10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f1d72309020"/>
        <function-ref name="txDone" scoped="" ref="0x7f1d723091b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f1d72310640" loc="41:/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f1d72310640"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1d723109c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f1d72310b50"/>
        <function-ref name="request" scoped="" ref="0x7f1d72310ce0"/>
        <function-ref name="granted" scoped="" ref="0x7f1d72310e70"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1d7230f030"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x7f1d7230e2b0" loc="44:/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f1d7230e2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f1d7230e630"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f1d7230e7c0"/>
        <function-ref name="setUctl" scoped="" ref="0x7f1d7230e950"/>
        <function-ref name="enableUart" scoped="" ref="0x7f1d7230eae0"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f1d7230ec70"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f1d7230ee00"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f1d7230d020"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f1d7230d1b0"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f1d7230d340"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f1d7230d4d0"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f1d7230d660"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f1d7230d7f0"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f1d7230d980"/>
        <function-ref name="getUbr" scoped="" ref="0x7f1d7230dc10"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f1d7230dda0"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f1d7230c020"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f1d7230c1b0"/>
        <function-ref name="isUart" scoped="" ref="0x7f1d7230c340"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f1d7230c4d0"/>
        <function-ref name="isSpi" scoped="" ref="0x7f1d7230c660"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f1d7230c7f0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f1d7230c980"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f1d7230cb10"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f1d7230cca0"/>
        <function-ref name="getMode" scoped="" ref="0x7f1d7230ce30"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f1d7230b220"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f1d7230b3b0"/>
        <function-ref name="setUbr" scoped="" ref="0x7f1d7230b540"/>
        <function-ref name="tx" scoped="" ref="0x7f1d7230b6d0"/>
        <function-ref name="getUctl" scoped="" ref="0x7f1d7230b860"/>
        <function-ref name="disableUart" scoped="" ref="0x7f1d7230b9f0"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f1d7230bb80"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f1d7230bd10"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f1d7230a020"/>
        <function-ref name="rx" scoped="" ref="0x7f1d7230a1b0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f1d7230a340"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f1d7230a4d0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f1d7230a660"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f1d7230a7f0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f1d7230a980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f1d7230fa60" loc="43:/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f1d7230fa60"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f1d7230fde0"/>
        <function-ref name="userId" scoped="" ref="0x7f1d7230e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f1d737208a0" loc="42:/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f1d737208a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1d74a34160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f1d73720c20"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f1d73720db0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f1d7371e020" loc="45:/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f1d7371e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1d74a34160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f1d7371e3a0"/>
        <function-ref name="configure" scoped="" ref="0x7f1d7371e530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7f1d73726a90" loc="39:/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7f1d73726a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1d74a34160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f1d73726e10"/>
        <function-ref name="txDone" scoped="" ref="0x7f1d73723020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f1d737215c0" loc="41:/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f1d737215c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1d74a34160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1d73721940"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f1d73721ad0"/>
        <function-ref name="request" scoped="" ref="0x7f1d73721c60"/>
        <function-ref name="granted" scoped="" ref="0x7f1d73721df0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1d73720020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x7f1d737239a0" loc="40:/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x7f1d737239a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1d74a34160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1d73723d20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f1d7371f130" loc="43:/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f1d7371f130"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f1d7371f4b0"/>
        <function-ref name="userId" scoped="" ref="0x7f1d7371f640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7f1d737094b0" loc="43:/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f1d737094b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f1d73709830"/>
        <function-ref name="userId" scoped="" ref="0x7f1d737099c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7f1d7371c5c0" loc="39:/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7f1d7371c5c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1d74a34160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f1d7371c960"/>
        <function-ref name="txDone" scoped="" ref="0x7f1d7371caf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawI2CInterrupts" ref="0x7f1d7370ae70" loc="42:/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawI2CInterrupts" scoped="" ref="0x7f1d7370ae70"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1d73709220"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x7f1d7370a020" loc="40:/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x7f1d7370a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1d74a34160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1d7370a3c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawInterrupts" ref="0x7f1d7370a690" loc="41:/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawInterrupts" scoped="" ref="0x7f1d7370a690"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f1d7370aa10"/>
        <function-ref name="txDone" scoped="" ref="0x7f1d7370aba0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f1d73690bf0" loc="92:/home/hades/tinyos-new/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f1d73690bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1d74a34160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f1d7368f020"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f1d7368f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f1d7368d930" loc="96:/home/hades/tinyos-new/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f1d7368d930"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1d74a34160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f1d7368dcd0"/>
        <function-ref name="configure" scoped="" ref="0x7f1d7368de60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7f1d7368f400" loc="93:/home/hades/tinyos-new/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f1d7368f400"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1d7368f780"/>
        <function-ref name="requested" scoped="" ref="0x7f1d7368f910"/>
        <function-ref name="granted" scoped="" ref="0x7f1d7368faa0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1d7368fc30"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f1d7368fdc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f1d73691e60" loc="91:/home/hades/tinyos-new/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f1d73691e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1d74a34160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1d73690230"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f1d736903c0"/>
        <function-ref name="request" scoped="" ref="0x7f1d73690550"/>
        <function-ref name="granted" scoped="" ref="0x7f1d736906e0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1d73690870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f1d7368d060" loc="94:/home/hades/tinyos-new/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f1d7368d060"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f1d7368d3e0"/>
        <function-ref name="userId" scoped="" ref="0x7f1d7368d570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f1d7229c140" loc="44:/home/hades/tinyos-new/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f1d7229c140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1d7229c4c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7f1d7229c750" loc="45:/home/hades/tinyos-new/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FcfsQueue" scoped="" ref="0x7f1d7229c750"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f1d7229cad0"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f1d7229cc60"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f1d7229cdf0"/>
        <function-ref name="dequeue" scoped="" ref="0x7f1d7229b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f1d72298850" loc="55:/home/hades/tinyos-new/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f1d72298850"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1d74a34160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f1d72298bf0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f1d72298d80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f1d72296590" loc="60:/home/hades/tinyos-new/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f1d72296590"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1d74a34160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f1d72296930"/>
        <function-ref name="configure" scoped="" ref="0x7f1d72296ac0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7f1d72296d50" loc="61:/home/hades/tinyos-new/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x7f1d72296d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f1d72295100"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f1d72295290"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f1d72295420"/>
        <function-ref name="dequeue" scoped="" ref="0x7f1d722955b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7f1d72297020" loc="56:/home/hades/tinyos-new/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f1d72297020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1d722973a0"/>
        <function-ref name="requested" scoped="" ref="0x7f1d72297530"/>
        <function-ref name="granted" scoped="" ref="0x7f1d722976c0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1d72297850"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f1d722979e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f1d72295800" loc="62:/home/hades/tinyos-new/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f1d72295800"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f1d72295b80"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f1d72295d10"/>
        <function-ref name="led1On" scoped="" ref="0x7f1d7228d020"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f1d7228d1b0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f1d7228d340"/>
        <function-ref name="get" scoped="" ref="0x7f1d7228d4d0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f1d7228d660"/>
        <function-ref name="led0On" scoped="" ref="0x7f1d7228dca0"/>
        <function-ref name="set" scoped="" ref="0x7f1d7228d980"/>
        <function-ref name="led2On" scoped="" ref="0x7f1d7228d7f0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f1d7228db10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f1d7229a970" loc="54:/home/hades/tinyos-new/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f1d7229a970"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1d74a34160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1d7229ad10"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f1d72298020"/>
        <function-ref name="request" scoped="" ref="0x7f1d722981b0"/>
        <function-ref name="granted" scoped="" ref="0x7f1d72298340"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1d722984d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f1d72297c30" loc="57:/home/hades/tinyos-new/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f1d72297c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f1d72296020"/>
        <function-ref name="userId" scoped="" ref="0x7f1d722961b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7f1d7228c020" loc="75:/home/hades/tinyos-new/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantedTask" scoped="" ref="0x7f1d7228c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f1d7228c3a0"/>
        <function-ref name="runTask" scoped="" ref="0x7f1d7228c530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2C" ref="0x7f1d73686880" loc="4:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <component-ref qname="HplMsp430I2C0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2C" scoped="" ref="0x7f1d73686880"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x7f1d73686c00"/>
        <function-ref name="getStartByte" scoped="" ref="0x7f1d73686d90"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x7f1d73683020"/>
        <function-ref name="setMasterMode" scoped="" ref="0x7f1d736831b0"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x7f1d73683340"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x7f1d736834d0"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x7f1d73683660"/>
        <function-ref name="getStopBit" scoped="" ref="0x7f1d736837f0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f1d73683980"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x7f1d73683b10"/>
        <function-ref name="getData" scoped="" ref="0x7f1d73683ca0"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x7f1d73683e30"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x7f1d73682020"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x7f1d736822b0"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x7f1d73682440"/>
        <function-ref name="getIV" scoped="" ref="0x7f1d736825d0"/>
        <function-ref name="enableI2C" scoped="" ref="0x7f1d73682760"/>
        <function-ref name="setStartBit" scoped="" ref="0x7f1d736828f0"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x7f1d73682a80"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x7f1d73682c10"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x7f1d73682da0"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x7f1d73681020"/>
        <function-ref name="isI2C" scoped="" ref="0x7f1d736811b0"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x7f1d73681340"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x7f1d736814d0"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x7f1d73681860"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x7f1d736819f0"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x7f1d73681b80"/>
        <function-ref name="disableNoAck" scoped="" ref="0x7f1d73681d10"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x7f1d73680020"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x7f1d736801b0"/>
        <function-ref name="disableI2C" scoped="" ref="0x7f1d73680340"/>
        <function-ref name="getShiftClock" scoped="" ref="0x7f1d736804d0"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x7f1d73680660"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x7f1d736807f0"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x7f1d73680980"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x7f1d73680b10"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x7f1d73680ca0"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x7f1d73680e30"/>
        <function-ref name="setModeI2C" scoped="" ref="0x7f1d7367f020"/>
        <function-ref name="getStartBit" scoped="" ref="0x7f1d7367f1b0"/>
        <function-ref name="setWordMode" scoped="" ref="0x7f1d7367f340"/>
        <function-ref name="setData" scoped="" ref="0x7f1d7367f4d0"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x7f1d7367f660"/>
        <function-ref name="getClockSource" scoped="" ref="0x7f1d7367f7f0"/>
        <function-ref name="getWordMode" scoped="" ref="0x7f1d7367f980"/>
        <function-ref name="setShiftClock" scoped="" ref="0x7f1d7367fb10"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x7f1d7367fca0"/>
        <function-ref name="enableNoAck" scoped="" ref="0x7f1d7367fe30"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x7f1d7367e420"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x7f1d7367e5b0"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x7f1d7367e740"/>
        <function-ref name="setStopBit" scoped="" ref="0x7f1d7367e8d0"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x7f1d7367ea60"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x7f1d7367ebf0"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x7f1d7367ed80"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x7f1d7367d020"/>
        <function-ref name="setStartByte" scoped="" ref="0x7f1d7367d1b0"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x7f1d7367d340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUsart" ref="0x7f1d73673250" loc="41:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplUsart" scoped="" ref="0x7f1d73673250"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f1d736735d0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f1d73673760"/>
        <function-ref name="setUctl" scoped="" ref="0x7f1d736738f0"/>
        <function-ref name="enableUart" scoped="" ref="0x7f1d73673a80"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f1d73673c10"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f1d73673da0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f1d73672020"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f1d736721b0"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f1d73672340"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f1d736724d0"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f1d73672660"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f1d736727f0"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f1d73672980"/>
        <function-ref name="getUbr" scoped="" ref="0x7f1d73672c10"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f1d73672da0"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f1d73671020"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f1d736711b0"/>
        <function-ref name="isUart" scoped="" ref="0x7f1d73671340"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f1d736714d0"/>
        <function-ref name="isSpi" scoped="" ref="0x7f1d73671660"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f1d736717f0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f1d73671980"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f1d73671b10"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f1d73671ca0"/>
        <function-ref name="getMode" scoped="" ref="0x7f1d73671e30"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f1d73670220"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f1d736703b0"/>
        <function-ref name="setUbr" scoped="" ref="0x7f1d73670540"/>
        <function-ref name="tx" scoped="" ref="0x7f1d736706d0"/>
        <function-ref name="getUctl" scoped="" ref="0x7f1d73670860"/>
        <function-ref name="disableUart" scoped="" ref="0x7f1d736709f0"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f1d73670b80"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f1d73670d10"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f1d7366f020"/>
        <function-ref name="rx" scoped="" ref="0x7f1d7366f1b0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f1d7366f340"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f1d7366f4d0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f1d7366f660"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f1d7366f7f0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f1d7366f980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UCLK" ref="0x7f1d7366dcb0" loc="43:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK" scoped="" ref="0x7f1d7366dcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1d7366c0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1d7366c230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1d7366c3c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1d7366c550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1d7366c6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1d7366c870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1d7366ca00"/>
        <function-ref name="get" scoped="" ref="0x7f1d7366cb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1d7366cd20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1d7366b020"/>
        <function-ref name="set" scoped="" ref="0x7f1d7366b1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1d7366b340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1d7366b4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1d7366b760"/>
        <function-ref name="clr" scoped="" ref="0x7f1d7366b8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplI2C" ref="0x7f1d7367a430" loc="39:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplI2C" scoped="" ref="0x7f1d7367a430"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x7f1d7367a7b0"/>
        <function-ref name="getStartByte" scoped="" ref="0x7f1d7367a940"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x7f1d7367aad0"/>
        <function-ref name="setMasterMode" scoped="" ref="0x7f1d7367ac60"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x7f1d7367adf0"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x7f1d73679020"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x7f1d736791b0"/>
        <function-ref name="getStopBit" scoped="" ref="0x7f1d73679340"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f1d736794d0"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x7f1d73679660"/>
        <function-ref name="getData" scoped="" ref="0x7f1d736797f0"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x7f1d73679980"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x7f1d73679b10"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x7f1d73679da0"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x7f1d73678020"/>
        <function-ref name="getIV" scoped="" ref="0x7f1d736781b0"/>
        <function-ref name="enableI2C" scoped="" ref="0x7f1d73678340"/>
        <function-ref name="setStartBit" scoped="" ref="0x7f1d736784d0"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x7f1d73678660"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x7f1d736787f0"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x7f1d73678980"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x7f1d73678b10"/>
        <function-ref name="isI2C" scoped="" ref="0x7f1d73678ca0"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x7f1d73678e30"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x7f1d73677020"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x7f1d736773b0"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x7f1d73677540"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x7f1d736776d0"/>
        <function-ref name="disableNoAck" scoped="" ref="0x7f1d73677860"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x7f1d736779f0"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x7f1d73677b80"/>
        <function-ref name="disableI2C" scoped="" ref="0x7f1d73677d10"/>
        <function-ref name="getShiftClock" scoped="" ref="0x7f1d73676020"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x7f1d736761b0"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x7f1d73676340"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x7f1d736764d0"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x7f1d73676660"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x7f1d736767f0"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x7f1d73676980"/>
        <function-ref name="setModeI2C" scoped="" ref="0x7f1d73676b10"/>
        <function-ref name="getStartBit" scoped="" ref="0x7f1d73676ca0"/>
        <function-ref name="setWordMode" scoped="" ref="0x7f1d73676e30"/>
        <function-ref name="setData" scoped="" ref="0x7f1d73675020"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x7f1d736751b0"/>
        <function-ref name="getClockSource" scoped="" ref="0x7f1d73675340"/>
        <function-ref name="getWordMode" scoped="" ref="0x7f1d736754d0"/>
        <function-ref name="setShiftClock" scoped="" ref="0x7f1d73675660"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x7f1d736757f0"/>
        <function-ref name="enableNoAck" scoped="" ref="0x7f1d73675980"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x7f1d73674020"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x7f1d736741b0"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x7f1d73674340"/>
        <function-ref name="setStopBit" scoped="" ref="0x7f1d736744d0"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x7f1d73674660"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x7f1d736747f0"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x7f1d73674980"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x7f1d73674b10"/>
        <function-ref name="setStartByte" scoped="" ref="0x7f1d73674ca0"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x7f1d73674e30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SIMO" ref="0x7f1d7366fd40" loc="42:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO" scoped="" ref="0x7f1d7366fd40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1d7366e0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1d7366e270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1d7366e400"/>
        <function-ref name="toggle" scoped="" ref="0x7f1d7366e590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1d7366e720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1d7366e8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1d7366ea40"/>
        <function-ref name="get" scoped="" ref="0x7f1d7366ebd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1d7366ed60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1d7366d020"/>
        <function-ref name="set" scoped="" ref="0x7f1d7366d1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1d7366d340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1d7366d4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1d7366d760"/>
        <function-ref name="clr" scoped="" ref="0x7f1d7366d8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7f1d73558c60" loc="69:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7f1d73558c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1d73557210"/>
        <function-ref name="write" scoped="" ref="0x7f1d735573a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7f1d73563da0" loc="47:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7f1d73563da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1d73562180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7f1d7355cb50" loc="63:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7f1d7355cb50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1d7355a020"/>
        <function-ref name="write" scoped="" ref="0x7f1d7355a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7f1d73556670" loc="72:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7f1d73556670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1d735569f0"/>
        <function-ref name="write" scoped="" ref="0x7f1d73556b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7f1d7354fe50" loc="86:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7f1d7354fe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1d7354d210"/>
        <function-ref name="write" scoped="" ref="0x7f1d7354d3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7f1d73556e50" loc="73:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7f1d73556e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1d73554210"/>
        <function-ref name="write" scoped="" ref="0x7f1d735543a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7f1d735422f0" loc="108:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7f1d735422f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1d73542670"/>
        <function-ref name="write" scoped="" ref="0x7f1d73542800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7f1d735442f0" loc="104:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7f1d735442f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1d73544670"/>
        <function-ref name="write" scoped="" ref="0x7f1d73544800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7f1d73560120" loc="50:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7f1d73560120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1d735604a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7f1d7354a670" loc="93:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7f1d7354a670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1d7354a9f0"/>
        <function-ref name="write" scoped="" ref="0x7f1d7354ab80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7f1d735452f0" loc="102:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f1d735452f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1d73545670"/>
        <function-ref name="write" scoped="" ref="0x7f1d73545800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7f1d7355ac60" loc="65:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7f1d7355ac60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1d73559020"/>
        <function-ref name="write" scoped="" ref="0x7f1d735591b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7f1d73559c60" loc="67:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7f1d73559c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1d73558020"/>
        <function-ref name="write" scoped="" ref="0x7f1d735581b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7f1d73550670" loc="83:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7f1d73550670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1d735509f0"/>
        <function-ref name="write" scoped="" ref="0x7f1d73550b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7f1d73552e50" loc="79:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7f1d73552e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1d73551210"/>
        <function-ref name="write" scoped="" ref="0x7f1d735513a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7f1d73554670" loc="74:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7f1d73554670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1d735549f0"/>
        <function-ref name="write" scoped="" ref="0x7f1d73554b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f1d73564760" loc="42:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f1d73564760"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f1d73564ae0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f1d73564c70"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f1d73564e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7f1d7355faa0" loc="54:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7f1d7355faa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1d7355fe20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7f1d7355e120" loc="55:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7f1d7355e120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1d7355e5a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7f1d73549a70" loc="95:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f1d73549a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1d73549df0"/>
        <function-ref name="write" scoped="" ref="0x7f1d73548020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7f1d7355e870" loc="56:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7f1d7355e870"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1d7355ebf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7f1d73545ad0" loc="103:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f1d73545ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1d73545e50"/>
        <function-ref name="write" scoped="" ref="0x7f1d73544020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7f1d73560dc0" loc="52:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7f1d73560dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1d7355f180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7f1d7354be50" loc="92:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7f1d7354be50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1d7354a210"/>
        <function-ref name="write" scoped="" ref="0x7f1d7354a3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7f1d73559480" loc="66:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7f1d73559480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1d73559800"/>
        <function-ref name="write" scoped="" ref="0x7f1d73559990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7f1d7355a480" loc="64:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f1d7355a480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1d7355a800"/>
        <function-ref name="write" scoped="" ref="0x7f1d7355a990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7f1d73563750" loc="46:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7f1d73563750"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1d73563ad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7f1d7354ce50" loc="90:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7f1d7354ce50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1d7354b210"/>
        <function-ref name="write" scoped="" ref="0x7f1d7354b3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7f1d7354d670" loc="87:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7f1d7354d670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1d7354d9f0"/>
        <function-ref name="write" scoped="" ref="0x7f1d7354db80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7f1d7354b670" loc="91:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7f1d7354b670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1d7354b9f0"/>
        <function-ref name="write" scoped="" ref="0x7f1d7354bb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7f1d73543ad0" loc="107:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7f1d73543ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1d73543e50"/>
        <function-ref name="write" scoped="" ref="0x7f1d73542020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7f1d73544ad0" loc="105:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7f1d73544ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1d73544e50"/>
        <function-ref name="write" scoped="" ref="0x7f1d73543020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7f1d73551670" loc="80:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7f1d73551670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1d735519f0"/>
        <function-ref name="write" scoped="" ref="0x7f1d73551b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7f1d7354de50" loc="88:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7f1d7354de50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1d7354c210"/>
        <function-ref name="write" scoped="" ref="0x7f1d7354c3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7f1d73546ad0" loc="101:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7f1d73546ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1d73546e50"/>
        <function-ref name="write" scoped="" ref="0x7f1d73545020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7f1d73553670" loc="76:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7f1d73553670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1d735539f0"/>
        <function-ref name="write" scoped="" ref="0x7f1d73553b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7f1d73542ad0" loc="111:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7f1d73542ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f1d73542e50"/>
        <function-ref name="writeDone" scoped="" ref="0x7f1d73541020"/>
        <function-ref name="write" scoped="" ref="0x7f1d735411b0"/>
        <function-ref name="beginRead" scoped="" ref="0x7f1d73541340"/>
        <function-ref name="readDone" scoped="" ref="0x7f1d735414d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7f1d73563100" loc="45:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7f1d73563100"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1d73563480"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7f1d7355c370" loc="62:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7f1d7355c370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1d7355c6f0"/>
        <function-ref name="write" scoped="" ref="0x7f1d7355c880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7f1d73558480" loc="68:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7f1d73558480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1d73558800"/>
        <function-ref name="write" scoped="" ref="0x7f1d73558990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7f1d73550e50" loc="84:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7f1d73550e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1d7354f210"/>
        <function-ref name="write" scoped="" ref="0x7f1d7354f3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7f1d73554e50" loc="75:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7f1d73554e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1d73553210"/>
        <function-ref name="write" scoped="" ref="0x7f1d735533a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7f1d7354f670" loc="85:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7f1d7354f670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1d7354f9f0"/>
        <function-ref name="write" scoped="" ref="0x7f1d7354fb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7f1d73557670" loc="70:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7f1d73557670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1d735579f0"/>
        <function-ref name="write" scoped="" ref="0x7f1d73557b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7f1d73562450" loc="48:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7f1d73562450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1d735627d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7f1d73557e50" loc="71:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7f1d73557e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1d73556210"/>
        <function-ref name="write" scoped="" ref="0x7f1d735563a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f1d73565a80" loc="41:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f1d73565a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1d73565e00"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f1d73564020"/>
        <function-ref name="request" scoped="" ref="0x7f1d735641b0"/>
        <function-ref name="granted" scoped="" ref="0x7f1d73564340"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1d735644d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7f1d7355d020" loc="57:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7f1d7355d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1d7355d3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7f1d7355dcc0" loc="59:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7f1d7355dcc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1d7355c0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7f1d735462f0" loc="100:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7f1d735462f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1d73546670"/>
        <function-ref name="write" scoped="" ref="0x7f1d73546800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7f1d73548ad0" loc="99:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7f1d73548ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1d73548e50"/>
        <function-ref name="write" scoped="" ref="0x7f1d73546020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7f1d7355f450" loc="53:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7f1d7355f450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1d7355f7d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7f1d735482f0" loc="96:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f1d735482f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1d73548670"/>
        <function-ref name="write" scoped="" ref="0x7f1d73548800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7f1d735432f0" loc="106:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7f1d735432f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1d73543670"/>
        <function-ref name="write" scoped="" ref="0x7f1d73543800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7f1d73551e50" loc="81:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7f1d73551e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1d73550210"/>
        <function-ref name="write" scoped="" ref="0x7f1d735503a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7f1d7354c670" loc="89:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7f1d7354c670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1d7354c9f0"/>
        <function-ref name="write" scoped="" ref="0x7f1d7354cb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7f1d73562aa0" loc="49:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7f1d73562aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1d73562e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7f1d73560770" loc="51:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7f1d73560770"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1d73560af0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7f1d73553e50" loc="77:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7f1d73553e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1d73552210"/>
        <function-ref name="write" scoped="" ref="0x7f1d735523a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7f1d7355d670" loc="58:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7f1d7355d670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1d7355d9f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7f1d73552670" loc="78:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7f1d73552670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1d735529f0"/>
        <function-ref name="write" scoped="" ref="0x7f1d73552b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7f1d7354ae50" loc="94:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7f1d7354ae50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1d73549610"/>
        <function-ref name="write" scoped="" ref="0x7f1d735497a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7f1d735417a0" loc="112:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7f1d735417a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f1d73541b20"/>
        <function-ref name="writeDone" scoped="" ref="0x7f1d73541cb0"/>
        <function-ref name="write" scoped="" ref="0x7f1d73541e40"/>
        <function-ref name="beginRead" scoped="" ref="0x7f1d73540020"/>
        <function-ref name="readDone" scoped="" ref="0x7f1d735401b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7f1d7352bc60" loc="69:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7f1d7352bc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1d7352a210"/>
        <function-ref name="write" scoped="" ref="0x7f1d7352a3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7f1d73536da0" loc="47:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7f1d73536da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1d73535180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7f1d7352fb50" loc="63:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7f1d7352fb50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1d7352e020"/>
        <function-ref name="write" scoped="" ref="0x7f1d7352e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7f1d73529670" loc="72:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7f1d73529670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1d735299f0"/>
        <function-ref name="write" scoped="" ref="0x7f1d73529b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7f1d73522e50" loc="86:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7f1d73522e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1d73521210"/>
        <function-ref name="write" scoped="" ref="0x7f1d735213a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7f1d73529e50" loc="73:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7f1d73529e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1d73528210"/>
        <function-ref name="write" scoped="" ref="0x7f1d735283a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7f1d735152f0" loc="108:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7f1d735152f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1d73515670"/>
        <function-ref name="write" scoped="" ref="0x7f1d73515800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7f1d735182f0" loc="104:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7f1d735182f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1d73518670"/>
        <function-ref name="write" scoped="" ref="0x7f1d73518800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7f1d73534120" loc="50:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7f1d73534120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1d735344a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7f1d7351d670" loc="93:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7f1d7351d670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1d7351d9f0"/>
        <function-ref name="write" scoped="" ref="0x7f1d7351db80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7f1d735192f0" loc="102:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f1d735192f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1d73519670"/>
        <function-ref name="write" scoped="" ref="0x7f1d73519800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7f1d7352ec60" loc="65:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7f1d7352ec60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1d7352d020"/>
        <function-ref name="write" scoped="" ref="0x7f1d7352d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7f1d7352dc60" loc="67:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7f1d7352dc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1d7352b020"/>
        <function-ref name="write" scoped="" ref="0x7f1d7352b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7f1d73523670" loc="83:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7f1d73523670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1d735239f0"/>
        <function-ref name="write" scoped="" ref="0x7f1d73523b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7f1d73526e50" loc="79:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7f1d73526e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1d73524210"/>
        <function-ref name="write" scoped="" ref="0x7f1d735243a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7f1d73528670" loc="74:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7f1d73528670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1d735289f0"/>
        <function-ref name="write" scoped="" ref="0x7f1d73528b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f1d73537760" loc="42:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f1d73537760"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f1d73537ae0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f1d73537c70"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f1d73537e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7f1d73533aa0" loc="54:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7f1d73533aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1d73533e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7f1d73531120" loc="55:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7f1d73531120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1d735315a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7f1d7351ca70" loc="95:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f1d7351ca70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1d7351cdf0"/>
        <function-ref name="write" scoped="" ref="0x7f1d7351b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7f1d73531870" loc="56:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7f1d73531870"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1d73531bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7f1d73519ad0" loc="103:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f1d73519ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1d73519e50"/>
        <function-ref name="write" scoped="" ref="0x7f1d73518020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7f1d73534dc0" loc="52:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7f1d73534dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1d73533180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7f1d7351fe50" loc="92:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7f1d7351fe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1d7351d210"/>
        <function-ref name="write" scoped="" ref="0x7f1d7351d3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7f1d7352d480" loc="66:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7f1d7352d480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1d7352d800"/>
        <function-ref name="write" scoped="" ref="0x7f1d7352d990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7f1d7352e480" loc="64:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f1d7352e480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1d7352e800"/>
        <function-ref name="write" scoped="" ref="0x7f1d7352e990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7f1d73536750" loc="46:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7f1d73536750"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1d73536ad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7f1d73520e50" loc="90:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7f1d73520e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1d7351f210"/>
        <function-ref name="write" scoped="" ref="0x7f1d7351f3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7f1d73521670" loc="87:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7f1d73521670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1d735219f0"/>
        <function-ref name="write" scoped="" ref="0x7f1d73521b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7f1d7351f670" loc="91:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7f1d7351f670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1d7351f9f0"/>
        <function-ref name="write" scoped="" ref="0x7f1d7351fb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7f1d73516ad0" loc="107:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7f1d73516ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1d73516e50"/>
        <function-ref name="write" scoped="" ref="0x7f1d73515020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7f1d73518ad0" loc="105:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7f1d73518ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1d73518e50"/>
        <function-ref name="write" scoped="" ref="0x7f1d73516020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7f1d73524670" loc="80:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7f1d73524670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1d735249f0"/>
        <function-ref name="write" scoped="" ref="0x7f1d73524b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7f1d73521e50" loc="88:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7f1d73521e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1d73520210"/>
        <function-ref name="write" scoped="" ref="0x7f1d735203a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7f1d7351aad0" loc="101:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7f1d7351aad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1d7351ae50"/>
        <function-ref name="write" scoped="" ref="0x7f1d73519020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7f1d73527670" loc="76:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7f1d73527670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1d735279f0"/>
        <function-ref name="write" scoped="" ref="0x7f1d73527b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7f1d73515ad0" loc="111:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7f1d73515ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f1d73515e50"/>
        <function-ref name="writeDone" scoped="" ref="0x7f1d73514020"/>
        <function-ref name="write" scoped="" ref="0x7f1d735141b0"/>
        <function-ref name="beginRead" scoped="" ref="0x7f1d73514340"/>
        <function-ref name="readDone" scoped="" ref="0x7f1d735144d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7f1d73536100" loc="45:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7f1d73536100"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1d73536480"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7f1d7352f370" loc="62:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7f1d7352f370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1d7352f6f0"/>
        <function-ref name="write" scoped="" ref="0x7f1d7352f880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7f1d7352b480" loc="68:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7f1d7352b480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1d7352b800"/>
        <function-ref name="write" scoped="" ref="0x7f1d7352b990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7f1d73523e50" loc="84:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7f1d73523e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1d73522210"/>
        <function-ref name="write" scoped="" ref="0x7f1d735223a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7f1d73528e50" loc="75:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7f1d73528e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1d73527210"/>
        <function-ref name="write" scoped="" ref="0x7f1d735273a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7f1d73522670" loc="85:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7f1d73522670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1d735229f0"/>
        <function-ref name="write" scoped="" ref="0x7f1d73522b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7f1d7352a670" loc="70:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7f1d7352a670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1d7352a9f0"/>
        <function-ref name="write" scoped="" ref="0x7f1d7352ab80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7f1d73535450" loc="48:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7f1d73535450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1d735357d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7f1d7352ae50" loc="71:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7f1d7352ae50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1d73529210"/>
        <function-ref name="write" scoped="" ref="0x7f1d735293a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f1d735389e0" loc="41:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f1d735389e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1d73538d60"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f1d73537020"/>
        <function-ref name="request" scoped="" ref="0x7f1d735371b0"/>
        <function-ref name="granted" scoped="" ref="0x7f1d73537340"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1d735374d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7f1d73530020" loc="57:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7f1d73530020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1d735303a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7f1d73530cc0" loc="59:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7f1d73530cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1d7352f0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7f1d7351a2f0" loc="100:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7f1d7351a2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1d7351a670"/>
        <function-ref name="write" scoped="" ref="0x7f1d7351a800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7f1d7351bad0" loc="99:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7f1d7351bad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1d7351be50"/>
        <function-ref name="write" scoped="" ref="0x7f1d7351a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7f1d73533450" loc="53:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7f1d73533450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1d735337d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7f1d7351b2f0" loc="96:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f1d7351b2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1d7351b670"/>
        <function-ref name="write" scoped="" ref="0x7f1d7351b800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7f1d735162f0" loc="106:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7f1d735162f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1d73516670"/>
        <function-ref name="write" scoped="" ref="0x7f1d73516800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7f1d73524e50" loc="81:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7f1d73524e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1d73523210"/>
        <function-ref name="write" scoped="" ref="0x7f1d735233a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7f1d73520670" loc="89:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7f1d73520670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1d735209f0"/>
        <function-ref name="write" scoped="" ref="0x7f1d73520b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7f1d73535aa0" loc="49:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7f1d73535aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1d73535e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7f1d73534770" loc="51:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7f1d73534770"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1d73534af0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7f1d73527e50" loc="77:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7f1d73527e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1d73526210"/>
        <function-ref name="write" scoped="" ref="0x7f1d735263a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7f1d73530670" loc="58:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7f1d73530670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1d735309f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7f1d73526670" loc="78:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7f1d73526670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1d735269f0"/>
        <function-ref name="write" scoped="" ref="0x7f1d73526b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7f1d7351de50" loc="94:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7f1d7351de50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1d7351c610"/>
        <function-ref name="write" scoped="" ref="0x7f1d7351c7a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7f1d735147a0" loc="112:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7f1d735147a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f1d73514b20"/>
        <function-ref name="writeDone" scoped="" ref="0x7f1d73514cb0"/>
        <function-ref name="write" scoped="" ref="0x7f1d73514e40"/>
        <function-ref name="beginRead" scoped="" ref="0x7f1d73513020"/>
        <function-ref name="readDone" scoped="" ref="0x7f1d735131b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageAddress" ref="0x7f1d7350cb30" loc="54:/home/hades/tinyos-new/tos/system/ActiveMessageAddressC.nc">
      <component-ref qname="ActiveMessageAddressC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f1d7350cb30"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x7f1d73509020"/>
        <function-ref name="changed" scoped="" ref="0x7f1d735091b0"/>
        <function-ref name="amGroup" scoped="" ref="0x7f1d73509340"/>
        <function-ref name="setAddress" scoped="" ref="0x7f1d735094d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalIeeeEui64" ref="0x7f1d7350bd30" loc="13:/home/hades/tinyos-new/tos/chips/ds2411/LocalIeeeEui64C.nc">
      <component-ref qname="LocalIeeeEui64C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f1d7350bd30"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x7f1d734f50e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalIeeeEui64" ref="0x7f1d734f1310" loc="5:/home/hades/tinyos-new/tos/chips/ds2411/LocalIeeeEui64P.nc">
      <component-ref qname="LocalIeeeEui64P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f1d734f1310"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x7f1d734f1690"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReadId48" ref="0x7f1d734ee8c0" loc="8:/home/hades/tinyos-new/tos/chips/ds2411/LocalIeeeEui64P.nc">
      <component-ref qname="LocalIeeeEui64P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadId48" scoped="" ref="0x7f1d734ee8c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadId48"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1d734eec40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadId48" ref="0x7f1d734e3020" loc="8:/home/hades/tinyos-new/tos/chips/ds2411/Ds2411C.nc">
      <component-ref qname="Ds2411C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadId48" scoped="" ref="0x7f1d734e3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadId48"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1d734e33a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="OneWire" ref="0x7f1d734d9cb0" loc="14:/home/hades/tinyos-new/tos/chips/ds2411/Ds2411P.nc">
      <component-ref qname="Ds2411P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="OneWire" scoped="" ref="0x7f1d734d9cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="OneWireReadWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1d734dc0a0"/>
        <function-ref name="write" scoped="" ref="0x7f1d734dc230"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerControl" ref="0x7f1d734dc5b0" loc="15:/home/hades/tinyos-new/tos/chips/ds2411/Ds2411P.nc">
      <component-ref qname="Ds2411P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PowerControl" scoped="" ref="0x7f1d734dc5b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f1d734dc930"/>
        <function-ref name="stop" scoped="" ref="0x7f1d734dcac0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadId48" ref="0x7f1d734dd210" loc="11:/home/hades/tinyos-new/tos/chips/ds2411/Ds2411P.nc">
      <component-ref qname="Ds2411P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadId48" scoped="" ref="0x7f1d734dd210"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadId48"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1d734dd590"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="OneWire" ref="0x7f1d734c7020" loc="8:/home/hades/tinyos-new/tos/lib/onewire/OneWireMasterC.nc">
      <component-ref qname="OneWireMasterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="OneWire" scoped="" ref="0x7f1d734c7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="OneWireReadWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1d734c73a0"/>
        <function-ref name="write" scoped="" ref="0x7f1d734c7530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Pin" ref="0x7f1d734c78c0" loc="11:/home/hades/tinyos-new/tos/lib/onewire/OneWireMasterC.nc">
      <component-ref qname="OneWireMasterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Pin" scoped="" ref="0x7f1d734c78c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1d734c7c40"/>
        <function-ref name="isInput" scoped="" ref="0x7f1d734c7dd0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1d734c6020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1d734c61b0"/>
        <function-ref name="get" scoped="" ref="0x7f1d734c6340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1d734c64d0"/>
        <function-ref name="set" scoped="" ref="0x7f1d734c6660"/>
        <function-ref name="clr" scoped="" ref="0x7f1d734c67f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BusyWait" ref="0x7f1d734beb40" loc="15:/home/hades/tinyos-new/tos/lib/onewire/OneWireMasterP.nc">
      <component-ref qname="OneWireMasterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BusyWait" scoped="" ref="0x7f1d734beb40"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1d740c0460"/>
            <typename><typedef-ref name="TMicro" ref="0x7f1d740c07d0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1d74a34520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x7f1d734c0970"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="OneWire" ref="0x7f1d734c5490" loc="11:/home/hades/tinyos-new/tos/lib/onewire/OneWireMasterP.nc">
      <component-ref qname="OneWireMasterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="OneWire" scoped="" ref="0x7f1d734c5490"/></type-interface>
      <instance>
        <interfacedef-ref qname="OneWireReadWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1d734c5810"/>
        <function-ref name="write" scoped="" ref="0x7f1d734c59a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Pin" ref="0x7f1d734c5d30" loc="14:/home/hades/tinyos-new/tos/lib/onewire/OneWireMasterP.nc">
      <component-ref qname="OneWireMasterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Pin" scoped="" ref="0x7f1d734c5d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1d734c20e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1d734c2270"/>
        <function-ref name="toggle" scoped="" ref="0x7f1d734c2400"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1d734c2590"/>
        <function-ref name="get" scoped="" ref="0x7f1d734c2720"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1d734c28b0"/>
        <function-ref name="set" scoped="" ref="0x7f1d734c2a40"/>
        <function-ref name="clr" scoped="" ref="0x7f1d734c2bd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusyWait" ref="0x7f1d7349e020" loc="41:/home/hades/tinyos-new/tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <component-ref qname="BusyWaitMicroC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BusyWait" scoped="" ref="0x7f1d7349e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1d740c0460"/>
            <typename><typedef-ref name="TMicro" ref="0x7f1d740c07d0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1d74a34520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x7f1d7349ee30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusyWait" ref="0x7f1d7349bd20" loc="54:/home/hades/tinyos-new/tos/lib/timer/BusyWaitCounterC.nc">
      <component-ref qname="BusyWaitMicroC.BusyWaitCounterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BusyWait" scoped="" ref="0x7f1d7349bd20"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1d740c0460"/>
            <typename><typedef-ref name="TMicro" ref="0x7f1d740c07d0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1d74a34520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x7f1d7349ab60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f1d7348b260" loc="55:/home/hades/tinyos-new/tos/lib/timer/BusyWaitCounterC.nc">
      <component-ref qname="BusyWaitMicroC.BusyWaitCounterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f1d7348b260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1d740c0460"/>
            <typename><typedef-ref name="TMicro" ref="0x7f1d740c07d0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1d74a34520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f1d7348a090"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1d7348aa10"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1d7348a550"/>
        <function-ref name="overflow" scoped="" ref="0x7f1d73489020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430CounterMicro" ref="0x7f1d73488890" loc="46:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430CounterMicroC.nc">
      <component-ref qname="Msp430CounterMicroC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430CounterMicro" scoped="" ref="0x7f1d73488890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1d740c0460"/>
            <typename><typedef-ref name="TMicro" ref="0x7f1d740c07d0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1d74a34520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f1d734856e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1d73483090"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1d73485ba0"/>
        <function-ref name="overflow" scoped="" ref="0x7f1d73483550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7f1d7347e190" loc="45:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430CounterMicroC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f1d7347e190"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1d7347e510"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f1d7347e6a0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1d7347e830"/>
        <function-ref name="get" scoped="" ref="0x7f1d7347e9c0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1d7347eb50"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1d7347ece0"/>
        <function-ref name="getMode" scoped="" ref="0x7f1d7347ee70"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1d7347d030"/>
        <function-ref name="overflow" scoped="" ref="0x7f1d7347d1c0"/>
        <function-ref name="setMode" scoped="" ref="0x7f1d7347d350"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f1d7347d4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f1d73481060" loc="44:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430CounterMicroC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f1d73481060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1d740c0460"/>
            <typename><typedef-ref name="TMicro" ref="0x7f1d740c07d0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1d74a34520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f1d73481e70"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1d73480820"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1d73480360"/>
        <function-ref name="overflow" scoped="" ref="0x7f1d73480ce0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Gpio" ref="0x7f1d734c85a0" loc="3:/home/hades/tinyos-new/tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <component-ref qname="HplDs2411C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Gpio" scoped="" ref="0x7f1d734c85a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1d734c8920"/>
        <function-ref name="isInput" scoped="" ref="0x7f1d734c8ab0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1d734c8c40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1d734c8dd0"/>
        <function-ref name="get" scoped="" ref="0x7f1d73479020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1d734791b0"/>
        <function-ref name="set" scoped="" ref="0x7f1d73479340"/>
        <function-ref name="clr" scoped="" ref="0x7f1d734794d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f1d73477c50" loc="44:/home/hades/tinyos-new/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplDs2411C.MspGpio"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f1d73477c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1d73476020"/>
        <function-ref name="isInput" scoped="" ref="0x7f1d734761b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1d73476340"/>
        <function-ref name="toggle" scoped="" ref="0x7f1d734764d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1d73476660"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1d734767f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1d73476980"/>
        <function-ref name="get" scoped="" ref="0x7f1d73476b10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1d73476ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1d73476e30"/>
        <function-ref name="set" scoped="" ref="0x7f1d73475020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1d734751b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1d73475340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1d734755d0"/>
        <function-ref name="clr" scoped="" ref="0x7f1d73475760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f1d734789e0" loc="43:/home/hades/tinyos-new/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplDs2411C.MspGpio"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f1d734789e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1d73478d60"/>
        <function-ref name="isInput" scoped="" ref="0x7f1d73477020"/>
        <function-ref name="toggle" scoped="" ref="0x7f1d734771b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1d73477340"/>
        <function-ref name="get" scoped="" ref="0x7f1d734774d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1d73477660"/>
        <function-ref name="set" scoped="" ref="0x7f1d734777f0"/>
        <function-ref name="clr" scoped="" ref="0x7f1d73477980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f1d7347aa20" loc="14:/home/hades/tinyos-new/tos/chips/ds2411/Ds2411PowerControlC.nc">
      <component-ref qname="Ds2411PowerControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f1d7347aa20"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f1d7347ada0"/>
        <function-ref name="stop" scoped="" ref="0x7f1d73470020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7f1d73461cb0" loc="46:/home/hades/tinyos-new/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7f1d73461cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f1d734600a0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f1d73460230"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f1d734603c0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f1d73460550"/>
        <function-ref name="setCca" scoped="" ref="0x7f1d734606e0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f1d73460870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EnergyIndicator" ref="0x7f1d7345d9f0" loc="47:/home/hades/tinyos-new/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="EnergyIndicator" scoped="" ref="0x7f1d7345d9f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7f1d7345dd70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Transmit" ref="0x7f1d73461020" loc="45:/home/hades/tinyos-new/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Transmit" scoped="" ref="0x7f1d73461020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1d734613a0"/>
        <function-ref name="cancel" scoped="" ref="0x7f1d73461530"/>
        <function-ref name="modify" scoped="" ref="0x7f1d734616c0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1d73461850"/>
        <function-ref name="resend" scoped="" ref="0x7f1d734619e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f1d734646d0" loc="44:/home/hades/tinyos-new/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f1d734646d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f1d73464a50"/>
        <function-ref name="stop" scoped="" ref="0x7f1d73464be0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ByteIndicator" ref="0x7f1d7345f190" loc="48:/home/hades/tinyos-new/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ByteIndicator" scoped="" ref="0x7f1d7345f190"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7f1d7345f510"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7f1d73453970" loc="51:/home/hades/tinyos-new/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7f1d73453970"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f1d73453cf0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f1d73453e80"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f1d73452030"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f1d734521c0"/>
        <function-ref name="setCca" scoped="" ref="0x7f1d73452350"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f1d734524e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x7f1d7344b950" loc="58:/home/hades/tinyos-new/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp" scoped="" ref="0x7f1d7344b950"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1d740c1c10"/>
            <typename><typedef-ref name="T32khz" ref="0x7f1d740c0020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f1d74a34920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f1d73446020"/>
        <function-ref name="clear" scoped="" ref="0x7f1d73446750"/>
        <function-ref name="isValid" scoped="" ref="0x7f1d73447780"/>
        <function-ref name="set" scoped="" ref="0x7f1d73446e80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL1" ref="0x7f1d73431020" loc="78:/home/hades/tinyos-new/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7f1d73431020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1d734313a0"/>
        <function-ref name="write" scoped="" ref="0x7f1d73431530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY0" ref="0x7f1d73431890" loc="79:/home/hades/tinyos-new/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7f1d73431890"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1d73431c10"/>
        <function-ref name="write" scoped="" ref="0x7f1d73431da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EnergyIndicator" ref="0x7f1d73452900" loc="52:/home/hades/tinyos-new/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="EnergyIndicator" scoped="" ref="0x7f1d73452900"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7f1d73452c80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXONCCA" ref="0x7f1d73434530" loc="72:/home/hades/tinyos-new/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7f1d73434530"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1d734348b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CaptureSFD" ref="0x7f1d73444880" loc="60:/home/hades/tinyos-new/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureSFD" scoped="" ref="0x7f1d73444880"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7f1d73444c00"/>
        <function-ref name="disable" scoped="" ref="0x7f1d73444d90"/>
        <function-ref name="captured" scoped="" ref="0x7f1d73443020"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7f1d734431b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BackoffTimer" ref="0x7f1d73451ae0" loc="55:/home/hades/tinyos-new/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BackoffTimer" scoped="" ref="0x7f1d73451ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1d740c1c10"/>
            <typename><typedef-ref name="T32khz" ref="0x7f1d740c0020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f1d74a34920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f1d7344d390"/>
        <function-ref name="fired" scoped="" ref="0x7f1d7344e360"/>
        <function-ref name="startAt" scoped="" ref="0x7f1d7344ece0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f1d7344e820"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f1d7344d850"/>
        <function-ref name="start" scoped="" ref="0x7f1d73450970"/>
        <function-ref name="stop" scoped="" ref="0x7f1d73450e80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7f1d7344dd00" loc="56:/home/hades/tinyos-new/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f1d7344dd00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f1d7344c0a0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f1d7344c230"/>
        <function-ref name="getRssi" scoped="" ref="0x7f1d7344c3c0"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f1d7344c550"/>
        <function-ref name="getPower" scoped="" ref="0x7f1d7344c6e0"/>
        <function-ref name="getLqi" scoped="" ref="0x7f1d7344c870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXFIFO_RAM" ref="0x7f1d73437550" loc="68:/home/hades/tinyos-new/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f1d73437550"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1d734378d0"/>
        <function-ref name="write" scoped="" ref="0x7f1d73437a60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXCTRL" ref="0x7f1d73437e00" loc="69:/home/hades/tinyos-new/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7f1d73437e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1d734361c0"/>
        <function-ref name="write" scoped="" ref="0x7f1d73436350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Receive" ref="0x7f1d7342bd40" loc="83:/home/hades/tinyos-new/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Receive" scoped="" ref="0x7f1d7342bd40"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f1d7342e0e0"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x7f1d7342e270"/>
        <function-ref name="sfd" scoped="" ref="0x7f1d7342e400"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f1d73454bc0" loc="50:/home/hades/tinyos-new/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f1d73454bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1d73453020"/>
        <function-ref name="cancel" scoped="" ref="0x7f1d734531b0"/>
        <function-ref name="modify" scoped="" ref="0x7f1d73453340"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1d734534d0"/>
        <function-ref name="resend" scoped="" ref="0x7f1d73453660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ChipSpiResource" ref="0x7f1d73439d10" loc="66:/home/hades/tinyos-new/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f1d73439d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f1d734380e0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f1d73438270"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f1d73438400"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFLUSHTX" ref="0x7f1d73434c60" loc="73:/home/hades/tinyos-new/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7f1d73434c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1d73433020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x7f1d7343c820" loc="62:/home/hades/tinyos-new/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x7f1d7343c820"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1d7343cba0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1d7343cd30"/>
        <function-ref name="toggle" scoped="" ref="0x7f1d7343b020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1d7343b1b0"/>
        <function-ref name="get" scoped="" ref="0x7f1d7343b340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1d7343b4d0"/>
        <function-ref name="set" scoped="" ref="0x7f1d7343b660"/>
        <function-ref name="clr" scoped="" ref="0x7f1d7343b7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f1d73455c60" loc="48:/home/hades/tinyos-new/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f1d73455c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1d73454020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f1d7344cbb0" loc="57:/home/hades/tinyos-new/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f1d7344cbb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f1d7344b020"/>
        <function-ref name="getHeader" scoped="" ref="0x7f1d7344b1b0"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f1d7344b340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeSyncOffset" ref="0x7f1d7343ebe0" loc="59:/home/hades/tinyos-new/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f1d7343ebe0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f1d73444020"/>
        <function-ref name="isSet" scoped="" ref="0x7f1d734441b0"/>
        <function-ref name="cancel" scoped="" ref="0x7f1d73444340"/>
        <function-ref name="set" scoped="" ref="0x7f1d734444d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL1" ref="0x7f1d734333e0" loc="74:/home/hades/tinyos-new/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f1d734333e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1d73433960"/>
        <function-ref name="write" scoped="" ref="0x7f1d73433af0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7f1d73439020" loc="65:/home/hades/tinyos-new/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x7f1d73439020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1d734393a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f1d73439530"/>
        <function-ref name="request" scoped="" ref="0x7f1d734396c0"/>
        <function-ref name="granted" scoped="" ref="0x7f1d73439850"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1d734399e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CCA" ref="0x7f1d73443500" loc="61:/home/hades/tinyos-new/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CCA" scoped="" ref="0x7f1d73443500"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1d73443980"/>
        <function-ref name="isInput" scoped="" ref="0x7f1d73443b10"/>
        <function-ref name="toggle" scoped="" ref="0x7f1d73443ca0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1d73443e30"/>
        <function-ref name="get" scoped="" ref="0x7f1d7343c020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1d7343c1b0"/>
        <function-ref name="set" scoped="" ref="0x7f1d7343c340"/>
        <function-ref name="clr" scoped="" ref="0x7f1d7343c4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY1" ref="0x7f1d73430130" loc="80:/home/hades/tinyos-new/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7f1d73430130"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1d734304b0"/>
        <function-ref name="write" scoped="" ref="0x7f1d73430640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXNONCE" ref="0x7f1d734309c0" loc="81:/home/hades/tinyos-new/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7f1d734309c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1d73430d40"/>
        <function-ref name="write" scoped="" ref="0x7f1d7342f020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SNOP" ref="0x7f1d734366d0" loc="70:/home/hades/tinyos-new/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7f1d734366d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1d73436a50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFD" ref="0x7f1d7343bb40" loc="63:/home/hades/tinyos-new/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFD" scoped="" ref="0x7f1d7343bb40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1d7343a020"/>
        <function-ref name="isInput" scoped="" ref="0x7f1d7343a1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1d7343a340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1d7343a4d0"/>
        <function-ref name="get" scoped="" ref="0x7f1d7343a660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1d7343a7f0"/>
        <function-ref name="set" scoped="" ref="0x7f1d7343a980"/>
        <function-ref name="clr" scoped="" ref="0x7f1d7343ab10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f1d7342e6c0" loc="84:/home/hades/tinyos-new/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f1d7342e6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f1d7342ea40"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f1d7342ebd0"/>
        <function-ref name="led1On" scoped="" ref="0x7f1d7342ed60"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f1d7342d020"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f1d7342d1b0"/>
        <function-ref name="get" scoped="" ref="0x7f1d7342d340"/>
        <function-ref name="led1Off" scoped="" ref="0x7f1d7342d4d0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f1d7342db10"/>
        <function-ref name="set" scoped="" ref="0x7f1d7342d660"/>
        <function-ref name="led0On" scoped="" ref="0x7f1d7342d7f0"/>
        <function-ref name="led2On" scoped="" ref="0x7f1d7342d980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL0" ref="0x7f1d734325e0" loc="77:/home/hades/tinyos-new/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7f1d734325e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1d73432960"/>
        <function-ref name="write" scoped="" ref="0x7f1d73432af0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f1d73454320" loc="49:/home/hades/tinyos-new/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f1d73454320"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f1d734546a0"/>
        <function-ref name="stop" scoped="" ref="0x7f1d73454830"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXFIFO" ref="0x7f1d73438780" loc="67:/home/hades/tinyos-new/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7f1d73438780"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f1d73438b00"/>
        <function-ref name="writeDone" scoped="" ref="0x7f1d73438c90"/>
        <function-ref name="write" scoped="" ref="0x7f1d73438e20"/>
        <function-ref name="beginRead" scoped="" ref="0x7f1d73437020"/>
        <function-ref name="readDone" scoped="" ref="0x7f1d734371b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXON" ref="0x7f1d73436de0" loc="71:/home/hades/tinyos-new/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7f1d73436de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1d73434180"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXENC" ref="0x7f1d73433e80" loc="76:/home/hades/tinyos-new/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7f1d73433e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1d73432220"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ByteIndicator" ref="0x7f1d734510f0" loc="53:/home/hades/tinyos-new/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ByteIndicator" scoped="" ref="0x7f1d734510f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7f1d73451470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7f1d73390c60" loc="69:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7f1d73390c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1d7338f210"/>
        <function-ref name="write" scoped="" ref="0x7f1d7338f3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7f1d7339a020" loc="47:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7f1d7339a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1d7339a3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7f1d73394c70" loc="63:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7f1d73394c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1d73393020"/>
        <function-ref name="write" scoped="" ref="0x7f1d733931b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7f1d7338e670" loc="72:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7f1d7338e670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1d7338e9f0"/>
        <function-ref name="write" scoped="" ref="0x7f1d7338eb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7f1d73387e50" loc="86:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7f1d73387e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1d73386210"/>
        <function-ref name="write" scoped="" ref="0x7f1d733863a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7f1d7338ee50" loc="73:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7f1d7338ee50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1d7338d210"/>
        <function-ref name="write" scoped="" ref="0x7f1d7338d3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7f1d7337a2f0" loc="108:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7f1d7337a2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1d7337a670"/>
        <function-ref name="write" scoped="" ref="0x7f1d7337a800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7f1d7337d2f0" loc="104:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7f1d7337d2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1d7337d670"/>
        <function-ref name="write" scoped="" ref="0x7f1d7337d800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7f1d73399370" loc="50:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7f1d73399370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1d733996f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7f1d73382670" loc="93:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7f1d73382670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1d733829f0"/>
        <function-ref name="write" scoped="" ref="0x7f1d73382b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7f1d7337e2f0" loc="102:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f1d7337e2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1d7337e670"/>
        <function-ref name="write" scoped="" ref="0x7f1d7337e800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7f1d73393c60" loc="65:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7f1d73393c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1d73392020"/>
        <function-ref name="write" scoped="" ref="0x7f1d733921b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7f1d73392c60" loc="67:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7f1d73392c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1d73390020"/>
        <function-ref name="write" scoped="" ref="0x7f1d733901b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7f1d73388670" loc="83:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7f1d73388670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1d733889f0"/>
        <function-ref name="write" scoped="" ref="0x7f1d73388b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7f1d7338be50" loc="79:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7f1d7338be50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1d73389210"/>
        <function-ref name="write" scoped="" ref="0x7f1d733893a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7f1d7338d670" loc="74:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7f1d7338d670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1d7338d9f0"/>
        <function-ref name="write" scoped="" ref="0x7f1d7338db80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f1d7339c8f0" loc="42:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f1d7339c8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f1d7339cc70"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f1d7339ce00"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f1d7339b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7f1d73398d00" loc="54:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7f1d73398d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1d733960a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7f1d73396370" loc="55:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7f1d73396370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1d733967f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7f1d73381a70" loc="95:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f1d73381a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1d73381df0"/>
        <function-ref name="write" scoped="" ref="0x7f1d73380020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7f1d73396ac0" loc="56:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7f1d73396ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1d73396e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7f1d7337ead0" loc="103:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f1d7337ead0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1d7337ee50"/>
        <function-ref name="write" scoped="" ref="0x7f1d7337d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7f1d73398060" loc="52:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7f1d73398060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1d733983e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7f1d73384e50" loc="92:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7f1d73384e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1d73382210"/>
        <function-ref name="write" scoped="" ref="0x7f1d733823a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7f1d73392480" loc="66:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7f1d73392480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1d73392800"/>
        <function-ref name="write" scoped="" ref="0x7f1d73392990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7f1d73393480" loc="64:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f1d73393480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1d73393800"/>
        <function-ref name="write" scoped="" ref="0x7f1d73393990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7f1d7339b940" loc="46:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7f1d7339b940"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1d7339bcc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7f1d73385e50" loc="90:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7f1d73385e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1d73384210"/>
        <function-ref name="write" scoped="" ref="0x7f1d733843a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7f1d73386670" loc="87:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7f1d73386670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1d733869f0"/>
        <function-ref name="write" scoped="" ref="0x7f1d73386b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7f1d73384670" loc="91:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7f1d73384670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1d733849f0"/>
        <function-ref name="write" scoped="" ref="0x7f1d73384b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7f1d7337bad0" loc="107:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7f1d7337bad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1d7337be50"/>
        <function-ref name="write" scoped="" ref="0x7f1d7337a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7f1d7337dad0" loc="105:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7f1d7337dad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1d7337de50"/>
        <function-ref name="write" scoped="" ref="0x7f1d7337b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7f1d73389670" loc="80:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7f1d73389670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1d733899f0"/>
        <function-ref name="write" scoped="" ref="0x7f1d73389b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7f1d73386e50" loc="88:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7f1d73386e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1d73385210"/>
        <function-ref name="write" scoped="" ref="0x7f1d733853a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7f1d7337fad0" loc="101:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7f1d7337fad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1d7337fe50"/>
        <function-ref name="write" scoped="" ref="0x7f1d7337e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7f1d7338c670" loc="76:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7f1d7338c670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1d7338c9f0"/>
        <function-ref name="write" scoped="" ref="0x7f1d7338cb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7f1d7337aad0" loc="111:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7f1d7337aad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f1d7337ae50"/>
        <function-ref name="writeDone" scoped="" ref="0x7f1d73379020"/>
        <function-ref name="write" scoped="" ref="0x7f1d733791b0"/>
        <function-ref name="beginRead" scoped="" ref="0x7f1d73379340"/>
        <function-ref name="readDone" scoped="" ref="0x7f1d733794d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7f1d7339b2f0" loc="45:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7f1d7339b2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1d7339b670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7f1d73394490" loc="62:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7f1d73394490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1d73394810"/>
        <function-ref name="write" scoped="" ref="0x7f1d733949a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7f1d73390480" loc="68:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7f1d73390480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1d73390800"/>
        <function-ref name="write" scoped="" ref="0x7f1d73390990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7f1d73388e50" loc="84:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7f1d73388e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1d73387210"/>
        <function-ref name="write" scoped="" ref="0x7f1d733873a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7f1d7338de50" loc="75:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7f1d7338de50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1d7338c210"/>
        <function-ref name="write" scoped="" ref="0x7f1d7338c3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7f1d73387670" loc="85:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7f1d73387670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1d733879f0"/>
        <function-ref name="write" scoped="" ref="0x7f1d73387b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7f1d7338f670" loc="70:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7f1d7338f670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1d7338f9f0"/>
        <function-ref name="write" scoped="" ref="0x7f1d7338fb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7f1d7339a670" loc="48:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7f1d7339a670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1d7339a9f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7f1d7338fe50" loc="71:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7f1d7338fe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1d7338e210"/>
        <function-ref name="write" scoped="" ref="0x7f1d7338e3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f1d7339dc30" loc="41:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f1d7339dc30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1d7339c020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f1d7339c1b0"/>
        <function-ref name="request" scoped="" ref="0x7f1d7339c340"/>
        <function-ref name="granted" scoped="" ref="0x7f1d7339c4d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1d7339c660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7f1d73395160" loc="57:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7f1d73395160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1d733954e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7f1d73395e00" loc="59:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7f1d73395e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1d733941c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7f1d7337f2f0" loc="100:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7f1d7337f2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1d7337f670"/>
        <function-ref name="write" scoped="" ref="0x7f1d7337f800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7f1d73380ad0" loc="99:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7f1d73380ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1d73380e50"/>
        <function-ref name="write" scoped="" ref="0x7f1d7337f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7f1d733986b0" loc="53:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7f1d733986b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1d73398a30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7f1d733802f0" loc="96:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f1d733802f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1d73380670"/>
        <function-ref name="write" scoped="" ref="0x7f1d73380800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7f1d7337b2f0" loc="106:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7f1d7337b2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1d7337b670"/>
        <function-ref name="write" scoped="" ref="0x7f1d7337b800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7f1d73389e50" loc="81:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7f1d73389e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1d73388210"/>
        <function-ref name="write" scoped="" ref="0x7f1d733883a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7f1d73385670" loc="89:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7f1d73385670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1d733859f0"/>
        <function-ref name="write" scoped="" ref="0x7f1d73385b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7f1d7339acc0" loc="49:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7f1d7339acc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1d733990a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7f1d733999c0" loc="51:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7f1d733999c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1d73399d40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7f1d7338ce50" loc="77:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7f1d7338ce50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1d7338b210"/>
        <function-ref name="write" scoped="" ref="0x7f1d7338b3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7f1d733957b0" loc="58:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7f1d733957b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1d73395b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7f1d7338b670" loc="78:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7f1d7338b670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1d7338b9f0"/>
        <function-ref name="write" scoped="" ref="0x7f1d7338bb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7f1d73382e50" loc="94:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7f1d73382e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1d73381610"/>
        <function-ref name="write" scoped="" ref="0x7f1d733817a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7f1d733797a0" loc="112:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7f1d733797a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f1d73379b20"/>
        <function-ref name="writeDone" scoped="" ref="0x7f1d73379cb0"/>
        <function-ref name="write" scoped="" ref="0x7f1d73379e40"/>
        <function-ref name="beginRead" scoped="" ref="0x7f1d73378020"/>
        <function-ref name="readDone" scoped="" ref="0x7f1d733781b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Receive" ref="0x7f1d7336de00" loc="42:/home/hades/tinyos-new/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Receive" scoped="" ref="0x7f1d7336de00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f1d7336a1c0"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x7f1d7336a350"/>
        <function-ref name="sfd" scoped="" ref="0x7f1d7336a4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f1d7336a7c0" loc="43:/home/hades/tinyos-new/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f1d7336a7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f1d7336ab40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketIndicator" ref="0x7f1d73369020" loc="44:/home/hades/tinyos-new/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketIndicator" scoped="" ref="0x7f1d73369020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7f1d733693a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f1d7336d5d0" loc="41:/home/hades/tinyos-new/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f1d7336d5d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f1d7336d950"/>
        <function-ref name="stop" scoped="" ref="0x7f1d7336dae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FIFO" ref="0x7f1d73361380" loc="54:/home/hades/tinyos-new/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFO" scoped="" ref="0x7f1d73361380"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1d73361700"/>
        <function-ref name="isInput" scoped="" ref="0x7f1d73361890"/>
        <function-ref name="toggle" scoped="" ref="0x7f1d73361a20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1d73361bb0"/>
        <function-ref name="get" scoped="" ref="0x7f1d73361d40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1d73360020"/>
        <function-ref name="set" scoped="" ref="0x7f1d733601b0"/>
        <function-ref name="clr" scoped="" ref="0x7f1d73360340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Config" ref="0x7f1d7335ab90" loc="64:/home/hades/tinyos-new/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x7f1d7335ab90"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7f1d73359020"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7f1d733591b0"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7f1d73359340"/>
        <function-ref name="syncDone" scoped="" ref="0x7f1d733594d0"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x7f1d73359660"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7f1d733597f0"/>
        <function-ref name="setChannel" scoped="" ref="0x7f1d73359980"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7f1d73359b10"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7f1d73359ca0"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7f1d73359e30"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7f1d73358020"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7f1d733581b0"/>
        <function-ref name="sync" scoped="" ref="0x7f1d73358340"/>
        <function-ref name="getChannel" scoped="" ref="0x7f1d733585d0"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7f1d73358760"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveDone_task" ref="0x7f1d733439d0" loc="148:/home/hades/tinyos-new/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="receiveDone_task" scoped="" ref="0x7f1d733439d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f1d73343d50"/>
        <function-ref name="runTask" scoped="" ref="0x7f1d73342020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x7f1d73358d70" loc="65:/home/hades/tinyos-new/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp" scoped="" ref="0x7f1d73358d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1d740c1c10"/>
            <typename><typedef-ref name="T32khz" ref="0x7f1d740c0020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f1d74a34920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f1d73356330"/>
        <function-ref name="clear" scoped="" ref="0x7f1d73356a60"/>
        <function-ref name="isValid" scoped="" ref="0x7f1d73357ba0"/>
        <function-ref name="set" scoped="" ref="0x7f1d73354210"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FIFOP" ref="0x7f1d733606b0" loc="55:/home/hades/tinyos-new/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFOP" scoped="" ref="0x7f1d733606b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1d73360a30"/>
        <function-ref name="isInput" scoped="" ref="0x7f1d73360bc0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1d73360d50"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1d7335f020"/>
        <function-ref name="get" scoped="" ref="0x7f1d7335f1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1d7335f340"/>
        <function-ref name="set" scoped="" ref="0x7f1d7335f4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f1d7335f660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL1" ref="0x7f1d73353cb0" loc="69:/home/hades/tinyos-new/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7f1d73353cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1d733520a0"/>
        <function-ref name="write" scoped="" ref="0x7f1d73352230"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY0" ref="0x7f1d73352590" loc="70:/home/hades/tinyos-new/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7f1d73352590"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1d73352910"/>
        <function-ref name="write" scoped="" ref="0x7f1d73352aa0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXNONCE" ref="0x7f1d733516d0" loc="72:/home/hades/tinyos-new/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7f1d733516d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1d73351a50"/>
        <function-ref name="write" scoped="" ref="0x7f1d73351be0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7f1d7335b330" loc="62:/home/hades/tinyos-new/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f1d7335b330"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f1d7335b6b0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f1d7335b840"/>
        <function-ref name="getRssi" scoped="" ref="0x7f1d7335b9d0"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f1d7335bb60"/>
        <function-ref name="getPower" scoped="" ref="0x7f1d7335bcf0"/>
        <function-ref name="getLqi" scoped="" ref="0x7f1d7335be80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Receive" ref="0x7f1d73365550" loc="49:/home/hades/tinyos-new/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Receive" scoped="" ref="0x7f1d73365550"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f1d733658d0"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x7f1d73365a60"/>
        <function-ref name="sfd" scoped="" ref="0x7f1d73365bf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SACK" ref="0x7f1d7335c3a0" loc="60:/home/hades/tinyos-new/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7f1d7335c3a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1d7335c720"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x7f1d73362020" loc="53:/home/hades/tinyos-new/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x7f1d73362020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1d733623a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1d73362530"/>
        <function-ref name="toggle" scoped="" ref="0x7f1d733626c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1d73362850"/>
        <function-ref name="get" scoped="" ref="0x7f1d733629e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1d73362b70"/>
        <function-ref name="set" scoped="" ref="0x7f1d73362d00"/>
        <function-ref name="clr" scoped="" ref="0x7f1d73361020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXFIFO_RAM" ref="0x7f1d73350020" loc="73:/home/hades/tinyos-new/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f1d73350020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1d733503a0"/>
        <function-ref name="write" scoped="" ref="0x7f1d73350530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f1d73366620" loc="47:/home/hades/tinyos-new/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f1d73366620"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1d733669a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f1d7335a1e0" loc="63:/home/hades/tinyos-new/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f1d7335a1e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f1d7335a560"/>
        <function-ref name="getHeader" scoped="" ref="0x7f1d7335a6f0"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f1d7335a880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f1d73364020" loc="50:/home/hades/tinyos-new/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f1d73364020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f1d733643a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7f1d7335e6e0" loc="58:/home/hades/tinyos-new/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x7f1d7335e6e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1d7335ea60"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f1d7335ebf0"/>
        <function-ref name="request" scoped="" ref="0x7f1d7335ed80"/>
        <function-ref name="granted" scoped="" ref="0x7f1d7335d020"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1d7335d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY1" ref="0x7f1d73352e00" loc="71:/home/hades/tinyos-new/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7f1d73352e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1d733511c0"/>
        <function-ref name="write" scoped="" ref="0x7f1d73351350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXFIFO" ref="0x7f1d7335d530" loc="59:/home/hades/tinyos-new/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7f1d7335d530"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f1d7335d8b0"/>
        <function-ref name="writeDone" scoped="" ref="0x7f1d7335da40"/>
        <function-ref name="write" scoped="" ref="0x7f1d7335dbd0"/>
        <function-ref name="beginRead" scoped="" ref="0x7f1d7335dd60"/>
        <function-ref name="readDone" scoped="" ref="0x7f1d7335c020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SNOP" ref="0x7f1d733508b0" loc="74:/home/hades/tinyos-new/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7f1d733508b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1d73350e30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketIndicator" ref="0x7f1d733647c0" loc="51:/home/hades/tinyos-new/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketIndicator" scoped="" ref="0x7f1d733647c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7f1d73364b40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f1d7334f150" loc="76:/home/hades/tinyos-new/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f1d7334f150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f1d7334f4d0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f1d7334f660"/>
        <function-ref name="led1On" scoped="" ref="0x7f1d7334f7f0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f1d7334f980"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f1d7334fb10"/>
        <function-ref name="get" scoped="" ref="0x7f1d7334fca0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f1d7334fe30"/>
        <function-ref name="led2Off" scoped="" ref="0x7f1d7334e4d0"/>
        <function-ref name="set" scoped="" ref="0x7f1d7334e020"/>
        <function-ref name="led0On" scoped="" ref="0x7f1d7334e1b0"/>
        <function-ref name="led2On" scoped="" ref="0x7f1d7334e340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL0" ref="0x7f1d733533e0" loc="68:/home/hades/tinyos-new/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7f1d733533e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1d73353760"/>
        <function-ref name="write" scoped="" ref="0x7f1d733538f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRXDEC" ref="0x7f1d73354b10" loc="67:/home/hades/tinyos-new/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7f1d73354b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1d73353020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptFIFOP" ref="0x7f1d7335fa50" loc="56:/home/hades/tinyos-new/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptFIFOP" scoped="" ref="0x7f1d7335fa50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1d7335fdd0"/>
        <function-ref name="disable" scoped="" ref="0x7f1d7335e020"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f1d7335e1b0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f1d7335e340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFLUSHRX" ref="0x7f1d7335cad0" loc="61:/home/hades/tinyos-new/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7f1d7335cad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1d7335b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f1d73366ca0" loc="48:/home/hades/tinyos-new/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f1d73366ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f1d733650a0"/>
        <function-ref name="stop" scoped="" ref="0x7f1d73365230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7f1d732e1a70" loc="44:/home/hades/tinyos-new/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f1d732e1a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7f1d732e1df0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7f1d732e6670" loc="41:/home/hades/tinyos-new/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f1d732e6670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f1d732e69f0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f1d732e6b80"/>
        <function-ref name="getRssi" scoped="" ref="0x7f1d732e6d10"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f1d732e2020"/>
        <function-ref name="getPower" scoped="" ref="0x7f1d732e21b0"/>
        <function-ref name="getLqi" scoped="" ref="0x7f1d732e2340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x7f1d732e0550" loc="46:/home/hades/tinyos-new/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f1d732e0550"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1d740c1c10"/>
            <typename><typedef-ref name="T32khz" ref="0x7f1d740c0020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f1d74a34920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f1d732dfb00"/>
        <function-ref name="clear" scoped="" ref="0x7f1d732de2a0"/>
        <function-ref name="isValid" scoped="" ref="0x7f1d732df3d0"/>
        <function-ref name="set" scoped="" ref="0x7f1d732de9d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420PacketBody" ref="0x7f1d732e10c0" loc="43:/home/hades/tinyos-new/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f1d732e10c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f1d732e1440"/>
        <function-ref name="getHeader" scoped="" ref="0x7f1d732e15d0"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f1d732e1760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x7f1d732d8480" loc="48:/home/hades/tinyos-new/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f1d732d8480"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f1d732d8800"/>
        <function-ref name="isSet" scoped="" ref="0x7f1d732d8990"/>
        <function-ref name="cancel" scoped="" ref="0x7f1d732d8b20"/>
        <function-ref name="set" scoped="" ref="0x7f1d732d8cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7f1d732dc660" loc="47:/home/hades/tinyos-new/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f1d732dc660"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1d740c1460"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1d740c17d0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f1d74a34920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f1d732dbce0"/>
        <function-ref name="clear" scoped="" ref="0x7f1d732da460"/>
        <function-ref name="isValid" scoped="" ref="0x7f1d732db5b0"/>
        <function-ref name="set" scoped="" ref="0x7f1d732dab90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7f1d732e26e0" loc="42:/home/hades/tinyos-new/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x7f1d732e26e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f1d732e2a60"/>
        <function-ref name="noAck" scoped="" ref="0x7f1d732e2bf0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f1d732e2d80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7f1d732d2020" loc="49:/home/hades/tinyos-new/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f1d732d2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7f1d732d23a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7f1d732d7d20" loc="46:/home/hades/tinyos-new/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f1d732d7d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f1d732d40e0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f1d732d4270"/>
        <function-ref name="getRssi" scoped="" ref="0x7f1d732d4400"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f1d732d4590"/>
        <function-ref name="getPower" scoped="" ref="0x7f1d732d4720"/>
        <function-ref name="getLqi" scoped="" ref="0x7f1d732d48b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7f1d732c94a0" loc="56:/home/hades/tinyos-new/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f1d732c94a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1d732c9820"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f1d732c99b0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f1d732c9b40"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1d732c9cd0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f1d732c9e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x7f1d732d2a80" loc="51:/home/hades/tinyos-new/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f1d732d2a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1d740c1c10"/>
            <typename><typedef-ref name="T32khz" ref="0x7f1d740c0020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f1d74a34920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f1d732d0020"/>
        <function-ref name="clear" scoped="" ref="0x7f1d732d0750"/>
        <function-ref name="isValid" scoped="" ref="0x7f1d732d18d0"/>
        <function-ref name="set" scoped="" ref="0x7f1d732d0e80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420PacketBody" ref="0x7f1d732d3640" loc="48:/home/hades/tinyos-new/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f1d732d3640"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f1d732d39c0"/>
        <function-ref name="getHeader" scoped="" ref="0x7f1d732d3b50"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f1d732d3ce0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x7f1d732ca8b0" loc="53:/home/hades/tinyos-new/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f1d732ca8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f1d732cac30"/>
        <function-ref name="isSet" scoped="" ref="0x7f1d732cadc0"/>
        <function-ref name="cancel" scoped="" ref="0x7f1d732c9020"/>
        <function-ref name="set" scoped="" ref="0x7f1d732c91b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime32khz" ref="0x7f1d732c5820" loc="57:/home/hades/tinyos-new/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime32khz" scoped="" ref="0x7f1d732c5820"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1d740c1c10"/>
            <typename><typedef-ref name="T32khz" ref="0x7f1d740c0020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f1d732c74c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeMilli" ref="0x7f1d732c7b80" loc="58:/home/hades/tinyos-new/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTimeMilli" scoped="" ref="0x7f1d732c7b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1d740c1460"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1d740c17d0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f1d732c47d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7f1d732ceaf0" loc="52:/home/hades/tinyos-new/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f1d732ceaf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1d740c1460"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1d740c17d0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f1d74a34920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f1d732cc0d0"/>
        <function-ref name="clear" scoped="" ref="0x7f1d732cc800"/>
        <function-ref name="isValid" scoped="" ref="0x7f1d732cd970"/>
        <function-ref name="set" scoped="" ref="0x7f1d732ca020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7f1d732d4c50" loc="47:/home/hades/tinyos-new/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x7f1d732d4c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f1d732d3020"/>
        <function-ref name="noAck" scoped="" ref="0x7f1d732d31b0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f1d732d3340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7f1d732744e0" loc="48:/home/hades/tinyos-new/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC2420PacketC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x7f1d732744e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1d740c1c10"/>
            <typename><typedef-ref name="T32khz" ref="0x7f1d740c0020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f1d7326b150"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f1d7326b7c0" loc="49:/home/hades/tinyos-new/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC2420PacketC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f1d7326b7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1d740c1c10"/>
            <typename><typedef-ref name="T32khz" ref="0x7f1d740c0020"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f1d74a34920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f1d7326a620"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1d73268020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1d7326aae0"/>
        <function-ref name="overflow" scoped="" ref="0x7f1d732684e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x7f1d73263020" loc="46:/home/hades/tinyos-new/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerMilli" scoped="" ref="0x7f1d73263020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1d740c1460"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1d740c17d0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1d74a34160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f1d7325f630"/>
        <function-ref name="fired" scoped="" ref="0x7f1d73262a60"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f1d73261920"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f1d732614a0"/>
        <function-ref name="getdt" scoped="" ref="0x7f1d7325e020"/>
        <function-ref name="gett0" scoped="" ref="0x7f1d7325fab0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f1d73261020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f1d73263c10"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f1d7325f020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f1d73262110"/>
        <function-ref name="stop" scoped="" ref="0x7f1d732625e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7f1d7325e610" loc="47:/home/hades/tinyos-new/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x7f1d7325e610"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1d740c1460"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1d740c17d0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f1d7325d3d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f1d73264130" loc="45:/home/hades/tinyos-new/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f1d73264130"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1d732644b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f1d7322f870" loc="44:/home/hades/tinyos-new/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f1d7322f870"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1d740c1460"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1d740c17d0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f1d74a34920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f1d7322c090"/>
        <function-ref name="fired" scoped="" ref="0x7f1d7322d090"/>
        <function-ref name="startAt" scoped="" ref="0x7f1d7322da10"/>
        <function-ref name="isRunning" scoped="" ref="0x7f1d7322d550"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f1d7322c550"/>
        <function-ref name="start" scoped="" ref="0x7f1d7322e6a0"/>
        <function-ref name="stop" scoped="" ref="0x7f1d7322ebb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f1d7322f020" loc="43:/home/hades/tinyos-new/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f1d7322f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1d7322f3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f1d72187260" loc="44:/home/hades/tinyos-new/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f1d72187260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1d740c1c10"/>
            <typename><typedef-ref name="T32khz" ref="0x7f1d740c0020"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1d74a34520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f1d72185b30"/>
        <function-ref name="fired" scoped="" ref="0x7f1d72186a60"/>
        <function-ref name="startAt" scoped="" ref="0x7f1d721854e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f1d72185020"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f1d72183020"/>
        <function-ref name="start" scoped="" ref="0x7f1d72186090"/>
        <function-ref name="stop" scoped="" ref="0x7f1d721865a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f1d721889d0" loc="43:/home/hades/tinyos-new/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f1d721889d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1d72188d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x7f1d7216fa80" loc="41:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7f1d7216fa80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1d7216fe00"/>
        <function-ref name="setEvent" scoped="" ref="0x7f1d7216e020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f1d7216e1b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f1d7216e340"/>
        <function-ref name="fired" scoped="" ref="0x7f1d7216e4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x7f1d72171020" loc="39:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f1d72171020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1d721713a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f1d72171530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1d721716c0"/>
        <function-ref name="get" scoped="" ref="0x7f1d72171850"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1d721719e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1d72171b70"/>
        <function-ref name="getMode" scoped="" ref="0x7f1d72171d00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1d72170020"/>
        <function-ref name="overflow" scoped="" ref="0x7f1d721701b0"/>
        <function-ref name="setMode" scoped="" ref="0x7f1d72170340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f1d721704d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x7f1d72170760" loc="40:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f1d72170760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f1d72170ae0"/>
        <function-ref name="getControl" scoped="" ref="0x7f1d72170c70"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1d72170e00"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f1d7216f020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f1d7216f1b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1d7216f340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f1d7216f4d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f1d7216f660"/>
        <function-ref name="setControl" scoped="" ref="0x7f1d7216f7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Compare" ref="0x7f1d72165760" loc="49:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7f1d72165760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1d72165ae0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f1d72165c70"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f1d72165e00"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f1d72164020"/>
        <function-ref name="fired" scoped="" ref="0x7f1d721641b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7f1d72168dd0" loc="47:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f1d72168dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1d72167180"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f1d72167310"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1d721674a0"/>
        <function-ref name="get" scoped="" ref="0x7f1d72167630"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1d721677c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1d72167950"/>
        <function-ref name="getMode" scoped="" ref="0x7f1d72167ae0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1d72167c70"/>
        <function-ref name="overflow" scoped="" ref="0x7f1d72167e00"/>
        <function-ref name="setMode" scoped="" ref="0x7f1d72166020"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f1d721661b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f1d7216cbf0" loc="46:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f1d7216cbf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1d740c1c10"/>
            <typename><typedef-ref name="T32khz" ref="0x7f1d740c0020"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1d74a34520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f1d721684e0"/>
        <function-ref name="fired" scoped="" ref="0x7f1d721694e0"/>
        <function-ref name="startAt" scoped="" ref="0x7f1d72169e60"/>
        <function-ref name="isRunning" scoped="" ref="0x7f1d721699a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f1d721689a0"/>
        <function-ref name="start" scoped="" ref="0x7f1d7216aa80"/>
        <function-ref name="stop" scoped="" ref="0x7f1d72169020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f1d7216c360" loc="45:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f1d7216c360"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1d7216c6e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x7f1d72166440" loc="48:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f1d72166440"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f1d721667c0"/>
        <function-ref name="getControl" scoped="" ref="0x7f1d72166950"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1d72166ae0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f1d72166c70"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f1d72166e00"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1d72165020"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f1d721651b0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f1d72165340"/>
        <function-ref name="setControl" scoped="" ref="0x7f1d721654d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f1d7324eb80" loc="43:/home/hades/tinyos-new/tos/chips/msp430/timer/CounterMilli32C.nc">
      <component-ref qname="CounterMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f1d7324eb80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1d740c1460"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1d740c17d0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f1d74a34920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f1d7324b9b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1d7324a360"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1d7324be70"/>
        <function-ref name="overflow" scoped="" ref="0x7f1d7324a820"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x7f1d73244b90" loc="63:/home/hades/tinyos-new/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CounterFrom" scoped="" ref="0x7f1d73244b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1d740c1c10"/>
            <typename><typedef-ref name="T32khz" ref="0x7f1d740c0020"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1d74a34520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f1d732429d0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1d732414e0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1d73241020"/>
        <function-ref name="overflow" scoped="" ref="0x7f1d732419a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f1d73246610" loc="62:/home/hades/tinyos-new/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f1d73246610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1d740c1460"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1d740c17d0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f1d74a34920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f1d732455b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1d73244020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1d73245a70"/>
        <function-ref name="overflow" scoped="" ref="0x7f1d732444e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f1d721815f0" loc="61:/home/hades/tinyos-new/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f1d721815f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1d740c1460"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1d740c17d0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f1d74a34920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f1d7217fe50"/>
        <function-ref name="fired" scoped="" ref="0x7f1d72180e00"/>
        <function-ref name="startAt" scoped="" ref="0x7f1d7217f800"/>
        <function-ref name="isRunning" scoped="" ref="0x7f1d7217f340"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f1d7217e340"/>
        <function-ref name="start" scoped="" ref="0x7f1d72180430"/>
        <function-ref name="stop" scoped="" ref="0x7f1d72180940"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x7f1d7217bd20" loc="73:/home/hades/tinyos-new/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AlarmFrom" scoped="" ref="0x7f1d7217bd20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1d740c1c10"/>
            <typename><typedef-ref name="T32khz" ref="0x7f1d740c0020"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1d74a34520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f1d72178670"/>
        <function-ref name="fired" scoped="" ref="0x7f1d72179550"/>
        <function-ref name="startAt" scoped="" ref="0x7f1d72178020"/>
        <function-ref name="isRunning" scoped="" ref="0x7f1d72179a10"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f1d72178b30"/>
        <function-ref name="start" scoped="" ref="0x7f1d7217ab60"/>
        <function-ref name="stop" scoped="" ref="0x7f1d72179090"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f1d7217e9b0" loc="68:/home/hades/tinyos-new/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f1d7217e9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1d740c1460"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1d740c17d0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f1d74a34920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f1d7217d7e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1d7217b1b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1d7217dca0"/>
        <function-ref name="overflow" scoped="" ref="0x7f1d7217b670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x7f1d731fa9c0" loc="74:/home/hades/tinyos-new/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="fired" scoped="" ref="0x7f1d731fa9c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f1d731fad40"/>
        <function-ref name="runTask" scoped="" ref="0x7f1d731f9020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x7f1d731fe850" loc="49:/home/hades/tinyos-new/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f1d731fe850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1d740c1460"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1d740c17d0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f1d74a34920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f1d731fa090"/>
        <function-ref name="fired" scoped="" ref="0x7f1d731fb090"/>
        <function-ref name="startAt" scoped="" ref="0x7f1d731fba10"/>
        <function-ref name="isRunning" scoped="" ref="0x7f1d731fb550"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f1d731fa550"/>
        <function-ref name="start" scoped="" ref="0x7f1d731fd6a0"/>
        <function-ref name="stop" scoped="" ref="0x7f1d731fdbb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f1d732032f0" loc="48:/home/hades/tinyos-new/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f1d732032f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1d740c1460"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1d740c17d0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f1d731ff870"/>
        <function-ref name="fired" scoped="" ref="0x7f1d73202e40"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f1d73200c00"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f1d73200780"/>
        <function-ref name="getdt" scoped="" ref="0x7f1d731fe1e0"/>
        <function-ref name="gett0" scoped="" ref="0x7f1d731ffcf0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f1d73200300"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f1d73202020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f1d731ff260"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f1d732024f0"/>
        <function-ref name="stop" scoped="" ref="0x7f1d732029c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x7f1d731a9a00" loc="71:/home/hades/tinyos-new/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="updateFromTimer" scoped="" ref="0x7f1d731a9a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f1d731a9d80"/>
        <function-ref name="runTask" scoped="" ref="0x7f1d731a8020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x7f1d731ae640" loc="49:/home/hades/tinyos-new/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerFrom" scoped="" ref="0x7f1d731ae640"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1d740c1460"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1d740c17d0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f1d731aac40"/>
        <function-ref name="fired" scoped="" ref="0x7f1d731ab1e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f1d731aa020"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f1d731abae0"/>
        <function-ref name="getdt" scoped="" ref="0x7f1d731a9590"/>
        <function-ref name="gett0" scoped="" ref="0x7f1d731a9110"/>
        <function-ref name="isRunning" scoped="" ref="0x7f1d731ab660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f1d731ad390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f1d731aa630"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f1d731ad860"/>
        <function-ref name="stop" scoped="" ref="0x7f1d731add30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f1d731b4150" loc="48:/home/hades/tinyos-new/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f1d731b4150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1d740c1460"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1d740c17d0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1d74a34160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f1d731af700"/>
        <function-ref name="fired" scoped="" ref="0x7f1d731b3c30"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f1d731b1a50"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f1d731b15b0"/>
        <function-ref name="getdt" scoped="" ref="0x7f1d731ae090"/>
        <function-ref name="gett0" scoped="" ref="0x7f1d731afba0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f1d731b1110"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f1d731b4d60"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f1d731af0d0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f1d731b32a0"/>
        <function-ref name="stop" scoped="" ref="0x7f1d731b3790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7f1d731a52b0" loc="48:/home/hades/tinyos-new/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x7f1d731a52b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1d740c1460"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1d740c17d0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f1d731a4020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f1d731a4690" loc="49:/home/hades/tinyos-new/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f1d731a4690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1d740c1460"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1d740c17d0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f1d74a34920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f1d731a35b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1d731a2020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1d731a3a70"/>
        <function-ref name="overflow" scoped="" ref="0x7f1d731a24e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f1d7319b8c0" loc="45:/home/hades/tinyos-new/tos/system/TimerMilliC.nc">
      <component-ref qname="CC2420PacketC.DummyTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f1d7319b8c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1d740c1460"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1d740c17d0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f1d73188cf0"/>
        <function-ref name="fired" scoped="" ref="0x7f1d73189320"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f1d731880d0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f1d73189c20"/>
        <function-ref name="getdt" scoped="" ref="0x7f1d73186660"/>
        <function-ref name="gett0" scoped="" ref="0x7f1d731861e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f1d731897a0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f1d7318a4e0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f1d731886e0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f1d7318a9b0"/>
        <function-ref name="stop" scoped="" ref="0x7f1d7318ae80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x7f1d731922c0" loc="49:/home/hades/tinyos-new/tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerMilli" scoped="" ref="0x7f1d731922c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1d740c1460"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1d740c17d0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1d74a34160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f1d7318e870"/>
        <function-ref name="fired" scoped="" ref="0x7f1d73191e40"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f1d73190c00"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f1d73190780"/>
        <function-ref name="getdt" scoped="" ref="0x7f1d7318d1e0"/>
        <function-ref name="gett0" scoped="" ref="0x7f1d7318ecf0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f1d73190300"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f1d73191020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f1d7318e260"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f1d731914f0"/>
        <function-ref name="stop" scoped="" ref="0x7f1d731919c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7f1d73176c60" loc="69:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7f1d73176c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1d73175210"/>
        <function-ref name="write" scoped="" ref="0x7f1d731753a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7f1d73180020" loc="47:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7f1d73180020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1d731803a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7f1d73179c70" loc="63:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7f1d73179c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1d73178020"/>
        <function-ref name="write" scoped="" ref="0x7f1d731781b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7f1d73174670" loc="72:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7f1d73174670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1d731749f0"/>
        <function-ref name="write" scoped="" ref="0x7f1d73174b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7f1d7316de50" loc="86:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7f1d7316de50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1d7316b210"/>
        <function-ref name="write" scoped="" ref="0x7f1d7316b3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7f1d73174e50" loc="73:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7f1d73174e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1d73172210"/>
        <function-ref name="write" scoped="" ref="0x7f1d731723a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7f1d731602f0" loc="108:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7f1d731602f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1d73160670"/>
        <function-ref name="write" scoped="" ref="0x7f1d73160800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7f1d731622f0" loc="104:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7f1d731622f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1d73162670"/>
        <function-ref name="write" scoped="" ref="0x7f1d73162800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7f1d7317e370" loc="50:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7f1d7317e370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1d7317e6f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7f1d73168670" loc="93:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7f1d73168670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1d731689f0"/>
        <function-ref name="write" scoped="" ref="0x7f1d73168b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7f1d731632f0" loc="102:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f1d731632f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1d73163670"/>
        <function-ref name="write" scoped="" ref="0x7f1d73163800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7f1d73178c60" loc="65:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7f1d73178c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1d73177020"/>
        <function-ref name="write" scoped="" ref="0x7f1d731771b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7f1d73177c60" loc="67:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7f1d73177c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1d73176020"/>
        <function-ref name="write" scoped="" ref="0x7f1d731761b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7f1d7316e670" loc="83:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7f1d7316e670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1d7316e9f0"/>
        <function-ref name="write" scoped="" ref="0x7f1d7316eb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7f1d73170e50" loc="79:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7f1d73170e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1d7316f210"/>
        <function-ref name="write" scoped="" ref="0x7f1d7316f3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7f1d73172670" loc="74:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7f1d73172670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1d731729f0"/>
        <function-ref name="write" scoped="" ref="0x7f1d73172b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f1d73182970" loc="42:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f1d73182970"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f1d73182cf0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f1d73182e80"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f1d73181030"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7f1d7317dd00" loc="54:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7f1d7317dd00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1d7317c0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7f1d7317c370" loc="55:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7f1d7317c370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1d7317c7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7f1d73167a70" loc="95:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f1d73167a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1d73167df0"/>
        <function-ref name="write" scoped="" ref="0x7f1d73166020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7f1d7317cac0" loc="56:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7f1d7317cac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1d7317ce40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7f1d73163ad0" loc="103:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f1d73163ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1d73163e50"/>
        <function-ref name="write" scoped="" ref="0x7f1d73162020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7f1d7317d060" loc="52:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7f1d7317d060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1d7317d3e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7f1d73169e50" loc="92:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7f1d73169e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1d73168210"/>
        <function-ref name="write" scoped="" ref="0x7f1d731683a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7f1d73177480" loc="66:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7f1d73177480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1d73177800"/>
        <function-ref name="write" scoped="" ref="0x7f1d73177990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7f1d73178480" loc="64:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f1d73178480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1d73178800"/>
        <function-ref name="write" scoped="" ref="0x7f1d73178990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7f1d73181950" loc="46:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7f1d73181950"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1d73181cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7f1d7316ae50" loc="90:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7f1d7316ae50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1d73169210"/>
        <function-ref name="write" scoped="" ref="0x7f1d731693a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7f1d7316b670" loc="87:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7f1d7316b670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1d7316b9f0"/>
        <function-ref name="write" scoped="" ref="0x7f1d7316bb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7f1d73169670" loc="91:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7f1d73169670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1d731699f0"/>
        <function-ref name="write" scoped="" ref="0x7f1d73169b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7f1d73161ad0" loc="107:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7f1d73161ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1d73161e50"/>
        <function-ref name="write" scoped="" ref="0x7f1d73160020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7f1d73162ad0" loc="105:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7f1d73162ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1d73162e50"/>
        <function-ref name="write" scoped="" ref="0x7f1d73161020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7f1d7316f670" loc="80:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7f1d7316f670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1d7316f9f0"/>
        <function-ref name="write" scoped="" ref="0x7f1d7316fb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7f1d7316be50" loc="88:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7f1d7316be50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1d7316a210"/>
        <function-ref name="write" scoped="" ref="0x7f1d7316a3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7f1d73164ad0" loc="101:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7f1d73164ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1d73164e50"/>
        <function-ref name="write" scoped="" ref="0x7f1d73163020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7f1d73171670" loc="76:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7f1d73171670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1d731719f0"/>
        <function-ref name="write" scoped="" ref="0x7f1d73171b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7f1d73160ad0" loc="111:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7f1d73160ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f1d73160e50"/>
        <function-ref name="writeDone" scoped="" ref="0x7f1d7315f020"/>
        <function-ref name="write" scoped="" ref="0x7f1d7315f1b0"/>
        <function-ref name="beginRead" scoped="" ref="0x7f1d7315f340"/>
        <function-ref name="readDone" scoped="" ref="0x7f1d7315f4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7f1d73181300" loc="45:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7f1d73181300"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1d73181680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7f1d73179490" loc="62:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7f1d73179490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1d73179810"/>
        <function-ref name="write" scoped="" ref="0x7f1d731799a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7f1d73176480" loc="68:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7f1d73176480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1d73176800"/>
        <function-ref name="write" scoped="" ref="0x7f1d73176990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7f1d7316ee50" loc="84:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7f1d7316ee50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1d7316d210"/>
        <function-ref name="write" scoped="" ref="0x7f1d7316d3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7f1d73172e50" loc="75:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7f1d73172e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1d73171210"/>
        <function-ref name="write" scoped="" ref="0x7f1d731713a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7f1d7316d670" loc="85:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7f1d7316d670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1d7316d9f0"/>
        <function-ref name="write" scoped="" ref="0x7f1d7316db80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7f1d73175670" loc="70:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7f1d73175670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1d731759f0"/>
        <function-ref name="write" scoped="" ref="0x7f1d73175b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7f1d73180670" loc="48:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7f1d73180670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1d731809f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7f1d73175e50" loc="71:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7f1d73175e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1d73174210"/>
        <function-ref name="write" scoped="" ref="0x7f1d731743a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f1d73183d00" loc="41:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f1d73183d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1d731820a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f1d73182230"/>
        <function-ref name="request" scoped="" ref="0x7f1d731823c0"/>
        <function-ref name="granted" scoped="" ref="0x7f1d73182550"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1d731826e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7f1d7317b160" loc="57:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7f1d7317b160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1d7317b4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7f1d7317be00" loc="59:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7f1d7317be00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1d731791c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7f1d731642f0" loc="100:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7f1d731642f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1d73164670"/>
        <function-ref name="write" scoped="" ref="0x7f1d73164800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7f1d73166ad0" loc="99:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7f1d73166ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1d73166e50"/>
        <function-ref name="write" scoped="" ref="0x7f1d73164020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7f1d7317d6b0" loc="53:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7f1d7317d6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1d7317da30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7f1d731662f0" loc="96:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f1d731662f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1d73166670"/>
        <function-ref name="write" scoped="" ref="0x7f1d73166800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7f1d731612f0" loc="106:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7f1d731612f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1d73161670"/>
        <function-ref name="write" scoped="" ref="0x7f1d73161800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7f1d7316fe50" loc="81:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7f1d7316fe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1d7316e210"/>
        <function-ref name="write" scoped="" ref="0x7f1d7316e3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7f1d7316a670" loc="89:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7f1d7316a670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1d7316a9f0"/>
        <function-ref name="write" scoped="" ref="0x7f1d7316ab80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7f1d73180cc0" loc="49:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7f1d73180cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1d7317e0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7f1d7317e9c0" loc="51:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7f1d7317e9c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1d7317ed40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7f1d73171e50" loc="77:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7f1d73171e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1d73170210"/>
        <function-ref name="write" scoped="" ref="0x7f1d731703a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7f1d7317b7b0" loc="58:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7f1d7317b7b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f1d7317bb30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7f1d73170670" loc="78:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7f1d73170670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1d731709f0"/>
        <function-ref name="write" scoped="" ref="0x7f1d73170b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7f1d73168e50" loc="94:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7f1d73168e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1d73167610"/>
        <function-ref name="write" scoped="" ref="0x7f1d731677a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7f1d7315f7a0" loc="112:/home/hades/tinyos-new/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7f1d7315f7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f1d7315fb20"/>
        <function-ref name="writeDone" scoped="" ref="0x7f1d7315fcb0"/>
        <function-ref name="write" scoped="" ref="0x7f1d7315fe40"/>
        <function-ref name="beginRead" scoped="" ref="0x7f1d7315d020"/>
        <function-ref name="readDone" scoped="" ref="0x7f1d7315d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x7f1d73135a20" loc="46:/home/hades/tinyos-new/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x7f1d73135a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7f1d73135da0"/>
        <function-ref name="rand32" scoped="" ref="0x7f1d73132020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x7f1d73133920" loc="45:/home/hades/tinyos-new/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SeedInit" scoped="" ref="0x7f1d73133920"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1d74a34520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1d73135560"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f1d731399a0" loc="44:/home/hades/tinyos-new/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f1d731399a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1d73139d20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x7f1d7312ea20" loc="48:/home/hades/tinyos-new/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x7f1d7312ea20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7f1d7312eda0"/>
        <function-ref name="rand32" scoped="" ref="0x7f1d7312d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x7f1d7312f940" loc="47:/home/hades/tinyos-new/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SeedInit" scoped="" ref="0x7f1d7312f940"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1d74a34520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1d7312e560"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f1d7312f080" loc="46:/home/hades/tinyos-new/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f1d7312f080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1d7312f400"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7f1d73137aa0" loc="67:/home/hades/tinyos-new/tos/system/StateC.nc">
      <component-ref qname="CC2420CsmaC.StateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7f1d73137aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f1d73137e20"/>
        <function-ref name="toIdle" scoped="" ref="0x7f1d73130020"/>
        <function-ref name="isState" scoped="" ref="0x7f1d731301b0"/>
        <function-ref name="isIdle" scoped="" ref="0x7f1d73130340"/>
        <function-ref name="requestState" scoped="" ref="0x7f1d731304d0"/>
        <function-ref name="forceState" scoped="" ref="0x7f1d73130660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f1d73113020" loc="44:/home/hades/tinyos-new/tos/chips/cc2420/unique/UniqueSendC.nc">
      <component-ref qname="UniqueSendC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f1d73113020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1d731133a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f1d73113530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1d731136c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f1d73113850"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1d731139e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f1d73114220" loc="40:/home/hades/tinyos-new/tos/chips/cc2420/unique/UniqueSendC.nc">
      <component-ref qname="UniqueSendC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f1d73114220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1d731145a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f1d73114730"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1d731148c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f1d73114a50"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1d73114be0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f1d7310fe60" loc="45:/home/hades/tinyos-new/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f1d7310fe60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1d7310e210"/>
        <function-ref name="getPayload" scoped="" ref="0x7f1d7310e3a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1d7310e530"/>
        <function-ref name="cancel" scoped="" ref="0x7f1d7310e6c0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1d7310e850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f1d73112a20" loc="40:/home/hades/tinyos-new/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f1d73112a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1d73112da0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f1d7310f020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1d7310f1b0"/>
        <function-ref name="cancel" scoped="" ref="0x7f1d7310f340"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1d7310f4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x7f1d7310c8f0" loc="47:/home/hades/tinyos-new/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x7f1d7310c8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7f1d7310cc70"/>
        <function-ref name="rand32" scoped="" ref="0x7f1d7310ce00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f1d7310f750" loc="41:/home/hades/tinyos-new/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f1d7310f750"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1d7310fad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f1d7310b170" loc="48:/home/hades/tinyos-new/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f1d7310b170"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f1d7310b4f0"/>
        <function-ref name="getHeader" scoped="" ref="0x7f1d7310b680"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f1d7310b810"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="State" ref="0x7f1d7310eae0" loc="46:/home/hades/tinyos-new/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7f1d7310eae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f1d7310ee60"/>
        <function-ref name="toIdle" scoped="" ref="0x7f1d7310c020"/>
        <function-ref name="isState" scoped="" ref="0x7f1d7310c1b0"/>
        <function-ref name="isIdle" scoped="" ref="0x7f1d7310c340"/>
        <function-ref name="requestState" scoped="" ref="0x7f1d7310c4d0"/>
        <function-ref name="forceState" scoped="" ref="0x7f1d7310c660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7f1d73110690" loc="67:/home/hades/tinyos-new/tos/system/StateC.nc">
      <component-ref qname="UniqueSendC.StateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7f1d73110690"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f1d73110a10"/>
        <function-ref name="toIdle" scoped="" ref="0x7f1d73110ba0"/>
        <function-ref name="isState" scoped="" ref="0x7f1d73110d30"/>
        <function-ref name="isIdle" scoped="" ref="0x7f1d730fa020"/>
        <function-ref name="requestState" scoped="" ref="0x7f1d730fa1b0"/>
        <function-ref name="forceState" scoped="" ref="0x7f1d730fa340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f1d730f4950" loc="47:/home/hades/tinyos-new/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7f1d730f4950"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f1d730f4cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f1d730f7ab0" loc="42:/home/hades/tinyos-new/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f1d730f7ab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f1d730f7e30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DuplicateReceive" ref="0x7f1d730f4200" loc="43:/home/hades/tinyos-new/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DuplicateReceive" scoped="" ref="0x7f1d730f4200"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f1d730f4580"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f1d730ef3f0" loc="49:/home/hades/tinyos-new/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7f1d730ef3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f1d730ef770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f1d730f0b70" loc="45:/home/hades/tinyos-new/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f1d730f0b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1d730ef020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f1d730f3e40" loc="43:/home/hades/tinyos-new/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f1d730f3e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f1d730f01e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f1d730efa70" loc="50:/home/hades/tinyos-new/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f1d730efa70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f1d730efdf0"/>
        <function-ref name="getHeader" scoped="" ref="0x7f1d730ee020"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f1d730ee1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DuplicateReceive" ref="0x7f1d730f0570" loc="44:/home/hades/tinyos-new/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DuplicateReceive" scoped="" ref="0x7f1d730f0570"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f1d730f08f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f1d730bf020" loc="75:/home/hades/tinyos-new/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7f1d730bf020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f1d730bf3a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f1d730bf6b0" loc="76:/home/hades/tinyos-new/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f1d730bf6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1d730bfa30"/>
        <function-ref name="getPayload" scoped="" ref="0x7f1d730bfbc0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1d730bfd50"/>
        <function-ref name="cancel" scoped="" ref="0x7f1d730be020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1d730be1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f1d730c4960" loc="65:/home/hades/tinyos-new/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f1d730c4960"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1d730c4ce0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f1d730c4e70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1d730c3030"/>
        <function-ref name="cancel" scoped="" ref="0x7f1d730c31c0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1d730c3350"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x7f1d730c3ca0" loc="68:/home/hades/tinyos-new/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveSend" scoped="" ref="0x7f1d730c3ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1d730c10a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f1d730c1230"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1d730c13c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f1d730c1550"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1d730c16e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f1d730c35f0" loc="66:/home/hades/tinyos-new/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f1d730c35f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f1d730c3970"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f1d730c5cb0" loc="64:/home/hades/tinyos-new/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f1d730c5cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1d74a34160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1d730c40a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f1d730c4230"/>
        <function-ref name="request" scoped="" ref="0x7f1d730c43c0"/>
        <function-ref name="granted" scoped="" ref="0x7f1d730c4550"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1d730c46e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x7f1d730c1a50" loc="69:/home/hades/tinyos-new/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveReceive" scoped="" ref="0x7f1d730c1a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f1d730c1dd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x7f1d730c0170" loc="71:/home/hades/tinyos-new/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BarePacket" scoped="" ref="0x7f1d730c0170"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1d730c04f0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f1d730c0680"/>
        <function-ref name="getPayload" scoped="" ref="0x7f1d730c0810"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1d730c09a0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f1d730c0b30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f1d730b6d70" loc="58:/home/hades/tinyos-new/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f1d730b6d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1d730b5180"/>
        <function-ref name="getPayload" scoped="" ref="0x7f1d730b5310"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1d730b54a0"/>
        <function-ref name="cancel" scoped="" ref="0x7f1d730b5630"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1d730b57c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f1d730b5b10" loc="59:/home/hades/tinyos-new/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7f1d730b5b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f1d730b3020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantTask" ref="0x7f1d73086db0" loc="184:/home/hades/tinyos-new/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantTask" scoped="" ref="0x7f1d73086db0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f1d73085180"/>
        <function-ref name="runTask" scoped="" ref="0x7f1d73085310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7f1d730b32f0" loc="60:/home/hades/tinyos-new/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f1d730b32f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f1d730b3670"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f1d730b3800"/>
        <function-ref name="getRssi" scoped="" ref="0x7f1d730b3990"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f1d730b3b20"/>
        <function-ref name="getPower" scoped="" ref="0x7f1d730b3cb0"/>
        <function-ref name="getLqi" scoped="" ref="0x7f1d730b3e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x7f1d730b8a20" loc="51:/home/hades/tinyos-new/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveSend" scoped="" ref="0x7f1d730b8a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1d730b8da0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f1d730b7020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1d730b71b0"/>
        <function-ref name="cancel" scoped="" ref="0x7f1d730b7340"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1d730b74d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7f1d730b2b70" loc="62:/home/hades/tinyos-new/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x7f1d730b2b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f1d730b1020"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f1d730b11b0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f1d730b1340"/>
        <function-ref name="dequeue" scoped="" ref="0x7f1d730b14d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f1d730b2170" loc="61:/home/hades/tinyos-new/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f1d730b2170"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f1d730b24f0"/>
        <function-ref name="getHeader" scoped="" ref="0x7f1d730b2680"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f1d730b2810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x7f1d730b8370" loc="49:/home/hades/tinyos-new/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareReceive" scoped="" ref="0x7f1d730b8370"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f1d730b86f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f1d730ba7b0" loc="46:/home/hades/tinyos-new/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f1d730ba7b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1d74a34160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1d730bab30"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f1d730bacc0"/>
        <function-ref name="request" scoped="" ref="0x7f1d730bae50"/>
        <function-ref name="granted" scoped="" ref="0x7f1d730b9020"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1d730b91b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x7f1d730b94d0" loc="48:/home/hades/tinyos-new/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareSend" scoped="" ref="0x7f1d730b94d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1d730b9850"/>
        <function-ref name="getPayload" scoped="" ref="0x7f1d730b99e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1d730b9b70"/>
        <function-ref name="cancel" scoped="" ref="0x7f1d730b9d00"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1d730b8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x7f1d730b7840" loc="52:/home/hades/tinyos-new/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveReceive" scoped="" ref="0x7f1d730b7840"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f1d730b7bc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x7f1d730b6020" loc="54:/home/hades/tinyos-new/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BarePacket" scoped="" ref="0x7f1d730b6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1d730b63a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f1d730b6530"/>
        <function-ref name="getPayload" scoped="" ref="0x7f1d730b66c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1d730b6850"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f1d730b69e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f1d73066dd0" loc="44:/home/hades/tinyos-new/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="CC2420TinyosNetworkC.FcfsResourceQueueC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f1d73066dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1d73065180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7f1d73065410" loc="45:/home/hades/tinyos-new/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="CC2420TinyosNetworkC.FcfsResourceQueueC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FcfsQueue" scoped="" ref="0x7f1d73065410"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f1d73065790"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f1d73065920"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f1d73065ab0"/>
        <function-ref name="dequeue" scoped="" ref="0x7f1d73065c40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f1d7305ab80" loc="46:/home/hades/tinyos-new/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f1d7305ab80"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f1d73059020"/>
        <function-ref name="stopDone" scoped="" ref="0x7f1d730591b0"/>
        <function-ref name="start" scoped="" ref="0x7f1d73059340"/>
        <function-ref name="stop" scoped="" ref="0x7f1d730594d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f1d73058860" loc="51:/home/hades/tinyos-new/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f1d73058860"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1d73058be0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f1d73058d70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1d73057020"/>
        <function-ref name="cancel" scoped="" ref="0x7f1d730571b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1d73057340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f1d73057690" loc="52:/home/hades/tinyos-new/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7f1d73057690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f1d73057a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f1d7305ecf0" loc="43:/home/hades/tinyos-new/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f1d7305ecf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1d7305b0a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f1d7305b230"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1d7305b3c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f1d7305b550"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1d7305b6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7f1d7305a080" loc="45:/home/hades/tinyos-new/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7f1d7305a080"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f1d7305a400"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f1d7305a590"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f1d7305a720"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f1d7305a8b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendState" ref="0x7f1d73059800" loc="47:/home/hades/tinyos-new/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendState" scoped="" ref="0x7f1d73059800"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f1d73059b80"/>
        <function-ref name="toIdle" scoped="" ref="0x7f1d73059d10"/>
        <function-ref name="isState" scoped="" ref="0x7f1d73058020"/>
        <function-ref name="isIdle" scoped="" ref="0x7f1d730581b0"/>
        <function-ref name="requestState" scoped="" ref="0x7f1d73058340"/>
        <function-ref name="forceState" scoped="" ref="0x7f1d730584d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x7f1d73057d90" loc="53:/home/hades/tinyos-new/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubControl" scoped="" ref="0x7f1d73057d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f1d73055180"/>
        <function-ref name="stopDone" scoped="" ref="0x7f1d73055310"/>
        <function-ref name="start" scoped="" ref="0x7f1d730554a0"/>
        <function-ref name="stop" scoped="" ref="0x7f1d73055630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f1d7305b980" loc="44:/home/hades/tinyos-new/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f1d7305b980"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f1d7305bd00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7f1d730522d0" loc="41:/home/hades/tinyos-new/tos/chips/cc2420/lpl/DummyLplP.nc">
      <component-ref qname="DummyLplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7f1d730522d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f1d73052650"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f1d730527e0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f1d73052970"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f1d73052b00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7f1d73054580" loc="67:/home/hades/tinyos-new/tos/system/StateC.nc">
      <component-ref qname="DummyLplC.StateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7f1d73054580"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f1d73054900"/>
        <function-ref name="toIdle" scoped="" ref="0x7f1d73054a90"/>
        <function-ref name="isState" scoped="" ref="0x7f1d73054c20"/>
        <function-ref name="isIdle" scoped="" ref="0x7f1d73054db0"/>
        <function-ref name="requestState" scoped="" ref="0x7f1d73053020"/>
        <function-ref name="forceState" scoped="" ref="0x7f1d730531b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f1d73045d70" loc="45:/home/hades/tinyos-new/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f1d73045d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1d73044180"/>
        <function-ref name="getPayload" scoped="" ref="0x7f1d73044310"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1d730444a0"/>
        <function-ref name="cancel" scoped="" ref="0x7f1d73044630"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1d730447c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f1d73048360" loc="40:/home/hades/tinyos-new/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f1d73048360"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1d730486e0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f1d73048870"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1d73048a00"/>
        <function-ref name="cancel" scoped="" ref="0x7f1d73048b90"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1d73048d20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7f1d73045020" loc="41:/home/hades/tinyos-new/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x7f1d73045020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7f1d730453a0"/>
        <function-ref name="setRetries" scoped="" ref="0x7f1d73045530"/>
        <function-ref name="getRetries" scoped="" ref="0x7f1d730456c0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7f1d73045850"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7f1d730459e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAcknowledgements" ref="0x7f1d730401c0" loc="44:/home/hades/tinyos-new/tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <component-ref qname="PacketLinkDummyP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f1d730401c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f1d73040540"/>
        <function-ref name="noAck" scoped="" ref="0x7f1d730406d0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f1d73040860"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7f1d73043420" loc="40:/home/hades/tinyos-new/tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <component-ref qname="PacketLinkDummyP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x7f1d73043420"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7f1d730437a0"/>
        <function-ref name="setRetries" scoped="" ref="0x7f1d73043930"/>
        <function-ref name="getRetries" scoped="" ref="0x7f1d73043ac0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7f1d73043c50"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7f1d73043de0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f1d73020690" loc="59:/home/hades/tinyos-new/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7f1d73020690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f1d73020a10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f1d73022860" loc="58:/home/hades/tinyos-new/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f1d73022860"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1d73022be0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f1d73022d70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1d73020020"/>
        <function-ref name="cancel" scoped="" ref="0x7f1d730201b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1d73020340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Config" ref="0x7f1d7301e610" loc="62:/home/hades/tinyos-new/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x7f1d7301e610"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7f1d7301e990"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7f1d7301eb20"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7f1d7301ecb0"/>
        <function-ref name="syncDone" scoped="" ref="0x7f1d7301ee40"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x7f1d7301d020"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7f1d7301d1b0"/>
        <function-ref name="setChannel" scoped="" ref="0x7f1d7301d340"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7f1d7301d4d0"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7f1d7301d660"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7f1d7301d7f0"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7f1d7301d980"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7f1d7301db10"/>
        <function-ref name="sync" scoped="" ref="0x7f1d7301dca0"/>
        <function-ref name="getChannel" scoped="" ref="0x7f1d7301c020"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7f1d7301c1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7f1d730238b0" loc="54:/home/hades/tinyos-new/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7f1d730238b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f1d740e7d50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f1d73023c30"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f1d73023dc0"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f1d73022020"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f1d730221b0"/>
        <function-ref name="setCca" scoped="" ref="0x7f1d73022340"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f1d730224d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x7f1d73024ce0" loc="53:/home/hades/tinyos-new/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendNotifier" scoped="" ref="0x7f1d73024ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f1d740e7d50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x7f1d730230a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBackoff" ref="0x7f1d7301b1f0" loc="64:/home/hades/tinyos-new/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubBackoff" scoped="" ref="0x7f1d7301b1f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f1d7301b570"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f1d7301b700"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f1d7301b890"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f1d7301ba20"/>
        <function-ref name="setCca" scoped="" ref="0x7f1d7301bbb0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f1d7301bd40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f1d73025a80" loc="52:/home/hades/tinyos-new/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f1d73025a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1d73025e00"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f1d73024020"/>
        <function-ref name="getPayload" scoped="" ref="0x7f1d730241b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1d73024340"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f1d730244d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f1d73028020" loc="48:/home/hades/tinyos-new/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f1d73028020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f1d740e7d50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1d730283a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f1d73028530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1d730286c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f1d73028850"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1d730289e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7f1d73027df0" loc="50:/home/hades/tinyos-new/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0x7f1d73027df0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f1d740e7d50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f1d730261c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7f1d73020ce0" loc="60:/home/hades/tinyos-new/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f1d73020ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f1d7301f0a0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f1d7301f230"/>
        <function-ref name="getRssi" scoped="" ref="0x7f1d7301f3c0"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f1d7301f550"/>
        <function-ref name="getPower" scoped="" ref="0x7f1d7301f6e0"/>
        <function-ref name="getLqi" scoped="" ref="0x7f1d7301f870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x7f1d7301c4d0" loc="63:/home/hades/tinyos-new/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f1d7301c4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x7f1d7301c950"/>
        <function-ref name="changed" scoped="" ref="0x7f1d7301cae0"/>
        <function-ref name="amGroup" scoped="" ref="0x7f1d7301cc70"/>
        <function-ref name="setAddress" scoped="" ref="0x7f1d7301ce00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f1d7301fb70" loc="61:/home/hades/tinyos-new/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f1d7301fb70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f1d7301e020"/>
        <function-ref name="getHeader" scoped="" ref="0x7f1d7301e1b0"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f1d7301e340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f1d73027210" loc="49:/home/hades/tinyos-new/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f1d73027210"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f1d740e7d50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f1d73027590"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f1d7301ad30" loc="67:/home/hades/tinyos-new/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f1d7301ad30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f1d730190e0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f1d73019270"/>
        <function-ref name="led1On" scoped="" ref="0x7f1d73019400"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f1d73019590"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f1d73019720"/>
        <function-ref name="get" scoped="" ref="0x7f1d730198b0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f1d73019a40"/>
        <function-ref name="led2Off" scoped="" ref="0x7f1d730181b0"/>
        <function-ref name="set" scoped="" ref="0x7f1d73019bd0"/>
        <function-ref name="led0On" scoped="" ref="0x7f1d73019d60"/>
        <function-ref name="led2On" scoped="" ref="0x7f1d73018020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f1d73026470" loc="51:/home/hades/tinyos-new/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f1d73026470"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f1d730267f0"/>
        <function-ref name="source" scoped="" ref="0x7f1d73026980"/>
        <function-ref name="address" scoped="" ref="0x7f1d73026b10"/>
        <function-ref name="destination" scoped="" ref="0x7f1d73026ca0"/>
        <function-ref name="setSource" scoped="" ref="0x7f1d73026e30"/>
        <function-ref name="setDestination" scoped="" ref="0x7f1d73025020"/>
        <function-ref name="type" scoped="" ref="0x7f1d730251b0"/>
        <function-ref name="setType" scoped="" ref="0x7f1d73025340"/>
        <function-ref name="isForMe" scoped="" ref="0x7f1d730254d0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f1d73025660"/>
        <function-ref name="localGroup" scoped="" ref="0x7f1d730257f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioResource" ref="0x7f1d7301a0f0" loc="66:/home/hades/tinyos-new/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioResource" scoped="" ref="0x7f1d7301a0f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1d7301a470"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f1d7301a600"/>
        <function-ref name="request" scoped="" ref="0x7f1d7301a790"/>
        <function-ref name="granted" scoped="" ref="0x7f1d7301a920"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1d7301aab0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f1d72f08020" loc="49:/home/hades/tinyos-new/tos/system/AMSenderC.nc">
      <component-ref qname="TestCM5000C.AMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f1d72f08020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1d72f083a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f1d72f08530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1d72f086c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f1d72f08850"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1d72f089e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f1d72f08c30" loc="50:/home/hades/tinyos-new/tos/system/AMSenderC.nc">
      <component-ref qname="TestCM5000C.AMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f1d72f08c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1d72f07020"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f1d72f071b0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f1d72f07340"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1d72f074d0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f1d72f07660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f1d72f078b0" loc="51:/home/hades/tinyos-new/tos/system/AMSenderC.nc">
      <component-ref qname="TestCM5000C.AMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f1d72f078b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f1d72f07c30"/>
        <function-ref name="source" scoped="" ref="0x7f1d72f07dc0"/>
        <function-ref name="address" scoped="" ref="0x7f1d72f06020"/>
        <function-ref name="destination" scoped="" ref="0x7f1d72f061b0"/>
        <function-ref name="setSource" scoped="" ref="0x7f1d72f06340"/>
        <function-ref name="setDestination" scoped="" ref="0x7f1d72f064d0"/>
        <function-ref name="type" scoped="" ref="0x7f1d72f06660"/>
        <function-ref name="setType" scoped="" ref="0x7f1d72f067f0"/>
        <function-ref name="isForMe" scoped="" ref="0x7f1d72f06980"/>
        <function-ref name="setGroup" scoped="" ref="0x7f1d72f06b10"/>
        <function-ref name="localGroup" scoped="" ref="0x7f1d72f06ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7f1d72f05020" loc="52:/home/hades/tinyos-new/tos/system/AMSenderC.nc">
      <component-ref qname="TestCM5000C.AMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x7f1d72f05020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f1d72f053a0"/>
        <function-ref name="noAck" scoped="" ref="0x7f1d72f05530"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f1d72f056c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f1d72084b60" loc="49:/home/hades/tinyos-new/tos/system/DirectAMSenderC.nc">
      <component-ref qname="TestCM5000C.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f1d72084b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1d72083020"/>
        <function-ref name="getPayload" scoped="" ref="0x7f1d720831b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1d72083340"/>
        <function-ref name="cancel" scoped="" ref="0x7f1d720834d0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1d72083660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f1d720838b0" loc="50:/home/hades/tinyos-new/tos/system/DirectAMSenderC.nc">
      <component-ref qname="TestCM5000C.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f1d720838b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1d72083c30"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f1d72083dc0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f1d72082020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1d720821b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f1d72082340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f1d72082590" loc="51:/home/hades/tinyos-new/tos/system/DirectAMSenderC.nc">
      <component-ref qname="TestCM5000C.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f1d72082590"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f1d72082910"/>
        <function-ref name="source" scoped="" ref="0x7f1d72082aa0"/>
        <function-ref name="address" scoped="" ref="0x7f1d72082c30"/>
        <function-ref name="destination" scoped="" ref="0x7f1d72082dc0"/>
        <function-ref name="setSource" scoped="" ref="0x7f1d72081020"/>
        <function-ref name="setDestination" scoped="" ref="0x7f1d720811b0"/>
        <function-ref name="type" scoped="" ref="0x7f1d72081340"/>
        <function-ref name="setType" scoped="" ref="0x7f1d720814d0"/>
        <function-ref name="isForMe" scoped="" ref="0x7f1d72081660"/>
        <function-ref name="setGroup" scoped="" ref="0x7f1d720817f0"/>
        <function-ref name="localGroup" scoped="" ref="0x7f1d72081980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7f1d72081c10" loc="52:/home/hades/tinyos-new/tos/system/DirectAMSenderC.nc">
      <component-ref qname="TestCM5000C.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x7f1d72081c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f1d72080020"/>
        <function-ref name="noAck" scoped="" ref="0x7f1d720801b0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f1d72080340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f1d72075ba0" loc="44:/home/hades/tinyos-new/tos/system/AMQueueEntryP.nc">
      <component-ref qname="TestCM5000C.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f1d72075ba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1d72074020"/>
        <function-ref name="getPayload" scoped="" ref="0x7f1d720741b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1d72074340"/>
        <function-ref name="cancel" scoped="" ref="0x7f1d720744d0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1d72074660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x7f1d72074910" loc="46:/home/hades/tinyos-new/tos/system/AMQueueEntryP.nc">
      <component-ref qname="TestCM5000C.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f1d72074910"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1d72074c90"/>
        <function-ref name="getPayload" scoped="" ref="0x7f1d72074e20"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1d72073020"/>
        <function-ref name="cancel" scoped="" ref="0x7f1d720731b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1d72073340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7f1d72073590" loc="47:/home/hades/tinyos-new/tos/system/AMQueueEntryP.nc">
      <component-ref qname="TestCM5000C.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f1d72073590"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f1d72073910"/>
        <function-ref name="source" scoped="" ref="0x7f1d72073aa0"/>
        <function-ref name="address" scoped="" ref="0x7f1d72073c30"/>
        <function-ref name="destination" scoped="" ref="0x7f1d72073dc0"/>
        <function-ref name="setSource" scoped="" ref="0x7f1d72072020"/>
        <function-ref name="setDestination" scoped="" ref="0x7f1d720721b0"/>
        <function-ref name="type" scoped="" ref="0x7f1d72072340"/>
        <function-ref name="setType" scoped="" ref="0x7f1d720724d0"/>
        <function-ref name="isForMe" scoped="" ref="0x7f1d72072660"/>
        <function-ref name="setGroup" scoped="" ref="0x7f1d720727f0"/>
        <function-ref name="localGroup" scoped="" ref="0x7f1d72072980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f1d72f6a940" loc="43:/home/hades/tinyos-new/tos/system/AMQueueP.nc">
      <component-ref qname="AMQueueP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f1d72f6a940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1d74a34160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1d72f6acc0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f1d72f6ae50"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1d72f67020"/>
        <function-ref name="cancel" scoped="" ref="0x7f1d72f671b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1d72f67340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x7f1d72f1d400" loc="48:/home/hades/tinyos-new/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f1d72f1d400"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f1d740e7d50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1d72f1d7a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f1d72f1d930"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1d72f1dac0"/>
        <function-ref name="cancel" scoped="" ref="0x7f1d72f1dc50"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1d72f1dde0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f1d72f1e4b0" loc="46:/home/hades/tinyos-new/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f1d72f1e4b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1d74a34160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f1d72f1e850"/>
        <function-ref name="getPayload" scoped="" ref="0x7f1d72f1e9e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1d72f1eb70"/>
        <function-ref name="cancel" scoped="" ref="0x7f1d72f1ed00"/>
        <function-ref name="sendDone" scoped="" ref="0x7f1d72f1d020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7f1d72f1a720" loc="50:/home/hades/tinyos-new/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f1d72f1a720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1d72f1aaa0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f1d72f1ac30"/>
        <function-ref name="getPayload" scoped="" ref="0x7f1d72f1adc0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f1d72f19020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f1d72f191b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="errorTask" ref="0x7f1d72f19480" loc="169:/home/hades/tinyos-new/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="errorTask" scoped="" ref="0x7f1d72f19480"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f1d72f19800"/>
        <function-ref name="runTask" scoped="" ref="0x7f1d72f19990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CancelTask" ref="0x7f1d72f19c60" loc="126:/home/hades/tinyos-new/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CancelTask" scoped="" ref="0x7f1d72f19c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f1d72f18020"/>
        <function-ref name="runTask" scoped="" ref="0x7f1d72f181b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7f1d72f1b060" loc="49:/home/hades/tinyos-new/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f1d72f1b060"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f1d72f1b3e0"/>
        <function-ref name="source" scoped="" ref="0x7f1d72f1b570"/>
        <function-ref name="address" scoped="" ref="0x7f1d72f1b700"/>
        <function-ref name="destination" scoped="" ref="0x7f1d72f1b890"/>
        <function-ref name="setSource" scoped="" ref="0x7f1d72f1ba20"/>
        <function-ref name="setDestination" scoped="" ref="0x7f1d72f1bbb0"/>
        <function-ref name="type" scoped="" ref="0x7f1d72f1bd40"/>
        <function-ref name="setType" scoped="" ref="0x7f1d72f1a020"/>
        <function-ref name="isForMe" scoped="" ref="0x7f1d72f1a1b0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f1d72f1a340"/>
        <function-ref name="localGroup" scoped="" ref="0x7f1d72f1a4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f1d72f03d80" loc="45:/home/hades/tinyos-new/tos/system/TimerMilliC.nc">
      <component-ref qname="TestCM5000C.SampleTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f1d72f03d80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1d740c1460"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1d740c17d0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f1d72efe220"/>
        <function-ref name="fired" scoped="" ref="0x7f1d72f007f0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f1d72eff5b0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f1d72eff130"/>
        <function-ref name="getdt" scoped="" ref="0x7f1d72efeb20"/>
        <function-ref name="gett0" scoped="" ref="0x7f1d72efe6a0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f1d72f00c70"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f1d72f029a0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f1d72effbc0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f1d72f02e70"/>
        <function-ref name="stop" scoped="" ref="0x7f1d72f00370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7f1d72add020" loc="44:/home/hades/tinyos-new/tos/chips/msp430/sensors/Msp430InternalVoltageC.nc">
      <component-ref qname="TestCM5000C.SensorVref"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Read" scoped="" ref="0x7f1d72add020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1d74a34520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1d72addc10"/>
        <function-ref name="readDone" scoped="" ref="0x7f1d72adc0d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadNow" ref="0x7f1d72ad7140" loc="48:/home/hades/tinyos-new/tos/chips/msp430/sensors/Msp430InternalVoltageC.nc">
      <component-ref qname="TestCM5000C.SensorVref"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadNow" scoped="" ref="0x7f1d72ad7140"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadNow"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1d74a34520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1d72ad7d70"/>
        <function-ref name="readDone" scoped="" ref="0x7f1d72ad6260"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadStream" ref="0x7f1d72adc7b0" loc="45:/home/hades/tinyos-new/tos/chips/msp430/sensors/Msp430InternalVoltageC.nc">
      <component-ref qname="TestCM5000C.SensorVref"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadStream" scoped="" ref="0x7f1d72adc7b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadStream"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1d74a34520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="bufferDone" scoped="" ref="0x7f1d72ad92a0"/>
        <function-ref name="postBuffer" scoped="" ref="0x7f1d72ada400"/>
        <function-ref name="read" scoped="" ref="0x7f1d72adad70"/>
        <function-ref name="readDone" scoped="" ref="0x7f1d72ad9d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f1d72ad8340" loc="47:/home/hades/tinyos-new/tos/chips/msp430/sensors/Msp430InternalVoltageC.nc">
      <component-ref qname="TestCM5000C.SensorVref"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f1d72ad8340"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1d72ad86c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f1d72ad8850"/>
        <function-ref name="request" scoped="" ref="0x7f1d72ad89e0"/>
        <function-ref name="granted" scoped="" ref="0x7f1d72ad8b70"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1d72ad8d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7f1d72028650" loc="48:/home/hades/tinyos-new/tos/chips/msp430/adc12/AdcReadClientC.nc">
      <component-ref qname="TestCM5000C.SensorVref.AdcReadClientC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Read" scoped="" ref="0x7f1d72028650"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1d74a34520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1d72027390"/>
        <function-ref name="readDone" scoped="" ref="0x7f1d72027810"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcConfigure" ref="0x7f1d72026020" loc="49:/home/hades/tinyos-new/tos/chips/msp430/adc12/AdcReadClientC.nc">
      <component-ref qname="TestCM5000C.SensorVref.AdcReadClientC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AdcConfigure" scoped="" ref="0x7f1d72026020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7f1d72ee2ae0"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7f1d72ee2200"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7f1d72026c50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubResourceReadNow" ref="0x7f1d72eb2020" loc="46:/home/hades/tinyos-new/tos/chips/msp430/adc12/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubResourceReadNow" scoped="" ref="0x7f1d72eb2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1d74a34160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1d72eb23a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f1d72eb2530"/>
        <function-ref name="request" scoped="" ref="0x7f1d72eb26c0"/>
        <function-ref name="granted" scoped="" ref="0x7f1d72eb2850"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1d72eb29e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7f1d72ebbb10" loc="38:/home/hades/tinyos-new/tos/chips/msp430/adc12/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Read" scoped="" ref="0x7f1d72ebbb10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1d74a34520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1d74a34160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1d72eb9750"/>
        <function-ref name="readDone" scoped="" ref="0x7f1d72eb9bd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadNow" ref="0x7f1d72eb8950" loc="39:/home/hades/tinyos-new/tos/chips/msp430/adc12/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadNow" scoped="" ref="0x7f1d72eb8950"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadNow"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1d74a34520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1d74a34160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1d72eb75a0"/>
        <function-ref name="readDone" scoped="" ref="0x7f1d72eb7a60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceReadNow" ref="0x7f1d72eb66c0" loc="40:/home/hades/tinyos-new/tos/chips/msp430/adc12/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceReadNow" scoped="" ref="0x7f1d72eb66c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1d74a34160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1d72eb6a40"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f1d72eb6bd0"/>
        <function-ref name="request" scoped="" ref="0x7f1d72eb6d60"/>
        <function-ref name="granted" scoped="" ref="0x7f1d72eb5020"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1d72eb51b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x7f1d72eb15c0" loc="48:/home/hades/tinyos-new/tos/chips/msp430/adc12/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Config" scoped="" ref="0x7f1d72eb15c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7f1d72ee2ae0"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7f1d72ee2200"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1d74a34160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7f1d72eaf240"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SingleChannel" ref="0x7f1d72e9fb10" loc="49:/home/hades/tinyos-new/tos/chips/msp430/adc12/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SingleChannel" scoped="" ref="0x7f1d72e9fb10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1d74a34160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7f1d72eae020"/>
        <function-ref name="configureSingle" scoped="" ref="0x7f1d72eae1b0"/>
        <function-ref name="configureSingleRepeat" scoped="" ref="0x7f1d72eae340"/>
        <function-ref name="configureMultipleRepeat" scoped="" ref="0x7f1d72eae4d0"/>
        <function-ref name="multipleDataReady" scoped="" ref="0x7f1d72eae660"/>
        <function-ref name="configureMultiple" scoped="" ref="0x7f1d72eae7f0"/>
        <function-ref name="singleDataReady" scoped="" ref="0x7f1d72eae980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceRead" ref="0x7f1d72eb5b20" loc="44:/home/hades/tinyos-new/tos/chips/msp430/adc12/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRead" scoped="" ref="0x7f1d72eb5b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1d74a34160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1d72eb3020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f1d72eb31b0"/>
        <function-ref name="request" scoped="" ref="0x7f1d72eb3340"/>
        <function-ref name="granted" scoped="" ref="0x7f1d72eb34d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1d72eb3660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="readDone" ref="0x7f1d72e805c0" loc="136:/home/hades/tinyos-new/tos/chips/msp430/adc12/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="readDone" scoped="" ref="0x7f1d72e805c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f1d72e80940"/>
        <function-ref name="runTask" scoped="" ref="0x7f1d72e80ad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Adc12MultiChannel" ref="0x7f1d72012020" loc="48:/home/hades/tinyos-new/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="TestCM5000C.SensorVref.AdcReadClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Adc12MultiChannel" scoped="" ref="0x7f1d72012020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12MultiChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7f1d720123a0"/>
        <function-ref name="configure" scoped="" ref="0x7f1d72012530"/>
        <function-ref name="dataReady" scoped="" ref="0x7f1d720126c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Adc12SingleChannel" ref="0x7f1d72013020" loc="47:/home/hades/tinyos-new/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="TestCM5000C.SensorVref.AdcReadClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0x7f1d72013020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7f1d720133a0"/>
        <function-ref name="configureSingle" scoped="" ref="0x7f1d72013530"/>
        <function-ref name="configureSingleRepeat" scoped="" ref="0x7f1d720136c0"/>
        <function-ref name="configureMultipleRepeat" scoped="" ref="0x7f1d72013850"/>
        <function-ref name="multipleDataReady" scoped="" ref="0x7f1d720139e0"/>
        <function-ref name="configureMultiple" scoped="" ref="0x7f1d72013b70"/>
        <function-ref name="singleDataReady" scoped="" ref="0x7f1d72013d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Adc12Overflow" ref="0x7f1d72012910" loc="49:/home/hades/tinyos-new/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="TestCM5000C.SensorVref.AdcReadClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Adc12Overflow" scoped="" ref="0x7f1d72012910"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12Overflow"/>
      </instance>
      <interface-functions>
        <function-ref name="memOverflow" scoped="" ref="0x7f1d72012c90"/>
        <function-ref name="conversionTimeOverflow" scoped="" ref="0x7f1d72012e20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcConfigure" ref="0x7f1d72011280" loc="51:/home/hades/tinyos-new/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="TestCM5000C.SensorVref.AdcReadClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AdcConfigure" scoped="" ref="0x7f1d72011280"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7f1d72ee2ae0"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7f1d72ee2200"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7f1d72010020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f1d720143a0" loc="46:/home/hades/tinyos-new/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="TestCM5000C.SensorVref.AdcReadClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f1d720143a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1d72014720"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f1d720148b0"/>
        <function-ref name="request" scoped="" ref="0x7f1d72014a40"/>
        <function-ref name="granted" scoped="" ref="0x7f1d72014bd0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1d72014d60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MultiChannel" ref="0x7f1d72e44960" loc="42:/home/hades/tinyos-new/tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <component-ref qname="Msp430Adc12P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MultiChannel" scoped="" ref="0x7f1d72e44960"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12MultiChannel"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1d74a34160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7f1d72e44ce0"/>
        <function-ref name="configure" scoped="" ref="0x7f1d72e44e70"/>
        <function-ref name="dataReady" scoped="" ref="0x7f1d72e43030"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DMAExtension" ref="0x7f1d72e411d0" loc="44:/home/hades/tinyos-new/tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <component-ref qname="Msp430Adc12P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DMAExtension" scoped="" ref="0x7f1d72e411d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1d74a34160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f1d72e41550"/>
        <function-ref name="stop" scoped="" ref="0x7f1d72e416e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Overflow" ref="0x7f1d72e43920" loc="43:/home/hades/tinyos-new/tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <component-ref qname="Msp430Adc12P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x7f1d72e43920"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12Overflow"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1d74a34160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="memOverflow" scoped="" ref="0x7f1d72e43ca0"/>
        <function-ref name="conversionTimeOverflow" scoped="" ref="0x7f1d72e43e30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SingleChannel" ref="0x7f1d72e451d0" loc="41:/home/hades/tinyos-new/tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <component-ref qname="Msp430Adc12P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SingleChannel" scoped="" ref="0x7f1d72e451d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1d74a34160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7f1d72e45550"/>
        <function-ref name="configureSingle" scoped="" ref="0x7f1d72e456e0"/>
        <function-ref name="configureSingleRepeat" scoped="" ref="0x7f1d72e45870"/>
        <function-ref name="configureMultipleRepeat" scoped="" ref="0x7f1d72e45a00"/>
        <function-ref name="multipleDataReady" scoped="" ref="0x7f1d72e45b90"/>
        <function-ref name="configureMultiple" scoped="" ref="0x7f1d72e45d20"/>
        <function-ref name="singleDataReady" scoped="" ref="0x7f1d72e44020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f1d72e52cd0" loc="40:/home/hades/tinyos-new/tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <component-ref qname="Msp430Adc12P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f1d72e52cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1d74a34160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1d72e470a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f1d72e47230"/>
        <function-ref name="request" scoped="" ref="0x7f1d72e473c0"/>
        <function-ref name="granted" scoped="" ref="0x7f1d72e47550"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1d72e476e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MultiChannel" ref="0x7f1d72e3aaf0" loc="42:/home/hades/tinyos-new/tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MultiChannel" scoped="" ref="0x7f1d72e3aaf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12MultiChannel"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1d74a34160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7f1d72e3ae70"/>
        <function-ref name="configure" scoped="" ref="0x7f1d72e39030"/>
        <function-ref name="dataReady" scoped="" ref="0x7f1d72e391c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAdc12" ref="0x7f1d72e280d0" loc="48:/home/hades/tinyos-new/tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplAdc12" scoped="" ref="0x7f1d72e280d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAdc12"/>
      </instance>
      <interface-functions>
        <function-ref name="getCtl0" scoped="" ref="0x7f1d72e28450"/>
        <function-ref name="getMCtl" scoped="" ref="0x7f1d72e285e0"/>
        <function-ref name="resetIFGs" scoped="" ref="0x7f1d72e28770"/>
        <function-ref name="isBusy" scoped="" ref="0x7f1d72e28900"/>
        <function-ref name="conversionDone" scoped="" ref="0x7f1d72e28a90"/>
        <function-ref name="getCtl1" scoped="" ref="0x7f1d72e28c20"/>
        <function-ref name="setMCtl" scoped="" ref="0x7f1d72e28db0"/>
        <function-ref name="startConversion" scoped="" ref="0x7f1d72e35020"/>
        <function-ref name="setCtl0" scoped="" ref="0x7f1d72e351b0"/>
        <function-ref name="getMem" scoped="" ref="0x7f1d72e35340"/>
        <function-ref name="setIEFlags" scoped="" ref="0x7f1d72e354d0"/>
        <function-ref name="getIEFlags" scoped="" ref="0x7f1d72e35660"/>
        <function-ref name="stopConversion" scoped="" ref="0x7f1d72e357f0"/>
        <function-ref name="enableConversion" scoped="" ref="0x7f1d72e35a80"/>
        <function-ref name="setCtl1" scoped="" ref="0x7f1d72e35c10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Port64" ref="0x7f1d72e1ac80" loc="58:/home/hades/tinyos-new/tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port64" scoped="" ref="0x7f1d72e1ac80"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1d72e190a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1d72e19230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1d72e193c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1d72e19550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1d72e196e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1d72e19870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1d72e19a00"/>
        <function-ref name="get" scoped="" ref="0x7f1d72e19b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1d72e19d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1d72e18020"/>
        <function-ref name="set" scoped="" ref="0x7f1d72e181b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1d72e18340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1d72e184d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1d72e18760"/>
        <function-ref name="clr" scoped="" ref="0x7f1d72e188f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CompareA1" ref="0x7f1d72e24e60" loc="53:/home/hades/tinyos-new/tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA1" scoped="" ref="0x7f1d72e24e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1d72e22210"/>
        <function-ref name="setEvent" scoped="" ref="0x7f1d72e223a0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f1d72e22530"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f1d72e226c0"/>
        <function-ref name="fired" scoped="" ref="0x7f1d72e22850"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ControlA0" ref="0x7f1d72e27880" loc="50:/home/hades/tinyos-new/tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA0" scoped="" ref="0x7f1d72e27880"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f1d72e27c00"/>
        <function-ref name="getControl" scoped="" ref="0x7f1d72e27d90"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1d72e26020"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f1d72e261b0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f1d72e26340"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1d72e264d0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f1d72e26660"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f1d72e267f0"/>
        <function-ref name="setControl" scoped="" ref="0x7f1d72e26980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DMAExtension" ref="0x7f1d72e37910" loc="44:/home/hades/tinyos-new/tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DMAExtension" scoped="" ref="0x7f1d72e37910"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1d74a34160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f1d72e37c90"/>
        <function-ref name="stop" scoped="" ref="0x7f1d72e37e20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Port62" ref="0x7f1d72e1ec80" loc="56:/home/hades/tinyos-new/tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port62" scoped="" ref="0x7f1d72e1ec80"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1d72e1d0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1d72e1d230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1d72e1d3c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1d72e1d550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1d72e1d6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1d72e1d870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1d72e1da00"/>
        <function-ref name="get" scoped="" ref="0x7f1d72e1db90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1d72e1dd20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1d72e1c020"/>
        <function-ref name="set" scoped="" ref="0x7f1d72e1c1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1d72e1c340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1d72e1c4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1d72e1c760"/>
        <function-ref name="clr" scoped="" ref="0x7f1d72e1c8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Overflow" ref="0x7f1d72e39ab0" loc="43:/home/hades/tinyos-new/tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x7f1d72e39ab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12Overflow"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1d74a34160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="memOverflow" scoped="" ref="0x7f1d72e39e30"/>
        <function-ref name="conversionTimeOverflow" scoped="" ref="0x7f1d72e37020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Port67" ref="0x7f1d72e14c80" loc="61:/home/hades/tinyos-new/tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port67" scoped="" ref="0x7f1d72e14c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1d72e130a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1d72e13230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1d72e133c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1d72e13550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1d72e136e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1d72e13870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1d72e13a00"/>
        <function-ref name="get" scoped="" ref="0x7f1d72e13b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1d72e13d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1d72e12020"/>
        <function-ref name="set" scoped="" ref="0x7f1d72e121b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1d72e12340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1d72e124d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1d72e12760"/>
        <function-ref name="clr" scoped="" ref="0x7f1d72e128f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Port60" ref="0x7f1d72e22be0" loc="54:/home/hades/tinyos-new/tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port60" scoped="" ref="0x7f1d72e22be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1d72e210a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1d72e21230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1d72e213c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1d72e21550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1d72e216e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1d72e21870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1d72e21a00"/>
        <function-ref name="get" scoped="" ref="0x7f1d72e21b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1d72e21d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1d72e20020"/>
        <function-ref name="set" scoped="" ref="0x7f1d72e201b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1d72e20340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1d72e204d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1d72e20760"/>
        <function-ref name="clr" scoped="" ref="0x7f1d72e208f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f1d72e3c680" loc="40:/home/hades/tinyos-new/tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f1d72e3c680"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1d72e3ca00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Port65" ref="0x7f1d72e18c80" loc="59:/home/hades/tinyos-new/tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port65" scoped="" ref="0x7f1d72e18c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1d72e170a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1d72e17230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1d72e173c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1d72e17550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1d72e176e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1d72e17870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1d72e17a00"/>
        <function-ref name="get" scoped="" ref="0x7f1d72e17b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1d72e17d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1d72e16020"/>
        <function-ref name="set" scoped="" ref="0x7f1d72e161b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1d72e16340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1d72e164d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1d72e16760"/>
        <function-ref name="clr" scoped="" ref="0x7f1d72e168f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerA" ref="0x7f1d72e34020" loc="49:/home/hades/tinyos-new/tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerA" scoped="" ref="0x7f1d72e34020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1d72e343a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f1d72e34530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1d72e346c0"/>
        <function-ref name="get" scoped="" ref="0x7f1d72e34850"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1d72e349e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1d72e34b70"/>
        <function-ref name="getMode" scoped="" ref="0x7f1d72e34d00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1d72e27020"/>
        <function-ref name="overflow" scoped="" ref="0x7f1d72e271b0"/>
        <function-ref name="setMode" scoped="" ref="0x7f1d72e27340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f1d72e274d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ADCArbiterInfo" ref="0x7f1d72e36280" loc="47:/home/hades/tinyos-new/tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCArbiterInfo" scoped="" ref="0x7f1d72e36280"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f1d72e36600"/>
        <function-ref name="userId" scoped="" ref="0x7f1d72e36790"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ControlA1" ref="0x7f1d72e26d30" loc="51:/home/hades/tinyos-new/tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA1" scoped="" ref="0x7f1d72e26d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f1d72e250e0"/>
        <function-ref name="getControl" scoped="" ref="0x7f1d72e25270"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1d72e25400"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f1d72e25590"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f1d72e25720"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1d72e258b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f1d72e25a40"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f1d72e25bd0"/>
        <function-ref name="setControl" scoped="" ref="0x7f1d72e25d60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SingleChannel" ref="0x7f1d72e3b3f0" loc="41:/home/hades/tinyos-new/tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SingleChannel" scoped="" ref="0x7f1d72e3b3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1d74a34160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7f1d72e3b770"/>
        <function-ref name="configureSingle" scoped="" ref="0x7f1d72e3b900"/>
        <function-ref name="configureSingleRepeat" scoped="" ref="0x7f1d72e3ba90"/>
        <function-ref name="configureMultipleRepeat" scoped="" ref="0x7f1d72e3bc20"/>
        <function-ref name="multipleDataReady" scoped="" ref="0x7f1d72e3bdb0"/>
        <function-ref name="configureMultiple" scoped="" ref="0x7f1d72e3a020"/>
        <function-ref name="singleDataReady" scoped="" ref="0x7f1d72e3a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Port63" ref="0x7f1d72e1cc80" loc="57:/home/hades/tinyos-new/tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port63" scoped="" ref="0x7f1d72e1cc80"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1d72e1b0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1d72e1b230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1d72e1b3c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1d72e1b550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1d72e1b6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1d72e1b870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1d72e1ba00"/>
        <function-ref name="get" scoped="" ref="0x7f1d72e1bb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1d72e1bd20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1d72e1a020"/>
        <function-ref name="set" scoped="" ref="0x7f1d72e1a1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1d72e1a340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1d72e1a4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1d72e1a760"/>
        <function-ref name="clr" scoped="" ref="0x7f1d72e1a8f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CompareA0" ref="0x7f1d72e24120" loc="52:/home/hades/tinyos-new/tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA0" scoped="" ref="0x7f1d72e24120"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1d72e244a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f1d72e24630"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f1d72e247c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f1d72e24950"/>
        <function-ref name="fired" scoped="" ref="0x7f1d72e24ae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Port61" ref="0x7f1d72e20c80" loc="55:/home/hades/tinyos-new/tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port61" scoped="" ref="0x7f1d72e20c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1d72e1f0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1d72e1f230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1d72e1f3c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1d72e1f550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1d72e1f6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1d72e1f870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1d72e1fa00"/>
        <function-ref name="get" scoped="" ref="0x7f1d72e1fb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1d72e1fd20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1d72e1e020"/>
        <function-ref name="set" scoped="" ref="0x7f1d72e1e1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1d72e1e340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1d72e1e4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1d72e1e760"/>
        <function-ref name="clr" scoped="" ref="0x7f1d72e1e8f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Port66" ref="0x7f1d72e16c80" loc="60:/home/hades/tinyos-new/tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port66" scoped="" ref="0x7f1d72e16c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1d72e150a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1d72e15230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1d72e153c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1d72e15550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1d72e156e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1d72e15870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1d72e15a00"/>
        <function-ref name="get" scoped="" ref="0x7f1d72e15b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1d72e15d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1d72e14020"/>
        <function-ref name="set" scoped="" ref="0x7f1d72e141b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1d72e14340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1d72e144d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1d72e14760"/>
        <function-ref name="clr" scoped="" ref="0x7f1d72e148f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplAdc12" ref="0x7f1d72d55020" loc="46:/home/hades/tinyos-new/tos/chips/msp430/adc12/HplAdc12P.nc">
      <component-ref qname="HplAdc12P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplAdc12" scoped="" ref="0x7f1d72d55020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAdc12"/>
      </instance>
      <interface-functions>
        <function-ref name="getCtl0" scoped="" ref="0x7f1d72d553a0"/>
        <function-ref name="getMCtl" scoped="" ref="0x7f1d72d55530"/>
        <function-ref name="resetIFGs" scoped="" ref="0x7f1d72d556c0"/>
        <function-ref name="isBusy" scoped="" ref="0x7f1d72d55850"/>
        <function-ref name="conversionDone" scoped="" ref="0x7f1d72d559e0"/>
        <function-ref name="getCtl1" scoped="" ref="0x7f1d72d55b70"/>
        <function-ref name="setMCtl" scoped="" ref="0x7f1d72d55d00"/>
        <function-ref name="startConversion" scoped="" ref="0x7f1d72d54020"/>
        <function-ref name="setCtl0" scoped="" ref="0x7f1d72d541b0"/>
        <function-ref name="getMem" scoped="" ref="0x7f1d72d54340"/>
        <function-ref name="setIEFlags" scoped="" ref="0x7f1d72d544d0"/>
        <function-ref name="getIEFlags" scoped="" ref="0x7f1d72d54660"/>
        <function-ref name="stopConversion" scoped="" ref="0x7f1d72d547f0"/>
        <function-ref name="enableConversion" scoped="" ref="0x7f1d72d54a80"/>
        <function-ref name="setCtl1" scoped="" ref="0x7f1d72d54c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f1d72cc43a0" loc="86:/home/hades/tinyos-new/tos/system/SimpleRoundRobinArbiterC.nc">
      <component-ref qname="Msp430Adc12P.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f1d72cc43a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1d74a34160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f1d72cc4740"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f1d72cc48d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f1d72cc3570" loc="89:/home/hades/tinyos-new/tos/system/SimpleRoundRobinArbiterC.nc">
      <component-ref qname="Msp430Adc12P.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f1d72cc3570"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1d74a34160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f1d72cc3910"/>
        <function-ref name="configure" scoped="" ref="0x7f1d72cc3aa0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f1d72cc5520" loc="85:/home/hades/tinyos-new/tos/system/SimpleRoundRobinArbiterC.nc">
      <component-ref qname="Msp430Adc12P.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f1d72cc5520"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1d74a34160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1d72cc58c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f1d72cc5a50"/>
        <function-ref name="request" scoped="" ref="0x7f1d72cc5be0"/>
        <function-ref name="granted" scoped="" ref="0x7f1d72cc5d70"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1d72cc4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f1d72cc4b20" loc="87:/home/hades/tinyos-new/tos/system/SimpleRoundRobinArbiterC.nc">
      <component-ref qname="Msp430Adc12P.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f1d72cc4b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f1d72cc3020"/>
        <function-ref name="userId" scoped="" ref="0x7f1d72cc31b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f1d71fedca0" loc="44:/home/hades/tinyos-new/tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="Msp430Adc12P.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f1d71fedca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1d71fec0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RoundRobinQueue" ref="0x7f1d71fec330" loc="45:/home/hades/tinyos-new/tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="Msp430Adc12P.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RoundRobinQueue" scoped="" ref="0x7f1d71fec330"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f1d71fec6b0"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f1d71fec840"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f1d71fec9d0"/>
        <function-ref name="dequeue" scoped="" ref="0x7f1d71fecb60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f1d71fe9020" loc="52:/home/hades/tinyos-new/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Msp430Adc12P.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f1d71fe9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1d74a34160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f1d71fe93c0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f1d71fe9550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f1d71fe80d0" loc="56:/home/hades/tinyos-new/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Msp430Adc12P.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f1d71fe80d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1d74a34160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f1d71fe8470"/>
        <function-ref name="configure" scoped="" ref="0x7f1d71fe8600"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7f1d71fe8890" loc="57:/home/hades/tinyos-new/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Msp430Adc12P.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x7f1d71fe8890"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f1d71fe8c10"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f1d71fe8da0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f1d71fe6020"/>
        <function-ref name="dequeue" scoped="" ref="0x7f1d71fe61b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f1d71fea270" loc="51:/home/hades/tinyos-new/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Msp430Adc12P.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f1d71fea270"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1d74a34160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1d71fea610"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f1d71fea7a0"/>
        <function-ref name="request" scoped="" ref="0x7f1d71fea930"/>
        <function-ref name="granted" scoped="" ref="0x7f1d71feaac0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1d71feac50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f1d71fe97a0" loc="53:/home/hades/tinyos-new/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Msp430Adc12P.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f1d71fe97a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f1d71fe9b20"/>
        <function-ref name="userId" scoped="" ref="0x7f1d71fe9cb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7f1d71fe6480" loc="68:/home/hades/tinyos-new/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Msp430Adc12P.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantedTask" scoped="" ref="0x7f1d71fe6480"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f1d71fe6800"/>
        <function-ref name="runTask" scoped="" ref="0x7f1d71fe6990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x7f1d72ca6740" loc="55:/home/hades/tinyos-new/tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <component-ref qname="Msp430RefVoltArbiterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Config" scoped="" ref="0x7f1d72ca6740"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7f1d72ee2ae0"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7f1d72ee2200"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1d74a34160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7f1d72ca53d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcResource" ref="0x7f1d72ca71d0" loc="54:/home/hades/tinyos-new/tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <component-ref qname="Msp430RefVoltArbiterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AdcResource" scoped="" ref="0x7f1d72ca71d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1d74a34160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1d72ca7550"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f1d72ca76e0"/>
        <function-ref name="request" scoped="" ref="0x7f1d72ca7870"/>
        <function-ref name="granted" scoped="" ref="0x7f1d72ca7a00"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1d72ca7b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ClientResource" ref="0x7f1d72cacd30" loc="52:/home/hades/tinyos-new/tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <component-ref qname="Msp430RefVoltArbiterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ClientResource" scoped="" ref="0x7f1d72cacd30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1d74a34160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1d72ca90e0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f1d72ca9270"/>
        <function-ref name="request" scoped="" ref="0x7f1d72ca9400"/>
        <function-ref name="granted" scoped="" ref="0x7f1d72ca9590"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1d72ca9720"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAdc12" ref="0x7f1d72ca19c0" loc="43:/home/hades/tinyos-new/tos/chips/msp430/adc12/Msp430RefVoltGeneratorP.nc">
      <component-ref qname="Msp430RefVoltGeneratorP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplAdc12" scoped="" ref="0x7f1d72ca19c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAdc12"/>
      </instance>
      <interface-functions>
        <function-ref name="getCtl0" scoped="" ref="0x7f1d72ca1d40"/>
        <function-ref name="getMCtl" scoped="" ref="0x7f1d72ca0020"/>
        <function-ref name="resetIFGs" scoped="" ref="0x7f1d72ca01b0"/>
        <function-ref name="isBusy" scoped="" ref="0x7f1d72ca0340"/>
        <function-ref name="conversionDone" scoped="" ref="0x7f1d72ca04d0"/>
        <function-ref name="getCtl1" scoped="" ref="0x7f1d72ca0660"/>
        <function-ref name="setMCtl" scoped="" ref="0x7f1d72ca07f0"/>
        <function-ref name="startConversion" scoped="" ref="0x7f1d72ca0980"/>
        <function-ref name="setCtl0" scoped="" ref="0x7f1d72ca0b10"/>
        <function-ref name="getMem" scoped="" ref="0x7f1d72ca0ca0"/>
        <function-ref name="setIEFlags" scoped="" ref="0x7f1d72ca0e30"/>
        <function-ref name="getIEFlags" scoped="" ref="0x7f1d72c9f020"/>
        <function-ref name="stopConversion" scoped="" ref="0x7f1d72c9f1b0"/>
        <function-ref name="enableConversion" scoped="" ref="0x7f1d72c9f440"/>
        <function-ref name="setCtl1" scoped="" ref="0x7f1d72c9f5d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SwitchOffTimer" ref="0x7f1d72c98020" loc="45:/home/hades/tinyos-new/tos/chips/msp430/adc12/Msp430RefVoltGeneratorP.nc">
      <component-ref qname="Msp430RefVoltGeneratorP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SwitchOffTimer" scoped="" ref="0x7f1d72c98020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1d740c1460"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1d740c17d0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f1d72c95630"/>
        <function-ref name="fired" scoped="" ref="0x7f1d72c97a60"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f1d72c96920"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f1d72c964a0"/>
        <function-ref name="getdt" scoped="" ref="0x7f1d72c93020"/>
        <function-ref name="gett0" scoped="" ref="0x7f1d72c95ab0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f1d72c96020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f1d72c98c10"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f1d72c95020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f1d72c97110"/>
        <function-ref name="stop" scoped="" ref="0x7f1d72c975e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RefVolt_2_5V" ref="0x7f1d72ca2e40" loc="39:/home/hades/tinyos-new/tos/chips/msp430/adc12/Msp430RefVoltGeneratorP.nc">
      <component-ref qname="Msp430RefVoltGeneratorP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RefVolt_2_5V" scoped="" ref="0x7f1d72ca2e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f1d72ca11e0"/>
        <function-ref name="stopDone" scoped="" ref="0x7f1d72ca1370"/>
        <function-ref name="start" scoped="" ref="0x7f1d72ca1500"/>
        <function-ref name="stop" scoped="" ref="0x7f1d72ca1690"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SwitchOffSettleTimer" ref="0x7f1d72c936c0" loc="46:/home/hades/tinyos-new/tos/chips/msp430/adc12/Msp430RefVoltGeneratorP.nc">
      <component-ref qname="Msp430RefVoltGeneratorP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SwitchOffSettleTimer" scoped="" ref="0x7f1d72c936c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1d740c1460"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1d740c17d0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f1d72c90c40"/>
        <function-ref name="fired" scoped="" ref="0x7f1d72c911e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f1d72c90020"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f1d72c91ae0"/>
        <function-ref name="getdt" scoped="" ref="0x7f1d72c8e590"/>
        <function-ref name="gett0" scoped="" ref="0x7f1d72c8e110"/>
        <function-ref name="isRunning" scoped="" ref="0x7f1d72c91660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f1d72c92390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f1d72c90630"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f1d72c92860"/>
        <function-ref name="stop" scoped="" ref="0x7f1d72c92d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RefVolt_1_5V" ref="0x7f1d72ca2280" loc="38:/home/hades/tinyos-new/tos/chips/msp430/adc12/Msp430RefVoltGeneratorP.nc">
      <component-ref qname="Msp430RefVoltGeneratorP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RefVolt_1_5V" scoped="" ref="0x7f1d72ca2280"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f1d72ca2600"/>
        <function-ref name="stopDone" scoped="" ref="0x7f1d72ca2790"/>
        <function-ref name="start" scoped="" ref="0x7f1d72ca2920"/>
        <function-ref name="stop" scoped="" ref="0x7f1d72ca2ab0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SwitchOnTimer" ref="0x7f1d72c9fa90" loc="44:/home/hades/tinyos-new/tos/chips/msp430/adc12/Msp430RefVoltGeneratorP.nc">
      <component-ref qname="Msp430RefVoltGeneratorP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SwitchOnTimer" scoped="" ref="0x7f1d72c9fa90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1d740c1460"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1d740c17d0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f1d72c9a020"/>
        <function-ref name="fired" scoped="" ref="0x7f1d72c9c510"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f1d72c9b300"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f1d72c9ce10"/>
        <function-ref name="getdt" scoped="" ref="0x7f1d72c9a920"/>
        <function-ref name="gett0" scoped="" ref="0x7f1d72c9a4a0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f1d72c9c990"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f1d72c9d6b0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f1d72c9b910"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f1d72c9db80"/>
        <function-ref name="stop" scoped="" ref="0x7f1d72c9c090"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x7f1d72c3a020" loc="43:/home/hades/tinyos-new/tos/chips/msp430/adc12/Msp430RefVoltArbiterImplP.nc">
      <component-ref qname="Msp430RefVoltArbiterImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Config" scoped="" ref="0x7f1d72c3a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7f1d72ee2ae0"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7f1d72ee2200"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1d74a34160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7f1d72c3ac50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RefVolt_2_5V" ref="0x7f1d72c3c9c0" loc="42:/home/hades/tinyos-new/tos/chips/msp430/adc12/Msp430RefVoltArbiterImplP.nc">
      <component-ref qname="Msp430RefVoltArbiterImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RefVolt_2_5V" scoped="" ref="0x7f1d72c3c9c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f1d72c3cd40"/>
        <function-ref name="stopDone" scoped="" ref="0x7f1d72c3b020"/>
        <function-ref name="start" scoped="" ref="0x7f1d72c3b1b0"/>
        <function-ref name="stop" scoped="" ref="0x7f1d72c3b340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcResource" ref="0x7f1d72c3d030" loc="40:/home/hades/tinyos-new/tos/chips/msp430/adc12/Msp430RefVoltArbiterImplP.nc">
      <component-ref qname="Msp430RefVoltArbiterImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AdcResource" scoped="" ref="0x7f1d72c3d030"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1d74a34160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1d72c3d3b0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f1d72c3d540"/>
        <function-ref name="request" scoped="" ref="0x7f1d72c3d6d0"/>
        <function-ref name="granted" scoped="" ref="0x7f1d72c3d860"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1d72c3d9f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ClientResource" ref="0x7f1d72c42cb0" loc="38:/home/hades/tinyos-new/tos/chips/msp430/adc12/Msp430RefVoltArbiterImplP.nc">
      <component-ref qname="Msp430RefVoltArbiterImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ClientResource" scoped="" ref="0x7f1d72c42cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1d74a34160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1d72c3e0a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f1d72c3e230"/>
        <function-ref name="request" scoped="" ref="0x7f1d72c3e3c0"/>
        <function-ref name="granted" scoped="" ref="0x7f1d72c3e550"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1d72c3e6e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="switchOff" ref="0x7f1d72c377f0" loc="52:/home/hades/tinyos-new/tos/chips/msp430/adc12/Msp430RefVoltArbiterImplP.nc">
      <component-ref qname="Msp430RefVoltArbiterImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="switchOff" scoped="" ref="0x7f1d72c377f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f1d72c37b70"/>
        <function-ref name="runTask" scoped="" ref="0x7f1d72c37d00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RefVolt_1_5V" ref="0x7f1d72c3dd80" loc="41:/home/hades/tinyos-new/tos/chips/msp430/adc12/Msp430RefVoltArbiterImplP.nc">
      <component-ref qname="Msp430RefVoltArbiterImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RefVolt_1_5V" scoped="" ref="0x7f1d72c3dd80"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f1d72c3c180"/>
        <function-ref name="stopDone" scoped="" ref="0x7f1d72c3c310"/>
        <function-ref name="start" scoped="" ref="0x7f1d72c3c4a0"/>
        <function-ref name="stop" scoped="" ref="0x7f1d72c3c630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f1d72c084e0" loc="45:/home/hades/tinyos-new/tos/system/TimerMilliC.nc">
      <component-ref qname="Msp430RefVoltArbiterP.SwitchOnDelayTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f1d72c084e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1d740c1460"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1d740c17d0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f1d72c05a20"/>
        <function-ref name="fired" scoped="" ref="0x7f1d72c06020"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f1d72c06da0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f1d72c06920"/>
        <function-ref name="getdt" scoped="" ref="0x7f1d72c034a0"/>
        <function-ref name="gett0" scoped="" ref="0x7f1d72c03020"/>
        <function-ref name="isRunning" scoped="" ref="0x7f1d72c064a0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f1d72c07110"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f1d72c05410"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f1d72c075e0"/>
        <function-ref name="stop" scoped="" ref="0x7f1d72c07ab0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f1d72c01020" loc="45:/home/hades/tinyos-new/tos/system/TimerMilliC.nc">
      <component-ref qname="Msp430RefVoltArbiterP.SwitchOffDelayTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f1d72c01020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1d740c1460"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1d740c17d0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f1d72bfe630"/>
        <function-ref name="fired" scoped="" ref="0x7f1d72c00a60"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f1d72bff920"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f1d72bff4a0"/>
        <function-ref name="getdt" scoped="" ref="0x7f1d72bfc020"/>
        <function-ref name="gett0" scoped="" ref="0x7f1d72bfeab0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f1d72bff020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f1d72c01c10"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f1d72bfe020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f1d72c00110"/>
        <function-ref name="stop" scoped="" ref="0x7f1d72c005e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f1d72bfbb40" loc="45:/home/hades/tinyos-new/tos/system/TimerMilliC.nc">
      <component-ref qname="Msp430RefVoltArbiterP.SwitchOffSettleTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f1d72bfbb40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1d740c1460"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1d740c17d0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f1d72bf6110"/>
        <function-ref name="fired" scoped="" ref="0x7f1d72bf95b0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f1d72bf84a0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f1d72bf8020"/>
        <function-ref name="getdt" scoped="" ref="0x7f1d72bf6a10"/>
        <function-ref name="gett0" scoped="" ref="0x7f1d72bf6590"/>
        <function-ref name="isRunning" scoped="" ref="0x7f1d72bf9a30"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f1d72bfa750"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f1d72bf8ab0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f1d72bfac20"/>
        <function-ref name="stop" scoped="" ref="0x7f1d72bf9130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ConfSub" ref="0x7f1d72003a40" loc="44:/home/hades/tinyos-new/tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
      <component-ref qname="TestCM5000C.SensorVref.AdcReadClientC.Msp430AdcClient.Msp430Adc12ConfAlertC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ConfSub" scoped="" ref="0x7f1d72003a40"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7f1d72ee2ae0"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7f1d72ee2200"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7f1d720026b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ConfUp" ref="0x7f1d72002cc0" loc="45:/home/hades/tinyos-new/tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
      <component-ref qname="TestCM5000C.SensorVref.AdcReadClientC.Msp430AdcClient.Msp430Adc12ConfAlertC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ConfUp" scoped="" ref="0x7f1d72002cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7f1d72ee2ae0"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7f1d72ee2200"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7f1d72000980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcConfigure" ref="0x7f1d720200e0" loc="49:/home/hades/tinyos-new/tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
      <component-ref qname="TestCM5000C.SensorVref.AdcReadStreamClientC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AdcConfigure" scoped="" ref="0x7f1d720200e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7f1d72ee2ae0"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7f1d72ee2200"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7f1d72020d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadStream" ref="0x7f1d72024380" loc="48:/home/hades/tinyos-new/tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
      <component-ref qname="TestCM5000C.SensorVref.AdcReadStreamClientC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadStream" scoped="" ref="0x7f1d72024380"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadStream"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1d74a34520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="bufferDone" scoped="" ref="0x7f1d72023e60"/>
        <function-ref name="postBuffer" scoped="" ref="0x7f1d72023020"/>
        <function-ref name="read" scoped="" ref="0x7f1d72023990"/>
        <function-ref name="readDone" scoped="" ref="0x7f1d72021940"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Adc12SingleChannel" ref="0x7f1d72bbfc90" loc="23:/home/hades/tinyos-new/tos/chips/msp430/adc12/WireAdcStreamP.nc">
      <component-ref qname="WireAdcStreamP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0x7f1d72bbfc90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1d74a34160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7f1d72bbe0a0"/>
        <function-ref name="configureSingle" scoped="" ref="0x7f1d72bbe230"/>
        <function-ref name="configureSingleRepeat" scoped="" ref="0x7f1d72bbe3c0"/>
        <function-ref name="configureMultipleRepeat" scoped="" ref="0x7f1d72bbe550"/>
        <function-ref name="multipleDataReady" scoped="" ref="0x7f1d72bbe6e0"/>
        <function-ref name="configureMultiple" scoped="" ref="0x7f1d72bbe870"/>
        <function-ref name="singleDataReady" scoped="" ref="0x7f1d72bbea00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcConfigure" ref="0x7f1d72bc05e0" loc="22:/home/hades/tinyos-new/tos/chips/msp430/adc12/WireAdcStreamP.nc">
      <component-ref qname="WireAdcStreamP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AdcConfigure" scoped="" ref="0x7f1d72bc05e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7f1d72ee2ae0"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7f1d72ee2200"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1d74a34160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7f1d72bbf240"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadStream" ref="0x7f1d72bc41d0" loc="20:/home/hades/tinyos-new/tos/chips/msp430/adc12/WireAdcStreamP.nc">
      <component-ref qname="WireAdcStreamP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadStream" scoped="" ref="0x7f1d72bc41d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadStream"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1d74a34520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1d74a34160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="bufferDone" scoped="" ref="0x7f1d72bc3c40"/>
        <function-ref name="postBuffer" scoped="" ref="0x7f1d72bc4dc0"/>
        <function-ref name="read" scoped="" ref="0x7f1d72bc3770"/>
        <function-ref name="readDone" scoped="" ref="0x7f1d72bc2730"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7f1d72bbd280" loc="24:/home/hades/tinyos-new/tos/chips/msp430/adc12/WireAdcStreamP.nc">
      <component-ref qname="WireAdcStreamP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f1d72bbd280"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1d74a34160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1d72bbd600"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f1d72bbd790"/>
        <function-ref name="request" scoped="" ref="0x7f1d72bbd920"/>
        <function-ref name="granted" scoped="" ref="0x7f1d72bbdab0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1d72bbdc40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="bufferDone" ref="0x7f1d72b86380" loc="156:/home/hades/tinyos-new/tos/chips/msp430/adc12/AdcStreamP.nc">
      <component-ref qname="AdcStreamP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="bufferDone" scoped="" ref="0x7f1d72b86380"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f1d72b86700"/>
        <function-ref name="runTask" scoped="" ref="0x7f1d72b86890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="readStreamDone" ref="0x7f1d72b95aa0" loc="119:/home/hades/tinyos-new/tos/chips/msp430/adc12/AdcStreamP.nc">
      <component-ref qname="AdcStreamP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="readStreamDone" scoped="" ref="0x7f1d72b95aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f1d72b95e20"/>
        <function-ref name="runTask" scoped="" ref="0x7f1d72b94020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="readStreamFail" ref="0x7f1d72b8e100" loc="135:/home/hades/tinyos-new/tos/chips/msp430/adc12/AdcStreamP.nc">
      <component-ref qname="AdcStreamP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="readStreamFail" scoped="" ref="0x7f1d72b8e100"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f1d72b8e480"/>
        <function-ref name="runTask" scoped="" ref="0x7f1d72b8e610"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x7f1d72baf020" loc="54:/home/hades/tinyos-new/tos/chips/msp430/adc12/AdcStreamP.nc">
      <component-ref qname="AdcStreamP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f1d72baf020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1d740c1460"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1d740c17d0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f1d74a34920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f1d72bad870"/>
        <function-ref name="fired" scoped="" ref="0x7f1d72bae840"/>
        <function-ref name="startAt" scoped="" ref="0x7f1d72bad220"/>
        <function-ref name="isRunning" scoped="" ref="0x7f1d72baed00"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f1d72badd30"/>
        <function-ref name="start" scoped="" ref="0x7f1d72bafe30"/>
        <function-ref name="stop" scoped="" ref="0x7f1d72bae380"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f1d72bb8150" loc="48:/home/hades/tinyos-new/tos/chips/msp430/adc12/AdcStreamP.nc">
      <component-ref qname="AdcStreamP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f1d72bb8150"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x7f1d747a6800"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x7f1d747a6800"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1d72bb84d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcConfigure" ref="0x7f1d72bb2b10" loc="53:/home/hades/tinyos-new/tos/chips/msp430/adc12/AdcStreamP.nc">
      <component-ref qname="AdcStreamP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AdcConfigure" scoped="" ref="0x7f1d72bb2b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7f1d72ee2ae0"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7f1d72ee2200"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1d74a34160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7f1d72bb1790"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SingleChannel" ref="0x7f1d72bb31d0" loc="52:/home/hades/tinyos-new/tos/chips/msp430/adc12/AdcStreamP.nc">
      <component-ref qname="AdcStreamP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SingleChannel" scoped="" ref="0x7f1d72bb31d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1d74a34160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7f1d72bb3550"/>
        <function-ref name="configureSingle" scoped="" ref="0x7f1d72bb36e0"/>
        <function-ref name="configureSingleRepeat" scoped="" ref="0x7f1d72bb3870"/>
        <function-ref name="configureMultipleRepeat" scoped="" ref="0x7f1d72bb3a00"/>
        <function-ref name="multipleDataReady" scoped="" ref="0x7f1d72bb3b90"/>
        <function-ref name="configureMultiple" scoped="" ref="0x7f1d72bb3d20"/>
        <function-ref name="singleDataReady" scoped="" ref="0x7f1d72bb2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadStream" ref="0x7f1d72bb8e70" loc="49:/home/hades/tinyos-new/tos/chips/msp430/adc12/AdcStreamP.nc">
      <component-ref qname="AdcStreamP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadStream" scoped="" ref="0x7f1d72bb8e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadStream"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1d74a34520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1d74a34160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="bufferDone" scoped="" ref="0x7f1d72bb6910"/>
        <function-ref name="postBuffer" scoped="" ref="0x7f1d72bb7a90"/>
        <function-ref name="read" scoped="" ref="0x7f1d72bb6440"/>
        <function-ref name="readDone" scoped="" ref="0x7f1d72bb4440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f1d72b4a970" loc="44:/home/hades/tinyos-new/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="WireAdcStreamP.Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f1d72b4a970"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1d740c1460"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1d740c17d0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f1d74a34920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f1d72b471b0"/>
        <function-ref name="fired" scoped="" ref="0x7f1d72b481b0"/>
        <function-ref name="startAt" scoped="" ref="0x7f1d72b48b30"/>
        <function-ref name="isRunning" scoped="" ref="0x7f1d72b48670"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f1d72b47670"/>
        <function-ref name="start" scoped="" ref="0x7f1d72b497c0"/>
        <function-ref name="stop" scoped="" ref="0x7f1d72b49cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f1d72b4a120" loc="43:/home/hades/tinyos-new/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="WireAdcStreamP.Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f1d72b4a120"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1d72b4a4a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f1d71f95870" loc="44:/home/hades/tinyos-new/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="WireAdcStreamP.Alarm.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f1d71f95870"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1d740c1c10"/>
            <typename><typedef-ref name="T32khz" ref="0x7f1d740c0020"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1d74a34520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f1d71f91090"/>
        <function-ref name="fired" scoped="" ref="0x7f1d71f93090"/>
        <function-ref name="startAt" scoped="" ref="0x7f1d71f93a10"/>
        <function-ref name="isRunning" scoped="" ref="0x7f1d71f93550"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f1d71f91550"/>
        <function-ref name="start" scoped="" ref="0x7f1d71f946a0"/>
        <function-ref name="stop" scoped="" ref="0x7f1d71f94bb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f1d71f95020" loc="43:/home/hades/tinyos-new/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="WireAdcStreamP.Alarm.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f1d71f95020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1d71f953a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x7f1d71f7dda0" loc="41:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="WireAdcStreamP.Alarm.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7f1d71f7dda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1d71f7c180"/>
        <function-ref name="setEvent" scoped="" ref="0x7f1d71f7c310"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f1d71f7c4a0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f1d71f7c630"/>
        <function-ref name="fired" scoped="" ref="0x7f1d71f7c7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x7f1d71f7f450" loc="39:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="WireAdcStreamP.Alarm.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f1d71f7f450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1d71f7f7d0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f1d71f7f960"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1d71f7faf0"/>
        <function-ref name="get" scoped="" ref="0x7f1d71f7fc80"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1d71f7fe10"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1d71f7e020"/>
        <function-ref name="getMode" scoped="" ref="0x7f1d71f7e1b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1d71f7e340"/>
        <function-ref name="overflow" scoped="" ref="0x7f1d71f7e4d0"/>
        <function-ref name="setMode" scoped="" ref="0x7f1d71f7e660"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f1d71f7e7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x7f1d71f7ea80" loc="40:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="WireAdcStreamP.Alarm.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f1d71f7ea80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f1d71f7ee00"/>
        <function-ref name="getControl" scoped="" ref="0x7f1d71f7d020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1d71f7d1b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f1d71f7d340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f1d71f7d4d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1d71f7d660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f1d71f7d7f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f1d71f7d980"/>
        <function-ref name="setControl" scoped="" ref="0x7f1d71f7db10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Compare" ref="0x7f1d71f73a80" loc="49:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="WireAdcStreamP.Alarm.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7f1d71f73a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f1d71f73e00"/>
        <function-ref name="setEvent" scoped="" ref="0x7f1d71f71020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f1d71f711b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f1d71f71340"/>
        <function-ref name="fired" scoped="" ref="0x7f1d71f714d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7f1d71f75190" loc="47:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="WireAdcStreamP.Alarm.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f1d71f75190"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1d71f75510"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f1d71f756a0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1d71f75830"/>
        <function-ref name="get" scoped="" ref="0x7f1d71f759c0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1d71f75b50"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1d71f75ce0"/>
        <function-ref name="getMode" scoped="" ref="0x7f1d71f75e70"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1d71f74030"/>
        <function-ref name="overflow" scoped="" ref="0x7f1d71f741c0"/>
        <function-ref name="setMode" scoped="" ref="0x7f1d71f74350"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f1d71f744e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f1d71f78020" loc="46:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="WireAdcStreamP.Alarm.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f1d71f78020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1d740c1c10"/>
            <typename><typedef-ref name="T32khz" ref="0x7f1d740c0020"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1d74a34520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f1d71f76870"/>
        <function-ref name="fired" scoped="" ref="0x7f1d71f77840"/>
        <function-ref name="startAt" scoped="" ref="0x7f1d71f76220"/>
        <function-ref name="isRunning" scoped="" ref="0x7f1d71f77d00"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f1d71f76d30"/>
        <function-ref name="start" scoped="" ref="0x7f1d71f78e30"/>
        <function-ref name="stop" scoped="" ref="0x7f1d71f77380"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f1d71f7a660" loc="45:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="WireAdcStreamP.Alarm.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f1d71f7a660"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1d71f7a9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x7f1d71f74770" loc="48:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="WireAdcStreamP.Alarm.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f1d71f74770"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f1d71f74af0"/>
        <function-ref name="getControl" scoped="" ref="0x7f1d71f74c80"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f1d71f74e10"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f1d71f73020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f1d71f731b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f1d71f73340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f1d71f734d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f1d71f73660"/>
        <function-ref name="setControl" scoped="" ref="0x7f1d71f737f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f1d71f8fa90" loc="61:/home/hades/tinyos-new/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="WireAdcStreamP.Alarm.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f1d71f8fa90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1d740c1460"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1d740c17d0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f1d74a34920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f1d71f8c2e0"/>
        <function-ref name="fired" scoped="" ref="0x7f1d71f8d2e0"/>
        <function-ref name="startAt" scoped="" ref="0x7f1d71f8dc60"/>
        <function-ref name="isRunning" scoped="" ref="0x7f1d71f8d7a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f1d71f8c7a0"/>
        <function-ref name="start" scoped="" ref="0x7f1d71f8e8d0"/>
        <function-ref name="stop" scoped="" ref="0x7f1d71f8ede0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x7f1d71f88210" loc="73:/home/hades/tinyos-new/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="WireAdcStreamP.Alarm.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AlarmFrom" scoped="" ref="0x7f1d71f88210"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1d740c1c10"/>
            <typename><typedef-ref name="T32khz" ref="0x7f1d740c0020"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1d74a34520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f1d71f86b30"/>
        <function-ref name="fired" scoped="" ref="0x7f1d71f87a60"/>
        <function-ref name="startAt" scoped="" ref="0x7f1d71f864e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f1d71f86020"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f1d71f85020"/>
        <function-ref name="start" scoped="" ref="0x7f1d71f87090"/>
        <function-ref name="stop" scoped="" ref="0x7f1d71f875a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f1d71f8ce10" loc="68:/home/hades/tinyos-new/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="WireAdcStreamP.Alarm.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f1d71f8ce10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1d740c1460"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1d740c17d0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f1d74a34920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f1d71f8bca0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1d71f89670"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1d71f891b0"/>
        <function-ref name="overflow" scoped="" ref="0x7f1d71f89b30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Service" ref="0x7f1d72b17bf0" loc="26:/home/hades/tinyos-new/tos/system/ArbitratedReadStreamC.nc">
      <component-ref qname="WireAdcStreamP.ArbitrateReadStream"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Service" scoped="" ref="0x7f1d72b17bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadStream"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1d74a34520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1d74a34160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="bufferDone" scoped="" ref="0x7f1d72b14710"/>
        <function-ref name="postBuffer" scoped="" ref="0x7f1d72b16860"/>
        <function-ref name="read" scoped="" ref="0x7f1d72b14220"/>
        <function-ref name="readDone" scoped="" ref="0x7f1d72b13220"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadStream" ref="0x7f1d72b42cb0" loc="24:/home/hades/tinyos-new/tos/system/ArbitratedReadStreamC.nc">
      <component-ref qname="WireAdcStreamP.ArbitrateReadStream"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadStream" scoped="" ref="0x7f1d72b42cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadStream"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1d74a34520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1d74a34160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="bufferDone" scoped="" ref="0x7f1d72b18850"/>
        <function-ref name="postBuffer" scoped="" ref="0x7f1d72b1a940"/>
        <function-ref name="read" scoped="" ref="0x7f1d72b18360"/>
        <function-ref name="readDone" scoped="" ref="0x7f1d72b17360"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7f1d72b138f0" loc="27:/home/hades/tinyos-new/tos/system/ArbitratedReadStreamC.nc">
      <component-ref qname="WireAdcStreamP.ArbitrateReadStream"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f1d72b138f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1d74a34160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1d72b13c90"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f1d72b13e20"/>
        <function-ref name="request" scoped="" ref="0x7f1d72b12020"/>
        <function-ref name="granted" scoped="" ref="0x7f1d72b121b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1d72b12340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Adc12MultiChannel" ref="0x7f1d71fa4d70" loc="48:/home/hades/tinyos-new/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="TestCM5000C.SensorVref.AdcReadStreamClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Adc12MultiChannel" scoped="" ref="0x7f1d71fa4d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12MultiChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7f1d71fa3180"/>
        <function-ref name="configure" scoped="" ref="0x7f1d71fa3310"/>
        <function-ref name="dataReady" scoped="" ref="0x7f1d71fa34a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Adc12SingleChannel" ref="0x7f1d71fa5e10" loc="47:/home/hades/tinyos-new/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="TestCM5000C.SensorVref.AdcReadStreamClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0x7f1d71fa5e10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7f1d71fa41c0"/>
        <function-ref name="configureSingle" scoped="" ref="0x7f1d71fa4350"/>
        <function-ref name="configureSingleRepeat" scoped="" ref="0x7f1d71fa44e0"/>
        <function-ref name="configureMultipleRepeat" scoped="" ref="0x7f1d71fa4670"/>
        <function-ref name="multipleDataReady" scoped="" ref="0x7f1d71fa4800"/>
        <function-ref name="configureMultiple" scoped="" ref="0x7f1d71fa4990"/>
        <function-ref name="singleDataReady" scoped="" ref="0x7f1d71fa4b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Adc12Overflow" ref="0x7f1d71fa36f0" loc="49:/home/hades/tinyos-new/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="TestCM5000C.SensorVref.AdcReadStreamClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Adc12Overflow" scoped="" ref="0x7f1d71fa36f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12Overflow"/>
      </instance>
      <interface-functions>
        <function-ref name="memOverflow" scoped="" ref="0x7f1d71fa3a70"/>
        <function-ref name="conversionTimeOverflow" scoped="" ref="0x7f1d71fa3c00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcConfigure" ref="0x7f1d71fa2060" loc="51:/home/hades/tinyos-new/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="TestCM5000C.SensorVref.AdcReadStreamClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AdcConfigure" scoped="" ref="0x7f1d71fa2060"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7f1d72ee2ae0"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7f1d72ee2200"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7f1d71fa2c90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f1d71fa5200" loc="46:/home/hades/tinyos-new/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="TestCM5000C.SensorVref.AdcReadStreamClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f1d71fa5200"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1d71fa5580"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f1d71fa5710"/>
        <function-ref name="request" scoped="" ref="0x7f1d71fa58a0"/>
        <function-ref name="granted" scoped="" ref="0x7f1d71fa5a30"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1d71fa5bc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ConfSub" ref="0x7f1d71f31a60" loc="44:/home/hades/tinyos-new/tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
      <component-ref qname="TestCM5000C.SensorVref.AdcReadStreamClientC.Msp430AdcClient.Msp430Adc12ConfAlertC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ConfSub" scoped="" ref="0x7f1d71f31a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7f1d72ee2ae0"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7f1d72ee2200"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7f1d71f306b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ConfUp" ref="0x7f1d71f30cc0" loc="45:/home/hades/tinyos-new/tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
      <component-ref qname="TestCM5000C.SensorVref.AdcReadStreamClientC.Msp430AdcClient.Msp430Adc12ConfAlertC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ConfUp" scoped="" ref="0x7f1d71f30cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7f1d72ee2ae0"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7f1d72ee2200"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7f1d71f2f980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AdcConfigure" ref="0x7f1d72afca20" loc="35:/home/hades/tinyos-new/tos/chips/msp430/sensors/Msp430InternalVoltageP.nc">
      <component-ref qname="Msp430InternalVoltageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AdcConfigure" scoped="" ref="0x7f1d72afca20"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7f1d72ee2ae0"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7f1d72ee2200"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7f1d72af96b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadNow" ref="0x7f1d7201c840" loc="50:/home/hades/tinyos-new/tos/chips/msp430/adc12/AdcReadNowClientC.nc">
      <component-ref qname="TestCM5000C.SensorVref.AdcReadNowClientC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadNow" scoped="" ref="0x7f1d7201c840"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadNow"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1d74a34520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1d7201b4c0"/>
        <function-ref name="readDone" scoped="" ref="0x7f1d7201b980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcConfigure" ref="0x7f1d7201a130" loc="52:/home/hades/tinyos-new/tos/chips/msp430/adc12/AdcReadNowClientC.nc">
      <component-ref qname="TestCM5000C.SensorVref.AdcReadNowClientC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AdcConfigure" scoped="" ref="0x7f1d7201a130"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7f1d72ee2ae0"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7f1d72ee2200"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7f1d7201ad60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f1d7201d9c0" loc="49:/home/hades/tinyos-new/tos/chips/msp430/adc12/AdcReadNowClientC.nc">
      <component-ref qname="TestCM5000C.SensorVref.AdcReadNowClientC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f1d7201d9c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1d7201dd40"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f1d7201c020"/>
        <function-ref name="request" scoped="" ref="0x7f1d7201c1b0"/>
        <function-ref name="granted" scoped="" ref="0x7f1d7201c340"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1d7201c4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Adc12MultiChannel" ref="0x7f1d71f24d30" loc="48:/home/hades/tinyos-new/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="TestCM5000C.SensorVref.AdcReadNowClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Adc12MultiChannel" scoped="" ref="0x7f1d71f24d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12MultiChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7f1d71f230e0"/>
        <function-ref name="configure" scoped="" ref="0x7f1d71f23270"/>
        <function-ref name="dataReady" scoped="" ref="0x7f1d71f23400"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Adc12SingleChannel" ref="0x7f1d71f25d70" loc="47:/home/hades/tinyos-new/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="TestCM5000C.SensorVref.AdcReadNowClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0x7f1d71f25d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7f1d71f24180"/>
        <function-ref name="configureSingle" scoped="" ref="0x7f1d71f24310"/>
        <function-ref name="configureSingleRepeat" scoped="" ref="0x7f1d71f244a0"/>
        <function-ref name="configureMultipleRepeat" scoped="" ref="0x7f1d71f24630"/>
        <function-ref name="multipleDataReady" scoped="" ref="0x7f1d71f247c0"/>
        <function-ref name="configureMultiple" scoped="" ref="0x7f1d71f24950"/>
        <function-ref name="singleDataReady" scoped="" ref="0x7f1d71f24ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Adc12Overflow" ref="0x7f1d71f23650" loc="49:/home/hades/tinyos-new/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="TestCM5000C.SensorVref.AdcReadNowClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Adc12Overflow" scoped="" ref="0x7f1d71f23650"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12Overflow"/>
      </instance>
      <interface-functions>
        <function-ref name="memOverflow" scoped="" ref="0x7f1d71f239d0"/>
        <function-ref name="conversionTimeOverflow" scoped="" ref="0x7f1d71f23b60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcConfigure" ref="0x7f1d71f21020" loc="51:/home/hades/tinyos-new/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="TestCM5000C.SensorVref.AdcReadNowClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AdcConfigure" scoped="" ref="0x7f1d71f21020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7f1d72ee2ae0"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7f1d72ee2200"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7f1d71f21c50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f1d71f25160" loc="46:/home/hades/tinyos-new/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="TestCM5000C.SensorVref.AdcReadNowClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f1d71f25160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1d71f254e0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f1d71f25670"/>
        <function-ref name="request" scoped="" ref="0x7f1d71f25800"/>
        <function-ref name="granted" scoped="" ref="0x7f1d71f25990"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1d71f25b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ConfSub" ref="0x7f1d71f14630" loc="44:/home/hades/tinyos-new/tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
      <component-ref qname="TestCM5000C.SensorVref.AdcReadNowClientC.Msp430AdcClient.Msp430Adc12ConfAlertC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ConfSub" scoped="" ref="0x7f1d71f14630"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7f1d72ee2ae0"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7f1d72ee2200"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7f1d71f123d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ConfUp" ref="0x7f1d71f129e0" loc="45:/home/hades/tinyos-new/tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
      <component-ref qname="TestCM5000C.SensorVref.AdcReadNowClientC.Msp430AdcClient.Msp430Adc12ConfAlertC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ConfUp" scoped="" ref="0x7f1d71f129e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7f1d72ee2ae0"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7f1d72ee2200"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7f1d71f116b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HumidityMetadata" ref="0x7f1d72967900" loc="49:/home/hades/tinyos-new/tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
      <component-ref qname="TestCM5000C.SensorHT"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HumidityMetadata" scoped="" ref="0x7f1d72967900"/></type-interface>
      <instance>
        <interfacedef-ref qname="DeviceMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="getSignificantBits" scoped="" ref="0x7f1d72967c80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Humidity" ref="0x7f1d72968240" loc="48:/home/hades/tinyos-new/tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
      <component-ref qname="TestCM5000C.SensorHT"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Humidity" scoped="" ref="0x7f1d72968240"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1d74a34520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1d72968e30"/>
        <function-ref name="readDone" scoped="" ref="0x7f1d72967300"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TemperatureMetadata" ref="0x7f1d72969aa0" loc="47:/home/hades/tinyos-new/tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
      <component-ref qname="TestCM5000C.SensorHT"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TemperatureMetadata" scoped="" ref="0x7f1d72969aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="DeviceMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="getSignificantBits" scoped="" ref="0x7f1d72969e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Temperature" ref="0x7f1d7296a310" loc="46:/home/hades/tinyos-new/tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
      <component-ref qname="TestCM5000C.SensorHT"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Temperature" scoped="" ref="0x7f1d7296a310"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1d74a34520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1d72969020"/>
        <function-ref name="readDone" scoped="" ref="0x7f1d729694a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Sht11Hum" ref="0x7f1d71f00610" loc="54:/home/hades/tinyos-new/tos/chips/sht11/SensirionSht11ReaderP.nc">
      <component-ref qname="TestCM5000C.SensorHT.SensirionSht11ReaderP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Sht11Hum" scoped="" ref="0x7f1d71f00610"/></type-interface>
      <instance>
        <interfacedef-ref qname="SensirionSht11"/>
      </instance>
      <interface-functions>
        <function-ref name="measureHumidityDone" scoped="" ref="0x7f1d71f00990"/>
        <function-ref name="readStatusReg" scoped="" ref="0x7f1d71f00b20"/>
        <function-ref name="measureHumidity" scoped="" ref="0x7f1d71f00cb0"/>
        <function-ref name="measureTemperature" scoped="" ref="0x7f1d71f00e40"/>
        <function-ref name="writeStatusReg" scoped="" ref="0x7f1d71eff020"/>
        <function-ref name="reset" scoped="" ref="0x7f1d71eff1b0"/>
        <function-ref name="writeStatusRegDone" scoped="" ref="0x7f1d71eff340"/>
        <function-ref name="readStatusRegDone" scoped="" ref="0x7f1d71eff4d0"/>
        <function-ref name="resetDone" scoped="" ref="0x7f1d71eff660"/>
        <function-ref name="measureTemperatureDone" scoped="" ref="0x7f1d71eff7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HumidityMetadata" ref="0x7f1d71f06900" loc="48:/home/hades/tinyos-new/tos/chips/sht11/SensirionSht11ReaderP.nc">
      <component-ref qname="TestCM5000C.SensorHT.SensirionSht11ReaderP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HumidityMetadata" scoped="" ref="0x7f1d71f06900"/></type-interface>
      <instance>
        <interfacedef-ref qname="DeviceMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="getSignificantBits" scoped="" ref="0x7f1d71f06c80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Humidity" ref="0x7f1d71f050a0" loc="49:/home/hades/tinyos-new/tos/chips/sht11/SensirionSht11ReaderP.nc">
      <component-ref qname="TestCM5000C.SensorHT.SensirionSht11ReaderP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Humidity" scoped="" ref="0x7f1d71f050a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1d74a34520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1d71f05c90"/>
        <function-ref name="readDone" scoped="" ref="0x7f1d71f04170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TemperatureMetadata" ref="0x7f1d71f08a50" loc="46:/home/hades/tinyos-new/tos/chips/sht11/SensirionSht11ReaderP.nc">
      <component-ref qname="TestCM5000C.SensorHT.SensirionSht11ReaderP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TemperatureMetadata" scoped="" ref="0x7f1d71f08a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="DeviceMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="getSignificantBits" scoped="" ref="0x7f1d71f08dd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TempResource" ref="0x7f1d71f04770" loc="51:/home/hades/tinyos-new/tos/chips/sht11/SensirionSht11ReaderP.nc">
      <component-ref qname="TestCM5000C.SensorHT.SensirionSht11ReaderP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TempResource" scoped="" ref="0x7f1d71f04770"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1d71f04af0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f1d71f04c80"/>
        <function-ref name="request" scoped="" ref="0x7f1d71f04e10"/>
        <function-ref name="granted" scoped="" ref="0x7f1d71f03020"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1d71f031b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Sht11Temp" ref="0x7f1d71f02160" loc="53:/home/hades/tinyos-new/tos/chips/sht11/SensirionSht11ReaderP.nc">
      <component-ref qname="TestCM5000C.SensorHT.SensirionSht11ReaderP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Sht11Temp" scoped="" ref="0x7f1d71f02160"/></type-interface>
      <instance>
        <interfacedef-ref qname="SensirionSht11"/>
      </instance>
      <interface-functions>
        <function-ref name="measureHumidityDone" scoped="" ref="0x7f1d71f024e0"/>
        <function-ref name="readStatusReg" scoped="" ref="0x7f1d71f02670"/>
        <function-ref name="measureHumidity" scoped="" ref="0x7f1d71f02800"/>
        <function-ref name="measureTemperature" scoped="" ref="0x7f1d71f02990"/>
        <function-ref name="writeStatusReg" scoped="" ref="0x7f1d71f02b20"/>
        <function-ref name="reset" scoped="" ref="0x7f1d71f02cb0"/>
        <function-ref name="writeStatusRegDone" scoped="" ref="0x7f1d71f02e40"/>
        <function-ref name="readStatusRegDone" scoped="" ref="0x7f1d71f00020"/>
        <function-ref name="resetDone" scoped="" ref="0x7f1d71f001b0"/>
        <function-ref name="measureTemperatureDone" scoped="" ref="0x7f1d71f00340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HumResource" ref="0x7f1d71f03480" loc="52:/home/hades/tinyos-new/tos/chips/sht11/SensirionSht11ReaderP.nc">
      <component-ref qname="TestCM5000C.SensorHT.SensirionSht11ReaderP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HumResource" scoped="" ref="0x7f1d71f03480"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1d71f03800"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f1d71f03990"/>
        <function-ref name="request" scoped="" ref="0x7f1d71f03b20"/>
        <function-ref name="granted" scoped="" ref="0x7f1d71f03cb0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1d71f03e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Temperature" ref="0x7f1d71f07220" loc="47:/home/hades/tinyos-new/tos/chips/sht11/SensirionSht11ReaderP.nc">
      <component-ref qname="TestCM5000C.SensorHT.SensirionSht11ReaderP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Temperature" scoped="" ref="0x7f1d71f07220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1d74a34520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1d71f07e10"/>
        <function-ref name="readDone" scoped="" ref="0x7f1d71f06300"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SensirionSht11" ref="0x7f1d72a812c0" loc="45:/home/hades/tinyos-new/tos/platforms/telosa/chips/sht11/HalSensirionSht11C.nc">
      <component-ref qname="HalSensirionSht11C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SensirionSht11" scoped="" ref="0x7f1d72a812c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SensirionSht11"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1d74a34160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="measureHumidityDone" scoped="" ref="0x7f1d72a81640"/>
        <function-ref name="readStatusReg" scoped="" ref="0x7f1d72a817d0"/>
        <function-ref name="measureHumidity" scoped="" ref="0x7f1d72a81960"/>
        <function-ref name="measureTemperature" scoped="" ref="0x7f1d72a81af0"/>
        <function-ref name="writeStatusReg" scoped="" ref="0x7f1d72a81c80"/>
        <function-ref name="reset" scoped="" ref="0x7f1d72a81e10"/>
        <function-ref name="writeStatusRegDone" scoped="" ref="0x7f1d72a80020"/>
        <function-ref name="readStatusRegDone" scoped="" ref="0x7f1d72a801b0"/>
        <function-ref name="resetDone" scoped="" ref="0x7f1d72a80340"/>
        <function-ref name="measureTemperatureDone" scoped="" ref="0x7f1d72a804d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f1d72a82020" loc="44:/home/hades/tinyos-new/tos/platforms/telosa/chips/sht11/HalSensirionSht11C.nc">
      <component-ref qname="HalSensirionSht11C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f1d72a82020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1d74a34160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1d72a823a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f1d72a82530"/>
        <function-ref name="request" scoped="" ref="0x7f1d72a826c0"/>
        <function-ref name="granted" scoped="" ref="0x7f1d72a82850"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1d72a829e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptDATA" ref="0x7f1d72a03de0" loc="58:/home/hades/tinyos-new/tos/chips/sht11/SensirionSht11LogicP.nc">
      <component-ref qname="HalSensirionSht11C.SensirionSht11LogicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptDATA" scoped="" ref="0x7f1d72a03de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1d72a02180"/>
        <function-ref name="disable" scoped="" ref="0x7f1d72a02310"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f1d72a024a0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f1d72a02630"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="readSensor" ref="0x7f1d729fbc60" loc="102:/home/hades/tinyos-new/tos/chips/sht11/SensirionSht11LogicP.nc">
      <component-ref qname="HalSensirionSht11C.SensirionSht11LogicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="readSensor" scoped="" ref="0x7f1d729fbc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f1d729fa020"/>
        <function-ref name="runTask" scoped="" ref="0x7f1d729fa1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalStatusDone" ref="0x7f1d729fb480" loc="103:/home/hades/tinyos-new/tos/chips/sht11/SensirionSht11LogicP.nc">
      <component-ref qname="HalSensirionSht11C.SensirionSht11LogicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="signalStatusDone" scoped="" ref="0x7f1d729fb480"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f1d729fb800"/>
        <function-ref name="runTask" scoped="" ref="0x7f1d729fb990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CLOCK" ref="0x7f1d72a04c50" loc="57:/home/hades/tinyos-new/tos/chips/sht11/SensirionSht11LogicP.nc">
      <component-ref qname="HalSensirionSht11C.SensirionSht11LogicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CLOCK" scoped="" ref="0x7f1d72a04c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1d72a03020"/>
        <function-ref name="isInput" scoped="" ref="0x7f1d72a031b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1d72a03340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1d72a034d0"/>
        <function-ref name="get" scoped="" ref="0x7f1d72a03660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1d72a037f0"/>
        <function-ref name="set" scoped="" ref="0x7f1d72a03980"/>
        <function-ref name="clr" scoped="" ref="0x7f1d72a03b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SensirionSht11" ref="0x7f1d72a06580" loc="54:/home/hades/tinyos-new/tos/chips/sht11/SensirionSht11LogicP.nc">
      <component-ref qname="HalSensirionSht11C.SensirionSht11LogicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SensirionSht11" scoped="" ref="0x7f1d72a06580"/></type-interface>
      <instance>
        <interfacedef-ref qname="SensirionSht11"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1d74a34160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="measureHumidityDone" scoped="" ref="0x7f1d72a06920"/>
        <function-ref name="readStatusReg" scoped="" ref="0x7f1d72a06ab0"/>
        <function-ref name="measureHumidity" scoped="" ref="0x7f1d72a06c40"/>
        <function-ref name="measureTemperature" scoped="" ref="0x7f1d72a06dd0"/>
        <function-ref name="writeStatusReg" scoped="" ref="0x7f1d72a05020"/>
        <function-ref name="reset" scoped="" ref="0x7f1d72a051b0"/>
        <function-ref name="writeStatusRegDone" scoped="" ref="0x7f1d72a05340"/>
        <function-ref name="readStatusRegDone" scoped="" ref="0x7f1d72a054d0"/>
        <function-ref name="resetDone" scoped="" ref="0x7f1d72a05660"/>
        <function-ref name="measureTemperatureDone" scoped="" ref="0x7f1d72a057f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DATA" ref="0x7f1d72a05ac0" loc="56:/home/hades/tinyos-new/tos/chips/sht11/SensirionSht11LogicP.nc">
      <component-ref qname="HalSensirionSht11C.SensirionSht11LogicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DATA" scoped="" ref="0x7f1d72a05ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1d72a05e40"/>
        <function-ref name="isInput" scoped="" ref="0x7f1d72a04020"/>
        <function-ref name="toggle" scoped="" ref="0x7f1d72a041b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1d72a04340"/>
        <function-ref name="get" scoped="" ref="0x7f1d72a044d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1d72a04660"/>
        <function-ref name="set" scoped="" ref="0x7f1d72a047f0"/>
        <function-ref name="clr" scoped="" ref="0x7f1d72a04980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f1d729fdd50" loc="62:/home/hades/tinyos-new/tos/chips/sht11/SensirionSht11LogicP.nc">
      <component-ref qname="HalSensirionSht11C.SensirionSht11LogicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f1d729fdd50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f1d729fc100"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f1d729fc290"/>
        <function-ref name="led1On" scoped="" ref="0x7f1d729fc420"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f1d729fc5b0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f1d729fc740"/>
        <function-ref name="get" scoped="" ref="0x7f1d729fc8d0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f1d729fca60"/>
        <function-ref name="led2On" scoped="" ref="0x7f1d729fb1b0"/>
        <function-ref name="set" scoped="" ref="0x7f1d729fcd80"/>
        <function-ref name="led2Off" scoped="" ref="0x7f1d729fcbf0"/>
        <function-ref name="led0On" scoped="" ref="0x7f1d729fb020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f1d72a029e0" loc="60:/home/hades/tinyos-new/tos/chips/sht11/SensirionSht11LogicP.nc">
      <component-ref qname="HalSensirionSht11C.SensirionSht11LogicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f1d72a029e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1d740c1460"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1d740c17d0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f1d729fd020"/>
        <function-ref name="fired" scoped="" ref="0x7f1d72a00510"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f1d729fe300"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f1d72a00e10"/>
        <function-ref name="getdt" scoped="" ref="0x7f1d729fd920"/>
        <function-ref name="gett0" scoped="" ref="0x7f1d729fd4a0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f1d72a00990"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f1d72a01670"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f1d729fe910"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f1d72a01b40"/>
        <function-ref name="stop" scoped="" ref="0x7f1d72a00090"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptDATA" ref="0x7f1d729f0020" loc="47:/home/hades/tinyos-new/tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <component-ref qname="HplSensirionSht11C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptDATA" scoped="" ref="0x7f1d729f0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1d729f03a0"/>
        <function-ref name="disable" scoped="" ref="0x7f1d729f0530"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f1d729f06c0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f1d729f0850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SCK" ref="0x7f1d729f2cd0" loc="46:/home/hades/tinyos-new/tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <component-ref qname="HplSensirionSht11C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SCK" scoped="" ref="0x7f1d729f2cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1d729f10a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1d729f1230"/>
        <function-ref name="toggle" scoped="" ref="0x7f1d729f13c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1d729f1550"/>
        <function-ref name="get" scoped="" ref="0x7f1d729f16e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1d729f1870"/>
        <function-ref name="set" scoped="" ref="0x7f1d729f1a00"/>
        <function-ref name="clr" scoped="" ref="0x7f1d729f1b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DATA" ref="0x7f1d729f49c0" loc="45:/home/hades/tinyos-new/tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <component-ref qname="HplSensirionSht11C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DATA" scoped="" ref="0x7f1d729f49c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1d729f4d40"/>
        <function-ref name="isInput" scoped="" ref="0x7f1d729f2020"/>
        <function-ref name="toggle" scoped="" ref="0x7f1d729f21b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1d729f2340"/>
        <function-ref name="get" scoped="" ref="0x7f1d729f24d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1d729f2660"/>
        <function-ref name="set" scoped="" ref="0x7f1d729f27f0"/>
        <function-ref name="clr" scoped="" ref="0x7f1d729f2980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f1d729f7b20" loc="44:/home/hades/tinyos-new/tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <component-ref qname="HplSensirionSht11C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f1d729f7b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1d74a34160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1d729f4020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f1d729f41b0"/>
        <function-ref name="request" scoped="" ref="0x7f1d729f4340"/>
        <function-ref name="granted" scoped="" ref="0x7f1d729f44d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1d729f4660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f1d729eede0" loc="44:/home/hades/tinyos-new/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplSensirionSht11C.DATAM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f1d729eede0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1d729ed180"/>
        <function-ref name="isInput" scoped="" ref="0x7f1d729ed310"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1d729ed4a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1d729ed630"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1d729ed7c0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1d729ed950"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1d729edae0"/>
        <function-ref name="get" scoped="" ref="0x7f1d729edc70"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1d729ede00"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1d729ec020"/>
        <function-ref name="set" scoped="" ref="0x7f1d729ec1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1d729ec340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1d729ec4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1d729ec760"/>
        <function-ref name="clr" scoped="" ref="0x7f1d729ec8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f1d729efb70" loc="43:/home/hades/tinyos-new/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplSensirionSht11C.DATAM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f1d729efb70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1d729ee020"/>
        <function-ref name="isInput" scoped="" ref="0x7f1d729ee1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1d729ee340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1d729ee4d0"/>
        <function-ref name="get" scoped="" ref="0x7f1d729ee660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1d729ee7f0"/>
        <function-ref name="set" scoped="" ref="0x7f1d729ee980"/>
        <function-ref name="clr" scoped="" ref="0x7f1d729eeb10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f1d729e9930" loc="44:/home/hades/tinyos-new/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplSensirionSht11C.SCKM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f1d729e9930"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1d729e9cb0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1d729e9e40"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1d729e8020"/>
        <function-ref name="toggle" scoped="" ref="0x7f1d729e81b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1d729e8340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1d729e84d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1d729e8660"/>
        <function-ref name="get" scoped="" ref="0x7f1d729e87f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1d729e8980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1d729e8b10"/>
        <function-ref name="set" scoped="" ref="0x7f1d729e8ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1d729e8e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1d729e7020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1d729e72b0"/>
        <function-ref name="clr" scoped="" ref="0x7f1d729e7440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f1d729ea690" loc="43:/home/hades/tinyos-new/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplSensirionSht11C.SCKM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f1d729ea690"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1d729eaa10"/>
        <function-ref name="isInput" scoped="" ref="0x7f1d729eaba0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1d729ead30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1d729e9020"/>
        <function-ref name="get" scoped="" ref="0x7f1d729e91b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1d729e9340"/>
        <function-ref name="set" scoped="" ref="0x7f1d729e94d0"/>
        <function-ref name="clr" scoped="" ref="0x7f1d729e9660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f1d729e4480" loc="44:/home/hades/tinyos-new/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplSensirionSht11C.PWRM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f1d729e4480"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1d729e4800"/>
        <function-ref name="isInput" scoped="" ref="0x7f1d729e4990"/>
        <function-ref name="setResistor" scoped="" ref="0x7f1d729e4b20"/>
        <function-ref name="toggle" scoped="" ref="0x7f1d729e4cb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1d729e4e40"/>
        <function-ref name="getResistor" scoped="" ref="0x7f1d729e3020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1d729e31b0"/>
        <function-ref name="get" scoped="" ref="0x7f1d729e3340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f1d729e34d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f1d729e3660"/>
        <function-ref name="set" scoped="" ref="0x7f1d729e37f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f1d729e3980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f1d729e3b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f1d729e3da0"/>
        <function-ref name="clr" scoped="" ref="0x7f1d729e2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f1d729e51b0" loc="43:/home/hades/tinyos-new/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplSensirionSht11C.PWRM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f1d729e51b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1d729e5530"/>
        <function-ref name="isInput" scoped="" ref="0x7f1d729e56c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1d729e5850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1d729e59e0"/>
        <function-ref name="get" scoped="" ref="0x7f1d729e5b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1d729e5d00"/>
        <function-ref name="set" scoped="" ref="0x7f1d729e4020"/>
        <function-ref name="clr" scoped="" ref="0x7f1d729e41b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f1d729dfa90" loc="43:/home/hades/tinyos-new/tos/platforms/telosa/chips/sht11/HplSensirionSht11P.nc">
      <component-ref qname="HplSensirionSht11P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f1d729dfa90"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f1d729dfe10"/>
        <function-ref name="stopDone" scoped="" ref="0x7f1d729dc020"/>
        <function-ref name="start" scoped="" ref="0x7f1d729dc1b0"/>
        <function-ref name="stop" scoped="" ref="0x7f1d729dc340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopTask" ref="0x7f1d729d3ba0" loc="50:/home/hades/tinyos-new/tos/platforms/telosa/chips/sht11/HplSensirionSht11P.nc">
      <component-ref qname="HplSensirionSht11P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="stopTask" scoped="" ref="0x7f1d729d3ba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f1d729d2020"/>
        <function-ref name="runTask" scoped="" ref="0x7f1d729d21b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SCK" ref="0x7f1d729d4020" loc="47:/home/hades/tinyos-new/tos/platforms/telosa/chips/sht11/HplSensirionSht11P.nc">
      <component-ref qname="HplSensirionSht11P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SCK" scoped="" ref="0x7f1d729d4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1d729d43a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1d729d4530"/>
        <function-ref name="toggle" scoped="" ref="0x7f1d729d46c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1d729d4850"/>
        <function-ref name="get" scoped="" ref="0x7f1d729d49e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1d729d4b70"/>
        <function-ref name="set" scoped="" ref="0x7f1d729d4d00"/>
        <function-ref name="clr" scoped="" ref="0x7f1d729d3020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PWR" ref="0x7f1d729d8a80" loc="45:/home/hades/tinyos-new/tos/platforms/telosa/chips/sht11/HplSensirionSht11P.nc">
      <component-ref qname="HplSensirionSht11P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PWR" scoped="" ref="0x7f1d729d8a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1d729d8e00"/>
        <function-ref name="isInput" scoped="" ref="0x7f1d729d6020"/>
        <function-ref name="toggle" scoped="" ref="0x7f1d729d61b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1d729d6340"/>
        <function-ref name="get" scoped="" ref="0x7f1d729d64d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1d729d6660"/>
        <function-ref name="set" scoped="" ref="0x7f1d729d67f0"/>
        <function-ref name="clr" scoped="" ref="0x7f1d729d6980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DATA" ref="0x7f1d729d6ce0" loc="46:/home/hades/tinyos-new/tos/platforms/telosa/chips/sht11/HplSensirionSht11P.nc">
      <component-ref qname="HplSensirionSht11P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DATA" scoped="" ref="0x7f1d729d6ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1d729d50a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1d729d5230"/>
        <function-ref name="toggle" scoped="" ref="0x7f1d729d53c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1d729d5550"/>
        <function-ref name="get" scoped="" ref="0x7f1d729d56e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1d729d5870"/>
        <function-ref name="set" scoped="" ref="0x7f1d729d5a00"/>
        <function-ref name="clr" scoped="" ref="0x7f1d729d5b90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f1d729dc770" loc="44:/home/hades/tinyos-new/tos/platforms/telosa/chips/sht11/HplSensirionSht11P.nc">
      <component-ref qname="HplSensirionSht11P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f1d729dc770"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1d740c1460"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1d740c17d0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f1d729d9c40"/>
        <function-ref name="fired" scoped="" ref="0x7f1d729da1e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f1d729d9020"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f1d729daae0"/>
        <function-ref name="getdt" scoped="" ref="0x7f1d729d8590"/>
        <function-ref name="gett0" scoped="" ref="0x7f1d729d8110"/>
        <function-ref name="isRunning" scoped="" ref="0x7f1d729da660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f1d729db390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f1d729d9630"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f1d729db860"/>
        <function-ref name="stop" scoped="" ref="0x7f1d729dbd30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f1d729c8c10" loc="45:/home/hades/tinyos-new/tos/system/TimerMilliC.nc">
      <component-ref qname="HplSensirionSht11C.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f1d729c8c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1d740c1460"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1d740c17d0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f1d729c4110"/>
        <function-ref name="fired" scoped="" ref="0x7f1d729c66a0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f1d729c54a0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f1d729c5020"/>
        <function-ref name="getdt" scoped="" ref="0x7f1d729c4a10"/>
        <function-ref name="gett0" scoped="" ref="0x7f1d729c4590"/>
        <function-ref name="isRunning" scoped="" ref="0x7f1d729c6b20"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f1d729c7860"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f1d729c5ab0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f1d729c7d30"/>
        <function-ref name="stop" scoped="" ref="0x7f1d729c6220"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplInterrupt" ref="0x7f1d729c07a0" loc="46:/home/hades/tinyos-new/tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplSensirionSht11C.InterruptDATAC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplInterrupt" scoped="" ref="0x7f1d729c07a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1d729c0b20"/>
        <function-ref name="fired" scoped="" ref="0x7f1d729c0cb0"/>
        <function-ref name="disable" scoped="" ref="0x7f1d729c0e40"/>
        <function-ref name="edge" scoped="" ref="0x7f1d729bf020"/>
        <function-ref name="enable" scoped="" ref="0x7f1d729bf1b0"/>
        <function-ref name="getValue" scoped="" ref="0x7f1d729bf340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x7f1d729c1b60" loc="45:/home/hades/tinyos-new/tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplSensirionSht11C.InterruptDATAC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupt" scoped="" ref="0x7f1d729c1b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1d729c0020"/>
        <function-ref name="disable" scoped="" ref="0x7f1d729c01b0"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f1d729c0340"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f1d729c04d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f1d729bca60" loc="92:/home/hades/tinyos-new/tos/system/FcfsArbiterC.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f1d729bca60"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1d74a34160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f1d729bce00"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f1d729bb020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f1d729ba770" loc="96:/home/hades/tinyos-new/tos/system/FcfsArbiterC.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f1d729ba770"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1d74a34160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f1d729bab10"/>
        <function-ref name="configure" scoped="" ref="0x7f1d729baca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7f1d729bb270" loc="93:/home/hades/tinyos-new/tos/system/FcfsArbiterC.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f1d729bb270"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1d729bb5f0"/>
        <function-ref name="requested" scoped="" ref="0x7f1d729bb780"/>
        <function-ref name="granted" scoped="" ref="0x7f1d729bb910"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1d729bbaa0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f1d729bbc30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f1d729bdca0" loc="91:/home/hades/tinyos-new/tos/system/FcfsArbiterC.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f1d729bdca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1d74a34160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1d729bc0a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f1d729bc230"/>
        <function-ref name="request" scoped="" ref="0x7f1d729bc3c0"/>
        <function-ref name="granted" scoped="" ref="0x7f1d729bc550"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1d729bc6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f1d729bbe80" loc="94:/home/hades/tinyos-new/tos/system/FcfsArbiterC.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f1d729bbe80"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f1d729ba220"/>
        <function-ref name="userId" scoped="" ref="0x7f1d729ba3b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f1d71e761b0" loc="44:/home/hades/tinyos-new/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f1d71e761b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1d71e76530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7f1d71e767c0" loc="45:/home/hades/tinyos-new/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FcfsQueue" scoped="" ref="0x7f1d71e767c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f1d71e76b40"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f1d71e76cd0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f1d71e76e60"/>
        <function-ref name="dequeue" scoped="" ref="0x7f1d71e75020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f1d71e73850" loc="55:/home/hades/tinyos-new/tos/system/ArbiterP.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f1d71e73850"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1d74a34160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f1d71e73bf0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f1d71e73d80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f1d71e70590" loc="60:/home/hades/tinyos-new/tos/system/ArbiterP.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f1d71e70590"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1d74a34160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f1d71e70930"/>
        <function-ref name="configure" scoped="" ref="0x7f1d71e70ac0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7f1d71e70d50" loc="61:/home/hades/tinyos-new/tos/system/ArbiterP.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x7f1d71e70d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f1d71e6f100"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f1d71e6f290"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f1d71e6f420"/>
        <function-ref name="dequeue" scoped="" ref="0x7f1d71e6f5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7f1d71e71020" loc="56:/home/hades/tinyos-new/tos/system/ArbiterP.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f1d71e71020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1d71e713a0"/>
        <function-ref name="requested" scoped="" ref="0x7f1d71e71530"/>
        <function-ref name="granted" scoped="" ref="0x7f1d71e716c0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1d71e71850"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f1d71e719e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f1d71e6f800" loc="62:/home/hades/tinyos-new/tos/system/ArbiterP.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f1d71e6f800"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f1d71e6fb80"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f1d71e6fd10"/>
        <function-ref name="led1On" scoped="" ref="0x7f1d71e6e020"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f1d71e6e1b0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f1d71e6e340"/>
        <function-ref name="get" scoped="" ref="0x7f1d71e6e4d0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f1d71e6e660"/>
        <function-ref name="led0On" scoped="" ref="0x7f1d71e6eca0"/>
        <function-ref name="set" scoped="" ref="0x7f1d71e6e980"/>
        <function-ref name="led2On" scoped="" ref="0x7f1d71e6e7f0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f1d71e6eb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f1d71e74970" loc="54:/home/hades/tinyos-new/tos/system/ArbiterP.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f1d71e74970"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1d74a34160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1d71e74d10"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f1d71e73020"/>
        <function-ref name="request" scoped="" ref="0x7f1d71e731b0"/>
        <function-ref name="granted" scoped="" ref="0x7f1d71e73340"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1d71e734d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f1d71e71c30" loc="57:/home/hades/tinyos-new/tos/system/ArbiterP.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f1d71e71c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f1d71e70020"/>
        <function-ref name="userId" scoped="" ref="0x7f1d71e701b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7f1d71e6d020" loc="75:/home/hades/tinyos-new/tos/system/ArbiterP.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantedTask" scoped="" ref="0x7f1d71e6d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f1d71e6d3a0"/>
        <function-ref name="runTask" scoped="" ref="0x7f1d71e6d530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControl" ref="0x7f1d729b5280" loc="69:/home/hades/tinyos-new/tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f1d729b5280"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f1d729b5600"/>
        <function-ref name="stopDone" scoped="" ref="0x7f1d729b5790"/>
        <function-ref name="start" scoped="" ref="0x7f1d729b5920"/>
        <function-ref name="stop" scoped="" ref="0x7f1d729b5ab0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7f1d729b5d00" loc="71:/home/hades/tinyos-new/tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f1d729b5d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7f1d729890a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x7f1d729892f0" loc="72:/home/hades/tinyos-new/tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f1d729892f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1d72989670"/>
        <function-ref name="requested" scoped="" ref="0x7f1d72989800"/>
        <function-ref name="granted" scoped="" ref="0x7f1d72989990"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1d72989b20"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f1d72989cb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7f1d72987020" loc="73:/home/hades/tinyos-new/tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f1d72987020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f1d729873a0"/>
        <function-ref name="userId" scoped="" ref="0x7f1d72987530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControl" ref="0x7f1d71e3c0f0" loc="61:/home/hades/tinyos-new/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f1d71e3c0f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f1d71e3c470"/>
        <function-ref name="stopDone" scoped="" ref="0x7f1d71e3c600"/>
        <function-ref name="start" scoped="" ref="0x7f1d71e3c790"/>
        <function-ref name="stop" scoped="" ref="0x7f1d71e3c920"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7f1d71e3cb70" loc="63:/home/hades/tinyos-new/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f1d71e3cb70"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7f1d71e3b020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopTask" ref="0x7f1d71e3a680" loc="78:/home/hades/tinyos-new/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="stopTask" scoped="" ref="0x7f1d71e3a680"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f1d71e3aa00"/>
        <function-ref name="runTask" scoped="" ref="0x7f1d71e3ab90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x7f1d71e3b270" loc="64:/home/hades/tinyos-new/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f1d71e3b270"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1d71e3b5f0"/>
        <function-ref name="requested" scoped="" ref="0x7f1d71e3b780"/>
        <function-ref name="granted" scoped="" ref="0x7f1d71e3b910"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1d71e3baa0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f1d71e3bc30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startTask" ref="0x7f1d71e3ae60" loc="73:/home/hades/tinyos-new/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="startTask" scoped="" ref="0x7f1d71e3ae60"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f1d71e39210"/>
        <function-ref name="runTask" scoped="" ref="0x7f1d71e393a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StdControl" ref="0x7f1d71e3d970" loc="60:/home/hades/tinyos-new/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f1d71e3d970"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f1d71e3dcf0"/>
        <function-ref name="stop" scoped="" ref="0x7f1d71e3de80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7f1d71e3be80" loc="65:/home/hades/tinyos-new/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f1d71e3be80"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f1d71e3a220"/>
        <function-ref name="userId" scoped="" ref="0x7f1d71e3a3b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f1d7297b1e0" loc="45:/home/hades/tinyos-new/tos/system/TimerMilliC.nc">
      <component-ref qname="HalSensirionSht11C.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f1d7297b1e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1d740c1460"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1d740c17d0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f1d72977630"/>
        <function-ref name="fired" scoped="" ref="0x7f1d7297ac30"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f1d729799d0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f1d72979550"/>
        <function-ref name="getdt" scoped="" ref="0x7f1d72976020"/>
        <function-ref name="gett0" scoped="" ref="0x7f1d72977ab0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f1d729790d0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f1d7297bdd0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f1d72977020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f1d7297a2e0"/>
        <function-ref name="stop" scoped="" ref="0x7f1d7297a7b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7f1d72963750" loc="42:/home/hades/tinyos-new/tos/platforms/telosa/chips/s1087/HamamatsuS1087ParC.nc">
      <component-ref qname="TestCM5000C.SensorPhoto"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Read" scoped="" ref="0x7f1d72963750"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1d74a34520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1d72944390"/>
        <function-ref name="readDone" scoped="" ref="0x7f1d72944810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadStream" ref="0x7f1d72943020" loc="43:/home/hades/tinyos-new/tos/platforms/telosa/chips/s1087/HamamatsuS1087ParC.nc">
      <component-ref qname="TestCM5000C.SensorPhoto"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadStream" scoped="" ref="0x7f1d72943020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadStream"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1d74a34520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="bufferDone" scoped="" ref="0x7f1d72942ab0"/>
        <function-ref name="postBuffer" scoped="" ref="0x7f1d72943c10"/>
        <function-ref name="read" scoped="" ref="0x7f1d729425e0"/>
        <function-ref name="readDone" scoped="" ref="0x7f1d729405a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DeviceMetadata" ref="0x7f1d72963020" loc="41:/home/hades/tinyos-new/tos/platforms/telosa/chips/s1087/HamamatsuS1087ParC.nc">
      <component-ref qname="TestCM5000C.SensorPhoto"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DeviceMetadata" scoped="" ref="0x7f1d72963020"/></type-interface>
      <instance>
        <interfacedef-ref qname="DeviceMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="getSignificantBits" scoped="" ref="0x7f1d729633a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7f1d71e23bd0" loc="48:/home/hades/tinyos-new/tos/chips/msp430/adc12/AdcReadClientC.nc">
      <component-ref qname="TestCM5000C.SensorPhoto.AdcReadClientC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Read" scoped="" ref="0x7f1d71e23bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1d74a34520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1d71e22860"/>
        <function-ref name="readDone" scoped="" ref="0x7f1d71e22ce0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcConfigure" ref="0x7f1d71e214a0" loc="49:/home/hades/tinyos-new/tos/chips/msp430/adc12/AdcReadClientC.nc">
      <component-ref qname="TestCM5000C.SensorPhoto.AdcReadClientC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AdcConfigure" scoped="" ref="0x7f1d71e214a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7f1d72ee2ae0"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7f1d72ee2200"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7f1d71e1f110"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Adc12MultiChannel" ref="0x7f1d71e14720" loc="48:/home/hades/tinyos-new/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="TestCM5000C.SensorPhoto.AdcReadClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Adc12MultiChannel" scoped="" ref="0x7f1d71e14720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12MultiChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7f1d71e14aa0"/>
        <function-ref name="configure" scoped="" ref="0x7f1d71e14c30"/>
        <function-ref name="dataReady" scoped="" ref="0x7f1d71e14dc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Adc12SingleChannel" ref="0x7f1d71e15730" loc="47:/home/hades/tinyos-new/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="TestCM5000C.SensorPhoto.AdcReadClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0x7f1d71e15730"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7f1d71e15ab0"/>
        <function-ref name="configureSingle" scoped="" ref="0x7f1d71e15c40"/>
        <function-ref name="configureSingleRepeat" scoped="" ref="0x7f1d71e15dd0"/>
        <function-ref name="configureMultipleRepeat" scoped="" ref="0x7f1d71e14020"/>
        <function-ref name="multipleDataReady" scoped="" ref="0x7f1d71e141b0"/>
        <function-ref name="configureMultiple" scoped="" ref="0x7f1d71e14340"/>
        <function-ref name="singleDataReady" scoped="" ref="0x7f1d71e144d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Adc12Overflow" ref="0x7f1d71e13060" loc="49:/home/hades/tinyos-new/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="TestCM5000C.SensorPhoto.AdcReadClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Adc12Overflow" scoped="" ref="0x7f1d71e13060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12Overflow"/>
      </instance>
      <interface-functions>
        <function-ref name="memOverflow" scoped="" ref="0x7f1d71e133e0"/>
        <function-ref name="conversionTimeOverflow" scoped="" ref="0x7f1d71e13570"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcConfigure" ref="0x7f1d71e139a0" loc="51:/home/hades/tinyos-new/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="TestCM5000C.SensorPhoto.AdcReadClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AdcConfigure" scoped="" ref="0x7f1d71e139a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7f1d72ee2ae0"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7f1d72ee2200"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7f1d71e11600"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f1d71e16af0" loc="46:/home/hades/tinyos-new/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="TestCM5000C.SensorPhoto.AdcReadClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f1d71e16af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1d71e16e70"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f1d71e15030"/>
        <function-ref name="request" scoped="" ref="0x7f1d71e151c0"/>
        <function-ref name="granted" scoped="" ref="0x7f1d71e15350"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1d71e154e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ConfSub" ref="0x7f1d71e06dc0" loc="44:/home/hades/tinyos-new/tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
      <component-ref qname="TestCM5000C.SensorPhoto.AdcReadClientC.Msp430AdcClient.Msp430Adc12ConfAlertC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ConfSub" scoped="" ref="0x7f1d71e06dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7f1d72ee2ae0"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7f1d72ee2200"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7f1d71e04ac0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ConfUp" ref="0x7f1d71e03120" loc="45:/home/hades/tinyos-new/tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
      <component-ref qname="TestCM5000C.SensorPhoto.AdcReadClientC.Msp430AdcClient.Msp430Adc12ConfAlertC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ConfUp" scoped="" ref="0x7f1d71e03120"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7f1d72ee2ae0"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7f1d72ee2200"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7f1d71e03d50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcConfigure" ref="0x7f1d71e1b5c0" loc="49:/home/hades/tinyos-new/tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
      <component-ref qname="TestCM5000C.SensorPhoto.AdcReadStreamClientC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AdcConfigure" scoped="" ref="0x7f1d71e1b5c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7f1d72ee2ae0"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7f1d72ee2200"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7f1d71e19240"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadStream" ref="0x7f1d71e1e840" loc="48:/home/hades/tinyos-new/tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
      <component-ref qname="TestCM5000C.SensorPhoto.AdcReadStreamClientC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadStream" scoped="" ref="0x7f1d71e1e840"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadStream"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1d74a34520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="bufferDone" scoped="" ref="0x7f1d71e1c340"/>
        <function-ref name="postBuffer" scoped="" ref="0x7f1d71e1d480"/>
        <function-ref name="read" scoped="" ref="0x7f1d71e1ddf0"/>
        <function-ref name="readDone" scoped="" ref="0x7f1d71e1cdf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Adc12MultiChannel" ref="0x7f1d71df8d70" loc="48:/home/hades/tinyos-new/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="TestCM5000C.SensorPhoto.AdcReadStreamClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Adc12MultiChannel" scoped="" ref="0x7f1d71df8d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12MultiChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7f1d71df7180"/>
        <function-ref name="configure" scoped="" ref="0x7f1d71df7310"/>
        <function-ref name="dataReady" scoped="" ref="0x7f1d71df74a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Adc12SingleChannel" ref="0x7f1d71df9e10" loc="47:/home/hades/tinyos-new/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="TestCM5000C.SensorPhoto.AdcReadStreamClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0x7f1d71df9e10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7f1d71df81c0"/>
        <function-ref name="configureSingle" scoped="" ref="0x7f1d71df8350"/>
        <function-ref name="configureSingleRepeat" scoped="" ref="0x7f1d71df84e0"/>
        <function-ref name="configureMultipleRepeat" scoped="" ref="0x7f1d71df8670"/>
        <function-ref name="multipleDataReady" scoped="" ref="0x7f1d71df8800"/>
        <function-ref name="configureMultiple" scoped="" ref="0x7f1d71df8990"/>
        <function-ref name="singleDataReady" scoped="" ref="0x7f1d71df8b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Adc12Overflow" ref="0x7f1d71df76f0" loc="49:/home/hades/tinyos-new/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="TestCM5000C.SensorPhoto.AdcReadStreamClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Adc12Overflow" scoped="" ref="0x7f1d71df76f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12Overflow"/>
      </instance>
      <interface-functions>
        <function-ref name="memOverflow" scoped="" ref="0x7f1d71df7a70"/>
        <function-ref name="conversionTimeOverflow" scoped="" ref="0x7f1d71df7c00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcConfigure" ref="0x7f1d71df6060" loc="51:/home/hades/tinyos-new/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="TestCM5000C.SensorPhoto.AdcReadStreamClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AdcConfigure" scoped="" ref="0x7f1d71df6060"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7f1d72ee2ae0"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7f1d72ee2200"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7f1d71df6c90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f1d71df9200" loc="46:/home/hades/tinyos-new/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="TestCM5000C.SensorPhoto.AdcReadStreamClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f1d71df9200"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1d71df9580"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f1d71df9710"/>
        <function-ref name="request" scoped="" ref="0x7f1d71df98a0"/>
        <function-ref name="granted" scoped="" ref="0x7f1d71df9a30"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1d71df9bc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ConfSub" ref="0x7f1d71de9c60" loc="44:/home/hades/tinyos-new/tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
      <component-ref qname="TestCM5000C.SensorPhoto.AdcReadStreamClientC.Msp430AdcClient.Msp430Adc12ConfAlertC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ConfSub" scoped="" ref="0x7f1d71de9c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7f1d72ee2ae0"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7f1d72ee2200"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7f1d71de88e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ConfUp" ref="0x7f1d71de6020" loc="45:/home/hades/tinyos-new/tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
      <component-ref qname="TestCM5000C.SensorPhoto.AdcReadStreamClientC.Msp430AdcClient.Msp430Adc12ConfAlertC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ConfUp" scoped="" ref="0x7f1d71de6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7f1d72ee2ae0"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7f1d72ee2200"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7f1d71de6c50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AdcConfigure" ref="0x7f1d7294e300" loc="44:/home/hades/tinyos-new/tos/platforms/telosa/chips/s1087/HamamatsuS1087ParP.nc">
      <component-ref qname="HamamatsuS1087ParP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AdcConfigure" scoped="" ref="0x7f1d7294e300"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7f1d72ee2ae0"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7f1d72ee2200"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7f1d7294a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DeviceMetadata" ref="0x7f1d729518b0" loc="43:/home/hades/tinyos-new/tos/platforms/telosa/chips/s1087/HamamatsuS1087ParP.nc">
      <component-ref qname="HamamatsuS1087ParP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DeviceMetadata" scoped="" ref="0x7f1d729518b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="DeviceMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="getSignificantBits" scoped="" ref="0x7f1d72951c30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7f1d7293d990" loc="42:/home/hades/tinyos-new/tos/platforms/telosa/chips/s10871/HamamatsuS10871TsrC.nc">
      <component-ref qname="TestCM5000C.SensorTotal"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Read" scoped="" ref="0x7f1d7293d990"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1d74a34520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1d729215a0"/>
        <function-ref name="readDone" scoped="" ref="0x7f1d72921a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadStream" ref="0x7f1d7291f140" loc="43:/home/hades/tinyos-new/tos/platforms/telosa/chips/s10871/HamamatsuS10871TsrC.nc">
      <component-ref qname="TestCM5000C.SensorTotal"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadStream" scoped="" ref="0x7f1d7291f140"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadStream"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1d74a34520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="bufferDone" scoped="" ref="0x7f1d7291eba0"/>
        <function-ref name="postBuffer" scoped="" ref="0x7f1d7291fd30"/>
        <function-ref name="read" scoped="" ref="0x7f1d7291e6d0"/>
        <function-ref name="readDone" scoped="" ref="0x7f1d7291d690"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DeviceMetadata" ref="0x7f1d7293d260" loc="41:/home/hades/tinyos-new/tos/platforms/telosa/chips/s10871/HamamatsuS10871TsrC.nc">
      <component-ref qname="TestCM5000C.SensorTotal"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DeviceMetadata" scoped="" ref="0x7f1d7293d260"/></type-interface>
      <instance>
        <interfacedef-ref qname="DeviceMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="getSignificantBits" scoped="" ref="0x7f1d7293d5e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7f1d71ddd200" loc="48:/home/hades/tinyos-new/tos/chips/msp430/adc12/AdcReadClientC.nc">
      <component-ref qname="TestCM5000C.SensorTotal.AdcReadClientC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Read" scoped="" ref="0x7f1d71ddd200"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1d74a34520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1d71ddddf0"/>
        <function-ref name="readDone" scoped="" ref="0x7f1d71ddb2a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcConfigure" ref="0x7f1d71ddba00" loc="49:/home/hades/tinyos-new/tos/chips/msp430/adc12/AdcReadClientC.nc">
      <component-ref qname="TestCM5000C.SensorTotal.AdcReadClientC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AdcConfigure" scoped="" ref="0x7f1d71ddba00"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7f1d72ee2ae0"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7f1d72ee2200"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7f1d71dda6b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Adc12MultiChannel" ref="0x7f1d71dcec50" loc="48:/home/hades/tinyos-new/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="TestCM5000C.SensorTotal.AdcReadClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Adc12MultiChannel" scoped="" ref="0x7f1d71dcec50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12MultiChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7f1d71dcd020"/>
        <function-ref name="configure" scoped="" ref="0x7f1d71dcd1b0"/>
        <function-ref name="dataReady" scoped="" ref="0x7f1d71dcd340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Adc12SingleChannel" ref="0x7f1d71dcfc90" loc="47:/home/hades/tinyos-new/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="TestCM5000C.SensorTotal.AdcReadClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0x7f1d71dcfc90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7f1d71dce0a0"/>
        <function-ref name="configureSingle" scoped="" ref="0x7f1d71dce230"/>
        <function-ref name="configureSingleRepeat" scoped="" ref="0x7f1d71dce3c0"/>
        <function-ref name="configureMultipleRepeat" scoped="" ref="0x7f1d71dce550"/>
        <function-ref name="multipleDataReady" scoped="" ref="0x7f1d71dce6e0"/>
        <function-ref name="configureMultiple" scoped="" ref="0x7f1d71dce870"/>
        <function-ref name="singleDataReady" scoped="" ref="0x7f1d71dcea00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Adc12Overflow" ref="0x7f1d71dcd590" loc="49:/home/hades/tinyos-new/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="TestCM5000C.SensorTotal.AdcReadClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Adc12Overflow" scoped="" ref="0x7f1d71dcd590"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12Overflow"/>
      </instance>
      <interface-functions>
        <function-ref name="memOverflow" scoped="" ref="0x7f1d71dcd910"/>
        <function-ref name="conversionTimeOverflow" scoped="" ref="0x7f1d71dcdaa0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcConfigure" ref="0x7f1d71dcc020" loc="51:/home/hades/tinyos-new/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="TestCM5000C.SensorTotal.AdcReadClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AdcConfigure" scoped="" ref="0x7f1d71dcc020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7f1d72ee2ae0"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7f1d72ee2200"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7f1d71dccc50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f1d71dcf080" loc="46:/home/hades/tinyos-new/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="TestCM5000C.SensorTotal.AdcReadClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f1d71dcf080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1d71dcf400"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f1d71dcf590"/>
        <function-ref name="request" scoped="" ref="0x7f1d71dcf720"/>
        <function-ref name="granted" scoped="" ref="0x7f1d71dcf8b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1d71dcfa40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ConfSub" ref="0x7f1d71dbf3c0" loc="44:/home/hades/tinyos-new/tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
      <component-ref qname="TestCM5000C.SensorTotal.AdcReadClientC.Msp430AdcClient.Msp430Adc12ConfAlertC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ConfSub" scoped="" ref="0x7f1d71dbf3c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7f1d72ee2ae0"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7f1d72ee2200"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7f1d71dbe020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ConfUp" ref="0x7f1d71dbe630" loc="45:/home/hades/tinyos-new/tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
      <component-ref qname="TestCM5000C.SensorTotal.AdcReadClientC.Msp430AdcClient.Msp430Adc12ConfAlertC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ConfUp" scoped="" ref="0x7f1d71dbe630"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7f1d72ee2ae0"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7f1d72ee2200"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7f1d71dbc3d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcConfigure" ref="0x7f1d71dd5ac0" loc="49:/home/hades/tinyos-new/tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
      <component-ref qname="TestCM5000C.SensorTotal.AdcReadStreamClientC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AdcConfigure" scoped="" ref="0x7f1d71dd5ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7f1d72ee2ae0"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7f1d72ee2200"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7f1d71dd4790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadStream" ref="0x7f1d71dd9d90" loc="48:/home/hades/tinyos-new/tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
      <component-ref qname="TestCM5000C.SensorTotal.AdcReadStreamClientC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadStream" scoped="" ref="0x7f1d71dd9d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadStream"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1d74a34520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="bufferDone" scoped="" ref="0x7f1d71dd6830"/>
        <function-ref name="postBuffer" scoped="" ref="0x7f1d71dd89a0"/>
        <function-ref name="read" scoped="" ref="0x7f1d71dd6360"/>
        <function-ref name="readDone" scoped="" ref="0x7f1d71dd5360"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Adc12MultiChannel" ref="0x7f1d71db1590" loc="48:/home/hades/tinyos-new/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="TestCM5000C.SensorTotal.AdcReadStreamClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Adc12MultiChannel" scoped="" ref="0x7f1d71db1590"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12MultiChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7f1d71db1910"/>
        <function-ref name="configure" scoped="" ref="0x7f1d71db1aa0"/>
        <function-ref name="dataReady" scoped="" ref="0x7f1d71db1c30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Adc12SingleChannel" ref="0x7f1d71db3590" loc="47:/home/hades/tinyos-new/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="TestCM5000C.SensorTotal.AdcReadStreamClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0x7f1d71db3590"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7f1d71db3910"/>
        <function-ref name="configureSingle" scoped="" ref="0x7f1d71db3aa0"/>
        <function-ref name="configureSingleRepeat" scoped="" ref="0x7f1d71db3c30"/>
        <function-ref name="configureMultipleRepeat" scoped="" ref="0x7f1d71db3dc0"/>
        <function-ref name="multipleDataReady" scoped="" ref="0x7f1d71db1020"/>
        <function-ref name="configureMultiple" scoped="" ref="0x7f1d71db11b0"/>
        <function-ref name="singleDataReady" scoped="" ref="0x7f1d71db1340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Adc12Overflow" ref="0x7f1d71db1e80" loc="49:/home/hades/tinyos-new/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="TestCM5000C.SensorTotal.AdcReadStreamClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Adc12Overflow" scoped="" ref="0x7f1d71db1e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12Overflow"/>
      </instance>
      <interface-functions>
        <function-ref name="memOverflow" scoped="" ref="0x7f1d71db0220"/>
        <function-ref name="conversionTimeOverflow" scoped="" ref="0x7f1d71db03b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcConfigure" ref="0x7f1d71db07e0" loc="51:/home/hades/tinyos-new/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="TestCM5000C.SensorTotal.AdcReadStreamClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AdcConfigure" scoped="" ref="0x7f1d71db07e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7f1d72ee2ae0"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7f1d72ee2200"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7f1d71daf440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f1d71db48a0" loc="46:/home/hades/tinyos-new/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="TestCM5000C.SensorTotal.AdcReadStreamClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f1d71db48a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1d71db4c20"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f1d71db4db0"/>
        <function-ref name="request" scoped="" ref="0x7f1d71db3020"/>
        <function-ref name="granted" scoped="" ref="0x7f1d71db31b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1d71db3340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ConfSub" ref="0x7f1d71da2390" loc="44:/home/hades/tinyos-new/tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
      <component-ref qname="TestCM5000C.SensorTotal.AdcReadStreamClientC.Msp430AdcClient.Msp430Adc12ConfAlertC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ConfSub" scoped="" ref="0x7f1d71da2390"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7f1d72ee2ae0"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7f1d72ee2200"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7f1d71da1020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ConfUp" ref="0x7f1d71da1630" loc="45:/home/hades/tinyos-new/tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
      <component-ref qname="TestCM5000C.SensorTotal.AdcReadStreamClientC.Msp430AdcClient.Msp430Adc12ConfAlertC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ConfUp" scoped="" ref="0x7f1d71da1630"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7f1d72ee2ae0"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7f1d72ee2200"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7f1d71da03d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AdcConfigure" ref="0x7f1d72928750" loc="44:/home/hades/tinyos-new/tos/platforms/telosa/chips/s10871/HamamatsuS10871TsrP.nc">
      <component-ref qname="HamamatsuS10871TsrP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AdcConfigure" scoped="" ref="0x7f1d72928750"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7f1d72ee2ae0"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7f1d72ee2200"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7f1d729273d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DeviceMetadata" ref="0x7f1d7292bd70" loc="43:/home/hades/tinyos-new/tos/platforms/telosa/chips/s10871/HamamatsuS10871TsrP.nc">
      <component-ref qname="HamamatsuS10871TsrP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DeviceMetadata" scoped="" ref="0x7f1d7292bd70"/></type-interface>
      <instance>
        <interfacedef-ref qname="DeviceMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="getSignificantBits" scoped="" ref="0x7f1d72928180"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="Init" loc="51:/home/hades/tinyos-new/tos/interfaces/Init.nc">
      <documentation loc="34:/home/hades/tinyos-new/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7f1d74311c70" loc="62:/home/hades/tinyos-new/tos/interfaces/Init.nc">
        <documentation loc="53:/home/hades/tinyos-new/tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1d7479ecb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="50:/home/hades/tinyos-new/tos/interfaces/Boot.nc">
      <documentation loc="42:/home/hades/tinyos-new/tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x7f1d74312840" loc="60:/home/hades/tinyos-new/tos/interfaces/Boot.nc">
        <documentation loc="51:/home/hades/tinyos-new/tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430ClockInit" loc="38:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430ClockInit.nc">
      <documentation loc="33:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="defaultInitTimerB" ref="0x7f1d742e1b40" loc="48:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initTimerB" ref="0x7f1d742e4de0" loc="43:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultInitTimerA" ref="0x7f1d742e1420" loc="47:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initTimerA" ref="0x7f1d742e4700" loc="42:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultSetupDcoCalibrate" ref="0x7f1d742e25a0" loc="45:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="setupDcoCalibrate" ref="0x7f1d742e7910" loc="40:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initClocks" ref="0x7f1d742e4020" loc="41:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultInitClocks" ref="0x7f1d742e2cc0" loc="46:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="50:/home/hades/tinyos-new/tos/interfaces/McuPowerOverride.nc">
      <documentation loc="35:/home/hades/tinyos-new/tos/interfaces/McuPowerOverride.nc">
        <short>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state.</short>
        <long>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state. This is sometimes necessary,&#10; e.g., if a very low power state has a long wakeup latency that will&#10; violate application timing requirements. TEP 112 describes how&#10; TinyOS incorporates this information when the Scheduler tells&#10; the MCU to enter a low power state.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microconroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x7f1d74425020" loc="62:/home/hades/tinyos-new/tos/interfaces/McuPowerOverride.nc">
        <documentation loc="52:/home/hades/tinyos-new/tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x7f1d746eadd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430TimerControl" loc="40:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerControl.nc">
      <documentation loc="33:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="setControlAsCapture" ref="0x7f1d7428e020" loc="55:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <documentation loc="49:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerControl.nc">
          <short> &#10; Sets the timer in capture mode.</short>
          <long> &#10; Sets the timer in capture mode.&#10; @param cm configures the capture to occur on none, rising, falling or rising_and_falling edges&#10; Msp430Timer.h has convenience definitions:&#10; MSP430TIMER_CM_NONE, MSP430TIMER_CM_RISING, MSP430TIMER_CM_FALLING, MSP430TIMER_CM_BOTH&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1d74a34160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cm" ref="0x7f1d7428fcc0" loc="55:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1d74a34160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getControl" ref="0x7f1d74292390" loc="42:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f1d742d95a0"/>
            <typename><typedef-ref name="msp430_compare_control_t" ref="0x7f1d742d7440"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableEvents" ref="0x7f1d7428e890" loc="57:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="areEventsEnabled" ref="0x7f1d7428d7b0" loc="59:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1d747a7090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlAsCompare" ref="0x7f1d7428f560" loc="47:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableEvents" ref="0x7f1d7428d020" loc="58:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0x7f1d74292b30" loc="43:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1d747a7090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearPendingInterrupt" ref="0x7f1d74291350" loc="44:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControl" ref="0x7f1d74291da0" loc="46:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f1d742d95a0"/>
              <typename><typedef-ref name="msp430_compare_control_t" ref="0x7f1d742d7440"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f1d74291b20" loc="46:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerControl.nc">
            <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f1d742d95a0"/>
              <typename><typedef-ref name="msp430_compare_control_t" ref="0x7f1d742d7440"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Capture" loc="39:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430Capture.nc">
      <documentation loc="33:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430Capture.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="getEvent" ref="0x7f1d742810e0" loc="44:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="41:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Reads the value of the last capture event in TxCCRx&#10;</short>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1d74a34520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setSynchronous" ref="0x7f1d7427e730" loc="84:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="75:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Set whether the capture should occur synchronously or asynchronously.</short>
          <long>&#10; Set whether the capture should occur synchronously or asynchronously.&#10; TinyOS default is synchronous captures.&#10; WARNING: if the capture signal is asynchronous to the timer clock,&#10;          it could case a race condition (see Timer documentation&#10;          in MSP430F1xx user guide)&#10; @param synchronous TRUE to synchronize the timer capture with the&#10;        next timer clock instead of occurring asynchronously.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f1d747a7090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="synchronous" ref="0x7f1d7427e4b0" loc="84:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f1d747a7090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x7f1d7427d2e0" loc="91:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="86:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Signalled when an event is captured.</short>
          <long>&#10; Signalled when an event is captured.&#10;&#10; @param time The time of the capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1d74a34520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7f1d7427d060" loc="91:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1d74a34520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7f1d7427fca0" loc="73:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="70:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Clear the capture overflow flag for when multiple captures occur&#10;</short>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7f1d7427f3e0" loc="68:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="58:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Determine if a capture overflow is pending.</short>
          <long>&#10; Determine if a capture overflow is pending.&#10;&#10; TI calls this overflow but it is actually an overrun.&#10; If COV is set it says that another capture has occurred&#10; prior to reading a previous capture.  The previous value&#10; of a capture has been lost.&#10;&#10; @return TRUE if the capture register has overflowed&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1d747a7090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setEdge" ref="0x7f1d74281a90" loc="56:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="46:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Set the edge that the capture should occur&#10;&#10; </short>
          <long>&#10; Set the edge that the capture should occur&#10;&#10; @param cm Capture Mode for edge capture.&#10; enums exist for:&#10;   MSP430TIMER_CM_NONE is no capture.&#10;   MSP430TIMER_CM_RISING is rising edge capture.&#10;   MSP430TIMER_CM_FALLING is a falling edge capture.&#10;   MSP430TIMER_CM_BOTH captures on both rising and falling edges.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1d74a34160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cm" ref="0x7f1d74281810" loc="56:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1d74a34160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Compare" loc="38:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430Compare.nc">
      <documentation loc="33:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430Compare.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getEvent" ref="0x7f1d742883e0" loc="40:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1d74a34520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setEvent" ref="0x7f1d74288d60" loc="41:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1d74a34520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7f1d74288ae0" loc="41:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1d74a34520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEventFromPrev" ref="0x7f1d74286790" loc="42:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1d74a34520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="delta" ref="0x7f1d74286510" loc="42:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1d74a34520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEventFromNow" ref="0x7f1d742852a0" loc="43:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1d74a34520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="delta" ref="0x7f1d74285020" loc="43:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1d74a34520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f1d74285990" loc="45:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Timer" loc="43:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430Timer.nc">
      <documentation loc="33:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430Timer.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7f1d74298810" loc="52:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockSource" ref="0x7f1d742952a0" loc="55:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1d74a34520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="clockSource" ref="0x7f1d74295020" loc="55:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1d74a34520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableEvents" ref="0x7f1d74297020" loc="53:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f1d7429eab0" loc="45:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1d74a34520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableEvents" ref="0x7f1d74297760" loc="54:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7f1d7429b9b0" loc="47:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x7f1d74298120" loc="51:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7f1d7429b270" loc="46:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1d747a7090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x7f1d742990e0" loc="48:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMode" ref="0x7f1d742999f0" loc="50:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7f1d74299770" loc="50:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInputDivider" ref="0x7f1d74295cb0" loc="56:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1d74a34520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="inputDivider" ref="0x7f1d74295a30" loc="56:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1d74a34520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430TimerEvent" loc="37:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerEvent.nc">
      <documentation loc="33:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerEvent.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7f1d742571f0" loc="39:/home/hades/tinyos-new/tos/chips/msp430/timer/Msp430TimerEvent.nc">
        <interfacedef-ref qname="Msp430TimerEvent"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="77:/home/hades/tinyos-new/tos/interfaces/McuSleep.nc">
      <documentation loc="65:/home/hades/tinyos-new/tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @date   Oct 25, 2016&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="irq_preamble" ref="0x7f1d74348a80" loc="85:/home/hades/tinyos-new/tos/interfaces/McuSleep.nc">
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="irq_postamble" ref="0x7f1d743471f0" loc="86:/home/hades/tinyos-new/tos/interfaces/McuSleep.nc">
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sleep" ref="0x7f1d743482b0" loc="79:/home/hades/tinyos-new/tos/interfaces/McuSleep.nc">
        <documentation loc="78:/home/hades/tinyos-new/tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="46:/home/hades/tinyos-new/tos/interfaces/McuPowerState.nc">
      <documentation loc="35:/home/hades/tinyos-new/tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x7f1d74561830" loc="52:/home/hades/tinyos-new/tos/interfaces/McuPowerState.nc">
        <documentation loc="47:/home/hades/tinyos-new/tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:/home/hades/tinyos-new/tos/interfaces/Scheduler.nc">
      <documentation loc="42:/home/hades/tinyos-new/tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7f1d747a3020" loc="57:/home/hades/tinyos-new/tos/interfaces/Scheduler.nc">
        <documentation loc="54:/home/hades/tinyos-new/tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x7f1d747a2020" loc="72:/home/hades/tinyos-new/tos/interfaces/Scheduler.nc">
        <documentation loc="67:/home/hades/tinyos-new/tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x7f1d747a3790" loc="65:/home/hades/tinyos-new/tos/interfaces/Scheduler.nc">
        <documentation loc="59:/home/hades/tinyos-new/tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1d747a7090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:/home/hades/tinyos-new/tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x7f1d74797350" loc="67:/home/hades/tinyos-new/tos/interfaces/TaskBasic.nc">
        <documentation loc="57:/home/hades/tinyos-new/tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1d7479ecb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x7f1d74797ba0" loc="75:/home/hades/tinyos-new/tos/interfaces/TaskBasic.nc">
        <documentation loc="69:/home/hades/tinyos-new/tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Packet" loc="55:/home/hades/tinyos-new/tos/interfaces/Packet.nc">
      <documentation loc="42:/home/hades/tinyos-new/tos/interfaces/Packet.nc">
        <short> &#10; The basic message data type accessors.</short>
        <long> &#10; The basic message data type accessors. Protocols may use&#10; additional packet interfaces for their protocol specific&#10; data/metadata.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7f1d740ca3d0" loc="65:/home/hades/tinyos-new/tos/interfaces/Packet.nc">
        <documentation loc="58:/home/hades/tinyos-new/tos/interfaces/Packet.nc">
          <short>&#10; Clear out this packet.</short>
          <long>&#10; Clear out this packet.  Note that this is a deep operation and&#10; total operation: calling clear() on any layer will completely&#10; clear the packet for reuse.&#10; @param  'message_t* ONE msg'    the packet to clear&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1d740d7930"/>
                <typename><typedef-ref name="message_t" ref="0x7f1d740d5020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1d740ca150" loc="65:/home/hades/tinyos-new/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1d740d7930"/>
                <typename><typedef-ref name="message_t" ref="0x7f1d740d5020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x7f1d740c9490" loc="78:/home/hades/tinyos-new/tos/interfaces/Packet.nc">
        <documentation loc="67:/home/hades/tinyos-new/tos/interfaces/Packet.nc">
          <short>&#10; Return the length of the payload of msg.</short>
          <long>&#10; Return the length of the payload of msg. This value may be less&#10; than what maxPayloadLength() returns, if the packet is smaller than&#10; the MTU. If a communication component does not support variably&#10; sized data regions, then payloadLength() will always return&#10; the same value as maxPayloadLength(). &#10;&#10; @param  'message_t* ONE msg'    the packet to examine&#10; @return        the length of its current payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1d74a34160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1d740d7930"/>
                <typename><typedef-ref name="message_t" ref="0x7f1d740d5020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1d740c9210" loc="78:/home/hades/tinyos-new/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1d740d7930"/>
                <typename><typedef-ref name="message_t" ref="0x7f1d740d5020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7f1d740c67b0" loc="126:/home/hades/tinyos-new/tos/interfaces/Packet.nc">
        <documentation loc="109:/home/hades/tinyos-new/tos/interfaces/Packet.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; If the caller intends to write to the payload region then&#10; the &#60;tt>len&#60;/tt> parameter must reflect the maximum required&#10; length. If the caller (only) wants to read from the payload&#10; region, then &#60;tt>len&#60;/tt> may be set to the value of&#10; payloadLength(). If the payload region is smaller than &#10; &#60;tt>len&#60;/tt> this command returns NULL. The offset where&#10; the payload region starts within a packet is fixed, i.e. for&#10; a given &#60;tt>msg&#60;/tt> this command will always return the same&#10; pointer or NULL.&#10;&#10; @param 'message_t* ONE msg'   the packet &#10; @param len   the length of payload required&#10; @return 'void* COUNT_NOK(len)'     a pointer to the packet's data payload for this layer&#10;              or NULL if &#60;tt>len&#60;/tt> is too big&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1d740d7930"/>
                <typename><typedef-ref name="message_t" ref="0x7f1d740d5020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1d74a34160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1d740c61b0" loc="126:/home/hades/tinyos-new/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1d740d7930"/>
                <typename><typedef-ref name="message_t" ref="0x7f1d740d5020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f1d740c64e0" loc="126:/home/hades/tinyos-new/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1d74a34160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7f1d740c58a0" loc="106:/home/hades/tinyos-new/tos/interfaces/Packet.nc">
        <documentation loc="96:/home/hades/tinyos-new/tos/interfaces/Packet.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. Note that, depending on protocol fields, a given&#10; request to send a packet may not be able to send the maximum&#10; payload length (e.g., if there are variable length&#10; fields). Protocols may provide specialized interfaces for these&#10; circumstances.&#10;&#10; @return   the maximum size payload allowed by this layer&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1d74a34160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x7f1d740c8930" loc="94:/home/hades/tinyos-new/tos/interfaces/Packet.nc">
        <documentation loc="80:/home/hades/tinyos-new/tos/interfaces/Packet.nc">
          <short>&#10; Set the length field of the packet.</short>
          <long>&#10; Set the length field of the packet. This value is not checked&#10; for validity (e.g., if it is larger than the maximum payload&#10; size). This command is not used when sending packets, as calls&#10; to send include a length parameter. Rather, it is used by&#10; components, such as queues, that need to buffer requests to&#10; send.  This command allows the component to store the length&#10; specified in the request and later recover it when actually&#10; sending.&#10;&#10; @param 'message_t* ONE msg'   the packet&#10; @param len   the value to set its length field to&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1d740d7930"/>
                <typename><typedef-ref name="message_t" ref="0x7f1d740d5020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1d74a34160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1d740c8370" loc="94:/home/hades/tinyos-new/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1d740d7930"/>
                <typename><typedef-ref name="message_t" ref="0x7f1d740d5020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f1d740c86a0" loc="94:/home/hades/tinyos-new/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1d74a34160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SplitControl" loc="87:/home/hades/tinyos-new/tos/interfaces/SplitControl.nc">
      <documentation loc="72:/home/hades/tinyos-new/tos/interfaces/SplitControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  For each &#60;code>start()&#60;/code> or&#10; &#60;code>stop()&#60;/code> command, if the command returns SUCCESS, then a&#10; corresponding  &#60;code>startDone()&#60;/code> or &#60;code>stopDone()&#60;/code> event&#10; must be signalled.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function event="" provided="0" name="startDone" ref="0x7f1d74126c80" loc="113:/home/hades/tinyos-new/tos/interfaces/SplitControl.nc">
        <documentation loc="106:/home/hades/tinyos-new/tos/interfaces/SplitControl.nc">
          <short> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.</short>
          <long> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned on, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f1d7479ecb0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f1d74126a00" loc="113:/home/hades/tinyos-new/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f1d7479ecb0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stopDone" ref="0x7f1d741242a0" loc="138:/home/hades/tinyos-new/tos/interfaces/SplitControl.nc">
        <documentation loc="132:/home/hades/tinyos-new/tos/interfaces/SplitControl.nc">
          <short>&#10; Notify caller that the component has been stopped.</short>
          <long>&#10; Notify caller that the component has been stopped.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned off, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f1d7479ecb0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f1d74124020" loc="138:/home/hades/tinyos-new/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f1d7479ecb0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7f1d74126020" loc="104:/home/hades/tinyos-new/tos/interfaces/SplitControl.nc">
        <documentation loc="89:/home/hades/tinyos-new/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         starting or the device was off and the device is now ready to turn &#10;         on.  After receiving this return value, you should expect a &#10;         &#60;code>startDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering down&#10;               i.e. a &#60;code>stop()&#60;/code> command has been called,&#10;               and a &#60;code>stopDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already on &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1d7479ecb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f1d74125520" loc="130:/home/hades/tinyos-new/tos/interfaces/SplitControl.nc">
        <documentation loc="115:/home/hades/tinyos-new/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         stopping or the device was on and the device is now ready to turn &#10;         off.  After receiving this return value, you should expect a &#10;         &#60;code>stopDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering up&#10;               i.e. a &#60;code>start()&#60;/code> command has been called,&#10;               and a &#60;code>startDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already off &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1d7479ecb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Read" loc="49:/home/hades/tinyos-new/tos/interfaces/Read.nc">
      <documentation loc="33:/home/hades/tinyos-new/tos/interfaces/Read.nc">
        <short>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values.</short>
        <long>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values. The type of the value is&#10; given as a template argument. Because this interface is&#10; split-phase, these values may be backed by hardware, or a&#10; long-running computation.&#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:14 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x7f1d740b3ab0" loc="49:/home/hades/tinyos-new/tos/interfaces/Read.nc">
          <interfacedef-ref qname="Read"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f1d740b3ab0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x7f1d740b0390" loc="55:/home/hades/tinyos-new/tos/interfaces/Read.nc">
        <documentation loc="50:/home/hades/tinyos-new/tos/interfaces/Read.nc">
          <short>&#10; Initiates a read of the value.</short>
          <long>&#10; Initiates a read of the value.&#10; &#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1d7479ecb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x7f1d740af120" loc="63:/home/hades/tinyos-new/tos/interfaces/Read.nc">
        <documentation loc="57:/home/hades/tinyos-new/tos/interfaces/Read.nc">
          <short>&#10; Signals the completion of the read().</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f1d7479ecb0"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f1d740b3ab0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7f1d740b0b10" loc="63:/home/hades/tinyos-new/tos/interfaces/Read.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f1d7479ecb0"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x7f1d740b0e30" loc="63:/home/hades/tinyos-new/tos/interfaces/Read.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f1d740b3ab0"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="53:/home/hades/tinyos-new/tos/lib/timer/Timer.nc">
      <documentation loc="36:/home/hades/tinyos-new/tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f1d740c0dd0" loc="53:/home/hades/tinyos-new/tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f1d740c0dd0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x7f1d740b8c10" loc="136:/home/hades/tinyos-new/tos/lib/timer/Timer.nc">
        <documentation loc="132:/home/hades/tinyos-new/tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f1d74a34920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f1d740bc420" loc="83:/home/hades/tinyos-new/tos/lib/timer/Timer.nc">
        <documentation loc="80:/home/hades/tinyos-new/tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x7f1d740ba2b0" loc="114:/home/hades/tinyos-new/tos/lib/timer/Timer.nc">
        <documentation loc="100:/home/hades/tinyos-new/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f1d74a34920"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f1d74a34920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7f1d740bbbd0" loc="114:/home/hades/tinyos-new/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f1d74a34920"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x7f1d740ba020" loc="114:/home/hades/tinyos-new/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f1d74a34920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x7f1d740bb420" loc="98:/home/hades/tinyos-new/tos/lib/timer/Timer.nc">
        <documentation loc="94:/home/hades/tinyos-new/tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1d747a7090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x7f1d740b7c60" loc="151:/home/hades/tinyos-new/tos/lib/timer/Timer.nc">
        <documentation loc="146:/home/hades/tinyos-new/tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f1d74a34920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x7f1d740b73e0" loc="144:/home/hades/tinyos-new/tos/lib/timer/Timer.nc">
        <documentation loc="138:/home/hades/tinyos-new/tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f1d74a34920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x7f1d740bcc00" loc="92:/home/hades/tinyos-new/tos/lib/timer/Timer.nc">
        <documentation loc="86:/home/hades/tinyos-new/tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1d747a7090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x7f1d740bf970" loc="64:/home/hades/tinyos-new/tos/lib/timer/Timer.nc">
        <documentation loc="56:/home/hades/tinyos-new/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f1d74a34920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f1d740bf6f0" loc="64:/home/hades/tinyos-new/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f1d74a34920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x7f1d740b82b0" loc="129:/home/hades/tinyos-new/tos/lib/timer/Timer.nc">
        <documentation loc="116:/home/hades/tinyos-new/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f1d74a34920"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f1d74a34920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7f1d740bac50" loc="129:/home/hades/tinyos-new/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f1d74a34920"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x7f1d740b8020" loc="129:/home/hades/tinyos-new/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f1d74a34920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x7f1d740bd4d0" loc="73:/home/hades/tinyos-new/tos/lib/timer/Timer.nc">
        <documentation loc="66:/home/hades/tinyos-new/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f1d74a34920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f1d740bd250" loc="73:/home/hades/tinyos-new/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f1d74a34920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f1d740bdcd0" loc="78:/home/hades/tinyos-new/tos/lib/timer/Timer.nc">
        <documentation loc="75:/home/hades/tinyos-new/tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
          <long>&#10; Cancel a timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="51:/home/hades/tinyos-new/tos/interfaces/Leds.nc">
      <documentation loc="33:/home/hades/tinyos-new/tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x7f1d74130bf0" loc="61:/home/hades/tinyos-new/tos/interfaces/Leds.nc">
        <documentation loc="58:/home/hades/tinyos-new/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x7f1d7412f3e0" loc="67:/home/hades/tinyos-new/tos/interfaces/Leds.nc">
        <documentation loc="63:/home/hades/tinyos-new/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0x7f1d7412fbc0" loc="72:/home/hades/tinyos-new/tos/interfaces/Leds.nc">
        <documentation loc="69:/home/hades/tinyos-new/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x7f1d7412db40" loc="83:/home/hades/tinyos-new/tos/interfaces/Leds.nc">
        <documentation loc="79:/home/hades/tinyos-new/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x7f1d7412b2b0" loc="100:/home/hades/tinyos-new/tos/interfaces/Leds.nc">
        <documentation loc="96:/home/hades/tinyos-new/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f1d7412bac0" loc="117:/home/hades/tinyos-new/tos/interfaces/Leds.nc">
        <documentation loc="103:/home/hades/tinyos-new/tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1d74a34160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x7f1d7412d390" loc="77:/home/hades/tinyos-new/tos/interfaces/Leds.nc">
        <documentation loc="74:/home/hades/tinyos-new/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f1d7412a670" loc="134:/home/hades/tinyos-new/tos/interfaces/Leds.nc">
        <documentation loc="120:/home/hades/tinyos-new/tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1d74a34160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x7f1d7412a3f0" loc="134:/home/hades/tinyos-new/tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1d74a34160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x7f1d74130460" loc="56:/home/hades/tinyos-new/tos/interfaces/Leds.nc">
        <documentation loc="53:/home/hades/tinyos-new/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0x7f1d7412c350" loc="89:/home/hades/tinyos-new/tos/interfaces/Leds.nc">
        <documentation loc="86:/home/hades/tinyos-new/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x7f1d7412cae0" loc="94:/home/hades/tinyos-new/tos/interfaces/Leds.nc">
        <documentation loc="91:/home/hades/tinyos-new/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMSend" loc="58:/home/hades/tinyos-new/tos/interfaces/AMSend.nc">
      <function command="" provided="0" name="send" ref="0x7f1d740d32c0" loc="80:/home/hades/tinyos-new/tos/interfaces/AMSend.nc">
        <documentation loc="60:/home/hades/tinyos-new/tos/interfaces/AMSend.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param 'message_t* ONE msg'    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1d7479ecb0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f1d740e5560"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1d740d7930"/>
                <typename><typedef-ref name="message_t" ref="0x7f1d740d5020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1d74a34160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7f1d740d57e0" loc="80:/home/hades/tinyos-new/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f1d740e5560"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x7f1d740d5b60" loc="80:/home/hades/tinyos-new/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1d740d7930"/>
                <typename><typedef-ref name="message_t" ref="0x7f1d740d5020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f1d740d3020" loc="80:/home/hades/tinyos-new/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1d74a34160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7f1d740cf970" loc="135:/home/hades/tinyos-new/tos/interfaces/AMSend.nc">
        <documentation loc="126:/home/hades/tinyos-new/tos/interfaces/AMSend.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  'message_t* ONE msg'    the packet&#10; @return 'void* COUNT(len)'      the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1d740d7930"/>
                <typename><typedef-ref name="message_t" ref="0x7f1d740d5020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1d74a34160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1d740cf370" loc="135:/home/hades/tinyos-new/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1d740d7930"/>
                <typename><typedef-ref name="message_t" ref="0x7f1d740d5020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f1d740cf6a0" loc="135:/home/hades/tinyos-new/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1d74a34160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7f1d740cea60" loc="123:/home/hades/tinyos-new/tos/interfaces/AMSend.nc">
        <documentation loc="113:/home/hades/tinyos-new/tos/interfaces/AMSend.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1d74a34160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f1d740d2630" loc="96:/home/hades/tinyos-new/tos/interfaces/AMSend.nc">
        <documentation loc="82:/home/hades/tinyos-new/tos/interfaces/AMSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  'message_t* ONE msg'    the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1d7479ecb0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1d740d7930"/>
                <typename><typedef-ref name="message_t" ref="0x7f1d740d5020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1d740d23b0" loc="96:/home/hades/tinyos-new/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1d740d7930"/>
                <typename><typedef-ref name="message_t" ref="0x7f1d740d5020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f1d740d1b80" loc="110:/home/hades/tinyos-new/tos/interfaces/AMSend.nc">
        <documentation loc="98:/home/hades/tinyos-new/tos/interfaces/AMSend.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  'message_t* ONE msg'   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1d740d7930"/>
                <typename><typedef-ref name="message_t" ref="0x7f1d740d5020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f1d7479ecb0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1d740d15a0" loc="110:/home/hades/tinyos-new/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1d740d7930"/>
                <typename><typedef-ref name="message_t" ref="0x7f1d740d5020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7f1d740d18f0" loc="110:/home/hades/tinyos-new/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f1d7479ecb0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="38:/home/hades/tinyos-new/tos/interfaces/GeneralIO.nc">
      <documentation loc="34:/home/hades/tinyos-new/tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x7f1d740733b0" loc="44:/home/hades/tinyos-new/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x7f1d74073ae0" loc="45:/home/hades/tinyos-new/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1d747a7090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x7f1d74074580" loc="42:/home/hades/tinyos-new/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x7f1d740729b0" loc="47:/home/hades/tinyos-new/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1d747a7090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f1d74074c80" loc="43:/home/hades/tinyos-new/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1d747a7090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x7f1d74072270" loc="46:/home/hades/tinyos-new/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f1d74078760" loc="40:/home/hades/tinyos-new/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x7f1d74078e30" loc="41:/home/hades/tinyos-new/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430GeneralIO" loc="43:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
      <documentation loc="34:/home/hades/tinyos-new/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x7f1d74048350" loc="78:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="75:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin direction to input.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x7f1d74048aa0" loc="80:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1d747a7090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setResistor" ref="0x7f1d74043390" loc="110:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="103:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin pullup / pull down resistor mode.</short>
          <long>&#10; Set pin pullup / pull down resistor mode.&#10; @param mode One of the MSP430_PORT_RESISTOR_* values&#10; @return EINVAL if invalid mode or pin does not support resistor configuration;&#10; FAIL if pin is not an input;&#10; SUCCESS if pin supports resistor configuration, is an input, and mode is valid&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1d7479ecb0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1d74a34160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7f1d74043110" loc="110:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1d74a34160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x7f1d7404bbd0" loc="58:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="55:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Toggle pin status.</short>
          <long>&#10; Toggle pin status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x7f1d740479d0" loc="87:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1d747a7090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getResistor" ref="0x7f1d74043c80" loc="117:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="112:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Get the pin pullup / pulldown resistor mode.</short>
          <long>&#10; Get the pin pullup / pulldown resistor mode.&#10;&#10; @return one of the MSP430_PORT_RESISTOR_* values&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1d74a34160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x7f1d74047270" loc="85:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="82:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin direction to output.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f1d74049b90" loc="73:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="68:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Read pin value.</short>
          <long>&#10; Read pin value.&#10;&#10; @return TRUE if pin is high, FALSE otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1d747a7090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="selectIOFunc" ref="0x7f1d740440e0" loc="99:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="96:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin for I/O functionality.</short>
          <long>&#10; Set pin for I/O functionality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getRaw" ref="0x7f1d74049390" loc="66:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="60:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Get the port status that contains the pin.</short>
          <long>&#10; Get the port status that contains the pin.&#10;&#10; @return Status of the port that contains the given pin. The x'th&#10; pin on the port will be represented in the x'th bit.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1d74a34160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f1d7404ed10" loc="48:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="45:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin to high.</short>
          <long>&#10; Set pin to high.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="selectModuleFunc" ref="0x7f1d74045190" loc="92:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="89:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin for module specific functionality.</short>
          <long>&#10; Set pin for module specific functionality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isIOFunc" ref="0x7f1d74044880" loc="101:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1d747a7090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isModuleFunc" ref="0x7f1d74045950" loc="94:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1d747a7090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x7f1d7404b480" loc="53:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="50:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin to low.</short>
          <long>&#10; Set pin to low.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Receive" loc="56:/home/hades/tinyos-new/tos/interfaces/Receive.nc">
      <documentation loc="34:/home/hades/tinyos-new/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x7f1d73e0b410" loc="78:/home/hades/tinyos-new/tos/interfaces/Receive.nc">
        <documentation loc="58:/home/hades/tinyos-new/tos/interfaces/Receive.nc">
          <short>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception.</short>
          <long>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception. The return value&#10; can be the same as &#60;tt>msg&#60;/tt>, as long as the handling&#10; component copies out the data it needs.&#10;&#10; &#60;b>Note&#60;/b> that misuse of this interface is one of the most&#10; common bugs in TinyOS code. For example, if a component both calls a&#10; send on the passed message and returns it, then it is possible&#10; the buffer will be reused before the send occurs, overwriting&#10; the component's data. This would cause the mote to possibly&#10; instead send a packet it most recently received.&#10;&#10; @param  'message_t* ONE msg'        the receied packet&#10; @param  'void* COUNT(len) payload'  a pointer to the packet's payload&#10; @param  len      the length of the data region pointed to by payload&#10; @return 'message_t* ONE'              a packet buffer for the stack to use for the next&#10;                  received packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1d740d7930"/>
              <typename><typedef-ref name="message_t" ref="0x7f1d740d5020"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1d740d7930"/>
                <typename><typedef-ref name="message_t" ref="0x7f1d740d5020"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1d74a34160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1d73e0ea90" loc="78:/home/hades/tinyos-new/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1d740d7930"/>
                <typename><typedef-ref name="message_t" ref="0x7f1d740d5020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x7f1d73e0ede0" loc="78:/home/hades/tinyos-new/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f1d73e0b130" loc="78:/home/hades/tinyos-new/tos/interfaces/Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1d74a34160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeStamp" loc="35:/home/hades/tinyos-new/tos/interfaces/PacketTimeStamp.nc">
      <parameters>
        <typedef name="precision_tag" ref="0x7f1d73df5c60" loc="35:/home/hades/tinyos-new/tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f1d73df5c60"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f1d73ded020" loc="35:/home/hades/tinyos-new/tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f1d73ded020"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="timestamp" ref="0x7f1d73debe20" loc="63:/home/hades/tinyos-new/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="51:/home/hades/tinyos-new/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to get timestamp from.&#10;&#10; Return the time stamp for the given message. Please check with the&#10; isValid command if this value can be relied upon. If this command is&#10; called after transmission, then the transmit time of the packet&#10; is returned (the time when the frame synchronization byte was&#10; transmitted). If this command is called after the message is received,&#10; the tne receive time of the message is returned. It is recommended that&#10; the timestamp command be called only from the receive or sendDone event&#10; handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f1d73ded020"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1d740d7930"/>
                <typename><typedef-ref name="message_t" ref="0x7f1d740d5020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1d73debba0" loc="63:/home/hades/tinyos-new/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1d740d7930"/>
                <typename><typedef-ref name="message_t" ref="0x7f1d740d5020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clear" ref="0x7f1d73de9020" loc="70:/home/hades/tinyos-new/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="65:/home/hades/tinyos-new/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to FALSE.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1d740d7930"/>
                <typename><typedef-ref name="message_t" ref="0x7f1d740d5020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1d73decd50" loc="70:/home/hades/tinyos-new/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1d740d7930"/>
                <typename><typedef-ref name="message_t" ref="0x7f1d740d5020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isValid" ref="0x7f1d73dedbe0" loc="49:/home/hades/tinyos-new/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="37:/home/hades/tinyos-new/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to examine.&#10;&#10; Returns TRUE if the time stamp of the message is valid. Under special&#10; circumstances the radio chip might not be able to correctly assign a&#10; precise time value to an incoming packet (e.g. under very heavy traffic&#10; multiple interrupts can occur before they could be serviced, and even&#10; if capture registers are used, it is not possible to get the time stamp&#10; for the first or last unserviced event), in which case the time stamp&#10; value should not be used. It is recommended that the isValid command be&#10; called from the receive or sendDone event handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1d747a7090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1d740d7930"/>
                <typename><typedef-ref name="message_t" ref="0x7f1d740d5020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1d73ded960" loc="49:/home/hades/tinyos-new/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1d740d7930"/>
                <typename><typedef-ref name="message_t" ref="0x7f1d740d5020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f1d73de8360" loc="78:/home/hades/tinyos-new/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="72:/home/hades/tinyos-new/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to TRUE and the time stamp value to the&#10; specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1d740d7930"/>
                <typename><typedef-ref name="message_t" ref="0x7f1d740d5020"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f1d73ded020"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1d73de9d00" loc="78:/home/hades/tinyos-new/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1d740d7930"/>
                <typename><typedef-ref name="message_t" ref="0x7f1d740d5020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x7f1d73de80d0" loc="78:/home/hades/tinyos-new/tos/interfaces/PacketTimeStamp.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f1d73ded020"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LowPowerListening" loc="41:/home/hades/tinyos-new/tos/interfaces/LowPowerListening.nc">
      <documentation loc="32:/home/hades/tinyos-new/tos/interfaces/LowPowerListening.nc">
        <short>&#10; Low Power Listening interface&#10;&#10; </short>
        <long>&#10; Low Power Listening interface&#10;&#10; @author Jonathan Hui&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="setRemoteWakeupInterval" ref="0x7f1d73ddc360" loc="65:/home/hades/tinyos-new/tos/interfaces/LowPowerListening.nc">
        <documentation loc="59:/home/hades/tinyos-new/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.</short>
          <long>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.&#10; @param 'message_t* ONE msg' Pointer to the message that will be sent&#10; @param intervalMs The receiving node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1d740d7930"/>
                <typename><typedef-ref name="message_t" ref="0x7f1d740d5020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1d74a34520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1d73ddecf0" loc="65:/home/hades/tinyos-new/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1d740d7930"/>
                <typename><typedef-ref name="message_t" ref="0x7f1d740d5020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="intervalMs" ref="0x7f1d73ddc0d0" loc="65:/home/hades/tinyos-new/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1d74a34520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRemoteWakeupInterval" ref="0x7f1d73ddb510" loc="71:/home/hades/tinyos-new/tos/interfaces/LowPowerListening.nc">
        <documentation loc="67:/home/hades/tinyos-new/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the destination node's wakeup interval configured in this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1d74a34520"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1d740d7930"/>
                <typename><typedef-ref name="message_t" ref="0x7f1d740d5020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1d73ddb290" loc="71:/home/hades/tinyos-new/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1d740d7930"/>
                <typename><typedef-ref name="message_t" ref="0x7f1d740d5020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLocalWakeupInterval" ref="0x7f1d73dde500" loc="57:/home/hades/tinyos-new/tos/interfaces/LowPowerListening.nc">
        <documentation loc="54:/home/hades/tinyos-new/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @return the local node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1d74a34520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setLocalWakeupInterval" ref="0x7f1d73de1b10" loc="52:/home/hades/tinyos-new/tos/interfaces/LowPowerListening.nc">
        <documentation loc="42:/home/hades/tinyos-new/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Set this this node's radio wakeup interval, in milliseconds.</short>
          <long>&#10; Set this this node's radio wakeup interval, in milliseconds. After&#10; each interval, the node will wakeup and check for radio activity.&#10;&#10; Note: The wakeup interval can be set to 0 to indicate that the radio&#10; should stay on all the time but in order to get a startDone this&#10; should only be done when the duty-cycling is off (after a stopDone).&#10;&#10; @param intervalMs the length of this node's Rx check interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1d74a34520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="intervalMs" ref="0x7f1d73de1890" loc="52:/home/hades/tinyos-new/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1d74a34520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketAcknowledgements" loc="44:/home/hades/tinyos-new/tos/interfaces/PacketAcknowledgements.nc">
      <documentation loc="34:/home/hades/tinyos-new/tos/interfaces/PacketAcknowledgements.nc">
        <short>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.</short>
        <long>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.&#10;&#10; @author Jonathan Hui&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   June 21 2006&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestAck" ref="0x7f1d73df3020" loc="59:/home/hades/tinyos-new/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="46:/home/hades/tinyos-new/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.&#10; The acknowledgment is synchronous as the caller can check whether the&#10; ack was received through the wasAcked() command as soon as a send operation&#10; completes.&#10;&#10; @param 'message_t* ONE msg' - A message which should be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are enabled, EBUSY&#10; if the communication layer cannot enable them at this time, FAIL&#10; if it does not support them.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1d7479ecb0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1d740d7930"/>
                <typename><typedef-ref name="message_t" ref="0x7f1d740d5020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1d73e06cf0" loc="59:/home/hades/tinyos-new/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1d740d7930"/>
                <typename><typedef-ref name="message_t" ref="0x7f1d740d5020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="noAck" ref="0x7f1d73df22a0" loc="71:/home/hades/tinyos-new/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="61:/home/hades/tinyos-new/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.&#10;&#10; @param 'message_t* ONE msg' - A message which should not be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are disabled, EBUSY&#10; if the communication layer cannot disable them at this time, FAIL&#10; if it cannot support unacknowledged communication.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1d7479ecb0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1d740d7930"/>
                <typename><typedef-ref name="message_t" ref="0x7f1d740d5020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1d73df2020" loc="71:/home/hades/tinyos-new/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1d740d7930"/>
                <typename><typedef-ref name="message_t" ref="0x7f1d740d5020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasAcked" ref="0x7f1d73df0430" loc="85:/home/hades/tinyos-new/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="73:/home/hades/tinyos-new/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a caller whether or not a transmitted packet was acknowledged.</short>
          <long>&#10; Tell a caller whether or not a transmitted packet was acknowledged.&#10; If acknowledgments on the packet had been disabled through noAck(),&#10; then the return value is undefined. If a packet&#10; layer does not support acknowledgements, this command must return always&#10; return FALSE.&#10;&#10; @param 'message_t* ONE msg' - A transmitted message.&#10; @return Whether the packet was acknowledged.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1d747a7090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1d740d7930"/>
                <typename><typedef-ref name="message_t" ref="0x7f1d740d5020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1d73df01b0" loc="85:/home/hades/tinyos-new/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1d740d7930"/>
                <typename><typedef-ref name="message_t" ref="0x7f1d740d5020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMPacket" loc="61:/home/hades/tinyos-new/tos/interfaces/AMPacket.nc">
      <documentation loc="42:/home/hades/tinyos-new/tos/interfaces/AMPacket.nc">
        <short>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets.</short>
        <long>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets. Active Messages are a single-hop&#10; communication protocol. Therefore, fields such as source and destination&#10; represent the single-hop source and destination. Multihop sources and&#10; destinations are defined by the corresponding multihop protocol (if any).&#10; Also see the Packet interface.&#10;&#10; @author Philip Levis &#10; @date   January 18 2005&#10; @see    Packet&#10; @see    AMSend&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="group" ref="0x7f1d73df9b90" loc="177:/home/hades/tinyos-new/tos/interfaces/AMPacket.nc">
        <documentation loc="164:/home/hades/tinyos-new/tos/interfaces/AMPacket.nc">
          <short>&#10; Get the AM group of the AM packet.</short>
          <long>&#10; Get the AM group of the AM packet. The AM group is a logical&#10; identifier that distinguishes sets of nodes which may share&#10; a physical communication medium but wish to not communicate.&#10; The AM group logically separates the sets of nodes. When&#10; a node sends a packet, it fills in its AM group, and typically&#10; nodes only receive packets whose AM group field matches their&#10; own.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @return the AM group of this packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7f1d740e5180"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1d740d7930"/>
                <typename><typedef-ref name="message_t" ref="0x7f1d740d5020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f1d73df9910" loc="177:/home/hades/tinyos-new/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1d740d7930"/>
                <typename><typedef-ref name="message_t" ref="0x7f1d740d5020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x7f1d73e03810" loc="88:/home/hades/tinyos-new/tos/interfaces/AMPacket.nc">
        <documentation loc="80:/home/hades/tinyos-new/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the source of the AM packet.</short>
          <long>&#10; Return the AM address of the source of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'  the packet&#10; @return      the source address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7f1d740e5560"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1d740d7930"/>
                <typename><typedef-ref name="message_t" ref="0x7f1d740d5020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f1d73e03590" loc="88:/home/hades/tinyos-new/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1d740d7930"/>
                <typename><typedef-ref name="message_t" ref="0x7f1d740d5020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x7f1d73e0ac50" loc="68:/home/hades/tinyos-new/tos/interfaces/AMPacket.nc">
        <documentation loc="63:/home/hades/tinyos-new/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the node's active message address associated with this AM stack.</short>
          <long>&#10; Return the node's active message address associated with this AM stack.&#10; @return The address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7f1d740e5560"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x7f1d73e05740" loc="78:/home/hades/tinyos-new/tos/interfaces/AMPacket.nc">
        <documentation loc="70:/home/hades/tinyos-new/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the destination of the AM packet.</short>
          <long>&#10; Return the AM address of the destination of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'    the packet&#10; @return        the destination address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7f1d740e5560"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1d740d7930"/>
                <typename><typedef-ref name="message_t" ref="0x7f1d740d5020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f1d73e054c0" loc="78:/home/hades/tinyos-new/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1d740d7930"/>
                <typename><typedef-ref name="message_t" ref="0x7f1d740d5020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x7f1d73e02130" loc="121:/home/hades/tinyos-new/tos/interfaces/AMPacket.nc">
        <documentation loc="105:/home/hades/tinyos-new/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the source field of the AM packet.</short>
          <long>&#10; Set the AM address of the source field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the source address&#10; and then recover it when actually sending. As an AM layer generally&#10; sets the source address to be the local address, this interface&#10; is not commonly used except when a system is bypassing the AM&#10; layer (e.g., a protocol bridge). If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1d740d7930"/>
                <typename><typedef-ref name="message_t" ref="0x7f1d740d5020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f1d740e5560"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f1d73e00b20" loc="121:/home/hades/tinyos-new/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1d740d7930"/>
                <typename><typedef-ref name="message_t" ref="0x7f1d740d5020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7f1d73e00e70" loc="121:/home/hades/tinyos-new/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f1d740e5560"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x7f1d73e01c00" loc="103:/home/hades/tinyos-new/tos/interfaces/AMPacket.nc">
        <documentation loc="90:/home/hades/tinyos-new/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the destination field of the AM packet.</short>
          <long>&#10; Set the AM address of the destination field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the destination address&#10; and then recover it when actually sending. If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1d740d7930"/>
                <typename><typedef-ref name="message_t" ref="0x7f1d740d5020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f1d740e5560"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f1d73e01620" loc="103:/home/hades/tinyos-new/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1d740d7930"/>
                <typename><typedef-ref name="message_t" ref="0x7f1d740d5020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7f1d73e01970" loc="103:/home/hades/tinyos-new/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f1d740e5560"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="type" ref="0x7f1d73dfd600" loc="147:/home/hades/tinyos-new/tos/interfaces/AMPacket.nc">
        <documentation loc="138:/home/hades/tinyos-new/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM type of the AM packet.</short>
          <long>&#10; Return the AM type of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f1d740e7d50"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1d740d7930"/>
                <typename><typedef-ref name="message_t" ref="0x7f1d740d5020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f1d73dfd380" loc="147:/home/hades/tinyos-new/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1d740d7930"/>
                <typename><typedef-ref name="message_t" ref="0x7f1d740d5020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x7f1d73dfb970" loc="162:/home/hades/tinyos-new/tos/interfaces/AMPacket.nc">
        <documentation loc="149:/home/hades/tinyos-new/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM type of the AM packet.</short>
          <long>&#10; Set the AM type of the AM packet.  As the AM type is set as part&#10; of sending with the AMSend interface, this command is not used&#10; for sending packets. Instead, it is used when a component, such&#10; as a queue, needs to buffer a request to send. The component can&#10; save the AM type in the packet then recover it when actually&#10; sending. If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of&#10; this command are undefined.&#10; &#10; @param  'message_t* ONE amsg'    the packet&#10; @param  t       the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1d740d7930"/>
                <typename><typedef-ref name="message_t" ref="0x7f1d740d5020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7f1d740e7d50"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f1d73dfb3c0" loc="162:/home/hades/tinyos-new/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1d740d7930"/>
                <typename><typedef-ref name="message_t" ref="0x7f1d740d5020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="t" ref="0x7f1d73dfb6e0" loc="162:/home/hades/tinyos-new/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7f1d740e7d50"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x7f1d73dfe390" loc="136:/home/hades/tinyos-new/tos/interfaces/AMPacket.nc">
        <documentation loc="123:/home/hades/tinyos-new/tos/interfaces/AMPacket.nc">
          <short>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote.</short>
          <long>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote. This is&#10; partially a shortcut for testing whether the return value of&#10; &#60;tt>destination&#60;/tt> and &#60;tt>address&#60;/tt> are the same. It&#10; may, however, include additional logic. For example, there&#10; may be an AM broadcast address: &#60;tt>destination&#60;/tt> will return&#10; the broadcast address, but &#60;tt>address&#60;/tt> will still be&#10; the mote's local address. If &#60;tt>amsg&#60;/tt> is not an AM packet,&#10; the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        whether the packet is addressed to this AM stack&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1d747a7090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1d740d7930"/>
                <typename><typedef-ref name="message_t" ref="0x7f1d740d5020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f1d73dfe110" loc="136:/home/hades/tinyos-new/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1d740d7930"/>
                <typename><typedef-ref name="message_t" ref="0x7f1d740d5020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x7f1d73dfa0c0" loc="187:/home/hades/tinyos-new/tos/interfaces/AMPacket.nc">
        <documentation loc="179:/home/hades/tinyos-new/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM group field of a packet.</short>
          <long>&#10; Set the AM group field of a packet. Note that most data link&#10; stacks will set this field automatically on a send request, which&#10; may overwrite changes made with this command.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @param group the packet's new AM group value&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1d740d7930"/>
                <typename><typedef-ref name="message_t" ref="0x7f1d740d5020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7f1d740e5180"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f1d73df8a60" loc="187:/home/hades/tinyos-new/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1d740d7930"/>
                <typename><typedef-ref name="message_t" ref="0x7f1d740d5020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x7f1d73df8db0" loc="187:/home/hades/tinyos-new/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7f1d740e5180"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localGroup" ref="0x7f1d73df6020" loc="195:/home/hades/tinyos-new/tos/interfaces/AMPacket.nc">
        <documentation loc="189:/home/hades/tinyos-new/tos/interfaces/AMPacket.nc">
          <short>&#10; Provides the current AM group of this communication interface.</short>
          <long>&#10; Provides the current AM group of this communication interface.&#10;&#10; @return The AM group.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7f1d740e5180"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioBackoff" loc="54:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/RadioBackoff.nc">
      <documentation loc="32:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <short>&#10; Interface to request and specify backoff periods for messages&#10; &#10; We use a call back method for setting the backoff as opposed to &#10; events that return backoff values.</short>
        <long>&#10; Interface to request and specify backoff periods for messages&#10; &#10; We use a call back method for setting the backoff as opposed to &#10; events that return backoff values.  &#10; &#10; This is because of fan-out issues with multiple components wanting to&#10; affect backoffs for whatever they're interested in:&#10; If you signal out an *event* to request an initial backoff and&#10; several components happen to be listening, then those components&#10; would be required to return a backoff value.  We don't want that&#10; behavior.&#10; With this strategy, components can listen for the requests and then&#10; decide if they want to affect the behavior.  If the component wants to&#10; affect the behavior, it calls back using the setXYZBackoff(..) command.&#10; If several components call back, then the last component to get its &#10; word in has the final say. &#10;&#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="requestCca" ref="0x7f1d73db4520" loc="95:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="90:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Request for input on whether or not to use CCA on the outbound packet.</short>
          <long>&#10; Request for input on whether or not to use CCA on the outbound packet.&#10; Replies should come in the form of setCca(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1d740d7930"/>
                <typename><typedef-ref name="message_t" ref="0x7f1d740d5020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1d73db42a0" loc="95:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1d740d7930"/>
                <typename><typedef-ref name="message_t" ref="0x7f1d740d5020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="requestInitialBackoff" ref="0x7f1d73db6780" loc="81:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="76:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>  &#10; Request for input on the initial backoff&#10; Reply using setInitialBackoff(..)&#10; </short>
          <long>  &#10; Request for input on the initial backoff&#10; Reply using setInitialBackoff(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1d740d7930"/>
                <typename><typedef-ref name="message_t" ref="0x7f1d740d5020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1d73db6500" loc="81:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1d740d7930"/>
                <typename><typedef-ref name="message_t" ref="0x7f1d740d5020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCongestionBackoff" ref="0x7f1d73db9e70" loc="66:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="62:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Must be called within a requestCongestionBackoff event&#10; </short>
          <long>&#10; Must be called within a requestCongestionBackoff event&#10; @param backoffTime the amount of time in some unspecified units to backoff&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1d74a34520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="backoffTime" ref="0x7f1d73db9bf0" loc="66:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1d74a34520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInitialBackoff" ref="0x7f1d73db9350" loc="60:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="56:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Must be called within a requestInitialBackoff event&#10; </short>
          <long>&#10; Must be called within a requestInitialBackoff event&#10; @param backoffTime the amount of time in some unspecified units to backoff&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1d74a34520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="backoffTime" ref="0x7f1d73db90d0" loc="60:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1d74a34520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCca" ref="0x7f1d73db88d0" loc="73:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="68:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Enable CCA for the outbound packet.</short>
          <long>&#10; Enable CCA for the outbound packet.  Must be called within a requestCca&#10; event&#10; @param ccaOn TRUE to enable CCA, which is the default.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f1d747a7090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ccaOn" ref="0x7f1d73db8650" loc="73:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f1d747a7090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="requestCongestionBackoff" ref="0x7f1d73db5690" loc="88:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="83:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Request for input on the congestion backoff&#10; Reply using setCongestionBackoff(..)&#10; </short>
          <long>&#10; Request for input on the congestion backoff&#10; Reply using setCongestionBackoff(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1d740d7930"/>
                <typename><typedef-ref name="message_t" ref="0x7f1d740d5020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1d73db5410" loc="88:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1d740d7930"/>
                <typename><typedef-ref name="message_t" ref="0x7f1d740d5020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendNotifier" loc="50:/home/hades/tinyos-new/tos/interfaces/SendNotifier.nc">
      <documentation loc="32:/home/hades/tinyos-new/tos/interfaces/SendNotifier.nc">
        <short> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.</short>
        <long> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.  Other modules in the system can call back within this event&#10; to modify the packet's metadata. For example, we can setup a module&#10; in the system to make every CTP data packet send with low power listening&#10; enabled:&#10;&#10;   event void SendNotifier.aboutToSend[AM_COLLECTION_DATA](uint8_t dest,&#10;       message_t *msg) {&#10;     call LowPowerListening.setRxSleepInterval(msg, 512);&#10;   }&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="aboutToSend" ref="0x7f1d73da8e60" loc="59:/home/hades/tinyos-new/tos/interfaces/SendNotifier.nc">
        <documentation loc="52:/home/hades/tinyos-new/tos/interfaces/SendNotifier.nc">
          <short>&#10; The system is about to send this message.</short>
          <long>&#10; The system is about to send this message. Fill in any last modifications&#10; and the message will be sent.&#10; &#10; @param dest The destination address of the messsage&#10; @param 'message_t* ONE msg' The message about to be transmitted&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendNotifier"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f1d740e5560"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1d740d7930"/>
                <typename><typedef-ref name="message_t" ref="0x7f1d740d5020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dest" ref="0x7f1d73da8850" loc="59:/home/hades/tinyos-new/tos/interfaces/SendNotifier.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f1d740e5560"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x7f1d73da8bd0" loc="59:/home/hades/tinyos-new/tos/interfaces/SendNotifier.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1d740d7930"/>
                <typename><typedef-ref name="message_t" ref="0x7f1d740d5020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Packet" loc="40:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Packet.nc">
      <documentation loc="32:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <function command="" provided="0" name="setPower" ref="0x7f1d73dc3120" loc="56:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="49:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Set transmission power for a given packet.</short>
          <long>&#10; Set transmission power for a given packet. Valid ranges are&#10; between 0 and 31.&#10;&#10; @param p_msg the message.&#10; @param power transmission power.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1d740d7930"/>
                <typename><typedef-ref name="message_t" ref="0x7f1d740d5020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1d74a34160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f1d73dc4ae0" loc="56:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1d740d7930"/>
                <typename><typedef-ref name="message_t" ref="0x7f1d740d5020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="power" ref="0x7f1d73dc4e30" loc="56:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1d74a34160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setNetwork" ref="0x7f1d73dbf710" loc="77:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1d740d7930"/>
                <typename><typedef-ref name="message_t" ref="0x7f1d740d5020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1d74a34160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f1d73dbf110" loc="77:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1d740d7930"/>
                <typename><typedef-ref name="message_t" ref="0x7f1d740d5020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="networkId" ref="0x7f1d73dbf480" loc="77:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1d74a34160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRssi" ref="0x7f1d73dc3c00" loc="64:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="58:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get rssi value for a given packet.</short>
          <long>&#10; Get rssi value for a given packet. For received packets, it is&#10; the received signal strength when receiving that packet. For sent&#10; packets, it is the received signal strength of the ack if an ack&#10; was received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="signed char" size="I:1" alignment="I:1">
            <typename><typedef-ref name="int8_t" ref="0x7f1d74a35110"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1d740d7930"/>
                <typename><typedef-ref name="message_t" ref="0x7f1d740d5020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f1d73dc3980" loc="64:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1d740d7930"/>
                <typename><typedef-ref name="message_t" ref="0x7f1d740d5020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getNetwork" ref="0x7f1d73dc0620" loc="75:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1d74a34160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1d740d7930"/>
                <typename><typedef-ref name="message_t" ref="0x7f1d740d5020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f1d73dc03a0" loc="75:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1d740d7930"/>
                <typename><typedef-ref name="message_t" ref="0x7f1d740d5020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPower" ref="0x7f1d73dc42e0" loc="47:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="42:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get transmission power setting for current packet.</short>
          <long>&#10; Get transmission power setting for current packet.&#10;&#10; @param the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1d74a34160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1d740d7930"/>
                <typename><typedef-ref name="message_t" ref="0x7f1d740d5020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f1d73dc4060" loc="47:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1d740d7930"/>
                <typename><typedef-ref name="message_t" ref="0x7f1d740d5020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLqi" ref="0x7f1d73dc1760" loc="72:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="66:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get lqi value for a given packet.</short>
          <long>&#10; Get lqi value for a given packet. For received packets, it is the&#10; link quality indicator value when receiving that packet. For sent&#10; packets, it is the link quality indicator value of the ack if an&#10; ack was received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1d74a34160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1d740d7930"/>
                <typename><typedef-ref name="message_t" ref="0x7f1d740d5020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f1d73dc14e0" loc="72:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1d740d7930"/>
                <typename><typedef-ref name="message_t" ref="0x7f1d740d5020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketLink" loc="37:/home/hades/tinyos-new/tos/interfaces/PacketLink.nc">
      <documentation loc="32:/home/hades/tinyos-new/tos/interfaces/PacketLink.nc">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <function command="" provided="0" name="getRetryDelay" ref="0x7f1d73dac6c0" loc="65:/home/hades/tinyos-new/tos/interfaces/PacketLink.nc">
        <documentation loc="61:/home/hades/tinyos-new/tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the delay between retry attempts in ms for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1d74a34520"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1d740d7930"/>
                <typename><typedef-ref name="message_t" ref="0x7f1d740d5020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1d73dac440" loc="65:/home/hades/tinyos-new/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1d740d7930"/>
                <typename><typedef-ref name="message_t" ref="0x7f1d740d5020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetries" ref="0x7f1d73db0790" loc="46:/home/hades/tinyos-new/tos/interfaces/PacketLink.nc">
        <documentation loc="39:/home/hades/tinyos-new/tos/interfaces/PacketLink.nc">
          <short>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; </short>
          <long>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; @param 'message_t* ONE msg'&#10; @param maxRetries the maximum number of attempts to deliver&#10;     the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1d740d7930"/>
                <typename><typedef-ref name="message_t" ref="0x7f1d740d5020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1d74a34520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1d73db0170" loc="46:/home/hades/tinyos-new/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1d740d7930"/>
                <typename><typedef-ref name="message_t" ref="0x7f1d740d5020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="maxRetries" ref="0x7f1d73db0500" loc="46:/home/hades/tinyos-new/tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1d74a34520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRetries" ref="0x7f1d73dad680" loc="59:/home/hades/tinyos-new/tos/interfaces/PacketLink.nc">
        <documentation loc="55:/home/hades/tinyos-new/tos/interfaces/PacketLink.nc">
          <short> &#10; </short>
          <long> &#10; @param 'message_t* ONE msg'&#10; @return the maximum number of retry attempts for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1d74a34520"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1d740d7930"/>
                <typename><typedef-ref name="message_t" ref="0x7f1d740d5020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1d73dad400" loc="59:/home/hades/tinyos-new/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1d740d7930"/>
                <typename><typedef-ref name="message_t" ref="0x7f1d740d5020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetryDelay" ref="0x7f1d73dafb90" loc="53:/home/hades/tinyos-new/tos/interfaces/PacketLink.nc">
        <documentation loc="48:/home/hades/tinyos-new/tos/interfaces/PacketLink.nc">
          <short>&#10; Set a delay between each retry attempt&#10; </short>
          <long>&#10; Set a delay between each retry attempt&#10; @param msg&#10; @param retryDelay the delay betweeen retry attempts, in milliseconds&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1d740d7930"/>
                <typename><typedef-ref name="message_t" ref="0x7f1d740d5020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1d74a34520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1d73daf570" loc="53:/home/hades/tinyos-new/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1d740d7930"/>
                <typename><typedef-ref name="message_t" ref="0x7f1d740d5020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="retryDelay" ref="0x7f1d73daf900" loc="53:/home/hades/tinyos-new/tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1d74a34520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasDelivered" ref="0x7f1d73dab6c0" loc="71:/home/hades/tinyos-new/tos/interfaces/PacketLink.nc">
        <documentation loc="67:/home/hades/tinyos-new/tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return TRUE if the message was delivered.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1d747a7090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1d740d7930"/>
                <typename><typedef-ref name="message_t" ref="0x7f1d740d5020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1d73dab440" loc="71:/home/hades/tinyos-new/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1d740d7930"/>
                <typename><typedef-ref name="message_t" ref="0x7f1d740d5020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LinkPacketMetadata" loc="37:/home/hades/tinyos-new/tos/interfaces/LinkPacketMetadata.nc">
      <documentation loc="32:/home/hades/tinyos-new/tos/interfaces/LinkPacketMetadata.nc">
        <short>&#10; This interface provides metadata associated with a link layer packet.</short>
        <long>&#10; This interface provides metadata associated with a link layer packet.&#10; @author Philip Levis&#10;</long>
      </documentation>
      <function command="" provided="0" name="highChannelQuality" ref="0x7f1d73dbb2a0" loc="47:/home/hades/tinyos-new/tos/interfaces/LinkPacketMetadata.nc">
        <documentation loc="39:/home/hades/tinyos-new/tos/interfaces/LinkPacketMetadata.nc">
          <short>&#10; Return true if the channel during this packet had high quality (few bit errors).</short>
          <long>&#10; Return true if the channel during this packet had high quality (few bit errors).&#10; A good rule of thumb for &#34;high quality&#34; is that the channel quality&#10; would enable MTU packets to have a reception rate of 90% or greater.&#10;&#10; @param 'message_t* ONE msg' A received packet during which the channel was measured.&#10; @return Whether the channel had high quality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LinkPacketMetadata"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1d747a7090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1d740d7930"/>
                <typename><typedef-ref name="message_t" ref="0x7f1d740d5020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1d73dbb020" loc="47:/home/hades/tinyos-new/tos/interfaces/LinkPacketMetadata.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1d740d7930"/>
                <typename><typedef-ref name="message_t" ref="0x7f1d740d5020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Send" loc="55:/home/hades/tinyos-new/tos/interfaces/Send.nc">
      <documentation loc="34:/home/hades/tinyos-new/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f1d73d9de10" loc="75:/home/hades/tinyos-new/tos/interfaces/Send.nc">
        <documentation loc="57:/home/hades/tinyos-new/tos/interfaces/Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>. To determine&#10; the maximum available size, use the Packet interface of the&#10; component providing Send. If send returns SUCCESS, then the&#10; component will signal the sendDone event in the future; if send&#10; returns an error, it will not signal sendDone.  Note that a&#10; component may accept a send request which it later finds it&#10; cannot satisfy; in this case, it will signal sendDone with an&#10; appropriate error code.&#10;&#10; @param   'message_t* ONE msg'     the packet to send&#10; @param   len     the length of the packet payload&#10; @return          SUCCESS if the request was accepted and will issue&#10;                  a sendDone event, EBUSY if the component cannot accept&#10;                  the request now but will be able to later, FAIL&#10;                  if the stack is in a state that cannot accept requests&#10;                  (e.g., it's off).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1d7479ecb0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1d740d7930"/>
                <typename><typedef-ref name="message_t" ref="0x7f1d740d5020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1d74a34160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1d73d9d850" loc="75:/home/hades/tinyos-new/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1d740d7930"/>
                <typename><typedef-ref name="message_t" ref="0x7f1d740d5020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f1d73d9db80" loc="75:/home/hades/tinyos-new/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1d74a34160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7f1d73d96620" loc="125:/home/hades/tinyos-new/tos/interfaces/Send.nc">
        <documentation loc="115:/home/hades/tinyos-new/tos/interfaces/Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.  If the payload region is smaller than&#10; the len parameter, then getPayload returns NULL. This command&#10; behaves identicallt to &#60;tt>Packet.getPayload&#60;/tt> and is&#10; included in this interface as a convenience.&#10;&#10; @param   'message_t* ONE msg'    the packet&#10; @return  'void* COUNT_NOK(len)'  a pointer to the packet's payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1d740d7930"/>
                <typename><typedef-ref name="message_t" ref="0x7f1d740d5020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1d74a34160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1d73d96020" loc="125:/home/hades/tinyos-new/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1d740d7930"/>
                <typename><typedef-ref name="message_t" ref="0x7f1d740d5020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f1d73d96350" loc="125:/home/hades/tinyos-new/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1d74a34160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7f1d73d95660" loc="112:/home/hades/tinyos-new/tos/interfaces/Send.nc">
        <documentation loc="102:/home/hades/tinyos-new/tos/interfaces/Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return  the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1d74a34160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f1d73d992a0" loc="89:/home/hades/tinyos-new/tos/interfaces/Send.nc">
        <documentation loc="77:/home/hades/tinyos-new/tos/interfaces/Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;&#10; @param   'message_t* ONE msg'    the packet whose transmission should be cancelled&#10; @return         SUCCESS if the packet was successfully cancelled, FAIL&#10;                 otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1d7479ecb0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1d740d7930"/>
                <typename><typedef-ref name="message_t" ref="0x7f1d740d5020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1d73d99020" loc="89:/home/hades/tinyos-new/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1d740d7930"/>
                <typename><typedef-ref name="message_t" ref="0x7f1d740d5020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f1d73d98750" loc="100:/home/hades/tinyos-new/tos/interfaces/Send.nc">
        <documentation loc="91:/home/hades/tinyos-new/tos/interfaces/Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt>&#10; is the sent buffer, and &#60;tt>error&#60;/tt> indicates whether the&#10; send was succesful, and if not, the cause of the failure.&#10; &#10; @param 'message_t* ONE msg'   the message which was requested to send&#10; @param error SUCCESS if it was transmitted successfully, FAIL if&#10;              it was not, ECANCEL if it was cancelled via &#60;tt>cancel&#60;/tt>&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1d740d7930"/>
                <typename><typedef-ref name="message_t" ref="0x7f1d740d5020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f1d7479ecb0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1d73d98170" loc="100:/home/hades/tinyos-new/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1d740d7930"/>
                <typename><typedef-ref name="message_t" ref="0x7f1d740d5020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7f1d73d984c0" loc="100:/home/hades/tinyos-new/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f1d7479ecb0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Resource" loc="77:/home/hades/tinyos-new/tos/interfaces/Resource.nc">
      <documentation loc="63:/home/hades/tinyos-new/tos/interfaces/Resource.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.  It is always offered as a parameterized&#10; interface, and its users gain access to the resource through some&#10; predefined arbitration policy.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.6 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x7f1d73d9fcc0" loc="120:/home/hades/tinyos-new/tos/interfaces/Resource.nc">
        <documentation loc="104:/home/hades/tinyos-new/tos/interfaces/Resource.nc">
          <short>&#10; Release a shared resource you previously acquired.</short>
          <long>&#10; Release a shared resource you previously acquired.  &#10;&#10; @return SUCCESS The resource has been released &#60;br>&#10;         FAIL You tried to release but you are not the&#10;              owner of the resource &#10;&#10; @note This command should never be called between putting in a request &#9;  &#10;       and waiting for a granted event.  Doing so will result in a&#10;       potential race condition.  There are ways to guarantee that no&#10;       race will occur, but they are clumsy and overly complicated.&#10;       Since it doesn't logically make since to be calling&#10;       &#60;code>release&#60;/code> before receiving a &#60;code>granted&#60;/code> event, &#10;       we have opted to keep thing simple and warn you about the potential &#10;       race.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1d7479ecb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="immediateRequest" ref="0x7f1d73da0cc0" loc="97:/home/hades/tinyos-new/tos/interfaces/Resource.nc">
        <documentation loc="90:/home/hades/tinyos-new/tos/interfaces/Resource.nc">
          <short>&#10; Request immediate access to a shared resource.</short>
          <long>&#10; Request immediate access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. &#60;br>&#10;            FAIL The request cannot be fulfilled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1d7479ecb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x7f1d73da0350" loc="88:/home/hades/tinyos-new/tos/interfaces/Resource.nc">
        <documentation loc="78:/home/hades/tinyos-new/tos/interfaces/Resource.nc">
          <short>&#10; Request access to a shared resource.</short>
          <long>&#10; Request access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. The granted()&#10;                 event will be signaled once you have control of the&#10;                 resource.&#60;br>&#10;         EBUSY You have already requested this resource and a&#10;               granted event is pending&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1d7479ecb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x7f1d73d9f4f0" loc="102:/home/hades/tinyos-new/tos/interfaces/Resource.nc">
        <documentation loc="99:/home/hades/tinyos-new/tos/interfaces/Resource.nc">
          <short>&#10; You are now in control of the resource.</short>
          <long>&#10; You are now in control of the resource.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x7f1d73d9e8b0" loc="128:/home/hades/tinyos-new/tos/interfaces/Resource.nc">
        <documentation loc="122:/home/hades/tinyos-new/tos/interfaces/Resource.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  @return TRUE  It is the owner &#60;br>&#10;             FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1d747a7090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Transmit" loc="42:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
      <documentation loc="32:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <short>&#10; Low-level abstraction for the transmit path implementaiton of the&#10; ChipCon CC2420 radio.</short>
        <long>&#10; Low-level abstraction for the transmit path implementaiton of the&#10; ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f1d73d75460" loc="51:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="44:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Send a message&#10;&#10; </short>
          <long>&#10; Send a message&#10;&#10; @param p_msg message to send.&#10; @param useCca TRUE if this Tx should use clear channel assessments&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1d7479ecb0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1d740d7930"/>
                <typename><typedef-ref name="message_t" ref="0x7f1d740d5020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f1d747a7090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f1d73d7ae80" loc="51:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1d740d7930"/>
                <typename><typedef-ref name="message_t" ref="0x7f1d740d5020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="useCca" ref="0x7f1d73d751d0" loc="51:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f1d747a7090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f1d73d74860" loc="65:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="60:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Cancel sending of the message.</short>
          <long>&#10; Cancel sending of the message.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1d7479ecb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="modify" ref="0x7f1d73d700d0" loc="84:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="75:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Modify the contents of a packet.</short>
          <long>&#10; Modify the contents of a packet. This command can only be used&#10; when an SFD capture event for the sending packet is signalled.&#10;&#10; @param offset in the message to start modifying.&#10; @param buf to data to write&#10; @param len of bytes to write&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1d7479ecb0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1d74a34160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f1d74a34160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1d74a34160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x7f1d73d71260" loc="84:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1d74a34160"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0x7f1d73d71aa0" loc="84:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f1d74a34160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f1d73d71dd0" loc="84:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1d74a34160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f1d73d73a10" loc="73:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="67:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Signal that a message has been sent&#10;&#10; </short>
          <long>&#10; Signal that a message has been sent&#10;&#10; @param p_msg message to send.&#10; @param error notifaction of how the operation went.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1d740d7930"/>
                <typename><typedef-ref name="message_t" ref="0x7f1d740d5020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f1d7479ecb0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f1d73d73430" loc="73:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1d740d7930"/>
                <typename><typedef-ref name="message_t" ref="0x7f1d740d5020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7f1d73d73780" loc="73:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f1d7479ecb0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resend" ref="0x7f1d73d74020" loc="58:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="53:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Send the previous message again&#10; </short>
          <long>&#10; Send the previous message again&#10; @param useCca TRUE if this re-Tx should use clear channel assessments&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1d7479ecb0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f1d747a7090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="useCca" ref="0x7f1d73d75c70" loc="58:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f1d747a7090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Random" loc="40:/home/hades/tinyos-new/tos/interfaces/Random.nc">
      <documentation loc="34:/home/hades/tinyos-new/tos/interfaces/Random.nc">
        <short> &#10; Interface for generating 16-bit and 32-bit random numbers.</short>
        <long> &#10; Interface for generating 16-bit and 32-bit random numbers.&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005 &#10;</long>
      </documentation>
      <function command="" provided="0" name="rand16" ref="0x7f1d73d6d500" loc="52:/home/hades/tinyos-new/tos/interfaces/Random.nc">
        <documentation loc="48:/home/hades/tinyos-new/tos/interfaces/Random.nc">
          <short> &#10; Produces a 16-bit pseudorandom number.</short>
          <long> &#10; Produces a 16-bit pseudorandom number. &#10; @return Returns low 16 bits of the pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1d74a34520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rand32" ref="0x7f1d73d76cc0" loc="46:/home/hades/tinyos-new/tos/interfaces/Random.nc">
        <documentation loc="42:/home/hades/tinyos-new/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns the 32-bit pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f1d74a34920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="StdControl" loc="86:/home/hades/tinyos-new/tos/interfaces/StdControl.nc">
      <documentation loc="72:/home/hades/tinyos-new/tos/interfaces/StdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.  A call to the&#10; &#60;code>start()&#60;/code> command is a request to switch a component into the&#10; on state, and a call to the &#60;code>stop()&#60;/code> is a request to switch a&#10; component into the off state.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x7f1d73d80a50" loc="95:/home/hades/tinyos-new/tos/interfaces/StdControl.nc">
        <documentation loc="88:/home/hades/tinyos-new/tos/interfaces/StdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1d7479ecb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f1d73d772b0" loc="105:/home/hades/tinyos-new/tos/interfaces/StdControl.nc">
        <documentation loc="97:/home/hades/tinyos-new/tos/interfaces/StdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1d7479ecb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420PacketBody" loc="37:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
      <documentation loc="32:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <short>&#10; Internal interface for the CC2420 to get portions of a packet.</short>
        <long>&#10; Internal interface for the CC2420 to get portions of a packet.&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="getPayload" ref="0x7f1d73d67700" loc="49:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="45:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the payload region of the message, after any headers&#10;    works with extended addressing mode&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1d74a34160"/></typename>
            </type-int>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1d740d7930"/>
                <typename><typedef-ref name="message_t" ref="0x7f1d740d5020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1d73d67440" loc="49:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1d740d7930"/>
                <typename><typedef-ref name="message_t" ref="0x7f1d740d5020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getHeader" ref="0x7f1d73d68be0" loc="42:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="39:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the cc2420_header_t of the given message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:12" alignment="I:1"><nx_struct-ref name="cc2420_header_t" ref="0x7f1d74121680"/>
              <typename><typedef-ref name="cc2420_header_t" ref="0x7f1d7411e020"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1d740d7930"/>
                <typename><typedef-ref name="message_t" ref="0x7f1d740d5020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1d73d688e0" loc="42:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1d740d7930"/>
                <typename><typedef-ref name="message_t" ref="0x7f1d740d5020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getMetadata" ref="0x7f1d73d66a00" loc="53:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="50:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the cc2420_metadata_t of the given message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:12" alignment="I:1"><nx_struct-ref name="cc2420_metadata_t" ref="0x7f1d7411eb20"/>
              <typename><typedef-ref name="cc2420_metadata_t" ref="0x7f1d7411c440"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1d740d7930"/>
                <typename><typedef-ref name="message_t" ref="0x7f1d740d5020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1d73d66700" loc="53:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1d740d7930"/>
                <typename><typedef-ref name="message_t" ref="0x7f1d740d5020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Power" loc="42:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Power.nc">
      <documentation loc="32:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <short>&#10; An HAL abstraction of the ChipCon CC2420 radio.</short>
        <long>&#10; An HAL abstraction of the ChipCon CC2420 radio. This abstraction&#10; deals specifically with radio power operations (e.g. voltage&#10; regulator, oscillator, etc). However, it does not include&#10; transmission power, see the CC2420Config interface.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:14 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="startOscillator" ref="0x7f1d73d7d6e0" loc="71:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="65:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Start the oscillator.</short>
          <long>&#10; Start the oscillator. On SUCCESS, &#60;code>startOscillator&#60;/code>&#10; will be signalled when the oscillator has been started.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1d7479ecb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rfOff" ref="0x7f1d73d7b840" loc="97:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="92:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Disable RX.</short>
          <long>&#10; Disable RX.&#10;&#10; @return SUCCESS if receive mode has been disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1d7479ecb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rxOn" ref="0x7f1d73d7b070" loc="90:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="85:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Enable RX.</short>
          <long>&#10; Enable RX.&#10;&#10; @return SUCCESS if receive mode has been enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1d7479ecb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startVReg" ref="0x7f1d73d82e30" loc="51:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="44:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Start the voltage regulator on the CC2420.</short>
          <long>&#10; Start the voltage regulator on the CC2420. On SUCCESS,&#10; &#60;code>startVReg()&#60;/code> will be signalled when the voltage&#10; regulator is fully on.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1d7479ecb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopVReg" ref="0x7f1d73d7ee80" loc="63:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="58:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Stop the voltage regulator immediately.</short>
          <long>&#10; Stop the voltage regulator immediately.&#10;&#10; @return SUCCESS always&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1d7479ecb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="startOscillatorDone" ref="0x7f1d73d7c020" loc="76:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="73:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Signals that the oscillator has been started.</short>
          <long>&#10; Signals that the oscillator has been started.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopOscillator" ref="0x7f1d73d7c840" loc="83:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="78:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Stop the oscillator.</short>
          <long>&#10; Stop the oscillator.&#10;&#10; @return SUCCESS if the oscillator was stopped, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1d7479ecb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="startVRegDone" ref="0x7f1d73d7e6c0" loc="56:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="53:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Signals that the voltage regulator has been started.</short>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="State" loc="38:/home/hades/tinyos-new/tos/interfaces/State.nc">
      <documentation loc="33:/home/hades/tinyos-new/tos/interfaces/State.nc">
        <short>&#10; State machine interface&#10; </short>
        <long>&#10; State machine interface&#10; @author David Moss - dmm@rincon.com&#10;</long>
      </documentation>
      <function command="" provided="0" name="getState" ref="0x7f1d73d5e020" loc="71:/home/hades/tinyos-new/tos/interfaces/State.nc">
        <documentation loc="68:/home/hades/tinyos-new/tos/interfaces/State.nc">
          <short>&#10; Get the current state&#10;</short>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1d74a34160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toIdle" ref="0x7f1d73d615a0" loc="56:/home/hades/tinyos-new/tos/interfaces/State.nc">
        <documentation loc="53:/home/hades/tinyos-new/tos/interfaces/State.nc">
          <short>&#10; Set the current state back to S_IDLE&#10;</short>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isState" ref="0x7f1d73d60760" loc="66:/home/hades/tinyos-new/tos/interfaces/State.nc">
        <documentation loc="63:/home/hades/tinyos-new/tos/interfaces/State.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the state machine is in the given state&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1d747a7090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1d74a34160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="myState" ref="0x7f1d73d604e0" loc="66:/home/hades/tinyos-new/tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1d74a34160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isIdle" ref="0x7f1d73d61d10" loc="61:/home/hades/tinyos-new/tos/interfaces/State.nc">
        <documentation loc="58:/home/hades/tinyos-new/tos/interfaces/State.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the state machine is in S_IDLE&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1d747a7090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="requestState" ref="0x7f1d73d622e0" loc="45:/home/hades/tinyos-new/tos/interfaces/State.nc">
        <documentation loc="40:/home/hades/tinyos-new/tos/interfaces/State.nc">
          <short>&#10; This will allow a state change so long as the current&#10; state is S_IDLE.</short>
          <long>&#10; This will allow a state change so long as the current&#10; state is S_IDLE.&#10; @return SUCCESS if the state is change, FAIL if it isn't&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1d7479ecb0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1d74a34160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reqState" ref="0x7f1d73d62060" loc="45:/home/hades/tinyos-new/tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1d74a34160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="forceState" ref="0x7f1d73d62d90" loc="51:/home/hades/tinyos-new/tos/interfaces/State.nc">
        <documentation loc="47:/home/hades/tinyos-new/tos/interfaces/State.nc">
          <short>&#10; Force the state machine to go into a certain state,&#10; regardless of the current state it's in.</short>
          <long>&#10; Force the state machine to go into a certain state,&#10; regardless of the current state it's in.&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1d74a34160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reqState" ref="0x7f1d73d62b10" loc="51:/home/hades/tinyos-new/tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1d74a34160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Config" loc="46:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Config.nc">
      <documentation loc="32:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <short>&#10; An HAL abstraction of the ChipCon CC2420 radio.</short>
        <long>&#10; An HAL abstraction of the ChipCon CC2420 radio. This abstraction&#10; deals specifically with radio configurations. All get() and set()&#10; commands are single-phase. After setting some values, a call to&#10; sync() is required for the changes to propagate to the cc2420&#10; hardware chip. This interface allows setting multiple parameters&#10; before calling sync().&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008/06/16 15:33:32 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="setAutoAck" ref="0x7f1d73d04870" loc="106:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="100:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Sync must be called for acknowledgement changes to take effect&#10; </short>
          <long>&#10; Sync must be called for acknowledgement changes to take effect&#10; @param enableAutoAck TRUE to enable auto acknowledgements&#10; @param hwAutoAck TRUE to default to hardware auto acks, FALSE to&#10;     default to software auto acknowledgements&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f1d747a7090"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f1d747a7090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enableAutoAck" ref="0x7f1d73d04290" loc="106:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f1d747a7090"/></typename>
            </type-int>
          </variable>
          <variable name="hwAutoAck" ref="0x7f1d73d045e0" loc="106:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f1d747a7090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAddressRecognitionEnabled" ref="0x7f1d73d061f0" loc="93:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="90:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if address recognition is enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1d747a7090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddressRecognition" ref="0x7f1d73d07880" loc="87:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="81:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @param enableAddressRecognition TRUE to turn address recognition on&#10; @param useHwAddressRecognition TRUE to perform address recognition first&#10;     in hardware. This doesn't affect software address recognition. The&#10;     driver must sync with the chip after changing this value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f1d747a7090"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f1d747a7090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enableAddressRecognition" ref="0x7f1d73d07210" loc="87:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f1d747a7090"/></typename>
            </type-int>
          </variable>
          <variable name="useHwAddressRecognition" ref="0x7f1d73d075f0" loc="87:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f1d747a7090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="syncDone" ref="0x7f1d73d0dc10" loc="55:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f1d7479ecb0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f1d73d0d990" loc="55:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f1d7479ecb0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isHwAddressRecognitionDefault" ref="0x7f1d73d06a70" loc="98:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="95:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if address recognition is performed first in hardware.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1d747a7090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setShortAddr" ref="0x7f1d73d09730" loc="72:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1d74a34520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="address" ref="0x7f1d73d094b0" loc="72:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1d74a34520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0x7f1d73d0cd30" loc="61:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1d74a34160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x7f1d73d0cab0" loc="61:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1d74a34160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAutoAckEnabled" ref="0x7f1d73d03ae0" loc="117:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="114:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if auto acks are enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1d747a7090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPanAddr" ref="0x7f1d73d089c0" loc="78:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1d74a34520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="address" ref="0x7f1d73d08740" loc="78:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1d74a34520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isHwAutoAckDefault" ref="0x7f1d73d032b0" loc="112:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="108:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if hardware auto acks are the default, FALSE if software&#10;     acks are the default&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1d747a7090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getExtAddr" ref="0x7f1d73d0a4d0" loc="66:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="63:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Get the long address of the radio: set in hardware&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:8" alignment="I:1"><struct-ref name="ieee_eui64" ref="0x7f1d73dd9790"/>
            <typename><typedef-ref name="ieee_eui64_t" ref="0x7f1d73dd7020"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getShortAddr" ref="0x7f1d73d0acc0" loc="71:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="68:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the short address of the radio.</short>
          <long>&#10; Change the short address of the radio.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1d74a34520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sync" ref="0x7f1d73d0d1f0" loc="54:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="48:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Sync configuration changes with the radio hardware.</short>
          <long>&#10; Sync configuration changes with the radio hardware. This only&#10; applies to set commands below.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1d7479ecb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x7f1d73d0c390" loc="60:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="57:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the channel of the radio, between 11 and 26&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1d74a34160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getPanAddr" ref="0x7f1d73d08020" loc="77:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="74:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the PAN address of the radio.</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1d74a34520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Register" loc="47:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Register.nc">
      <documentation loc="33:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Register.nc">
        <short>&#10; Interface representing one of the Read/Write registers on the&#10; CC2420 radio.</short>
        <long>&#10; Interface representing one of the Read/Write registers on the&#10; CC2420 radio. The return values (when appropriate) refer to the&#10; status byte returned on the CC2420 SO pin. A full list of RW&#10; registers can be found on page 61 of the CC2420 datasheet (rev&#10; 1.2). Page 25 of the same document describes the protocol for&#10; interacting with these registers over the CC2420 SPI bus.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.3 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x7f1d73cd6c10" loc="55:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Register.nc">
        <documentation loc="49:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Register.nc">
          <short>&#10; Read a 16-bit data word from the register.</short>
          <long>&#10; Read a 16-bit data word from the register.&#10;&#10; @param data pointer to place the register value.&#10; @return status byte from the read.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Register"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f1d74128870"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7f1d74a34520"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f1d73cd6990" loc="55:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Register.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7f1d74a34520"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f1d73cd5710" loc="63:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Register.nc">
        <documentation loc="57:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Register.nc">
          <short>&#10; Write a 16-bit data word to the register.</short>
          <long>&#10; Write a 16-bit data word to the register.&#10; &#10; @param data value to write to register.&#10; @return status byte from the write.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Register"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f1d74128870"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1d74a34520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f1d73cd5490" loc="63:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Register.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1d74a34520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalIeeeEui64" loc="43:/home/hades/tinyos-new/tos/interfaces/LocalIeeeEui64.nc">
      <documentation loc="39:/home/hades/tinyos-new/tos/interfaces/LocalIeeeEui64.nc">
        <short>&#10; Interface to read the 64-bit IEEE EUI.</short>
        <long>&#10; Interface to read the 64-bit IEEE EUI.&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="getId" ref="0x7f1d73cf6c60" loc="48:/home/hades/tinyos-new/tos/interfaces/LocalIeeeEui64.nc">
        <documentation loc="44:/home/hades/tinyos-new/tos/interfaces/LocalIeeeEui64.nc">
          <short>&#10; Get the 64-bit IEEE EUI.</short>
          <long>&#10; Get the 64-bit IEEE EUI.&#10; @returns the 64-bit IEEE EUI type, defined in tos/types/IeeeEui64.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalIeeeEui64"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:8" alignment="I:1"><struct-ref name="ieee_eui64" ref="0x7f1d73dd9790"/>
            <typename><typedef-ref name="ieee_eui64_t" ref="0x7f1d73dd7020"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="56:/home/hades/tinyos-new/tos/lib/timer/Alarm.nc">
      <documentation loc="36:/home/hades/tinyos-new/tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f1d73cf2020" loc="56:/home/hades/tinyos-new/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f1d73cf2020"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f1d73cf2260" loc="56:/home/hades/tinyos-new/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f1d73cf2260"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x7f1d73ceee00" loc="109:/home/hades/tinyos-new/tos/lib/timer/Alarm.nc">
        <documentation loc="105:/home/hades/tinyos-new/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f1d73cf2260"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f1d73cf0e40" loc="78:/home/hades/tinyos-new/tos/lib/timer/Alarm.nc">
        <documentation loc="75:/home/hades/tinyos-new/tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
          <long>&#10; Signaled when the alarm expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x7f1d73cee460" loc="103:/home/hades/tinyos-new/tos/lib/timer/Alarm.nc">
        <documentation loc="90:/home/hades/tinyos-new/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f1d73cf2260"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f1d73cf2260"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7f1d73cefe60" loc="103:/home/hades/tinyos-new/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f1d73cf2260"/></type-var>
          </variable>
          <variable name="dt" ref="0x7f1d73cee1d0" loc="103:/home/hades/tinyos-new/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f1d73cf2260"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x7f1d73cef640" loc="88:/home/hades/tinyos-new/tos/lib/timer/Alarm.nc">
        <documentation loc="81:/home/hades/tinyos-new/tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1d747a7090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x7f1d73ced620" loc="116:/home/hades/tinyos-new/tos/lib/timer/Alarm.nc">
        <documentation loc="111:/home/hades/tinyos-new/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f1d73cf2260"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7f1d73cf2dc0" loc="66:/home/hades/tinyos-new/tos/lib/timer/Alarm.nc">
        <documentation loc="59:/home/hades/tinyos-new/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f1d73cf2260"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f1d73cf2b40" loc="66:/home/hades/tinyos-new/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f1d73cf2260"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f1d73cf0680" loc="73:/home/hades/tinyos-new/tos/lib/timer/Alarm.nc">
        <documentation loc="68:/home/hades/tinyos-new/tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageAddress" loc="38:/home/hades/tinyos-new/tos/interfaces/ActiveMessageAddress.nc">
      <documentation loc="34:/home/hades/tinyos-new/tos/interfaces/ActiveMessageAddress.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="amAddress" ref="0x7f1d73cdf560" loc="50:/home/hades/tinyos-new/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="47:/home/hades/tinyos-new/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the active message address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7f1d740e5560"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="changed" ref="0x7f1d73cdd4f0" loc="60:/home/hades/tinyos-new/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="57:/home/hades/tinyos-new/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Notification that the address or group settings changed.</short>
          <long>&#10; Notification that the address or group settings changed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="amGroup" ref="0x7f1d73cdfd40" loc="55:/home/hades/tinyos-new/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="52:/home/hades/tinyos-new/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the group address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7f1d740e5180"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddress" ref="0x7f1d73ce0cd0" loc="45:/home/hades/tinyos-new/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="40:/home/hades/tinyos-new/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Set the active message address of this node&#10; </short>
          <long>&#10; Set the active message address of this node&#10; @param group The node's group ID&#10; @param addr The node's active message address&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7f1d740e5180"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f1d740e5560"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="group" ref="0x7f1d73ce06f0" loc="45:/home/hades/tinyos-new/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7f1d740e5180"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x7f1d73ce0a40" loc="45:/home/hades/tinyos-new/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f1d740e5560"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Strobe" loc="44:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Strobe.nc">
      <documentation loc="33:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Strobe.nc">
        <short>&#10; Interface representing one of the CC2420 command strobe registers.</short>
        <long>&#10; Interface representing one of the CC2420 command strobe registers.&#10; Writing to one of these registers enacts a command on the CC2420,&#10; such as power-up, transmission, or clear a FIFO.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.3 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="strobe" ref="0x7f1d73cd2e50" loc="53:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Strobe.nc">
        <documentation loc="46:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Strobe.nc">
          <short>&#10; Send a command strobe to the register.</short>
          <long>&#10; Send a command strobe to the register. The return value is the&#10; CC2420 status register. Table 5 on page 27 of the CC2420&#10; datasheet (v1.2) describes the contents of this register.&#10; &#10; @return Status byte from the CC2420.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Strobe"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f1d74128870"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Ram" loc="41:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Ram.nc">
      <documentation loc="32:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <short>&#10; HAL abstraction for accessing theRAM of a ChipCon CC2420 radio.</short>
        <long>&#10; HAL abstraction for accessing theRAM of a ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x7f1d73cdbe80" loc="52:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <documentation loc="43:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Ram.nc">
          <short>&#10; Read data from a RAM.</short>
          <long>&#10; Read data from a RAM. This operation is sychronous.&#10;&#10; @param offset within the field.&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return status byte returned when sending the last byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Ram"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f1d74128870"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1d74a34160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f1d74a34160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1d74a34160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x7f1d73cdb020" loc="52:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1d74a34160"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7f1d73cdb890" loc="52:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f1d74a34160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f1d73cdbbe0" loc="52:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1d74a34160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f1d73cd8610" loc="63:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <documentation loc="54:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Ram.nc">
          <short>&#10; Write data to RAM.</short>
          <long>&#10; Write data to RAM. This operation is sychronous.&#10;&#10; @param offset within the field.&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes to write.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Ram"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f1d74128870"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1d74a34160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f1d74a34160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1d74a34160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x7f1d73cda770" loc="63:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1d74a34160"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7f1d73cd8020" loc="63:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f1d74a34160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f1d73cd8370" loc="63:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1d74a34160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioInterrupt" loc="43:/home/hades/tinyos-new/tos/interfaces/GpioInterrupt.nc">
      <documentation loc="34:/home/hades/tinyos-new/tos/interfaces/GpioInterrupt.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.5 $&#10;&#10; Provides a microcontroller-independent presentation of interrupts&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7f1d73ce2c30" loc="68:/home/hades/tinyos-new/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="63:/home/hades/tinyos-new/tos/interfaces/GpioInterrupt.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; NOTE: Interrupts keep running until &#34;disable()&#34; is called&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x7f1d73ce2470" loc="61:/home/hades/tinyos-new/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="56:/home/hades/tinyos-new/tos/interfaces/GpioInterrupt.nc">
          <short>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; </short>
          <long>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; @return SUCCESS if the interrupt has been disabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1d7479ecb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableFallingEdge" ref="0x7f1d73ce3ce0" loc="54:/home/hades/tinyos-new/tos/interfaces/GpioInterrupt.nc">
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1d7479ecb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRisingEdge" ref="0x7f1d73ce3420" loc="53:/home/hades/tinyos-new/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="45:/home/hades/tinyos-new/tos/interfaces/GpioInterrupt.nc">
          <short> &#10; Enable an edge based interrupt.</short>
          <long> &#10; Enable an edge based interrupt. Calls to these functions are&#10; not cumulative: only the transition type of the last called function&#10; will be monitored for.&#10;&#10;&#10; @return SUCCESS if the interrupt has been enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1d7479ecb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="57:/home/hades/tinyos-new/tos/lib/timer/Counter.nc">
      <documentation loc="36:/home/hades/tinyos-new/tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f1d73bcc4f0" loc="57:/home/hades/tinyos-new/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f1d73bcc4f0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f1d73bcc730" loc="57:/home/hades/tinyos-new/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f1d73bcc730"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7f1d73bcb070" loc="64:/home/hades/tinyos-new/tos/lib/timer/Counter.nc">
        <documentation loc="59:/home/hades/tinyos-new/tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f1d73bcc730"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7f1d73bca190" loc="76:/home/hades/tinyos-new/tos/lib/timer/Counter.nc">
        <documentation loc="73:/home/hades/tinyos-new/tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7f1d73bcb8f0" loc="71:/home/hades/tinyos-new/tos/lib/timer/Counter.nc">
        <documentation loc="66:/home/hades/tinyos-new/tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1d747a7090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x7f1d73bca8f0" loc="82:/home/hades/tinyos-new/tos/lib/timer/Counter.nc">
        <documentation loc="78:/home/hades/tinyos-new/tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioCapture" loc="46:/home/hades/tinyos-new/tos/interfaces/GpioCapture.nc">
      <documentation loc="34:/home/hades/tinyos-new/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="captureFallingEdge" ref="0x7f1d73b04bb0" loc="54:/home/hades/tinyos-new/tos/interfaces/GpioCapture.nc">
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1d7479ecb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x7f1d73b02d70" loc="66:/home/hades/tinyos-new/tos/interfaces/GpioCapture.nc">
        <documentation loc="63:/home/hades/tinyos-new/tos/interfaces/GpioCapture.nc">
          <short>&#10; Disable further captures.</short>
          <long>&#10; Disable further captures.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x7f1d73b025c0" loc="61:/home/hades/tinyos-new/tos/interfaces/GpioCapture.nc">
        <documentation loc="56:/home/hades/tinyos-new/tos/interfaces/GpioCapture.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; @param val The value of the 32kHz timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1d74a34520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7f1d73b02340" loc="61:/home/hades/tinyos-new/tos/interfaces/GpioCapture.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1d74a34520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="captureRisingEdge" ref="0x7f1d73b04350" loc="53:/home/hades/tinyos-new/tos/interfaces/GpioCapture.nc">
        <documentation loc="48:/home/hades/tinyos-new/tos/interfaces/GpioCapture.nc">
          <short> &#10; Enable an edge based timer capture event.</short>
          <long> &#10; Enable an edge based timer capture event.&#10;&#10; @return Whether the timer capture has been enabled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1d7479ecb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430Interrupt" loc="37:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
      <documentation loc="33:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7f1d73adf2b0" loc="52:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="49:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Clears the MSP430 Interrupt Pending Flag for a particular port.</short>
          <long> &#10; Clears the MSP430 Interrupt Pending Flag for a particular port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f1d73aded50" loc="72:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="69:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short>&#10; Signalled when an interrupt occurs on a port.</short>
          <long>&#10; Signalled when an interrupt occurs on a port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x7f1d73ae0af0" loc="47:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="44:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Disables MSP430 hardware interrupt on a particular port.</short>
          <long> &#10; Disables MSP430 hardware interrupt on a particular port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="edge" ref="0x7f1d73ade530" loc="67:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="61:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Sets whether the edge should be high to low or low to high.</short>
          <long> &#10; Sets whether the edge should be high to low or low to high.&#10;&#10; @param TRUE if the interrupt should be triggered on a low to high&#10;        edge transition, false for interrupts on a high to low transition.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f1d747a7090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="low_to_high" ref="0x7f1d73ade2b0" loc="67:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f1d747a7090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enable" ref="0x7f1d73ae0350" loc="42:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="39:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Enables MSP430 hardware interrupt on a particular port.</short>
          <long> &#10; Enables MSP430 hardware interrupt on a particular port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getValue" ref="0x7f1d73adfab0" loc="59:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="54:/home/hades/tinyos-new/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Gets the current value of the input voltage of a port.</short>
          <long> &#10; Gets the current value of the input voltage of a port.&#10;&#10; @return TRUE if the pin is set high, FALSE if it is set low.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1d747a7090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ChipSpiResource" loc="17:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
      <documentation loc="2:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <short>&#10; Interface for the SPI resource for an entire chip.</short>
        <long>&#10; Interface for the SPI resource for an entire chip.  The chip accesses&#10; the platform SPI resource one time, but can have multiple clients &#10; using the SPI bus on top.  When all of the clients are released, the&#10; chip will normally try to release itself from the platforms SPI bus.&#10; In some cases, this isn't desirable - so even though upper components&#10; aren't actively using the SPI bus, they can tell the chip to hold onto&#10; it so they can have immediate access when they need. &#10;&#10; Any component that aborts a release MUST attempt the release at a later&#10; time if they don't acquire and release the SPI bus naturally after the&#10; abort.&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="releasing" ref="0x7f1d739cc2b0" loc="24:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="19:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; The SPI bus is about to be automatically released.</short>
          <long>&#10; The SPI bus is about to be automatically released.  Modules that aren't&#10; using the SPI bus but still want the SPI bus to stick around must call&#10; abortRelease() within the event.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="abortRelease" ref="0x7f1d739ccb00" loc="31:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="27:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; Abort the release of the SPI bus.</short>
          <long>&#10; Abort the release of the SPI bus.  This must be called only with the&#10; releasing() event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="attemptRelease" ref="0x7f1d739cb390" loc="39:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="33:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; Release the SPI bus if there are no objections&#10; </short>
          <long>&#10; Release the SPI bus if there are no objections&#10; @return SUCCESS if the SPI bus is released from the chip.&#10;      FAIL if the SPI bus is already in use.&#10;      EBUSY if some component aborted the release.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1d7479ecb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Fifo" loc="40:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
      <documentation loc="32:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <short>&#10; HAL abstraction for accessing the FIFO registers of a ChipCon&#10; CC2420 radio.</short>
        <long>&#10; HAL abstraction for accessing the FIFO registers of a ChipCon&#10; CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="continueRead" ref="0x7f1d739a5b60" loc="62:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="53:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Continue reading from the FIFO without having to send the address&#10; byte again.</short>
          <long>&#10; Continue reading from the FIFO without having to send the address&#10; byte again. The &#60;code>readDone&#60;/code> event will be signalled&#10; upon completion.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1d7479ecb0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f1d74a34160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1d74a34160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f1d739a5580" loc="62:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f1d74a34160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f1d739a58d0" loc="62:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1d74a34160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="writeDone" ref="0x7f1d7399fdd0" loc="91:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="84:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Signals the completion of a write operation.</short>
          <long>&#10; Signals the completion of a write operation.&#10;&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes written.&#10; @param error notification of how the operation went&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f1d74a34160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1d74a34160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f1d7479ecb0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f1d7399f490" loc="91:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f1d74a34160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f1d7399f7e0" loc="91:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1d74a34160"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7f1d7399fb30" loc="91:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f1d7479ecb0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f1d739a16b0" loc="82:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="73:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Start writing the FIFO.</short>
          <long>&#10; Start writing the FIFO. The &#60;code>writeDone&#60;/code> event will be&#10; signalled upon completion.&#10;&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes to write.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f1d74128870"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f1d74a34160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1d74a34160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f1d739a10d0" loc="82:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f1d74a34160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f1d739a1420" loc="82:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1d74a34160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="beginRead" ref="0x7f1d739a6730" loc="51:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="42:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Start reading from the FIFO.</short>
          <long>&#10; Start reading from the FIFO. The &#60;code>readDone&#60;/code> event will&#10; be signalled upon completion.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f1d74128870"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f1d74a34160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1d74a34160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f1d739a6150" loc="51:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f1d74a34160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f1d739a64a0" loc="51:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1d74a34160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x7f1d739a22c0" loc="71:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="64:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Signals the completion of a read operation.</short>
          <long>&#10; Signals the completion of a read operation.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes read.&#10; @param error notification of how the operation went&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f1d74a34160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1d74a34160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f1d7479ecb0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f1d739a3930" loc="71:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f1d74a34160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f1d739a3c80" loc="71:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1d74a34160"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7f1d739a2020" loc="71:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f1d7479ecb0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiPacket" loc="60:/home/hades/tinyos-new/tos/interfaces/SpiPacket.nc">
      <documentation loc="34:/home/hades/tinyos-new/tos/interfaces/SpiPacket.nc">
        <short>&#10; SPI Packet/buffer interface for sending data over an SPI bus.</short>
        <long>&#10; SPI Packet/buffer interface for sending data over an SPI bus.  This&#10; interface provides a split-phase send command which can be used for&#10; sending, receiving or both.&#10;&#10; The SPI bus both sends and receives at the same time.  So this interface&#10; can be used to send, receive, or both.  The send call allows NULL&#10; parameters for receive or send only operations. This interface is&#10; for buffer based transfers where the microcontroller is the master&#10; (clocking) device.&#10;&#10; This is split phase and typically is implemented using interrupts.  However&#10; as the SPI clock is increased the interrupt overhead become more onerous&#10; wrt each byte time being transfered.  See SpiBLock for a single phase&#10; transfer mechanism that doesn't have interrupt overhead issues.&#10;&#10; Often, an SPI bus must first be acquired using a Resource interface&#10; before sending commands with SPIPacket. In the case of multiple&#10; devices attached to a single SPI bus, chip select pins are often also&#10; used.&#10;&#10; @author Philip Levis&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @author Eric B. Decker&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f1d73985df0" loc="76:/home/hades/tinyos-new/tos/interfaces/SpiPacket.nc">
        <documentation loc="62:/home/hades/tinyos-new/tos/interfaces/SpiPacket.nc">
          <short>&#10; Send a message over the SPI bus.</short>
          <long>&#10; Send a message over the SPI bus.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' A pointer to the buffer to send over the bus. If this&#10;              parameter is NULL, then the SPI will send zeroes.&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' A pointer to the buffer where received data should&#10;              be stored. If this parameter is NULL, then the SPI will&#10;              discard incoming bytes.&#10; @param len   Length of the message.  Note that non-NULL rxBuf and txBuf&#10;              parameters must be AT LEAST as large as len, or the SPI&#10;              will overflow a buffer.&#10;&#10; @return SUCCESS if the request was accepted for transfer&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1d7479ecb0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f1d74a34160"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f1d74a34160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1d74a34520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x7f1d73985480" loc="76:/home/hades/tinyos-new/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f1d74a34160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x7f1d73985810" loc="76:/home/hades/tinyos-new/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f1d74a34160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f1d73985b50" loc="76:/home/hades/tinyos-new/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1d74a34520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f1d739813c0" loc="88:/home/hades/tinyos-new/tos/interfaces/SpiPacket.nc">
        <documentation loc="78:/home/hades/tinyos-new/tos/interfaces/SpiPacket.nc">
          <short>&#10; Notification that the send command has completed.</short>
          <long>&#10; Notification that the send command has completed.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' The buffer used for transmission&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' The buffer used for reception&#10; @param len    The request length of the transfer, but not necessarily&#10;               the number of bytes that were actually transferred&#10; @param error  SUCCESS if the operation completed successfully, FAIL&#10;               otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f1d74a34160"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f1d74a34160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1d74a34520"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f1d7479ecb0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x7f1d739826a0" loc="88:/home/hades/tinyos-new/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f1d74a34160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x7f1d73982a30" loc="88:/home/hades/tinyos-new/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f1d74a34160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f1d73982d70" loc="88:/home/hades/tinyos-new/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1d74a34520"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7f1d73981110" loc="89:/home/hades/tinyos-new/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f1d7479ecb0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiByte" loc="38:/home/hades/tinyos-new/tos/interfaces/SpiByte.nc">
      <documentation loc="34:/home/hades/tinyos-new/tos/interfaces/SpiByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="write" ref="0x7f1d73989ca0" loc="45:/home/hades/tinyos-new/tos/interfaces/SpiByte.nc">
        <documentation loc="40:/home/hades/tinyos-new/tos/interfaces/SpiByte.nc">
          <short>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; </short>
          <long>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; @param tx Byte to transmit&#10; @param rx Received byte is stored here.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1d74a34160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1d74a34160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="tx" ref="0x7f1d73989a20" loc="45:/home/hades/tinyos-new/tos/interfaces/SpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1d74a34160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceRequested" loc="46:/home/hades/tinyos-new/tos/interfaces/ResourceRequested.nc">
      <documentation loc="33:/home/hades/tinyos-new/tos/interfaces/ResourceRequested.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.5 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="requested" ref="0x7f1d738a56f0" loc="53:/home/hades/tinyos-new/tos/interfaces/ResourceRequested.nc">
        <documentation loc="47:/home/hades/tinyos-new/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x7f1d738a4070" loc="61:/home/hades/tinyos-new/tos/interfaces/ResourceRequested.nc">
        <documentation loc="55:/home/hades/tinyos-new/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430SpiConfigure" loc="38:/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430SpiConfigure.nc">
      <documentation loc="31:/home/hades/tinyos-new/tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getConfig" ref="0x7f1d7389d460" loc="39:/home/hades/tinyos-new/tos/chips/msp430/usart/Msp430SpiConfigure.nc">
        <interfacedef-ref qname="Msp430SpiConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:4" alignment="I:2"><union-ref ref="0x7f1d738d7020"/>
              <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x7f1d738d7440"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="FastSpiByte" loc="55:/home/hades/tinyos-new/tos/interfaces/FastSpiByte.nc">
      <documentation loc="35:/home/hades/tinyos-new/tos/interfaces/FastSpiByte.nc">
        <short>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface.</short>
        <long>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface. You may want to&#10; use the following code sequence to write a buffer as fast as possible&#10;&#10;&#9;uint8_t *data;&#10;&#9;uint8_t *response;&#10;&#10;&#9;// start the first byte&#10;&#9;call FastSpiByte.splitWrite(data[0]);&#10;&#9;for(i = 1; i &#60; length; ++i) {&#10;&#9;   // finish the previous one and write the next one&#10;&#9;  response[i-1] = call FastSpiByte.splitReadWrite(data[i]);&#10;&#9;}&#10;&#9;// finish the last byte&#10;&#9;response[length-1] = call FastSpiByte.splitRead();&#10;&#10; You can also do some useful computation (like calculate a CRC) while the&#10; hardware is sending the byte.&#10;</long>
      </documentation>
      <function command="" provided="0" name="splitWrite" ref="0x7f1d738a12a0" loc="62:/home/hades/tinyos-new/tos/interfaces/FastSpiByte.nc">
        <documentation loc="57:/home/hades/tinyos-new/tos/interfaces/FastSpiByte.nc">
          <short>&#10; Starts a split-phase SPI data transfer with the given data.</short>
          <long>&#10; Starts a split-phase SPI data transfer with the given data.&#10; A splitRead/splitReadWrite command must follow this command even &#10; if the result is unimportant.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1d74a34160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f1d738a1020" loc="62:/home/hades/tinyos-new/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1d74a34160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitReadWrite" ref="0x7f1d738a0680" loc="74:/home/hades/tinyos-new/tos/interfaces/FastSpiByte.nc">
        <documentation loc="70:/home/hades/tinyos-new/tos/interfaces/FastSpiByte.nc">
          <short>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns.</short>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1d74a34160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1d74a34160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f1d738a0400" loc="74:/home/hades/tinyos-new/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1d74a34160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitRead" ref="0x7f1d738a1b10" loc="68:/home/hades/tinyos-new/tos/interfaces/FastSpiByte.nc">
        <documentation loc="64:/home/hades/tinyos-new/tos/interfaces/FastSpiByte.nc">
          <short>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.</short>
          <long>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1d74a34160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f1d7389f110" loc="81:/home/hades/tinyos-new/tos/interfaces/FastSpiByte.nc">
        <documentation loc="76:/home/hades/tinyos-new/tos/interfaces/FastSpiByte.nc">
          <short>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.</short>
          <long>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.&#10; (To be consistent, this command could have be named splitWriteRead).&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1d74a34160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1d74a34160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f1d738a0e20" loc="81:/home/hades/tinyos-new/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1d74a34160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceConfigure" loc="54:/home/hades/tinyos-new/tos/interfaces/ResourceConfigure.nc">
      <documentation loc="41:/home/hades/tinyos-new/tos/interfaces/ResourceConfigure.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.  It will always be parameterized along side &#10; a parameterized Resource interface, with the ids from one mapping directly&#10; onto the ids of the other.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="unconfigure" ref="0x7f1d73896b70" loc="65:/home/hades/tinyos-new/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="61:/home/hades/tinyos-new/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to unconfigure a resource just before releasing it.</short>
          <long>&#10; Used to unconfigure a resource just before releasing it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0x7f1d73896350" loc="59:/home/hades/tinyos-new/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="55:/home/hades/tinyos-new/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to configure a resource just before being granted access to it.</short>
          <long>&#10; Used to configure a resource just before being granted access to it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430UsartInterrupts" loc="43:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
      <documentation loc="31:/home/hades/tinyos-new/tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function event="" provided="0" name="rxDone" ref="0x7f1d7388e2a0" loc="54:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
        <documentation loc="51:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
          <short>&#10; A byte of data has been received.</short>
          <long>&#10; A byte of data has been received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1d74a34160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f1d7388e020" loc="54:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1d74a34160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="txDone" ref="0x7f1d7388f720" loc="49:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
        <documentation loc="45:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
          <short>&#10; A byte of data is about to be transmitted, ie.</short>
          <long>&#10; A byte of data is about to be transmitted, ie. the TXBuffer is&#10; empty and ready to accept next byte.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430Usart" loc="45:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430Usart.nc">
      <documentation loc="31:/home/hades/tinyos-new/tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="isTxEmpty" ref="0x7f1d7386aaf0" loc="213:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="209:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; SUCCESS if the TX buffer is empty and all of the bits have been&#10; shifted out&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1d747a7090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUartRx" ref="0x7f1d73876790" loc="143:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="140:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the Uart RX functionality of the USART module.</short>
          <long>&#10; Enables the Uart RX functionality of the USART module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUctl" ref="0x7f1d73882610" loc="50:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="47:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxCTL Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f1d738f4080"/>
              <typename><typedef-ref name="msp430_uctl_t" ref="0x7f1d738f48c0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f1d73882390" loc="50:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f1d738f4080"/>
              <typename><typedef-ref name="msp430_uctl_t" ref="0x7f1d738f48c0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUart" ref="0x7f1d73878870" loc="123:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="120:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables both the Rx and the Tx Uart modules.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUrctl" ref="0x7f1d73880a90" loc="70:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="67:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxRCTL Receive Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f1d738ef080"/>
              <typename><typedef-ref name="msp430_urctl_t" ref="0x7f1d738ef8c0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f1d73880810" loc="70:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f1d738ef080"/>
              <typename><typedef-ref name="msp430_urctl_t" ref="0x7f1d738ef8c0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRxIntr" ref="0x7f1d7386fe70" loc="180:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrRxIntr" ref="0x7f1d7386c480" loc="197:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="194:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears RX interrupt pending flag&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getUtctl" ref="0x7f1d73880070" loc="65:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="62:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxTCTL Transmit Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f1d738f1020"/>
            <typename><typedef-ref name="msp430_utctl_t" ref="0x7f1d738f17b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getUrctl" ref="0x7f1d7387f2b0" loc="75:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="72:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxRCTL Receive Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f1d738ef080"/>
            <typename><typedef-ref name="msp430_urctl_t" ref="0x7f1d738ef8c0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetUsart" ref="0x7f1d7387b020" loc="97:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f1d747a7090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reset" ref="0x7f1d7387cd30" loc="97:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f1d747a7090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUmctl" ref="0x7f1d7387c610" loc="95:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="92:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxMCTL Modulation Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1d74a34160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableIntr" ref="0x7f1d7386f740" loc="179:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUtctl" ref="0x7f1d73881840" loc="60:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="57:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxTCTL Transmit Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f1d738f1020"/>
              <typename><typedef-ref name="msp430_utctl_t" ref="0x7f1d738f17b0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f1d738815c0" loc="60:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f1d738f1020"/>
              <typename><typedef-ref name="msp430_utctl_t" ref="0x7f1d738f17b0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUbr" ref="0x7f1d7387d420" loc="85:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="82:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxBR0 and UxBR1 Baud Rate Control Registers&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1d74a34520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableTxIntr" ref="0x7f1d7386e5d0" loc="181:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUmctl" ref="0x7f1d7387de00" loc="90:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="87:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxMCTL Modulation Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1d74a34160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="umctl" ref="0x7f1d7387db80" loc="90:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1d74a34160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isUartRx" ref="0x7f1d7387a910" loc="113:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="110:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART has Uart RX mode enabled&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1d747a7090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isUart" ref="0x7f1d738780e0" loc="118:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="115:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART is set to Uart mode (both RX and TX)&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1d747a7090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableRxIntr" ref="0x7f1d73871840" loc="177:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isSpi" ref="0x7f1d73873790" loc="163:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="160:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART is set to Spi mode&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1d747a7090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUartTx" ref="0x7f1d738777e0" loc="133:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="130:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the Uart TX functionality of the USART module.</short>
          <long>&#10; Enables the Uart TX functionality of the USART module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableTxIntr" ref="0x7f1d7386f020" loc="178:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUartRx" ref="0x7f1d73874020" loc="148:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="145:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the Uart RX module.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableIntr" ref="0x7f1d7386ecf0" loc="182:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x7f1d7387b800" loc="103:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="99:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns an enum value corresponding to the current mode of the&#10; USART module.</short>
          <long>&#10; Returns an enum value corresponding to the current mode of the&#10; USART module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref ref="0x7f1d738fadf0"/>
            <typename><typedef-ref name="msp430_usartmode_t" ref="0x7f1d738f6680"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isTxIntrPending" ref="0x7f1d7386d4c0" loc="187:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="184:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; TRUE if TX interrupt pending, flag must be cleared explicitly&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1d747a7090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrIntr" ref="0x7f1d7386a350" loc="207:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="204:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears both TX and RX interrupt pending flags&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUbr" ref="0x7f1d7387fc50" loc="80:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="77:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxBR0 and UxBR1 Baud Rate Control Registers&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1d74a34520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ubr" ref="0x7f1d7387f9d0" loc="80:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1d74a34520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="tx" ref="0x7f1d738694d0" loc="224:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="215:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Transmit a byte of data.</short>
          <long>&#10; Transmit a byte of data. When the transmission is completed,&#10; &#60;code>txDone&#60;/done> is generated. Only then a new byte may be&#10; transmitted, otherwise the previous byte will be overwritten.&#10; The mode of transmission (Uart or Spi) depends on the current&#10; state of the USART, which must be managed by a higher layer.&#10;&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1d74a34160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f1d73869250" loc="224:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1d74a34160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUctl" ref="0x7f1d73882df0" loc="55:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="52:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxCTL Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f1d738f4080"/>
            <typename><typedef-ref name="msp430_uctl_t" ref="0x7f1d738f48c0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUart" ref="0x7f1d73877020" loc="128:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="125:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables both the Rx and the Tx Uart modules.</short>
          <long>&#10; Disables both the Rx and the Tx Uart modules.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableSpi" ref="0x7f1d73874770" loc="153:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="150:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the USART when in Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeUart" ref="0x7f1d73871020" loc="174:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="170:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Switches USART to Uart mode (RX and TX enabled)&#10; Interrupts disabled by default.</short>
          <long>&#10; Switches USART to Uart mode (RX and TX enabled)&#10; Interrupts disabled by default.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7f1d738c6e70"/>
                <typename><typedef-ref name="msp430_uart_union_config_t" ref="0x7f1d738c32b0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7f1d73872cf0" loc="174:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7f1d738c6e70"/>
                <typename><typedef-ref name="msp430_uart_union_config_t" ref="0x7f1d738c32b0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeSpi" ref="0x7f1d738722a0" loc="168:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="165:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Switches USART to Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:4" alignment="I:2"><union-ref ref="0x7f1d738d7020"/>
                <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x7f1d738d7440"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7f1d73872020" loc="168:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:4" alignment="I:2"><union-ref ref="0x7f1d738d7020"/>
                <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x7f1d738d7440"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="rx" ref="0x7f1d73869d90" loc="231:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="226:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Get current value from RX-buffer.</short>
          <long>&#10; Get current value from RX-buffer.&#10;&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1d74a34160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRxIntrPending" ref="0x7f1d7386dcb0" loc="192:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="189:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; TRUE if RX interrupt pending, flag must be cleared explicitly&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1d747a7090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isUartTx" ref="0x7f1d7387a070" loc="108:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="105:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART has Uart TX mode enabled&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1d747a7090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrTxIntr" ref="0x7f1d7386cbe0" loc="202:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="199:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears TX interrupt pending flag&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableSpi" ref="0x7f1d73873020" loc="158:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="155:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the USART when in Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUartTx" ref="0x7f1d73876020" loc="138:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="135:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the Uart TX module.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430I2CInterrupts" loc="37:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
      <documentation loc="32:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:11 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7f1d738026e0" loc="39:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430I2C" loc="4:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430I2C.nc">
      <documentation loc="31:/home/hades/tinyos-new/tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="disableOwnAddress" ref="0x7f1d737d9070" loc="80:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getStartByte" ref="0x7f1d737edb10" loc="31:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1d747a7090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setSlaveAddress" ref="0x7f1d737e1d50" loc="62:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1d74a34520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7f1d737e1ad0" loc="62:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1d74a34520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterMode" ref="0x7f1d737f4270" loc="11:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableTransmitReady" ref="0x7f1d737dd350" loc="71:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPrescaler" ref="0x7f1d737e6cf0" loc="49:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1d74a34160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTransmitMode" ref="0x7f1d737eec50" loc="28:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getStopBit" ref="0x7f1d737eb9c0" loc="34:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1d747a7090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockSource" ref="0x7f1d737efc00" loc="25:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1d74a34160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="src" ref="0x7f1d737ef980" loc="25:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1d74a34160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRepeatMode" ref="0x7f1d737f0120" loc="21:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1d747a7090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getData" ref="0x7f1d737e9790" loc="41:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1d74a34160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableStartDetect" ref="0x7f1d737e0c80" loc="66:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableAccessReady" ref="0x7f1d737db8f0" loc="78:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getSlaveAddress" ref="0x7f1d737e1390" loc="61:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1d74a34520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isGeneralCallPending" ref="0x7f1d737d6b60" loc="91:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1d747a7090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getIV" ref="0x7f1d737d1270" loc="100:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1d74a34160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableI2C" ref="0x7f1d737f30e0" loc="14:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setStartBit" ref="0x7f1d737e9020" loc="38:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransferByteCount" ref="0x7f1d737e7910" loc="45:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1d74a34160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransmitReceiveMode" ref="0x7f1d737ee500" loc="27:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1d747a7090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearModeI2C" ref="0x7f1d737f5020" loc="7:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setOwnAddress" ref="0x7f1d737e2ba0" loc="58:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1d74a34520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7f1d737e2920" loc="58:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1d74a34520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isI2C" ref="0x7f1d737f97e0" loc="6:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1d747a7090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableGeneralCall" ref="0x7f1d737dfb80" loc="69:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableOwnAddress" ref="0x7f1d737d97d0" loc="81:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isAccessReadyPending" ref="0x7f1d737d3350" loc="94:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1d747a7090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isArbitrationLostPending" ref="0x7f1d737d2a90" loc="97:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1d747a7090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableReceiveReady" ref="0x7f1d737dc270" loc="74:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableNoAck" ref="0x7f1d737d8020" loc="83:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableStartDetect" ref="0x7f1d737e0520" loc="65:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableArbitrationLost" ref="0x7f1d737d7bb0" loc="87:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableI2C" ref="0x7f1d737f3800" loc="15:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getShiftClock" ref="0x7f1d737e4020" loc="53:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1d74a34520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableArbitrationLost" ref="0x7f1d737d7020" loc="86:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableAccessReady" ref="0x7f1d737db190" loc="77:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTransferByteCount" ref="0x7f1d737e6520" loc="46:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1d74a34160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="count" ref="0x7f1d737e62a0" loc="46:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1d74a34160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwnAddressPending" ref="0x7f1d737d3af0" loc="95:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1d747a7090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getOwnAddress" ref="0x7f1d737e21f0" loc="57:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1d74a34520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableTransmitReady" ref="0x7f1d737ddac0" loc="72:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeI2C" ref="0x7f1d737f5aa0" loc="8:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7f1d738b2b90"/>
                <typename><typedef-ref name="msp430_i2c_union_config_t" ref="0x7f1d738b0020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7f1d737f5820" loc="8:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7f1d738b2b90"/>
                <typename><typedef-ref name="msp430_i2c_union_config_t" ref="0x7f1d738b0020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getStartBit" ref="0x7f1d737ea870" loc="37:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1d747a7090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setWordMode" ref="0x7f1d737f2980" loc="19:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f1d747a7090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7f1d737f2700" loc="19:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f1d747a7090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setData" ref="0x7f1d737e7120" loc="42:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1d74a34160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f1d737e9e70" loc="42:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1d74a34160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isStartDetectPending" ref="0x7f1d737d63b0" loc="90:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1d747a7090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockSource" ref="0x7f1d737ef270" loc="24:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1d74a34160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getWordMode" ref="0x7f1d737f2020" loc="18:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1d747a7090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setShiftClock" ref="0x7f1d737e49e0" loc="54:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1d74a34520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="shift" ref="0x7f1d737e4760" loc="54:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1d74a34520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSlaveMode" ref="0x7f1d737f49a0" loc="12:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableNoAck" ref="0x7f1d737d8740" loc="84:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableReceiveReady" ref="0x7f1d737dc9e0" loc="75:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableGeneralCall" ref="0x7f1d737df420" loc="68:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPrescaler" ref="0x7f1d737e5740" loc="50:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1d74a34160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scaler" ref="0x7f1d737e54c0" loc="50:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1d74a34160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setStopBit" ref="0x7f1d737ea120" loc="35:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setReceiveMode" ref="0x7f1d737ed3b0" loc="29:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isNoAckPending" ref="0x7f1d737d22b0" loc="96:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1d747a7090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setRepeatMode" ref="0x7f1d737f0aa0" loc="22:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f1d747a7090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7f1d737f0820" loc="22:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f1d747a7090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isTransmitReadyPending" ref="0x7f1d737d4350" loc="92:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1d747a7090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setStartByte" ref="0x7f1d737eb270" loc="32:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isReceiveReadyPending" ref="0x7f1d737d4b10" loc="93:/home/hades/tinyos-new/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1d747a7090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ArbiterInfo" loc="82:/home/hades/tinyos-new/tos/interfaces/ArbiterInfo.nc">
      <documentation loc="69:/home/hades/tinyos-new/tos/interfaces/ArbiterInfo.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.  It must be provided by ALL arbiter implementations,&#10; and can be used for a variety of different purposes.  Normally it will be&#10; used in conjunction with the Resource interface for performing run time&#10; checks on access rights to a particular shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="inUse" ref="0x7f1d73734780" loc="90:/home/hades/tinyos-new/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="83:/home/hades/tinyos-new/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Check whether a resource is currently allocated.</short>
          <long>&#10; Check whether a resource is currently allocated.&#10;&#10; @return TRUE If the resource being arbitrated is currently allocated&#10;              to any of its users&#60;br>&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1d747a7090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="userId" ref="0x7f1d73733020" loc="98:/home/hades/tinyos-new/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="92:/home/hades/tinyos-new/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Get the id of the client currently using a resource.</short>
          <long>&#10; Get the id of the client currently using a resource.&#10; &#10; @return Id of the current owner of the resource&#60;br>&#10;         0xFF if no one currently owns the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1d74a34160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceDefaultOwner" loc="40:/home/hades/tinyos-new/tos/interfaces/ResourceDefaultOwner.nc">
      <documentation loc="31:/home/hades/tinyos-new/tos/interfaces/ResourceDefaultOwner.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; </short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.edu)&#10; @version $ $&#10; @date $Date: 2007-02-04 20:06:42 $ &#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x7f1d736fe900" loc="56:/home/hades/tinyos-new/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="48:/home/hades/tinyos-new/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Release control of the resource&#10;&#10; </short>
          <long>&#10; Release control of the resource&#10;&#10; @return SUCCESS The resource has been released and pending requests&#10;                 can resume. &#60;br>&#10;             FAIL You tried to release but you are not the&#10;                  owner of the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1d7479ecb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="requested" ref="0x7f1d736fda20" loc="73:/home/hades/tinyos-new/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="67:/home/hades/tinyos-new/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x7f1d736fe070" loc="46:/home/hades/tinyos-new/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="41:/home/hades/tinyos-new/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle.</short>
          <long>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle. That is to say, whenever no one currently owns the resource,&#10; and there are no more pending requests&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x7f1d736fd1f0" loc="65:/home/hades/tinyos-new/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="58:/home/hades/tinyos-new/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  @return TRUE  It is the owner &#60;br>&#10;          FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1d747a7090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x7f1d736fb390" loc="81:/home/hades/tinyos-new/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="75:/home/hades/tinyos-new/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceQueue" loc="45:/home/hades/tinyos-new/tos/interfaces/ResourceQueue.nc">
      <documentation loc="33:/home/hades/tinyos-new/tos/interfaces/ResourceQueue.nc">
        <short>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration.</short>
        <long>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration. A single slot in the queue is guaranteed to each resource&#10;  client, with the actual queing policy determined by the implementation&#10;  of the interface.&#10;&#10;  @author Kevin Klues &#60;klueska@cs.wustl.edu>&#10;  @date   $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="enqueue" ref="0x7f1d736f1b60" loc="79:/home/hades/tinyos-new/tos/interfaces/ResourceQueue.nc">
        <documentation loc="72:/home/hades/tinyos-new/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Enqueue a client id&#10;&#10; </short>
          <long>&#10; Enqueue a client id&#10;&#10; @param clientId - the client id to enqueue&#10; @return SUCCESS if the client id was enqueued successfully &#60;br>&#10;         EBUSY   if it has already been enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1d7479ecb0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f1d736fab40"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7f1d736f18e0" loc="79:/home/hades/tinyos-new/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f1d736fab40"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0x7f1d736f6b90" loc="53:/home/hades/tinyos-new/tos/interfaces/ResourceQueue.nc">
        <documentation loc="47:/home/hades/tinyos-new/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if the queue is empty.</short>
          <long>&#10; Check to see if the queue is empty.&#10;&#10; @return TRUE  if the queue is empty. &#60;br>&#10;         FALSE if there is at least one entry in the queue&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1d747a7090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnqueued" ref="0x7f1d736f36f0" loc="62:/home/hades/tinyos-new/tos/interfaces/ResourceQueue.nc">
        <documentation loc="55:/home/hades/tinyos-new/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.</short>
          <long>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.&#10;&#10; @return TRUE  if the client id is in the queue. &#60;br>&#10;         FALSE if it does not&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1d747a7090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f1d736fab40"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7f1d736f3470" loc="62:/home/hades/tinyos-new/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f1d736fab40"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x7f1d736f1030" loc="70:/home/hades/tinyos-new/tos/interfaces/ResourceQueue.nc">
        <documentation loc="64:/home/hades/tinyos-new/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Retreive the client id of the next resource in the queue.</short>
          <long>&#10; Retreive the client id of the next resource in the queue. &#10; If the queue is empty, the return value is undefined.&#10;&#10; @return The client id at the head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="resource_client_id_t" ref="0x7f1d736fab40"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReadId48" loc="8:/home/hades/tinyos-new/tos/chips/ds2411/ReadId48.nc">
      <documentation loc="4:/home/hades/tinyos-new/tos/chips/ds2411/ReadId48.nc">
        <short>&#10; </short>
        <long>&#10; @author: Andreas Koepke (koepke@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x7f1d734ee620" loc="13:/home/hades/tinyos-new/tos/chips/ds2411/ReadId48.nc">
        <interfacedef-ref qname="ReadId48"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1d7479ecb0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f1d74a34160"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7f1d734ee3a0" loc="13:/home/hades/tinyos-new/tos/chips/ds2411/ReadId48.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f1d74a34160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="OneWireReadWrite" loc="9:/home/hades/tinyos-new/tos/lib/onewire/OneWireReadWrite.nc">
      <documentation loc="5:/home/hades/tinyos-new/tos/lib/onewire/OneWireReadWrite.nc">
        <short>&#10; </short>
        <long>&#10; @author: Andreas Koepke (koepke@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x7f1d734dabc0" loc="10:/home/hades/tinyos-new/tos/lib/onewire/OneWireReadWrite.nc">
        <interfacedef-ref qname="OneWireReadWrite"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1d7479ecb0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1d74a34160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f1d74a34160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1d74a34160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cmd" ref="0x7f1d734da280" loc="10:/home/hades/tinyos-new/tos/lib/onewire/OneWireReadWrite.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1d74a34160"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0x7f1d734da5f0" loc="10:/home/hades/tinyos-new/tos/lib/onewire/OneWireReadWrite.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f1d74a34160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f1d734da920" loc="10:/home/hades/tinyos-new/tos/lib/onewire/OneWireReadWrite.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1d74a34160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f1d734d9960" loc="11:/home/hades/tinyos-new/tos/lib/onewire/OneWireReadWrite.nc">
        <interfacedef-ref qname="OneWireReadWrite"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1d7479ecb0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x7f1d74a34160"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1d74a34160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7f1d734d93a0" loc="11:/home/hades/tinyos-new/tos/lib/onewire/OneWireReadWrite.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x7f1d74a34160"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f1d734d96d0" loc="11:/home/hades/tinyos-new/tos/lib/onewire/OneWireReadWrite.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1d74a34160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BusyWait" loc="59:/home/hades/tinyos-new/tos/lib/timer/BusyWait.nc">
      <documentation loc="36:/home/hades/tinyos-new/tos/lib/timer/BusyWait.nc">
        <short>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.</short>
        <long>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.&#10;&#10; &#60;p>BusyWait is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>BusyWait's second parameter is its &#34;width&#34;, i.e., the number of bits&#10; used to represent time values. Width is indicated by including the&#10; appropriate size integer type as a BusyWait parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for this &#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f1d734c1740" loc="59:/home/hades/tinyos-new/tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f1d734c1740"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f1d734c1980" loc="59:/home/hades/tinyos-new/tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f1d734c1980"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="wait" ref="0x7f1d734be4d0" loc="66:/home/hades/tinyos-new/tos/lib/timer/BusyWait.nc">
        <documentation loc="61:/home/hades/tinyos-new/tos/lib/timer/BusyWait.nc">
          <short>&#10; Busy wait for (at least) dt time units.</short>
          <long>&#10; Busy wait for (at least) dt time units. Use sparingly, when the&#10; cost of using an Alarm or Timer would be too high.&#10; @param dt Time to busy wait for.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BusyWait"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f1d734c1980"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f1d734be250" loc="66:/home/hades/tinyos-new/tos/lib/timer/BusyWait.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f1d734c1980"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReceiveIndicator" loc="37:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
      <documentation loc="32:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
        <short>&#10; Interface to obtain energy, byte, and packet receive check readings&#10; </short>
        <long>&#10; Interface to obtain energy, byte, and packet receive check readings&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="isReceiving" ref="0x7f1d7345d5e0" loc="43:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
        <documentation loc="39:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the indicator is showing we are actively receiving at this&#10; level&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveIndicator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1d747a7090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Receive" loc="42:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Receive.nc">
      <documentation loc="32:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <short>&#10; Low-level abstraction of the receive path implementation for the&#10; ChipCon CC2420 radio.</short>
        <long>&#10; Low-level abstraction of the receive path implementation for the&#10; ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2008-06-17 07:28:24 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x7f1d7342b9e0" loc="63:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="57:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Signals that a message has been received.</short>
          <long>&#10; Signals that a message has been received.&#10;&#10; @param type of the message received.&#10; @param message pointer to message received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1d74a34160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1d740d7930"/>
                <typename><typedef-ref name="message_t" ref="0x7f1d740d5020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="type" ref="0x7f1d7342b020" loc="63:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1d74a34160"/></typename>
            </type-int>
          </variable>
          <variable name="message" ref="0x7f1d7342b750" loc="63:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1d740d7930"/>
                <typename><typedef-ref name="message_t" ref="0x7f1d740d5020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="sfd_dropped" ref="0x7f1d7342c7f0" loc="55:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="51:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Notification that the packet has been dropped by the radio&#10; (e.g.</short>
          <long>&#10; Notification that the packet has been dropped by the radio&#10; (e.g. due to address rejection).&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sfd" ref="0x7f1d7342c020" loc="49:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="44:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Notification that an SFD capture has occured.</short>
          <long>&#10; Notification that an SFD capture has occured.&#10;&#10; @param time at which the capture happened.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f1d74a34920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7f1d7342fd40" loc="49:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f1d74a34920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeSyncOffset" loc="43:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
      <function command="" provided="0" name="get" ref="0x7f1d734403d0" loc="58:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="52:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to examine.&#10;&#10; Returns the offset of where the timesync timestamp is sotred in a&#10; CC2420 packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1d74a34160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1d740d7930"/>
                <typename><typedef-ref name="message_t" ref="0x7f1d740d5020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1d73440150" loc="58:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1d740d7930"/>
                <typename><typedef-ref name="message_t" ref="0x7f1d740d5020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isSet" ref="0x7f1d734423d0" loc="50:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="45:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to examine.&#10;&#10; Returns TRUE if the current message should be timestamped.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1d747a7090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1d740d7930"/>
                <typename><typedef-ref name="message_t" ref="0x7f1d740d5020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1d73442150" loc="50:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1d740d7930"/>
                <typename><typedef-ref name="message_t" ref="0x7f1d740d5020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f1d7343e350" loc="72:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="67:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to modify.&#10;&#10; Cancels any pending requests to timestamp the message in MAC.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1d740d7930"/>
                <typename><typedef-ref name="message_t" ref="0x7f1d740d5020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1d7343e0d0" loc="72:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1d740d7930"/>
                <typename><typedef-ref name="message_t" ref="0x7f1d740d5020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f1d7343f390" loc="65:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="60:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to modify.&#10;&#10;  Sets the current message to be timestamped in the MAC layer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1d740d7930"/>
                <typename><typedef-ref name="message_t" ref="0x7f1d740d5020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f1d7343f110" loc="65:/home/hades/tinyos-new/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f1d740d7930"/>
                <typename><typedef-ref name="message_t" ref="0x7f1d740d5020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="53:/home/hades/tinyos-new/tos/lib/timer/LocalTime.nc">
      <documentation loc="36:/home/hades/tinyos-new/tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f1d732c8920" loc="53:/home/hades/tinyos-new/tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f1d732c8920"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7f1d732c5270" loc="61:/home/hades/tinyos-new/tos/lib/timer/LocalTime.nc">
        <documentation loc="55:/home/hades/tinyos-new/tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f1d74a34920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ParameterInit" loc="53:/home/hades/tinyos-new/tos/interfaces/ParameterInit.nc">
      <documentation loc="34:/home/hades/tinyos-new/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="parameter" ref="0x7f1d731365f0" loc="53:/home/hades/tinyos-new/tos/interfaces/ParameterInit.nc">
          <interfacedef-ref qname="ParameterInit"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7f1d731365f0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="init" ref="0x7f1d731332a0" loc="64:/home/hades/tinyos-new/tos/interfaces/ParameterInit.nc">
        <documentation loc="55:/home/hades/tinyos-new/tos/interfaces/ParameterInit.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components. This command behaves&#10; identically to Init.init, except that it takes a parameter.&#10;&#10; @param   param   the initialization parameter&#10; @return          SUCCESS if initialized properly, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ParameterInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1d7479ecb0"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7f1d731365f0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="param" ref="0x7f1d73133020" loc="64:/home/hades/tinyos-new/tos/interfaces/ParameterInit.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7f1d731365f0"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReadNow" loc="52:/home/hades/tinyos-new/tos/interfaces/ReadNow.nc">
      <documentation loc="33:/home/hades/tinyos-new/tos/interfaces/ReadNow.nc">
        <short>&#10; The ReadNow interface is intended for split-phase low-latency&#10; reading of small values.</short>
        <long>&#10; The ReadNow interface is intended for split-phase low-latency&#10; reading of small values. The type of the value is given as a&#10; template argument. Because this interface is split-phase, these&#10; values may be backed by hardware. Providers of this interface&#10; should also provide a Resource interface, and this interface should&#10; only be used after the resource has been acquired. Otherwise, the&#10; low-latency requirement may be impossible to meet.&#10;&#10; &#60;p>&#10; This interface has the same calling semantics as the Read interface&#10; described in TEP 114, except that it is async.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-16 18:58:51 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x7f1d72eecbe0" loc="52:/home/hades/tinyos-new/tos/interfaces/ReadNow.nc">
          <interfacedef-ref qname="ReadNow"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f1d72eecbe0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x7f1d72ee9520" loc="58:/home/hades/tinyos-new/tos/interfaces/ReadNow.nc">
        <documentation loc="53:/home/hades/tinyos-new/tos/interfaces/ReadNow.nc">
          <short>&#10; Initiates a read of the value.</short>
          <long>&#10; Initiates a read of the value.&#10; &#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReadNow"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1d7479ecb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x7f1d72ee82f0" loc="66:/home/hades/tinyos-new/tos/interfaces/ReadNow.nc">
        <documentation loc="60:/home/hades/tinyos-new/tos/interfaces/ReadNow.nc">
          <short>&#10; Signals the completion of the read().</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReadNow"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f1d7479ecb0"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f1d72eecbe0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7f1d72ee9ce0" loc="66:/home/hades/tinyos-new/tos/interfaces/ReadNow.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f1d7479ecb0"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x7f1d72ee8060" loc="66:/home/hades/tinyos-new/tos/interfaces/ReadNow.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f1d72eecbe0"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReadStream" loc="57:/home/hades/tinyos-new/tos/interfaces/ReadStream.nc">
      <documentation loc="33:/home/hades/tinyos-new/tos/interfaces/ReadStream.nc">
        <short>&#10; The ReadStream interface is intended for buffered high data rate&#10; reading, usually from sensor devices.</short>
        <long>&#10; The ReadStream interface is intended for buffered high data rate&#10; reading, usually from sensor devices. The type of the values being&#10; read is given as a template argument. &#10;&#10; &#60;p> To use this interface, allocate one or more buffers in your own&#10; space. Then, call postBuffer to pass these buffers into the&#10; device. Call read() to begin the sampling process. The buffers will&#10; be filled in the order originally posted, and a bufferDone() event&#10; will be signaled once each buffer has been filled with data. At any&#10; time while the read() is running, you may post new buffers to be&#10; filled. If the lower layer finishes signaling readDone() and then&#10; finds that no more buffers have been posted, it will consider the&#10; read to be finished, and signal readDone(). &#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-04 03:00:31 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x7f1d72ef7a20" loc="57:/home/hades/tinyos-new/tos/interfaces/ReadStream.nc">
          <interfacedef-ref qname="ReadStream"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f1d72ef7a20"/></type-var>
        </typedef>
      </parameters>
      <function event="" provided="0" name="bufferDone" ref="0x7f1d72ef3d50" loc="89:/home/hades/tinyos-new/tos/interfaces/ReadStream.nc">
        <documentation loc="80:/home/hades/tinyos-new/tos/interfaces/ReadStream.nc">
          <short>&#10; Signalled when a previously posted buffer has been filled by the&#10; device.</short>
          <long>&#10; Signalled when a previously posted buffer has been filled by the&#10; device. In the event of a read error, result will not equal&#10; SUCCESS, and the buffer will be filled with zeroes.&#10;&#10; @param result SUCCESS if the buffer was filled without errors&#10; @param 'val_t* COUNT(count) buf' a pointer to the buffer that has been filled&#10; @param count the number of values actually read&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReadStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f1d7479ecb0"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f1d72ef7a20"/></type-var>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1d74a34520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7f1d72ef33d0" loc="89:/home/hades/tinyos-new/tos/interfaces/ReadStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f1d7479ecb0"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0x7f1d72ef3750" loc="90:/home/hades/tinyos-new/tos/interfaces/ReadStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f1d72ef7a20"/></type-var>
            </type-pointer>
          </variable>
          <variable name="count" ref="0x7f1d72ef3ab0" loc="90:/home/hades/tinyos-new/tos/interfaces/ReadStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1d74a34520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="postBuffer" ref="0x7f1d72ef4940" loc="68:/home/hades/tinyos-new/tos/interfaces/ReadStream.nc">
        <documentation loc="58:/home/hades/tinyos-new/tos/interfaces/ReadStream.nc">
          <short>&#10; Passes a buffer to the device, and indicates how many values&#10; should be placed into the buffer.</short>
          <long>&#10; Passes a buffer to the device, and indicates how many values&#10; should be placed into the buffer. Make sure your count doesn't&#10; overrun the buffer.&#10;&#10; @param 'val_t* COUNT(count) buf' a pointer to the buffer&#10; @param count the number of values the buffer should hold&#10;&#10; @return SUCCESS if the post was successful&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReadStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1d7479ecb0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f1d72ef7a20"/></type-var>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1d74a34520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7f1d72ef4350" loc="68:/home/hades/tinyos-new/tos/interfaces/ReadStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f1d72ef7a20"/></type-var>
            </type-pointer>
          </variable>
          <variable name="count" ref="0x7f1d72ef46b0" loc="68:/home/hades/tinyos-new/tos/interfaces/ReadStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1d74a34520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="read" ref="0x7f1d72ef2b80" loc="78:/home/hades/tinyos-new/tos/interfaces/ReadStream.nc">
        <documentation loc="70:/home/hades/tinyos-new/tos/interfaces/ReadStream.nc">
          <short>&#10; Directs the device to start filling buffers by sampling with the&#10; specified period.</short>
          <long>&#10; Directs the device to start filling buffers by sampling with the&#10; specified period. &#10; &#10; @param usPeriod the between-sample period in microseconds&#10; &#10; @return SUCCESS if the reading process began&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReadStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1d7479ecb0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f1d74a34920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="usPeriod" ref="0x7f1d72ef2900" loc="78:/home/hades/tinyos-new/tos/interfaces/ReadStream.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f1d74a34920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x7f1d72eef430" loc="102:/home/hades/tinyos-new/tos/interfaces/ReadStream.nc">
        <documentation loc="92:/home/hades/tinyos-new/tos/interfaces/ReadStream.nc">
          <short>&#10; Signalled when a buffer has been filled but no more buffers have&#10; been posted.</short>
          <long>&#10; Signalled when a buffer has been filled but no more buffers have&#10; been posted. In the event of a read error, all previously posted&#10; buffers will have their bufferDone() event signalled, and then&#10; this event will be signalled with a non-SUCCESS argument.&#10;&#10; @param result SUCCESS if all buffers were filled without errors&#10; @param usActualPeriod Actual sampling period used - may be different&#10;   from period requested at read time. Undefined if result != SUCCESS.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReadStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f1d7479ecb0"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f1d74a34920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7f1d72ef0db0" loc="102:/home/hades/tinyos-new/tos/interfaces/ReadStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f1d7479ecb0"/></typename>
            </type-int>
          </variable>
          <variable name="usActualPeriod" ref="0x7f1d72eef1a0" loc="102:/home/hades/tinyos-new/tos/interfaces/ReadStream.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f1d74a34920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AdcConfigure" loc="45:/home/hades/tinyos-new/tos/interfaces/AdcConfigure.nc">
      <documentation loc="36:/home/hades/tinyos-new/tos/interfaces/AdcConfigure.nc">
        <short> &#10; This interface is intended to be provided by an ADC client and used by the&#10; ADC subsystem to retrieve the client's ADC configuration.</short>
        <long> &#10; This interface is intended to be provided by an ADC client and used by the&#10; ADC subsystem to retrieve the client's ADC configuration. &#10; &#10; @author Jan Hauer &#10; @see  Please refer to TEP 101 for more information about this interface and&#10; its intended use.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="adc_config_t" ref="0x7f1d72ec04c0" loc="45:/home/hades/tinyos-new/tos/interfaces/AdcConfigure.nc">
          <interfacedef-ref qname="AdcConfigure"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="adc_config_t" scoped="" ref="0x7f1d72ec04c0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getConfiguration" ref="0x7f1d72ebd020" loc="58:/home/hades/tinyos-new/tos/interfaces/AdcConfigure.nc">
        <documentation loc="48:/home/hades/tinyos-new/tos/interfaces/AdcConfigure.nc">
          <short> &#10; Returns the configuration of an ADC client.</short>
          <long> &#10; Returns the configuration of an ADC client.  &#60;code>adc_config_t&#60;/code> is&#10; a hardware specific data type that contains all information necessary to&#10; configure the respective ADC hardware for the client. A client MUST always&#10; return the same configuration and, if configuration data is passed as a&#10; pointer, the ADC subsystem (HIL component) MUST NOT reference it after the&#10; return of this command.&#10;  &#10; @return chip specific configuration.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AdcConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="adc_config_t" scoped="" ref="0x7f1d72ec04c0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Adc12SingleChannel" loc="69:/home/hades/tinyos-new/tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
      <documentation loc="36:/home/hades/tinyos-new/tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
        <short> &#10; &#10; This interface provides access to the ADC12 on the level of HAL.</short>
        <long> &#10; &#10; This interface provides access to the ADC12 on the level of HAL. It can be&#10; used to sample a single adc channel once or repeatedly (one event is&#10; signalled per conversion result) or perform multiple conversions for a&#10; single channel once or repeatedly (one event is signalled per multiple&#10; conversion results). It cannot be used to sample different adc channels with&#10; a single command (use the Msp430Adc12MultiChannel interface instead).&#10; Sampling a channel requires calling a sequence of two commands, configureX()&#10; and getData(), where X is either 'Single', 'SingleRepeat', 'Multiple' or&#10; 'MultipleRepeat'. Conversion results will be signalled by the&#10; dataReadySingle() or dataReadyMultiple() event, depending on the previous&#10; configuration, i.e. there are four possible sequences:&#10; &#10; &#60;p> configureSingle()          -> ( getData() -> singleDataReady() )*&#10; &#60;p> configureSingleRepeat()    -> ( getData() -> singleDataReady() )*&#10; &#60;p> configureMultiple()        -> ( getData() -> multipleDataReady() )*&#10; &#60;p> configureMultipleRepeat()  -> getData() -> multipleDataReady()&#10;&#10; &#60;p> where configureX() and getData() are commands called by the client and&#10; singleDataReady() and multipleDataReady() are events signalled back to the&#10; client by the adc subsystem. Note that a configuration is valid until the&#10; client reconfigures or releases the ADC (using the Resource interface),&#10; except for configureMultipleRepeat(), which is only valid for a single call&#10; to getData(). This means that after a successful configuration with, for&#10; example, configureSingle() the client may call getData() more than once&#10; without reconfiguring the ADC in between (if the client has not released the&#10; ADC via the Resource interface).&#10;&#10; @author Jan Hauer &#10;</long>
      </documentation>
      <function command="" provided="0" name="getData" ref="0x7f1d72ea24b0" loc="189:/home/hades/tinyos-new/tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
        <documentation loc="180:/home/hades/tinyos-new/tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
          <short> &#10; Starts sampling an adc channel using the configuration as specified by&#10; the last call to any of the four available configuration commands.</short>
          <long> &#10; Starts sampling an adc channel using the configuration as specified by&#10; the last call to any of the four available configuration commands.&#10;&#10; @return SUCCESS means that the conversion was started successfully and an&#10; event singleDataReady() or multipleDataReady() will be signalled&#10; (depending on the previous configuration). Otherwise no such event will be&#10; signalled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1d7479ecb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configureSingle" ref="0x7f1d72eab450" loc="84:/home/hades/tinyos-new/tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
        <documentation loc="72:/home/hades/tinyos-new/tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
          <short> &#10; Configures the ADC to perform a single conversion.</short>
          <long> &#10; Configures the ADC to perform a single conversion. Any previous&#10; configuration will be overwritten.  If SUCCESS is returned calling&#10; &#60;code>getData()&#60;/code> will start the conversion immediately and a&#10; &#60;code>singleDataReady()&#60;/code> event will be signalled with the conversion&#10; result when the conversion has finished.&#10;&#10; @param config ADC12 configuration data.  &#10;&#10; @return SUCCESS means that the ADC was configured successfully and&#10; &#60;code>getData()&#60;/code> can be called to start the conversion.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1d7479ecb0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7f1d72ee2ae0"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7f1d72ee2200"/></type-tag>
              </type-qualified>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7f1d72eab1d0" loc="84:/home/hades/tinyos-new/tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7f1d72ee2ae0"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7f1d72ee2200"/></type-tag>
              </type-qualified>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="configureSingleRepeat" ref="0x7f1d72eaa940" loc="106:/home/hades/tinyos-new/tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
        <documentation loc="86:/home/hades/tinyos-new/tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
          <short> &#10; Configures the ADC for repeated single channel conversion mode.</short>
          <long> &#10; Configures the ADC for repeated single channel conversion mode. Any&#10; previous configuration will be overwritten. If SUCCESS is returned calling&#10; &#60;code>getData()&#60;/code> will start sampling the adc channel periodically&#10; (the first conversion is started immediately).  The sampling period is&#10; specified by the &#60;code>jiffies&#60;/code> parameter, which defines the time&#10; between successive conversions in terms of clock ticks of clock source&#10; &#34;sampcon_ssel&#34; and clock input divider &#34;sampcon_id&#34; as specified in the&#10; &#60;code>config&#60;/code> parameter. If jiffies is zero successive conversions&#10; are performed as quickly as possible.  Conversion result are signalled&#10; until the client returns &#60;code>FAIL&#60;/code> in the&#10; &#60;code>singleDataReady()&#60;/code> event handler.&#10; &#10; @param config ADC12 configuration data.  &#10; @param jiffies Sampling period in terms of clock ticks of &#34;sampcon_ssel&#34; and&#10; input divider &#34;sampcon_id&#34;.&#10;&#10; @return SUCCESS means that the ADC was configured successfully and&#10; &#60;code>getData()&#60;/code> can be called to start with the first conversion.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1d7479ecb0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7f1d72ee2ae0"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7f1d72ee2200"/></type-tag>
              </type-qualified>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1d74a34520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7f1d72eaa340" loc="106:/home/hades/tinyos-new/tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7f1d72ee2ae0"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7f1d72ee2200"/></type-tag>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="jiffies" ref="0x7f1d72eaa6b0" loc="106:/home/hades/tinyos-new/tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1d74a34520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="configureMultipleRepeat" ref="0x7f1d72ea44c0" loc="177:/home/hades/tinyos-new/tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
        <documentation loc="140:/home/hades/tinyos-new/tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
          <short> &#10;&#10; Configures the ADC for sampling a channel multiple times repeatedly.</short>
          <long> &#10;&#10; Configures the ADC for sampling a channel multiple times repeatedly.  Any&#10; previous configuration will be overwritten. In contrast to the&#10; &#60;code>configureSingleRepeat()&#60;/code> command this configuration means that&#10; an event with &#60;code>numSamples&#60;/code> conversion results will be&#10; signalled, where 0 &#60; &#60;code>numSamples&#60;/code> &#60;= 16. In contrast to the&#10; &#60;code>configureMultiple()&#60;/code> command, this configuration means that&#10; &#60;code>numSamples&#60;/code> conversion results will be signalled repeatedly&#10; until the client returns &#60;code>FAIL&#60;/code> in the&#10; &#60;code>multipleDataReady()&#60;/code> event handler. &#10;&#10; If &#60;code>configureMultipleRepeat()&#60;/code> returns SUCCESS calling&#10; &#60;code>getData()&#60;/code> will start the the first conversion immediately.&#10; The sampling period is specified by the &#60;code>jiffies&#60;/code> parameter,&#10; which defines the time between successive conversions in terms of clock&#10; ticks of clock source &#34;sampcon_ssel&#34; and clock input divider &#34;sampcon_id&#34;&#10; as specified in the &#60;code>config&#60;/code> parameter. If jiffies is zero&#10; successive conversions are performed as quickly as possible. After&#10; &#60;code>numSamples&#60;/code> conversions an event&#10; &#60;code>multipleDataReady()&#60;/code> is signalled with &#60;code>numSamples&#60;/code>&#10; conversion results. If the client returns &#60;code>SUCCESS&#60;/code> in the&#10; &#60;code>multipleDataReady()&#60;/code> event handler, &#60;code>numSamples&#60;/code>&#10; new conversions will be performed, otherwise not.&#10;&#10; @param config ADC12 configuration data.  &#10; @param jiffies Sampling period in terms of clock ticks of &#34;sampcon_ssel&#34;&#10; and input divider &#34;sampcon_id&#34;.&#10; @param buffer The user-allocated buffer in which the conversion results&#10; will be stored. It must have at least &#60;code>numSamples&#60;/code> entries,&#10; i.e. it must have a size of at least &#60;code>numSamples&#60;/code> * 2 byte.&#10; @param numSamples Number of adc samples to take, 0 &#60;&#10; &#60;code>numSamples&#60;/code> &#60;= 16&#10;&#10; @return SUCCESS means that the ADC was configured successfully and&#10; &#60;code>getData()&#60;/code> can be called to start with the first conversion.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1d7479ecb0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7f1d72ee2ae0"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7f1d72ee2200"/></type-tag>
              </type-qualified>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7f1d74a34520"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1d74a34160"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1d74a34520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7f1d72ea5260" loc="177:/home/hades/tinyos-new/tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7f1d72ee2ae0"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7f1d72ee2200"/></type-tag>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="buffer" ref="0x7f1d72ea5b00" loc="177:/home/hades/tinyos-new/tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7f1d74a34520"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="numSamples" ref="0x7f1d72ea5e80" loc="177:/home/hades/tinyos-new/tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1d74a34160"/></typename>
            </type-int>
          </variable>
          <variable name="jiffies" ref="0x7f1d72ea4210" loc="177:/home/hades/tinyos-new/tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1d74a34520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="multipleDataReady" ref="0x7f1d72ea0dd0" loc="227:/home/hades/tinyos-new/tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
        <documentation loc="208:/home/hades/tinyos-new/tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
          <short> &#10; Multiple ADC conversion results are ready.</short>
          <long> &#10; Multiple ADC conversion results are ready.  If the ADC was configured&#10; with the &#60;code>configureMultiple()&#60;/code> command, then the return value&#10; is ignored. If the ADC was configured with the&#10; &#60;code>configureMultipleRepeat()&#60;/code> command then the returned pointer&#10; defines where to store the next &#60;code>numSamples&#60;/code>&#10; conversion results (the client must make sure that the buffer is big&#10; enough!).  Returning a null pointer means that the repeated conversion&#10; mode will be stopped.&#10; &#10; @param buffer Conversion results (lower 12 bit are valid, respectively).&#10; @param numSamples Number of samples stored in &#60;code>buffer&#60;/code> &#10;&#10; @return&#10; A null pointer stops a repeated conversion mode. Any non-zero value is&#10; interpreted as the next buffer, which must have at least&#10; &#60;code>numSamples&#60;/code> entries. The return value is ignored if the ADC&#10; was configured with &#60;code>configureMultiple()&#60;/code>.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1d74a34520"/></typename>
            </type-int>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7f1d74a34520"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1d74a34520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buffer" ref="0x7f1d72ea0730" loc="227:/home/hades/tinyos-new/tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7f1d74a34520"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="numSamples" ref="0x7f1d72ea0ac0" loc="227:/home/hades/tinyos-new/tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1d74a34520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="configureMultiple" ref="0x7f1d72ea7d30" loc="138:/home/hades/tinyos-new/tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
        <documentation loc="109:/home/hades/tinyos-new/tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
          <short> &#10; Configures the ADC for sampling a channel &#60;code>numSamples&#60;/code> times&#10; with a given sampling period.</short>
          <long> &#10; Configures the ADC for sampling a channel &#60;code>numSamples&#60;/code> times&#10; with a given sampling period. Any previous configuration will be&#10; overwritten.  In contrast to the &#60;code>configureSingleRepeat()&#60;/code>&#10; command, this configuration means that only one event will be signalled&#10; after all samples have been taken (which is useful for high-frequency&#10; sampling). If SUCCESS is returned calling &#60;code>getData()&#60;/code> will&#10; start sampling the adc channel &#60;code>numSamples&#60;/code> times and the first&#10; conversion is started immediately. Conversion results are stored in a&#10; buffer allocated by the client (the &#60;code>buffer&#60;/code>&#10; parameter). The sampling period is specified by the &#60;code>jiffies&#60;/code>&#10; parameter, which defines the time between successive conversions in terms&#10; of clock ticks of clock source &#34;sampcon_ssel&#34; and clock input divider&#10; &#34;sampcon_id&#34; as specified in the &#60;code>config&#60;/code> parameter. If jiffies&#10; is zero successive conversions are performed as quickly as possible. After&#10; &#60;code>numSamples&#60;/code> conversions an event&#10; &#60;code>multipleDataReady()&#60;/code> is signalled with the conversion results.&#10;&#10; @param config ADC12 configuration data.  &#10; @param jiffies Sampling period in terms of clock ticks of &#34;sampcon_ssel&#34;&#10; and input divider &#34;sampcon_id&#34;.&#10; @param buffer The user-allocated buffer in which the conversion results&#10; will be stored. It must have at least &#60;code>numSamples&#60;/code> entries,&#10; i.e. it must have a size of at least &#60;code>numSamples&#60;/code> * 2 byte.&#10; @param numSamples Number of adc samples&#10;&#10; @return SUCCESS means that the ADC was configured successfully and&#10; &#60;code>getData()&#60;/code> can be called to start with the first conversion.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1d7479ecb0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7f1d72ee2ae0"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7f1d72ee2200"/></type-tag>
              </type-qualified>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7f1d74a34520"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1d74a34520"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1d74a34520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7f1d72ea9a30" loc="138:/home/hades/tinyos-new/tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7f1d72ee2ae0"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7f1d72ee2200"/></type-tag>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="buffer" ref="0x7f1d72ea7380" loc="138:/home/hades/tinyos-new/tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7f1d74a34520"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="numSamples" ref="0x7f1d72ea7710" loc="138:/home/hades/tinyos-new/tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1d74a34520"/></typename>
            </type-int>
          </variable>
          <variable name="jiffies" ref="0x7f1d72ea7a80" loc="138:/home/hades/tinyos-new/tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1d74a34520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="singleDataReady" ref="0x7f1d72ea1120" loc="206:/home/hades/tinyos-new/tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
        <documentation loc="191:/home/hades/tinyos-new/tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
          <short> &#10; A single ADC conversion result is ready.</short>
          <long> &#10; A single ADC conversion result is ready. If the ADC was configured with&#10; the &#60;code>configureSingle()&#60;/code> command, then the return value is&#10; ignored. If the ADC was configured with the&#10; &#60;code>configureSingleRepeat()&#60;/code> command then the return value tells&#10; whether another conversion should be performed (&#60;code>SUCCESS()&#60;/code>) or&#10; not (&#60;code>FAIL&#60;/code>).&#10; &#10; @param data Conversion result (lower 12 bit).  &#10;&#10; @return If this event is signalled as response to a call to&#10; &#60;code>configureSingleRepeat()&#60;/code> then &#60;code>SUCCESS&#60;/code> results in&#10; another sampling and &#60;code>FAIL&#60;/code> stops the repeated sampling.&#10; Otherwise the return value is ignored.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1d7479ecb0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1d74a34520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f1d72ea2e70" loc="206:/home/hades/tinyos-new/tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1d74a34520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Adc12MultiChannel" loc="51:/home/hades/tinyos-new/tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
      <documentation loc="36:/home/hades/tinyos-new/tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
        <short> &#10; This interface provides access to the ADC12 on the level of HAL.</short>
        <long> &#10; This interface provides access to the ADC12 on the level of HAL. It can be&#10; used to sample up to 16 (different) ADC channels. It separates between&#10; configuration and data collection: every time a client has been granted&#10; access to the ADC subsystem (via the Resource interface), it first has to&#10; configure the ADC.  Afterwards the client may call getData() more than once&#10; without reconfiguring the ADC in between (if the client has not released the&#10; ADC via the Resource interface), i.e.&#60;p>&#10; &#10;    configure() -> ( getData() -> dataReady() )*&#10;&#10; @author Jan Hauer &#10;</long>
      </documentation>
      <function command="" provided="0" name="getData" ref="0x7f1d72e4fe20" loc="97:/home/hades/tinyos-new/tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
        <documentation loc="90:/home/hades/tinyos-new/tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
          <short> &#10; Starts sampling the adc channels using the configuration as specified by&#10; the last call to &#60;code>configure()&#60;/code>.</short>
          <long> &#10; Starts sampling the adc channels using the configuration as specified by&#10; the last call to &#60;code>configure()&#60;/code>.&#10;&#10; @return SUCCESS means that the conversion was started successfully and an&#10; event dataReady() will be signalled. Otherwise no event will be signalled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12MultiChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1d7479ecb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0x7f1d72e4f160" loc="86:/home/hades/tinyos-new/tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
        <documentation loc="54:/home/hades/tinyos-new/tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
          <short> &#10; Configures the ADC to perform conversion(s) on multiple channels.</short>
          <long> &#10; Configures the ADC to perform conversion(s) on multiple channels.  Any&#10; previous configuration will be overwritten.  If SUCCESS is returned&#10; calling &#60;code>getData()&#60;/code> will start the conversion immediately and a&#10; &#60;code>dataReady()&#60;/code> event will be signalled with the conversion&#10; result when the conversion has finished.&#10;&#10; @param config Main ADC12 configuration and configuration of the first&#10; channel &#10;&#10; @param memctl List of additional channels and respective reference&#10; voltages&#10;&#10; @param numMemctl Number of entries in the list&#10; &#10; @param buffer Buffer to store the conversion results, it must have&#10; numSamples entries. Results will be stored in the order the channels where&#10; specified.&#10;&#10; @param numSamples Total number of samples. Note: numSamples %&#10; (numMemctl+1) must be zero. For example, to sample every channel twice use&#10; numSamples = (numMemctl+1) * 2&#10;&#10; @param jiffies Sampling period in terms of clock ticks of &#34;sampcon_ssel&#34;&#10; and input divider &#34;sampcon_id&#34;. Samples are taken equally-spaced in&#10; time iterating round-robin over the channels (different channels are  &#10; not sampled simultaneously but one after another).&#10;&#10; @return SUCCESS means that the ADC was configured successfully and&#10; &#60;code>getData()&#60;/code> can be called to start the conversion.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12MultiChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1d7479ecb0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7f1d72ee2ae0"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7f1d72ee2200"/></type-tag>
              </type-qualified>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f1d72ee1740"/>
                <typename><typedef-ref name="adc12memctl_t" ref="0x7f1d72ee1c10"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1d74a34160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7f1d74a34520"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1d74a34520"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1d74a34520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7f1d72e51af0" loc="86:/home/hades/tinyos-new/tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7f1d72ee2ae0"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7f1d72ee2200"/></type-tag>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="memctl" ref="0x7f1d72e50020" loc="87:/home/hades/tinyos-new/tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f1d72ee1740"/>
                <typename><typedef-ref name="adc12memctl_t" ref="0x7f1d72ee1c10"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="numMemctl" ref="0x7f1d72e50390" loc="87:/home/hades/tinyos-new/tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1d74a34160"/></typename>
            </type-int>
          </variable>
          <variable name="buffer" ref="0x7f1d72e50730" loc="87:/home/hades/tinyos-new/tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7f1d74a34520"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="numSamples" ref="0x7f1d72e50ae0" loc="88:/home/hades/tinyos-new/tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1d74a34520"/></typename>
            </type-int>
          </variable>
          <variable name="jiffies" ref="0x7f1d72e50e50" loc="88:/home/hades/tinyos-new/tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1d74a34520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x7f1d72e4edc0" loc="107:/home/hades/tinyos-new/tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
        <documentation loc="99:/home/hades/tinyos-new/tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
          <short> &#10; Conversion results are ready.</short>
          <long> &#10; Conversion results are ready. Results are stored in the buffer in the&#10; order the channels where specified in the &#60;code>configure()&#60;/code>&#10; command, i.e. every (numMemctl+1)-th entry maps to the same channel. &#10; &#10; @param buffer Conversion results (lower 12 bit are valid, respectively).&#10; @param numSamples Number of results stored in &#60;code>buffer&#60;/code> &#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12MultiChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7f1d74a34520"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1d74a34520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buffer" ref="0x7f1d72e4e7a0" loc="107:/home/hades/tinyos-new/tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7f1d74a34520"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="numSamples" ref="0x7f1d72e4eb30" loc="107:/home/hades/tinyos-new/tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1d74a34520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Adc12Overflow" loc="44:/home/hades/tinyos-new/tos/chips/msp430/adc12/Msp430Adc12Overflow.nc">
      <documentation loc="36:/home/hades/tinyos-new/tos/chips/msp430/adc12/Msp430Adc12Overflow.nc">
        <short> &#10; Signals an ADC12MEMx overflow or conversion time overflow condition to the&#10; client.</short>
        <long> &#10; Signals an ADC12MEMx overflow or conversion time overflow condition to the&#10; client.&#10;&#10; @author Jan Hauer &#10;</long>
      </documentation>
      <function event="" provided="0" name="memOverflow" ref="0x7f1d72e4b780" loc="49:/home/hades/tinyos-new/tos/chips/msp430/adc12/Msp430Adc12Overflow.nc">
        <documentation loc="46:/home/hades/tinyos-new/tos/chips/msp430/adc12/Msp430Adc12Overflow.nc">
          <short> &#10; An ADC12MEMx overflow condition has occured.</short>
          <long> &#10; An ADC12MEMx overflow condition has occured.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12Overflow"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="conversionTimeOverflow" ref="0x7f1d72e4a020" loc="54:/home/hades/tinyos-new/tos/chips/msp430/adc12/Msp430Adc12Overflow.nc">
        <documentation loc="51:/home/hades/tinyos-new/tos/chips/msp430/adc12/Msp430Adc12Overflow.nc">
          <short> &#10; A conversion time overflow condition has occured.</short>
          <long> &#10; A conversion time overflow condition has occured.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12Overflow"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AsyncStdControl" loc="86:/home/hades/tinyos-new/tos/interfaces/AsyncStdControl.nc">
      <documentation loc="72:/home/hades/tinyos-new/tos/interfaces/AsyncStdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  This interface differs from the&#10; StdControl interface only in the fact that any of its commands can&#10; be called from asynchronous context.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x7f1d72e42db0" loc="95:/home/hades/tinyos-new/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="88:/home/hades/tinyos-new/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1d7479ecb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f1d72e3e6a0" loc="105:/home/hades/tinyos-new/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="97:/home/hades/tinyos-new/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1d7479ecb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAdc12" loc="45:/home/hades/tinyos-new/tos/chips/msp430/adc12/HplAdc12.nc">
      <documentation loc="36:/home/hades/tinyos-new/tos/chips/msp430/adc12/HplAdc12.nc">
        <short>&#10; The HplAdc12 interface exports low-level access to the ADC12 registers&#10; of the MSP430 MCU.</short>
        <long>&#10; The HplAdc12 interface exports low-level access to the ADC12 registers&#10; of the MSP430 MCU.&#10;&#10; @author Jan Hauer&#10; @see  Please refer to TEP 101 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <function command="" provided="0" name="getCtl0" ref="0x7f1d72e32ac0" loc="63:/home/hades/tinyos-new/tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="59:/home/hades/tinyos-new/tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Returns the ADC12 control register ADC12CTL0.</short>
          <long> &#10; Returns the ADC12 control register ADC12CTL0.&#10; @return ADC12CTL0&#10;*</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1d72ec7470"/>
            <typename><typedef-ref name="adc12ctl0_t" ref="0x7f1d72ec5020"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMCtl" ref="0x7f1d72e2fc30" loc="82:/home/hades/tinyos-new/tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="77:/home/hades/tinyos-new/tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Returns the ADC12 conversion memory control register ADC12MCTLx.</short>
          <long> &#10; Returns the ADC12 conversion memory control register ADC12MCTLx.&#10; @param idx The register index (the 'x' in ADC12MCTLx) [0..15] &#10; @return memControl ADC12MCTLx register data.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f1d72ee1740"/>
            <typename><typedef-ref name="adc12memctl_t" ref="0x7f1d72ee1c10"/></typename>
          </type-tag>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1d74a34160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x7f1d72e2f9b0" loc="82:/home/hades/tinyos-new/tos/chips/msp430/adc12/HplAdc12.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1d74a34160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resetIFGs" ref="0x7f1d72e2c350" loc="106:/home/hades/tinyos-new/tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="103:/home/hades/tinyos-new/tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Resets the ADC12 interrupt flag register, ADC12IFG.</short>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isBusy" ref="0x7f1d72e2a550" loc="118:/home/hades/tinyos-new/tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="114:/home/hades/tinyos-new/tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Returns the ADC12 BUSY flag.</short>
          <long> &#10; Returns the ADC12 BUSY flag.&#10; @return ADC12BUSY &#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1d747a7090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="conversionDone" ref="0x7f1d72e2cd50" loc="112:/home/hades/tinyos-new/tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="108:/home/hades/tinyos-new/tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Signals a conversion result.</short>
          <long> &#10; Signals a conversion result. &#10; @param iv ADC12 interrupt vector value 0x6, 0x8, ... , 0x24&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1d74a34520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="iv" ref="0x7f1d72e2cad0" loc="112:/home/hades/tinyos-new/tos/chips/msp430/adc12/HplAdc12.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1d74a34520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getCtl1" ref="0x7f1d72e31350" loc="68:/home/hades/tinyos-new/tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="65:/home/hades/tinyos-new/tos/chips/msp430/adc12/HplAdc12.nc">
          <short> Returns the ADC12 control register ADC12CTL1.</short>
          <long> Returns the ADC12 control register ADC12CTL1. &#10;  @return ADC12CTL1&#10;*</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1d72ec46d0"/>
            <typename><typedef-ref name="adc12ctl1_t" ref="0x7f1d72ec2020"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMCtl" ref="0x7f1d72e2f130" loc="75:/home/hades/tinyos-new/tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="70:/home/hades/tinyos-new/tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Sets the ADC12 conversion memory control register ADC12MCTLx.</short>
          <long> &#10; Sets the ADC12 conversion memory control register ADC12MCTLx.&#10; @param idx The register index (the 'x' in ADC12MCTLx) [0..15] &#10; @param memControl ADC12MCTLx register data.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1d74a34160"/></typename>
            </type-int>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f1d72ee1740"/>
              <typename><typedef-ref name="adc12memctl_t" ref="0x7f1d72ee1c10"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x7f1d72e31ac0" loc="75:/home/hades/tinyos-new/tos/chips/msp430/adc12/HplAdc12.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1d74a34160"/></typename>
            </type-int>
          </variable>
          <variable name="memControl" ref="0x7f1d72e31e80" loc="75:/home/hades/tinyos-new/tos/chips/msp430/adc12/HplAdc12.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f1d72ee1740"/>
              <typename><typedef-ref name="adc12memctl_t" ref="0x7f1d72ee1c10"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startConversion" ref="0x7f1d72e29600" loc="128:/home/hades/tinyos-new/tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="125:/home/hades/tinyos-new/tos/chips/msp430/adc12/HplAdc12.nc">
          <short>&#10; Starts a conversion.</short>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setCtl0" ref="0x7f1d72e337a0" loc="51:/home/hades/tinyos-new/tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="47:/home/hades/tinyos-new/tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Sets the ADC12 control register ADC12CTL0.</short>
          <long> &#10; Sets the ADC12 control register ADC12CTL0.&#10; @param control0 ADC12CTL0 register data.&#10;*</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1d72ec7470"/>
              <typename><typedef-ref name="adc12ctl0_t" ref="0x7f1d72ec5020"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control0" ref="0x7f1d72e33520" loc="51:/home/hades/tinyos-new/tos/chips/msp430/adc12/HplAdc12.nc">
            <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1d72ec7470"/>
              <typename><typedef-ref name="adc12ctl0_t" ref="0x7f1d72ec5020"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getMem" ref="0x7f1d72e2e750" loc="89:/home/hades/tinyos-new/tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="84:/home/hades/tinyos-new/tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Returns the ADC12 conversion memory register ADC12MEMx.</short>
          <long> &#10; Returns the ADC12 conversion memory register ADC12MEMx.&#10; @param idx The register index (the 'x' in ADC12MEMx) [0..15] &#10; @return ADC12MEMx &#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1d74a34520"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1d74a34160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x7f1d72e2e4d0" loc="89:/home/hades/tinyos-new/tos/chips/msp430/adc12/HplAdc12.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1d74a34160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setIEFlags" ref="0x7f1d72e2d2a0" loc="95:/home/hades/tinyos-new/tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="91:/home/hades/tinyos-new/tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Sets the ADC12 interrupt enable register, ADC12IE.</short>
          <long> &#10; Sets the ADC12 interrupt enable register, ADC12IE.&#10; @param mask Bitmask (0 means interrupt disabled, 1 menas interrupt enabled) &#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1d74a34520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x7f1d72e2d020" loc="95:/home/hades/tinyos-new/tos/chips/msp430/adc12/HplAdc12.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1d74a34520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getIEFlags" ref="0x7f1d72e2db10" loc="101:/home/hades/tinyos-new/tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="97:/home/hades/tinyos-new/tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Returns the ADC12 interrupt enable register, ADC12IE.</short>
          <long> &#10; Returns the ADC12 interrupt enable register, ADC12IE.&#10; @return ADC12IE&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f1d74a34520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopConversion" ref="0x7f1d72e2ad10" loc="123:/home/hades/tinyos-new/tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="120:/home/hades/tinyos-new/tos/chips/msp430/adc12/HplAdc12.nc">
          <short>&#10; Stops a conversion.</short>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableConversion" ref="0x7f1d72e29da0" loc="133:/home/hades/tinyos-new/tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="130:/home/hades/tinyos-new/tos/chips/msp430/adc12/HplAdc12.nc">
          <short>&#10; Enables conversion (sets the ENC bit).</short>
          <long>&#10; Enables conversion (sets the ENC bit).&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setCtl1" ref="0x7f1d72e322a0" loc="57:/home/hades/tinyos-new/tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="53:/home/hades/tinyos-new/tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Sets the ADC12 control register ADC12CTL1.</short>
          <long> &#10; Sets the ADC12 control register ADC12CTL1. &#10; @param control1 ADC12CTL1 register data.&#10;*</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1d72ec46d0"/>
              <typename><typedef-ref name="adc12ctl1_t" ref="0x7f1d72ec2020"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control1" ref="0x7f1d72e32020" loc="57:/home/hades/tinyos-new/tos/chips/msp430/adc12/HplAdc12.nc">
            <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f1d72ec46d0"/>
              <typename><typedef-ref name="adc12ctl1_t" ref="0x7f1d72ec2020"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="DeviceMetadata" loc="40:/home/hades/tinyos-new/tos/interfaces/DeviceMetadata.nc">
      <documentation loc="32:/home/hades/tinyos-new/tos/interfaces/DeviceMetadata.nc">
        <short>&#10; DeviceMetadata is a way to obtain information about a generic data&#10; access device represented by a SID.</short>
        <long>&#10; DeviceMetadata is a way to obtain information about a generic data&#10; access device represented by a SID. See TEP109 and TEP114 for details.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="getSignificantBits" ref="0x7f1d72acd760" loc="41:/home/hades/tinyos-new/tos/interfaces/DeviceMetadata.nc">
        <interfacedef-ref qname="DeviceMetadata"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1d74a34160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SensirionSht11" loc="40:/home/hades/tinyos-new/tos/chips/sht11/SensirionSht11.nc">
      <documentation loc="32:/home/hades/tinyos-new/tos/chips/sht11/SensirionSht11.nc">
        <short>&#10; SensirionSht11 is the rich interface to the Sensirion SHT11&#10; temperature/humidity sensor.</short>
        <long>&#10; SensirionSht11 is the rich interface to the Sensirion SHT11&#10; temperature/humidity sensor. &#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:12 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="measureHumidityDone" ref="0x7f1d72ab96a0" loc="84:/home/hades/tinyos-new/tos/chips/sht11/SensirionSht11.nc">
        <documentation loc="78:/home/hades/tinyos-new/tos/chips/sht11/SensirionSht11.nc">
          <short>&#10; Presents the result of a humidity measurement.</short>
          <long>&#10; Presents the result of a humidity measurement.&#10;&#10; @param result SUCCESS if the measurement was successful&#10; @param val the humidity reading&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht11"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f1d7479ecb0"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1d74a34520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7f1d72ab90d0" loc="84:/home/hades/tinyos-new/tos/chips/sht11/SensirionSht11.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f1d7479ecb0"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x7f1d72ab9410" loc="84:/home/hades/tinyos-new/tos/chips/sht11/SensirionSht11.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1d74a34520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="readStatusReg" ref="0x7f1d72ab7020" loc="92:/home/hades/tinyos-new/tos/chips/sht11/SensirionSht11.nc">
        <documentation loc="86:/home/hades/tinyos-new/tos/chips/sht11/SensirionSht11.nc">
          <short>&#10; Reads the current contents of the SHT11 status and control&#10; register.</short>
          <long>&#10; Reads the current contents of the SHT11 status and control&#10; register. See the datasheet for interpretation of this register.&#10;&#10; @return SUCCESS if the read will be performed&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht11"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1d7479ecb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="measureHumidity" ref="0x7f1d72aba8b0" loc="76:/home/hades/tinyos-new/tos/chips/sht11/SensirionSht11.nc">
        <documentation loc="71:/home/hades/tinyos-new/tos/chips/sht11/SensirionSht11.nc">
          <short>&#10; Starts a humidity measurement.</short>
          <long>&#10; Starts a humidity measurement.&#10;&#10; @return SUCCESS if the measurement will be made&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht11"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1d7479ecb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="measureTemperature" ref="0x7f1d72abb270" loc="61:/home/hades/tinyos-new/tos/chips/sht11/SensirionSht11.nc">
        <documentation loc="56:/home/hades/tinyos-new/tos/chips/sht11/SensirionSht11.nc">
          <short>&#10; Starts a temperature measurement.</short>
          <long>&#10; Starts a temperature measurement.&#10;&#10; @return SUCCESS if the measurement will be made&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht11"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1d7479ecb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="writeStatusReg" ref="0x7f1d72ab68e0" loc="109:/home/hades/tinyos-new/tos/chips/sht11/SensirionSht11.nc">
        <documentation loc="102:/home/hades/tinyos-new/tos/chips/sht11/SensirionSht11.nc">
          <short>&#10; Writes a new value to the SHT11 status and control register.</short>
          <long>&#10; Writes a new value to the SHT11 status and control register.&#10;&#10; @param val the new value to be written&#10;&#10; @return SUCCESS if the write will be performed&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht11"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1d7479ecb0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1d74a34160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x7f1d72ab6660" loc="109:/home/hades/tinyos-new/tos/chips/sht11/SensirionSht11.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1d74a34160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x7f1d72abc020" loc="47:/home/hades/tinyos-new/tos/chips/sht11/SensirionSht11.nc">
        <documentation loc="42:/home/hades/tinyos-new/tos/chips/sht11/SensirionSht11.nc">
          <short>&#10; Resets the sensor.</short>
          <long>&#10; Resets the sensor.&#10;&#10; @return SUCCESS if the sensor will be reset&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht11"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1d7479ecb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="writeStatusRegDone" ref="0x7f1d72ab53d0" loc="116:/home/hades/tinyos-new/tos/chips/sht11/SensirionSht11.nc">
        <documentation loc="111:/home/hades/tinyos-new/tos/chips/sht11/SensirionSht11.nc">
          <short>&#10; Signals the completion of the status register write.</short>
          <long>&#10; Signals the completion of the status register write.&#10;&#10; @param result SUCCESS if the write was successful&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht11"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f1d7479ecb0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7f1d72ab5150" loc="116:/home/hades/tinyos-new/tos/chips/sht11/SensirionSht11.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f1d7479ecb0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="readStatusRegDone" ref="0x7f1d72ab7e10" loc="100:/home/hades/tinyos-new/tos/chips/sht11/SensirionSht11.nc">
        <documentation loc="94:/home/hades/tinyos-new/tos/chips/sht11/SensirionSht11.nc">
          <short>&#10; Presents the value of the status register.</short>
          <long>&#10; Presents the value of the status register.&#10;&#10; @param result SUCCESS if the read succeeded&#10; @param val the value of the register&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht11"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f1d7479ecb0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1d74a34160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7f1d72ab7850" loc="100:/home/hades/tinyos-new/tos/chips/sht11/SensirionSht11.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f1d7479ecb0"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x7f1d72ab7b80" loc="100:/home/hades/tinyos-new/tos/chips/sht11/SensirionSht11.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1d74a34160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="resetDone" ref="0x7f1d72abc9f0" loc="54:/home/hades/tinyos-new/tos/chips/sht11/SensirionSht11.nc">
        <documentation loc="49:/home/hades/tinyos-new/tos/chips/sht11/SensirionSht11.nc">
          <short>&#10; Signals that the sensor has been reset.</short>
          <long>&#10; Signals that the sensor has been reset.&#10;&#10; @param result SUCCESS if the reset succeeded&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht11"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f1d7479ecb0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7f1d72abc770" loc="54:/home/hades/tinyos-new/tos/chips/sht11/SensirionSht11.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f1d7479ecb0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="measureTemperatureDone" ref="0x7f1d72aba050" loc="69:/home/hades/tinyos-new/tos/chips/sht11/SensirionSht11.nc">
        <documentation loc="63:/home/hades/tinyos-new/tos/chips/sht11/SensirionSht11.nc">
          <short>&#10; Presents the result of a temperature measurement.</short>
          <long>&#10; Presents the result of a temperature measurement.&#10;&#10; @param result SUCCESS if the measurement was successful&#10; @param val the temperature reading&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht11"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f1d7479ecb0"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1d74a34520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7f1d72abba60" loc="69:/home/hades/tinyos-new/tos/chips/sht11/SensirionSht11.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f1d7479ecb0"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x7f1d72abbda0" loc="69:/home/hades/tinyos-new/tos/chips/sht11/SensirionSht11.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f1d74a34520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PowerDownCleanup" loc="55:/home/hades/tinyos-new/tos/lib/power/PowerDownCleanup.nc">
      <documentation loc="41:/home/hades/tinyos-new/tos/lib/power/PowerDownCleanup.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.  It should be provided&#10; by the user of a shared Resource, and used by the&#10; power managment component for that Resource.  The &#60;code>cleanup()&#60;/code>&#10; command will be called by the power manager just before powering down&#10; the shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="cleanup" ref="0x7f1d729b1850" loc="62:/home/hades/tinyos-new/tos/lib/power/PowerDownCleanup.nc">
        <documentation loc="56:/home/hades/tinyos-new/tos/lib/power/PowerDownCleanup.nc">
          <short>&#10; This command will be called by the power management component of&#10; a shared Resource.</short>
          <long>&#10; This command will be called by the power management component of&#10; a shared Resource.  The implementation of this command defines&#10; what must be done just before that shared Resource is shut off.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PowerDownCleanup"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
